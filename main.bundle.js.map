{"version":3,"sources":["/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/$_lazy_route_resource lazy","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.css","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.html","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.ts","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.module.ts","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/backend-mock.service.ts","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/environments/environment.ts","/home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-module-root [selectedProject]=\\\"selectedProject\\\" [selectedOd]=\\\"selectedOd\\\" [odAsJson]=\\\"odAsJson\\\" ></app-module-root>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Objectdiagram, Project} from 'art-viz-shared/dist/out-tsc';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    protected selectedProject: Project = new Project('MvW-Analysis', 'assets/MvW-Analysis');\n    protected selectedOd: Objectdiagram = new Objectdiagram('', '', false);\n    protected odAsJson: JSON;\n\n    ngOnInit(): void {\n      this.httpClient.get<JSON>('assets/MvW-Analysis/textFiles/02.merged/Merged.json').subscribe(\n        json => {\n          this.odAsJson = json;\n          setTimeout(() => {\n              this.selectedOd = new Objectdiagram('02.merged/Merged.od', 'assets/MvW-Analysis/02.merged/Merged.od',\n                  true, 'assets/MvW-Analysis/02.merged/Merged.json');\n          }, 0);\n      });\n    }\n\n    constructor(private httpClient: HttpClient) {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport {ModulesModule} from 'art-viz-modules';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BackendMockService} from './backend-mock.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ModulesModule,\n      HttpClientModule,\n      NgbModule.forRoot()\n  ],\n  providers: [\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: BackendMockService,\n        multi: true\n      }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class BackendMockService implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      if (req.url.includes('api/getModuleAnalysis')) {\n        console.log('Redirect API Call');\n        const newRequest = new HttpRequest('GET', 'assets/mockResponse.json');\n        return next.handle(newRequest);\n      }\n\n      // Default\n      console.log(req);\n      return next.handle(req);\n    }\n\n  constructor() { }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/app/backend-mock.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/johannes/svn/EmbeddedMontiArc-ArtifactAnalysis-Website/src/main.ts"],"sourceRoot":"webpack:///"}