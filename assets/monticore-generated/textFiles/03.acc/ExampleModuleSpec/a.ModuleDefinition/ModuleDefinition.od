objectdiagram ExampleModuleSpec {

  monticoregrammar:Module{
    simpleName = "monticoregrammar";
  }

  @(monticore-grammar):Directory{
    simpleName = "monticore-grammar";
    nameExtension = "";
    fullName = "sources/monticore-grammar";
  }

  @(src!8):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src";
  }

  @(main!8):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main";
  }

  @(grammars!8):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars";
  }

  @(de!23):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de";
  }

  @(monticore!24):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de/monticore";
  }

  @(common!5):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de/monticore/common";
  }

  @(lexicals!8):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de/monticore/lexicals";
  }

  @(literals!7):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de/monticore/literals";
  }

  @(types!11):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/grammars/de/monticore/types";
  }

  @(java!13):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java";
  }

  @(de!24):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de";
  }

  @(monticore!25):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore";
  }

  @(common!6):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/common";
  }

  @(prettyprint!7):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/common/prettyprint";
  }

  @(CommonPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "CommonPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/common/prettyprint/CommonPrettyPrinterConcreteVisitor.java";
  }

  @(expressions):Directory{
    simpleName = "expressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions";
  }

  @(prettyprint!8):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint";
  }

  @(AssignmentExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/AssignmentExpressionsPrettyPrinter.java";
  }

  @(CommonExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "CommonExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/CommonExpressionsPrettyPrinter.java";
  }

  @(JavaClassExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/JavaClassExpressionsPrettyPrinter.java";
  }

  @(MCExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "MCExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/MCExpressionsPrettyPrinter.java";
  }

  @(OCLExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "OCLExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/OCLExpressionsPrettyPrinter.java";
  }

  @(SetExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "SetExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/SetExpressionsPrettyPrinter.java";
  }

  @(ShiftExpressionsPrettyPrinter.java):JavaSourceFile{
    simpleName = "ShiftExpressionsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/expressions/prettyprint/ShiftExpressionsPrettyPrinter.java";
  }

  @(literals!8):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/literals";
  }

  @(LiteralsHelper.java):JavaSourceFile{
    simpleName = "LiteralsHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/literals/LiteralsHelper.java";
  }

  @(LiteralsNodeIdentHelper.java):JavaSourceFile{
    simpleName = "LiteralsNodeIdentHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/literals/LiteralsNodeIdentHelper.java";
  }

  @(prettyprint!9):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/literals/prettyprint";
  }

  @(LiteralsPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "LiteralsPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/literals/prettyprint/LiteralsPrettyPrinterConcreteVisitor.java";
  }

  @(MCLiteralsDecoder.java):JavaSourceFile{
    simpleName = "MCLiteralsDecoder";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/MCLiteralsDecoder.java";
  }

  @(MCLiteralsPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "MCLiteralsPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/MCLiteralsPrettyPrinterConcreteVisitor.java";
  }

  @(prettyprint!10):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint";
  }

  @(CardinalityPrettyPrinter.java):JavaSourceFile{
    simpleName = "CardinalityPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/CardinalityPrettyPrinter.java";
  }

  @(CompletenessPrettyPrinter.java):JavaSourceFile{
    simpleName = "CompletenessPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/CompletenessPrettyPrinter.java";
  }

  @(MCBasicTypes1PrettyPrinter.java):JavaSourceFile{
    simpleName = "MCBasicTypes1PrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/MCBasicTypes1PrettyPrinter.java";
  }

  @(MCHexNumbersPrettyPrinter.java):JavaSourceFile{
    simpleName = "MCHexNumbersPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/MCHexNumbersPrettyPrinter.java";
  }

  @(MCNumbersPrettyPrinter.java):JavaSourceFile{
    simpleName = "MCNumbersPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/MCNumbersPrettyPrinter.java";
  }

  @(StringLiteralsPrettyPrinter.java):JavaSourceFile{
    simpleName = "StringLiteralsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/StringLiteralsPrettyPrinter.java";
  }

  @(UMLModifierPrettyPrinter.java):JavaSourceFile{
    simpleName = "UMLModifierPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/UMLModifierPrettyPrinter.java";
  }

  @(UMLStereotypePrettyPrinter.java):JavaSourceFile{
    simpleName = "UMLStereotypePrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/prettyprint/UMLStereotypePrettyPrinter.java";
  }

  @(types!12):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types";
  }

  @(JTypeSymbolsHelper.java):JavaSourceFile{
    simpleName = "JTypeSymbolsHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/JTypeSymbolsHelper.java";
  }

  @(prettyprint!11):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/prettyprint";
  }

  @(TypesPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "TypesPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/prettyprint/TypesPrettyPrinterConcreteVisitor.java";
  }

  @(TypesHelper.java):JavaSourceFile{
    simpleName = "TypesHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/TypesHelper.java";
  }

  @(TypesNodeIdentHelper.java):JavaSourceFile{
    simpleName = "TypesNodeIdentHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/TypesNodeIdentHelper.java";
  }

  @(TypesPrinter.java):JavaSourceFile{
    simpleName = "TypesPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/main/java/de/monticore/types/TypesPrinter.java";
  }

  @(resources!10):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/main/resources";
  }

  @(test!4):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test";
  }

  @(grammars!9):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars";
  }

  @(de!25):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars/de";
  }

  @(monticore!26):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars/de/monticore";
  }

  @(common!7):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars/de/monticore/common";
  }

  @(literals!9):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars/de/monticore/literals";
  }

  @(types!13):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/grammars/de/monticore/types";
  }

  @(java!14):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java";
  }

  @(de!26):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de";
  }

  @(monticore!27):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore";
  }

  @(common!8):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/common";
  }

  @(StereotypeTest.java):JavaSourceFile{
    simpleName = "StereotypeTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/common/StereotypeTest.java";
  }

  @(literals!10):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals";
  }

  @(CharLiteralsTest.java):JavaSourceFile{
    simpleName = "CharLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/CharLiteralsTest.java";
  }

  @(DoubleLiteralsTest.java):JavaSourceFile{
    simpleName = "DoubleLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/DoubleLiteralsTest.java";
  }

  @(FloatLiteralsTest.java):JavaSourceFile{
    simpleName = "FloatLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/FloatLiteralsTest.java";
  }

  @(IntLiteralsTest.java):JavaSourceFile{
    simpleName = "IntLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/IntLiteralsTest.java";
  }

  @(LiteralsTestHelper.java):JavaSourceFile{
    simpleName = "LiteralsTestHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/LiteralsTestHelper.java";
  }

  @(LongLiteralsTest.java):JavaSourceFile{
    simpleName = "LongLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/LongLiteralsTest.java";
  }

  @(NullAndBooleanLiteralsTest.java):JavaSourceFile{
    simpleName = "NullAndBooleanLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/NullAndBooleanLiteralsTest.java";
  }

  @(SignedDoubleLiteralsTest.java):JavaSourceFile{
    simpleName = "SignedDoubleLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/SignedDoubleLiteralsTest.java";
  }

  @(SignedFloatLiteralsTest.java):JavaSourceFile{
    simpleName = "SignedFloatLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/SignedFloatLiteralsTest.java";
  }

  @(SignedIntLiteralsTest.java):JavaSourceFile{
    simpleName = "SignedIntLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/SignedIntLiteralsTest.java";
  }

  @(SignedLongLiteralsTest.java):JavaSourceFile{
    simpleName = "SignedLongLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/SignedLongLiteralsTest.java";
  }

  @(StringLiteralsTest.java):JavaSourceFile{
    simpleName = "StringLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/literals/StringLiteralsTest.java";
  }

  @(MCBasicTypes1Test.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Test";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/MCBasicTypes1Test.java";
  }

  @(MCCommonUnitTest.java):JavaSourceFile{
    simpleName = "MCCommonUnitTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/MCCommonUnitTest.java";
  }

  @(mcliterals):Directory{
    simpleName = "mcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals";
  }

  @(CharLiteralsTest.java!2):JavaSourceFile{
    simpleName = "CharLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/CharLiteralsTest.java";
  }

  @(DoubleLiteralsTest.java!2):JavaSourceFile{
    simpleName = "DoubleLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/DoubleLiteralsTest.java";
  }

  @(FloatLiteralsTest.java!2):JavaSourceFile{
    simpleName = "FloatLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/FloatLiteralsTest.java";
  }

  @(IntLiteralsTest.java!2):JavaSourceFile{
    simpleName = "IntLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/IntLiteralsTest.java";
  }

  @(LongLiteralsTest.java!2):JavaSourceFile{
    simpleName = "LongLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/LongLiteralsTest.java";
  }

  @(MCHexNumberUnitTests.java):JavaSourceFile{
    simpleName = "MCHexNumberUnitTests";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/MCHexNumberUnitTests.java";
  }

  @(MCLiteralsTestHelper.java):JavaSourceFile{
    simpleName = "MCLiteralsTestHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/MCLiteralsTestHelper.java";
  }

  @(MCLiteralsUnitTest.java):JavaSourceFile{
    simpleName = "MCLiteralsUnitTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/MCLiteralsUnitTest.java";
  }

  @(NatLiteralsTest.java):JavaSourceFile{
    simpleName = "NatLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/NatLiteralsTest.java";
  }

  @(NullAndBooleanLiteralsTest.java!2):JavaSourceFile{
    simpleName = "NullAndBooleanLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/NullAndBooleanLiteralsTest.java";
  }

  @(SignedDoubleLiteralsTest.java!2):JavaSourceFile{
    simpleName = "SignedDoubleLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/SignedDoubleLiteralsTest.java";
  }

  @(SignedFloatLiteralsTest.java!2):JavaSourceFile{
    simpleName = "SignedFloatLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/SignedFloatLiteralsTest.java";
  }

  @(SignedIntLiteralsTest.java!2):JavaSourceFile{
    simpleName = "SignedIntLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/SignedIntLiteralsTest.java";
  }

  @(SignedLongLiteralsTest.java!2):JavaSourceFile{
    simpleName = "SignedLongLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/SignedLongLiteralsTest.java";
  }

  @(StringLiteralsTest.java!2):JavaSourceFile{
    simpleName = "StringLiteralsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/mcliterals/StringLiteralsTest.java";
  }

  @(prettyprint!12):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint";
  }

  @(AssignmentExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/AssignmentExpressionsPrettyPrinterTest.java";
  }

  @(CardinalityPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "CardinalityPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/CardinalityPrettyPrinterTest.java";
  }

  @(CommonExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "CommonExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/CommonExpressionsPrettyPrinterTest.java";
  }

  @(CompletenessPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "CompletenessPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/CompletenessPrettyPrinterTest.java";
  }

  @(JavaClassExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/JavaClassExpressionsPrettyPrinterTest.java";
  }

  @(MCBasicTypes1PrettyPrinterTest.java):JavaSourceFile{
    simpleName = "MCBasicTypes1PrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/MCBasicTypes1PrettyPrinterTest.java";
  }

  @(MCHexNumbersPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "MCHexNumbersPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/MCHexNumbersPrettyPrinterTest.java";
  }

  @(MCNumbersPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "MCNumbersPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/MCNumbersPrettyPrinterTest.java";
  }

  @(OCLExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "OCLExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/OCLExpressionsPrettyPrinterTest.java";
  }

  @(SetExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "SetExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/SetExpressionsPrettyPrinterTest.java";
  }

  @(ShiftExpressionsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "ShiftExpressionsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/ShiftExpressionsPrettyPrinterTest.java";
  }

  @(StringLiteralsPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "StringLiteralsPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/StringLiteralsPrettyPrinterTest.java";
  }

  @(UMLModifierPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "UMLModifierPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/UMLModifierPrettyPrinterTest.java";
  }

  @(UMLStereotypePrettyPrinterTest.java):JavaSourceFile{
    simpleName = "UMLStereotypePrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/prettyprint/UMLStereotypePrettyPrinterTest.java";
  }

  @(types!14):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types";
  }

  @(ComplexArrayTypesTest.java):JavaSourceFile{
    simpleName = "ComplexArrayTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/ComplexArrayTypesTest.java";
  }

  @(ComplexQualifiedTypesTest.java):JavaSourceFile{
    simpleName = "ComplexQualifiedTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/ComplexQualifiedTypesTest.java";
  }

  @(NestedTypeArgumentsTest.java):JavaSourceFile{
    simpleName = "NestedTypeArgumentsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/NestedTypeArgumentsTest.java";
  }

  @(NestedTypeParametersTest.java):JavaSourceFile{
    simpleName = "NestedTypeParametersTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/NestedTypeParametersTest.java";
  }

  @(PrimitiveArrayTypesTest.java):JavaSourceFile{
    simpleName = "PrimitiveArrayTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/PrimitiveArrayTypesTest.java";
  }

  @(PrimitiveTypesTest.java):JavaSourceFile{
    simpleName = "PrimitiveTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/PrimitiveTypesTest.java";
  }

  @(ReturnTypesTest.java):JavaSourceFile{
    simpleName = "ReturnTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/ReturnTypesTest.java";
  }

  @(TypeArgumentsTest.java):JavaSourceFile{
    simpleName = "TypeArgumentsTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/TypeArgumentsTest.java";
  }

  @(TypeParametersTest.java):JavaSourceFile{
    simpleName = "TypeParametersTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/TypeParametersTest.java";
  }

  @(TypesTestHelper.java):JavaSourceFile{
    simpleName = "TypesTestHelper";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/TypesTestHelper.java";
  }

  @(WildcardTypesTest.java):JavaSourceFile{
    simpleName = "WildcardTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/src/test/java/de/monticore/types/WildcardTypesTest.java";
  }

  @(resources!11):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/resources";
  }

  @(de!27):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/resources/de";
  }

  @(monticore!28):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/src/test/resources/de/monticore";
  }

  @(target!4):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target";
  }

  @(archive-tmp!2):Directory{
    simpleName = "archive-tmp";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/archive-tmp";
  }

  @(classes!4):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes";
  }

  @(de!28):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de";
  }

  @(monticore!29):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore";
  }

  @(assignmentexpressions):Directory{
    simpleName = "assignmentexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions";
  }

  @(_ast!49):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast";
  }

  @(AssignmentExpressionsLiterals.class):JavaClassFile{
    simpleName = "AssignmentExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsLiterals.class";
  }

  @(AssignmentExpressionsMill.class):JavaClassFile{
    simpleName = "AssignmentExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsMill.class";
  }

  @(AssignmentExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "AssignmentExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsNodeFactory.class";
  }

  @(AssignmentExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsPackage$Literals.class";
  }

  @(AssignmentExpressionsPackage.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsPackage.class";
  }

  @(AssignmentExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsPackageImpl.class";
  }

  @(ASTAndAssignmentExpression$AndAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTAndAssignmentExpression$AndAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTAndAssignmentExpression$AndAssignmentExpressionBuilder.class";
  }

  @(ASTAndAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTAndAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTAndAssignmentExpression.class";
  }

  @(ASTAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTAssignmentExpression.class";
  }

  @(ASTAssignmentExpressionsNode.class):JavaClassFile{
    simpleName = "ASTAssignmentExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTAssignmentExpressionsNode.class";
  }

  @(ASTBinaryAndExpression$BinaryAndExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryAndExpression$BinaryAndExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryAndExpression$BinaryAndExpressionBuilder.class";
  }

  @(ASTBinaryAndExpression.class):JavaClassFile{
    simpleName = "ASTBinaryAndExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryAndExpression.class";
  }

  @(ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class";
  }

  @(ASTBinaryOrOpExpression.class):JavaClassFile{
    simpleName = "ASTBinaryOrOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryOrOpExpression.class";
  }

  @(ASTBinaryXorAssignmentExpression$BinaryXorAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryXorAssignmentExpression$BinaryXorAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryXorAssignmentExpression$BinaryXorAssignmentExpressionBuilder.class";
  }

  @(ASTBinaryXorAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTBinaryXorAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryXorAssignmentExpression.class";
  }

  @(ASTBinaryXorExpression$BinaryXorExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryXorExpression$BinaryXorExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryXorExpression$BinaryXorExpressionBuilder.class";
  }

  @(ASTBinaryXorExpression.class):JavaClassFile{
    simpleName = "ASTBinaryXorExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTBinaryXorExpression.class";
  }

  @(ASTConstantsAssignmentExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsAssignmentExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTConstantsAssignmentExpressions.class";
  }

  @(ASTDecPrefixExpression$DecPrefixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTDecPrefixExpression$DecPrefixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDecPrefixExpression$DecPrefixExpressionBuilder.class";
  }

  @(ASTDecPrefixExpression.class):JavaClassFile{
    simpleName = "ASTDecPrefixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDecPrefixExpression.class";
  }

  @(ASTDecSuffixExpression$DecSuffixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTDecSuffixExpression$DecSuffixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDecSuffixExpression$DecSuffixExpressionBuilder.class";
  }

  @(ASTDecSuffixExpression.class):JavaClassFile{
    simpleName = "ASTDecSuffixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDecSuffixExpression.class";
  }

  @(ASTDivideAssignmentExpression$DivideAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTDivideAssignmentExpression$DivideAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDivideAssignmentExpression$DivideAssignmentExpressionBuilder.class";
  }

  @(ASTDivideAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTDivideAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTDivideAssignmentExpression.class";
  }

  @(ASTIncPrefixExpression$IncPrefixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTIncPrefixExpression$IncPrefixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTIncPrefixExpression$IncPrefixExpressionBuilder.class";
  }

  @(ASTIncPrefixExpression.class):JavaClassFile{
    simpleName = "ASTIncPrefixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTIncPrefixExpression.class";
  }

  @(ASTIncSuffixExpression$IncSuffixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTIncSuffixExpression$IncSuffixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTIncSuffixExpression$IncSuffixExpressionBuilder.class";
  }

  @(ASTIncSuffixExpression.class):JavaClassFile{
    simpleName = "ASTIncSuffixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTIncSuffixExpression.class";
  }

  @(ASTLeftShiftAssignmentExpression$LeftShiftAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLeftShiftAssignmentExpression$LeftShiftAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTLeftShiftAssignmentExpression$LeftShiftAssignmentExpressionBuilder.class";
  }

  @(ASTLeftShiftAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTLeftShiftAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTLeftShiftAssignmentExpression.class";
  }

  @(ASTLogicalRightAssignmentExpression$LogicalRightAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLogicalRightAssignmentExpression$LogicalRightAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTLogicalRightAssignmentExpression$LogicalRightAssignmentExpressionBuilder.class";
  }

  @(ASTLogicalRightAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTLogicalRightAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTLogicalRightAssignmentExpression.class";
  }

  @(ASTMinusAssignmentExpression$MinusAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTMinusAssignmentExpression$MinusAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMinusAssignmentExpression$MinusAssignmentExpressionBuilder.class";
  }

  @(ASTMinusAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTMinusAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMinusAssignmentExpression.class";
  }

  @(ASTMinusPrefixExpression$MinusPrefixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTMinusPrefixExpression$MinusPrefixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMinusPrefixExpression$MinusPrefixExpressionBuilder.class";
  }

  @(ASTMinusPrefixExpression.class):JavaClassFile{
    simpleName = "ASTMinusPrefixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMinusPrefixExpression.class";
  }

  @(ASTModuloAssignmentExpression$ModuloAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTModuloAssignmentExpression$ModuloAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTModuloAssignmentExpression$ModuloAssignmentExpressionBuilder.class";
  }

  @(ASTModuloAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTModuloAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTModuloAssignmentExpression.class";
  }

  @(ASTMultAssignmentExpression$MultAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTMultAssignmentExpression$MultAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMultAssignmentExpression$MultAssignmentExpressionBuilder.class";
  }

  @(ASTMultAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTMultAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTMultAssignmentExpression.class";
  }

  @(ASTOrAssignmentExpression$OrAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTOrAssignmentExpression$OrAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTOrAssignmentExpression$OrAssignmentExpressionBuilder.class";
  }

  @(ASTOrAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTOrAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTOrAssignmentExpression.class";
  }

  @(ASTPlusAssignmentExpression$PlusAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPlusAssignmentExpression$PlusAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTPlusAssignmentExpression$PlusAssignmentExpressionBuilder.class";
  }

  @(ASTPlusAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTPlusAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTPlusAssignmentExpression.class";
  }

  @(ASTPlusPrefixExpression$PlusPrefixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPlusPrefixExpression$PlusPrefixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTPlusPrefixExpression$PlusPrefixExpressionBuilder.class";
  }

  @(ASTPlusPrefixExpression.class):JavaClassFile{
    simpleName = "ASTPlusPrefixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTPlusPrefixExpression.class";
  }

  @(ASTRegularAssignmentExpression$RegularAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTRegularAssignmentExpression$RegularAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTRegularAssignmentExpression$RegularAssignmentExpressionBuilder.class";
  }

  @(ASTRegularAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTRegularAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTRegularAssignmentExpression.class";
  }

  @(ASTRightShiftAssignmentExpression$RightShiftAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTRightShiftAssignmentExpression$RightShiftAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTRightShiftAssignmentExpression$RightShiftAssignmentExpressionBuilder.class";
  }

  @(ASTRightShiftAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTRightShiftAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_ast/ASTRightShiftAssignmentExpression.class";
  }

  @(_cocos!43):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos";
  }

  @(AssignmentExpressionsAssignmentExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsAssignmentExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsAssignmentExpressionsPackageCoCo.class";
  }

  @(AssignmentExpressionsASTAndAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTAndAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAndAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTAssignmentExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.class";
  }

  @(AssignmentExpressionsASTBinaryAndExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTBinaryAndExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryAndExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTBinaryOrOpExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTBinaryOrOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryOrOpExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTBinaryXorExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTBinaryXorExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryXorExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTDecPrefixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTDecPrefixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDecPrefixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTDecSuffixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTDecSuffixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDecSuffixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTDivideAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTDivideAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDivideAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTIncPrefixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTIncPrefixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTIncPrefixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTIncSuffixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTIncSuffixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTIncSuffixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTMinusAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTMinusAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMinusAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTMinusPrefixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTMinusPrefixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMinusPrefixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTModuloAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTModuloAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTModuloAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTMultAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTMultAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMultAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTOrAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTOrAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTOrAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTPlusAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTPlusAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTPlusAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTPlusPrefixExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTPlusPrefixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTPlusPrefixExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTRegularAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTRegularAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTRegularAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.class";
  }

  @(AssignmentExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "AssignmentExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsCoCoChecker.class";
  }

  @(_od!43):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_od";
  }

  @(AssignmentExpressions2OD.class):JavaClassFile{
    simpleName = "AssignmentExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_od/AssignmentExpressions2OD.class";
  }

  @(_symboltable!20):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_symboltable";
  }

  @(AssignmentExpressionsLanguage.class):JavaClassFile{
    simpleName = "AssignmentExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_symboltable/AssignmentExpressionsLanguage.class";
  }

  @(AssignmentExpressionsModelLoader.class):JavaClassFile{
    simpleName = "AssignmentExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_symboltable/AssignmentExpressionsModelLoader.class";
  }

  @(_visitor!43):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_visitor";
  }

  @(AssignmentExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "AssignmentExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsDelegatorVisitor.class";
  }

  @(AssignmentExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "AssignmentExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsInheritanceVisitor.class";
  }

  @(AssignmentExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "AssignmentExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsParentAwareVisitor.class";
  }

  @(AssignmentExpressionsVisitor.class):JavaClassFile{
    simpleName = "AssignmentExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsVisitor.class";
  }

  @(cardinality):Directory{
    simpleName = "cardinality";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality";
  }

  @(_ast!50):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast";
  }

  @(ASTCardinality$CardinalityBuilder.class):JavaClassFile{
    simpleName = "ASTCardinality$CardinalityBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/ASTCardinality$CardinalityBuilder.class";
  }

  @(ASTCardinality.class!2):JavaClassFile{
    simpleName = "ASTCardinality";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/ASTCardinality.class";
  }

  @(ASTCardinalityNode.class):JavaClassFile{
    simpleName = "ASTCardinalityNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/ASTCardinalityNode.class";
  }

  @(ASTConstantsCardinality.class):JavaClassFile{
    simpleName = "ASTConstantsCardinality";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/ASTConstantsCardinality.class";
  }

  @(CardinalityLiterals.class):JavaClassFile{
    simpleName = "CardinalityLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityLiterals.class";
  }

  @(CardinalityMill.class):JavaClassFile{
    simpleName = "CardinalityMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityMill.class";
  }

  @(CardinalityNodeFactory.class):JavaClassFile{
    simpleName = "CardinalityNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityNodeFactory.class";
  }

  @(CardinalityPackage$Literals.class):JavaClassFile{
    simpleName = "CardinalityPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityPackage$Literals.class";
  }

  @(CardinalityPackage.class):JavaClassFile{
    simpleName = "CardinalityPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityPackage.class";
  }

  @(CardinalityPackageImpl.class):JavaClassFile{
    simpleName = "CardinalityPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_ast/CardinalityPackageImpl.class";
  }

  @(_cocos!44):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_cocos";
  }

  @(CardinalityASTCardinalityCoCo.class):JavaClassFile{
    simpleName = "CardinalityASTCardinalityCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_cocos/CardinalityASTCardinalityCoCo.class";
  }

  @(CardinalityASTCardinalityNodeCoCo.class):JavaClassFile{
    simpleName = "CardinalityASTCardinalityNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_cocos/CardinalityASTCardinalityNodeCoCo.class";
  }

  @(CardinalityCardinalityPackageCoCo.class):JavaClassFile{
    simpleName = "CardinalityCardinalityPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_cocos/CardinalityCardinalityPackageCoCo.class";
  }

  @(CardinalityCoCoChecker.class):JavaClassFile{
    simpleName = "CardinalityCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_cocos/CardinalityCoCoChecker.class";
  }

  @(_od!44):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_od";
  }

  @(Cardinality2OD.class):JavaClassFile{
    simpleName = "Cardinality2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_od/Cardinality2OD.class";
  }

  @(_symboltable!21):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_symboltable";
  }

  @(CardinalityLanguage.class):JavaClassFile{
    simpleName = "CardinalityLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_symboltable/CardinalityLanguage.class";
  }

  @(CardinalityModelLoader.class):JavaClassFile{
    simpleName = "CardinalityModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_symboltable/CardinalityModelLoader.class";
  }

  @(_visitor!44):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_visitor";
  }

  @(CardinalityDelegatorVisitor.class):JavaClassFile{
    simpleName = "CardinalityDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_visitor/CardinalityDelegatorVisitor.class";
  }

  @(CardinalityInheritanceVisitor.class):JavaClassFile{
    simpleName = "CardinalityInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_visitor/CardinalityInheritanceVisitor.class";
  }

  @(CardinalityParentAwareVisitor.class):JavaClassFile{
    simpleName = "CardinalityParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_visitor/CardinalityParentAwareVisitor.class";
  }

  @(CardinalityVisitor.class):JavaClassFile{
    simpleName = "CardinalityVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/cardinality/_visitor/CardinalityVisitor.class";
  }

  @(common!9):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common";
  }

  @(common!10):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common";
  }

  @(_ast!51):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast";
  }

  @(ASTCardinality$CardinalityBuilder.class!2):JavaClassFile{
    simpleName = "ASTCardinality$CardinalityBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTCardinality$CardinalityBuilder.class";
  }

  @(ASTCardinality.class!3):JavaClassFile{
    simpleName = "ASTCardinality";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTCardinality.class";
  }

  @(ASTCommonNode.class):JavaClassFile{
    simpleName = "ASTCommonNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTCommonNode.class";
  }

  @(ASTCompleteness$CompletenessBuilder.class):JavaClassFile{
    simpleName = "ASTCompleteness$CompletenessBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTCompleteness$CompletenessBuilder.class";
  }

  @(ASTCompleteness.class!2):JavaClassFile{
    simpleName = "ASTCompleteness";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTCompleteness.class";
  }

  @(ASTConstantsCommon.class):JavaClassFile{
    simpleName = "ASTConstantsCommon";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTConstantsCommon.class";
  }

  @(ASTModifier$ModifierBuilder.class):JavaClassFile{
    simpleName = "ASTModifier$ModifierBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTModifier$ModifierBuilder.class";
  }

  @(ASTModifier.class!3):JavaClassFile{
    simpleName = "ASTModifier";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTModifier.class";
  }

  @(ASTStereotype$StereotypeBuilder.class):JavaClassFile{
    simpleName = "ASTStereotype$StereotypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTStereotype$StereotypeBuilder.class";
  }

  @(ASTStereotype.class!3):JavaClassFile{
    simpleName = "ASTStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTStereotype.class";
  }

  @(ASTStereoValue$StereoValueBuilder.class):JavaClassFile{
    simpleName = "ASTStereoValue$StereoValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTStereoValue$StereoValueBuilder.class";
  }

  @(ASTStereoValue.class!2):JavaClassFile{
    simpleName = "ASTStereoValue";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/ASTStereoValue.class";
  }

  @(CommonLiterals.class):JavaClassFile{
    simpleName = "CommonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonLiterals.class";
  }

  @(CommonMill.class):JavaClassFile{
    simpleName = "CommonMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonMill.class";
  }

  @(CommonNodeFactory.class):JavaClassFile{
    simpleName = "CommonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonNodeFactory.class";
  }

  @(CommonPackage$Literals.class):JavaClassFile{
    simpleName = "CommonPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonPackage$Literals.class";
  }

  @(CommonPackage.class):JavaClassFile{
    simpleName = "CommonPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonPackage.class";
  }

  @(CommonPackageImpl.class):JavaClassFile{
    simpleName = "CommonPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_ast/CommonPackageImpl.class";
  }

  @(_cocos!45):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos";
  }

  @(CommonASTCardinalityCoCo.class):JavaClassFile{
    simpleName = "CommonASTCardinalityCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTCardinalityCoCo.class";
  }

  @(CommonASTCommonNodeCoCo.class):JavaClassFile{
    simpleName = "CommonASTCommonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTCommonNodeCoCo.class";
  }

  @(CommonASTCompletenessCoCo.class):JavaClassFile{
    simpleName = "CommonASTCompletenessCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTCompletenessCoCo.class";
  }

  @(CommonASTModifierCoCo.class):JavaClassFile{
    simpleName = "CommonASTModifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTModifierCoCo.class";
  }

  @(CommonASTStereotypeCoCo.class):JavaClassFile{
    simpleName = "CommonASTStereotypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTStereotypeCoCo.class";
  }

  @(CommonASTStereoValueCoCo.class):JavaClassFile{
    simpleName = "CommonASTStereoValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonASTStereoValueCoCo.class";
  }

  @(CommonCoCoChecker.class):JavaClassFile{
    simpleName = "CommonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonCoCoChecker.class";
  }

  @(CommonCommonPackageCoCo.class):JavaClassFile{
    simpleName = "CommonCommonPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_cocos/CommonCommonPackageCoCo.class";
  }

  @(_od!45):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_od";
  }

  @(Common2OD.class):JavaClassFile{
    simpleName = "Common2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_od/Common2OD.class";
  }

  @(_symboltable!22):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_symboltable";
  }

  @(CommonLanguage.class):JavaClassFile{
    simpleName = "CommonLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_symboltable/CommonLanguage.class";
  }

  @(CommonModelLoader.class):JavaClassFile{
    simpleName = "CommonModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_symboltable/CommonModelLoader.class";
  }

  @(_visitor!45):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_visitor";
  }

  @(CommonDelegatorVisitor.class):JavaClassFile{
    simpleName = "CommonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_visitor/CommonDelegatorVisitor.class";
  }

  @(CommonInheritanceVisitor.class):JavaClassFile{
    simpleName = "CommonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_visitor/CommonInheritanceVisitor.class";
  }

  @(CommonParentAwareVisitor.class):JavaClassFile{
    simpleName = "CommonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_visitor/CommonParentAwareVisitor.class";
  }

  @(CommonVisitor.class):JavaClassFile{
    simpleName = "CommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/common/_visitor/CommonVisitor.class";
  }

  @(prettyprint!13):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/prettyprint";
  }

  @(CommonPrettyPrinterConcreteVisitor.class):JavaClassFile{
    simpleName = "CommonPrettyPrinterConcreteVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/common/prettyprint/CommonPrettyPrinterConcreteVisitor.class";
  }

  @(commonexpressions):Directory{
    simpleName = "commonexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions";
  }

  @(_ast!52):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast";
  }

  @(ASTArguments$ArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTArguments$ArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTArguments$ArgumentsBuilder.class";
  }

  @(ASTArguments.class!2):JavaClassFile{
    simpleName = "ASTArguments";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTArguments.class";
  }

  @(ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class";
  }

  @(ASTBooleanAndOpExpression.class):JavaClassFile{
    simpleName = "ASTBooleanAndOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanAndOpExpression.class";
  }

  @(ASTBooleanNotExpression$BooleanNotExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanNotExpression$BooleanNotExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanNotExpression$BooleanNotExpressionBuilder.class";
  }

  @(ASTBooleanNotExpression.class):JavaClassFile{
    simpleName = "ASTBooleanNotExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanNotExpression.class";
  }

  @(ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class";
  }

  @(ASTBooleanOrOpExpression.class):JavaClassFile{
    simpleName = "ASTBooleanOrOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBooleanOrOpExpression.class";
  }

  @(ASTBracketExpression$BracketExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBracketExpression$BracketExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBracketExpression$BracketExpressionBuilder.class";
  }

  @(ASTBracketExpression.class):JavaClassFile{
    simpleName = "ASTBracketExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTBracketExpression.class";
  }

  @(ASTCallExpression$CallExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTCallExpression$CallExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTCallExpression$CallExpressionBuilder.class";
  }

  @(ASTCallExpression.class):JavaClassFile{
    simpleName = "ASTCallExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTCallExpression.class";
  }

  @(ASTCommonExpressionsNode.class):JavaClassFile{
    simpleName = "ASTCommonExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTCommonExpressionsNode.class";
  }

  @(ASTConditionalExpression$ConditionalExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTConditionalExpression$ConditionalExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTConditionalExpression$ConditionalExpressionBuilder.class";
  }

  @(ASTConditionalExpression.class):JavaClassFile{
    simpleName = "ASTConditionalExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTConditionalExpression.class";
  }

  @(ASTConstantsCommonExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsCommonExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTConstantsCommonExpressions.class";
  }

  @(ASTDivideExpression$DivideExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTDivideExpression$DivideExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTDivideExpression$DivideExpressionBuilder.class";
  }

  @(ASTDivideExpression.class):JavaClassFile{
    simpleName = "ASTDivideExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTDivideExpression.class";
  }

  @(ASTEqualsExpression$EqualsExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTEqualsExpression$EqualsExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTEqualsExpression$EqualsExpressionBuilder.class";
  }

  @(ASTEqualsExpression.class):JavaClassFile{
    simpleName = "ASTEqualsExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTEqualsExpression.class";
  }

  @(ASTEquivalentExpression$EquivalentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTEquivalentExpression$EquivalentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTEquivalentExpression$EquivalentExpressionBuilder.class";
  }

  @(ASTEquivalentExpression.class):JavaClassFile{
    simpleName = "ASTEquivalentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTEquivalentExpression.class";
  }

  @(ASTGreaterEqualExpression$GreaterEqualExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTGreaterEqualExpression$GreaterEqualExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTGreaterEqualExpression$GreaterEqualExpressionBuilder.class";
  }

  @(ASTGreaterEqualExpression.class):JavaClassFile{
    simpleName = "ASTGreaterEqualExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTGreaterEqualExpression.class";
  }

  @(ASTGreaterThanExpression$GreaterThanExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTGreaterThanExpression$GreaterThanExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTGreaterThanExpression$GreaterThanExpressionBuilder.class";
  }

  @(ASTGreaterThanExpression.class):JavaClassFile{
    simpleName = "ASTGreaterThanExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTGreaterThanExpression.class";
  }

  @(ASTInfixExpression.class):JavaClassFile{
    simpleName = "ASTInfixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTInfixExpression.class";
  }

  @(ASTLessEqualExpression$LessEqualExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLessEqualExpression$LessEqualExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLessEqualExpression$LessEqualExpressionBuilder.class";
  }

  @(ASTLessEqualExpression.class):JavaClassFile{
    simpleName = "ASTLessEqualExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLessEqualExpression.class";
  }

  @(ASTLessThanExpression$LessThanExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLessThanExpression$LessThanExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLessThanExpression$LessThanExpressionBuilder.class";
  }

  @(ASTLessThanExpression.class):JavaClassFile{
    simpleName = "ASTLessThanExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLessThanExpression.class";
  }

  @(ASTLogicalNotExpression$LogicalNotExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLogicalNotExpression$LogicalNotExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLogicalNotExpression$LogicalNotExpressionBuilder.class";
  }

  @(ASTLogicalNotExpression.class):JavaClassFile{
    simpleName = "ASTLogicalNotExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTLogicalNotExpression.class";
  }

  @(ASTMinusExpression$MinusExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTMinusExpression$MinusExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTMinusExpression$MinusExpressionBuilder.class";
  }

  @(ASTMinusExpression.class):JavaClassFile{
    simpleName = "ASTMinusExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTMinusExpression.class";
  }

  @(ASTModuloExpression$ModuloExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTModuloExpression$ModuloExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTModuloExpression$ModuloExpressionBuilder.class";
  }

  @(ASTModuloExpression.class):JavaClassFile{
    simpleName = "ASTModuloExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTModuloExpression.class";
  }

  @(ASTMultExpression$MultExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTMultExpression$MultExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTMultExpression$MultExpressionBuilder.class";
  }

  @(ASTMultExpression.class):JavaClassFile{
    simpleName = "ASTMultExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTMultExpression.class";
  }

  @(ASTNotEqualsExpression$NotEqualsExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTNotEqualsExpression$NotEqualsExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTNotEqualsExpression$NotEqualsExpressionBuilder.class";
  }

  @(ASTNotEqualsExpression.class):JavaClassFile{
    simpleName = "ASTNotEqualsExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTNotEqualsExpression.class";
  }

  @(ASTPlusExpression$PlusExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPlusExpression$PlusExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTPlusExpression$PlusExpressionBuilder.class";
  }

  @(ASTPlusExpression.class):JavaClassFile{
    simpleName = "ASTPlusExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTPlusExpression.class";
  }

  @(ASTSimpleAssignmentExpression$SimpleAssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSimpleAssignmentExpression$SimpleAssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTSimpleAssignmentExpression$SimpleAssignmentExpressionBuilder.class";
  }

  @(ASTSimpleAssignmentExpression.class):JavaClassFile{
    simpleName = "ASTSimpleAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/ASTSimpleAssignmentExpression.class";
  }

  @(CommonExpressionsLiterals.class):JavaClassFile{
    simpleName = "CommonExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsLiterals.class";
  }

  @(CommonExpressionsMill.class):JavaClassFile{
    simpleName = "CommonExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsMill.class";
  }

  @(CommonExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "CommonExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsNodeFactory.class";
  }

  @(CommonExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "CommonExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsPackage$Literals.class";
  }

  @(CommonExpressionsPackage.class):JavaClassFile{
    simpleName = "CommonExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsPackage.class";
  }

  @(CommonExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "CommonExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_ast/CommonExpressionsPackageImpl.class";
  }

  @(_cocos!46):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos";
  }

  @(CommonExpressionsASTArgumentsCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTArgumentsCoCo.class";
  }

  @(CommonExpressionsASTBooleanAndOpExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTBooleanAndOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanAndOpExpressionCoCo.class";
  }

  @(CommonExpressionsASTBooleanNotExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTBooleanNotExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanNotExpressionCoCo.class";
  }

  @(CommonExpressionsASTBooleanOrOpExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTBooleanOrOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanOrOpExpressionCoCo.class";
  }

  @(CommonExpressionsASTBracketExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTBracketExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBracketExpressionCoCo.class";
  }

  @(CommonExpressionsASTCallExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTCallExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTCallExpressionCoCo.class";
  }

  @(CommonExpressionsASTCommonExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTCommonExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTCommonExpressionsNodeCoCo.class";
  }

  @(CommonExpressionsASTConditionalExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTConditionalExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTConditionalExpressionCoCo.class";
  }

  @(CommonExpressionsASTDivideExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTDivideExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTDivideExpressionCoCo.class";
  }

  @(CommonExpressionsASTEqualsExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTEqualsExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTEqualsExpressionCoCo.class";
  }

  @(CommonExpressionsASTEquivalentExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTEquivalentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTEquivalentExpressionCoCo.class";
  }

  @(CommonExpressionsASTGreaterEqualExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTGreaterEqualExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTGreaterEqualExpressionCoCo.class";
  }

  @(CommonExpressionsASTGreaterThanExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTGreaterThanExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTGreaterThanExpressionCoCo.class";
  }

  @(CommonExpressionsASTInfixExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTInfixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTInfixExpressionCoCo.class";
  }

  @(CommonExpressionsASTLessEqualExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTLessEqualExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLessEqualExpressionCoCo.class";
  }

  @(CommonExpressionsASTLessThanExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTLessThanExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLessThanExpressionCoCo.class";
  }

  @(CommonExpressionsASTLogicalNotExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTLogicalNotExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLogicalNotExpressionCoCo.class";
  }

  @(CommonExpressionsASTMinusExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTMinusExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTMinusExpressionCoCo.class";
  }

  @(CommonExpressionsASTModuloExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTModuloExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTModuloExpressionCoCo.class";
  }

  @(CommonExpressionsASTMultExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTMultExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTMultExpressionCoCo.class";
  }

  @(CommonExpressionsASTNotEqualsExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTNotEqualsExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTNotEqualsExpressionCoCo.class";
  }

  @(CommonExpressionsASTPlusExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTPlusExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTPlusExpressionCoCo.class";
  }

  @(CommonExpressionsASTSimpleAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsASTSimpleAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsASTSimpleAssignmentExpressionCoCo.class";
  }

  @(CommonExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "CommonExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsCoCoChecker.class";
  }

  @(CommonExpressionsCommonExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "CommonExpressionsCommonExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_cocos/CommonExpressionsCommonExpressionsPackageCoCo.class";
  }

  @(_od!46):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_od";
  }

  @(CommonExpressions2OD.class):JavaClassFile{
    simpleName = "CommonExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_od/CommonExpressions2OD.class";
  }

  @(_symboltable!23):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_symboltable";
  }

  @(CommonExpressionsLanguage.class):JavaClassFile{
    simpleName = "CommonExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_symboltable/CommonExpressionsLanguage.class";
  }

  @(CommonExpressionsModelLoader.class):JavaClassFile{
    simpleName = "CommonExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_symboltable/CommonExpressionsModelLoader.class";
  }

  @(_visitor!46):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_visitor";
  }

  @(CommonExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "CommonExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_visitor/CommonExpressionsDelegatorVisitor.class";
  }

  @(CommonExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "CommonExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_visitor/CommonExpressionsInheritanceVisitor.class";
  }

  @(CommonExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "CommonExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_visitor/CommonExpressionsParentAwareVisitor.class";
  }

  @(CommonExpressionsVisitor.class):JavaClassFile{
    simpleName = "CommonExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/commonexpressions/_visitor/CommonExpressionsVisitor.class";
  }

  @(completeness):Directory{
    simpleName = "completeness";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness";
  }

  @(_ast!53):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast";
  }

  @(ASTCompleteness$CompletenessBuilder.class!2):JavaClassFile{
    simpleName = "ASTCompleteness$CompletenessBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/ASTCompleteness$CompletenessBuilder.class";
  }

  @(ASTCompleteness.class!3):JavaClassFile{
    simpleName = "ASTCompleteness";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/ASTCompleteness.class";
  }

  @(ASTCompletenessNode.class):JavaClassFile{
    simpleName = "ASTCompletenessNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/ASTCompletenessNode.class";
  }

  @(ASTConstantsCompleteness.class):JavaClassFile{
    simpleName = "ASTConstantsCompleteness";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/ASTConstantsCompleteness.class";
  }

  @(CompletenessLiterals.class):JavaClassFile{
    simpleName = "CompletenessLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessLiterals.class";
  }

  @(CompletenessMill.class):JavaClassFile{
    simpleName = "CompletenessMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessMill.class";
  }

  @(CompletenessNodeFactory.class):JavaClassFile{
    simpleName = "CompletenessNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessNodeFactory.class";
  }

  @(CompletenessPackage$Literals.class):JavaClassFile{
    simpleName = "CompletenessPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessPackage$Literals.class";
  }

  @(CompletenessPackage.class):JavaClassFile{
    simpleName = "CompletenessPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessPackage.class";
  }

  @(CompletenessPackageImpl.class):JavaClassFile{
    simpleName = "CompletenessPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_ast/CompletenessPackageImpl.class";
  }

  @(_cocos!47):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_cocos";
  }

  @(CompletenessASTCompletenessCoCo.class):JavaClassFile{
    simpleName = "CompletenessASTCompletenessCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_cocos/CompletenessASTCompletenessCoCo.class";
  }

  @(CompletenessASTCompletenessNodeCoCo.class):JavaClassFile{
    simpleName = "CompletenessASTCompletenessNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_cocos/CompletenessASTCompletenessNodeCoCo.class";
  }

  @(CompletenessCoCoChecker.class):JavaClassFile{
    simpleName = "CompletenessCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_cocos/CompletenessCoCoChecker.class";
  }

  @(CompletenessCompletenessPackageCoCo.class):JavaClassFile{
    simpleName = "CompletenessCompletenessPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_cocos/CompletenessCompletenessPackageCoCo.class";
  }

  @(_od!47):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_od";
  }

  @(Completeness2OD.class):JavaClassFile{
    simpleName = "Completeness2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_od/Completeness2OD.class";
  }

  @(_symboltable!24):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_symboltable";
  }

  @(CompletenessLanguage.class):JavaClassFile{
    simpleName = "CompletenessLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_symboltable/CompletenessLanguage.class";
  }

  @(CompletenessModelLoader.class):JavaClassFile{
    simpleName = "CompletenessModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_symboltable/CompletenessModelLoader.class";
  }

  @(_visitor!47):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_visitor";
  }

  @(CompletenessDelegatorVisitor.class):JavaClassFile{
    simpleName = "CompletenessDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_visitor/CompletenessDelegatorVisitor.class";
  }

  @(CompletenessInheritanceVisitor.class):JavaClassFile{
    simpleName = "CompletenessInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_visitor/CompletenessInheritanceVisitor.class";
  }

  @(CompletenessParentAwareVisitor.class):JavaClassFile{
    simpleName = "CompletenessParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_visitor/CompletenessParentAwareVisitor.class";
  }

  @(CompletenessVisitor.class):JavaClassFile{
    simpleName = "CompletenessVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/completeness/_visitor/CompletenessVisitor.class";
  }

  @(expressions!2):Directory{
    simpleName = "expressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions";
  }

  @(prettyprint!14):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint";
  }

  @(AssignmentExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/AssignmentExpressionsPrettyPrinter.class";
  }

  @(CommonExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "CommonExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/CommonExpressionsPrettyPrinter.class";
  }

  @(JavaClassExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/JavaClassExpressionsPrettyPrinter.class";
  }

  @(MCExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "MCExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/MCExpressionsPrettyPrinter.class";
  }

  @(OCLExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "OCLExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/OCLExpressionsPrettyPrinter.class";
  }

  @(SetExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "SetExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/SetExpressionsPrettyPrinter.class";
  }

  @(ShiftExpressionsPrettyPrinter.class):JavaClassFile{
    simpleName = "ShiftExpressionsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressions/prettyprint/ShiftExpressionsPrettyPrinter.class";
  }

  @(expressionsbasis):Directory{
    simpleName = "expressionsbasis";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis";
  }

  @(_ast!54):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast";
  }

  @(ASTConstantsExpressionsBasis.class):JavaClassFile{
    simpleName = "ASTConstantsExpressionsBasis";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ASTConstantsExpressionsBasis.class";
  }

  @(ASTExpression.class!3):JavaClassFile{
    simpleName = "ASTExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ASTExpression.class";
  }

  @(ASTExpressionsBasisNode.class):JavaClassFile{
    simpleName = "ASTExpressionsBasisNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ASTExpressionsBasisNode.class";
  }

  @(ExpressionsBasisLiterals.class):JavaClassFile{
    simpleName = "ExpressionsBasisLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisLiterals.class";
  }

  @(ExpressionsBasisMill.class):JavaClassFile{
    simpleName = "ExpressionsBasisMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisMill.class";
  }

  @(ExpressionsBasisNodeFactory.class):JavaClassFile{
    simpleName = "ExpressionsBasisNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisNodeFactory.class";
  }

  @(ExpressionsBasisPackage$Literals.class):JavaClassFile{
    simpleName = "ExpressionsBasisPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisPackage$Literals.class";
  }

  @(ExpressionsBasisPackage.class):JavaClassFile{
    simpleName = "ExpressionsBasisPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisPackage.class";
  }

  @(ExpressionsBasisPackageImpl.class):JavaClassFile{
    simpleName = "ExpressionsBasisPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_ast/ExpressionsBasisPackageImpl.class";
  }

  @(_cocos!48):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_cocos";
  }

  @(ExpressionsBasisASTExpressionCoCo.class):JavaClassFile{
    simpleName = "ExpressionsBasisASTExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_cocos/ExpressionsBasisASTExpressionCoCo.class";
  }

  @(ExpressionsBasisASTExpressionsBasisNodeCoCo.class):JavaClassFile{
    simpleName = "ExpressionsBasisASTExpressionsBasisNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_cocos/ExpressionsBasisASTExpressionsBasisNodeCoCo.class";
  }

  @(ExpressionsBasisCoCoChecker.class):JavaClassFile{
    simpleName = "ExpressionsBasisCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_cocos/ExpressionsBasisCoCoChecker.class";
  }

  @(ExpressionsBasisExpressionsBasisPackageCoCo.class):JavaClassFile{
    simpleName = "ExpressionsBasisExpressionsBasisPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_cocos/ExpressionsBasisExpressionsBasisPackageCoCo.class";
  }

  @(_od!48):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_od";
  }

  @(ExpressionsBasis2OD.class):JavaClassFile{
    simpleName = "ExpressionsBasis2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_od/ExpressionsBasis2OD.class";
  }

  @(_symboltable!25):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_symboltable";
  }

  @(ExpressionsBasisLanguage.class):JavaClassFile{
    simpleName = "ExpressionsBasisLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_symboltable/ExpressionsBasisLanguage.class";
  }

  @(ExpressionsBasisModelLoader.class):JavaClassFile{
    simpleName = "ExpressionsBasisModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_symboltable/ExpressionsBasisModelLoader.class";
  }

  @(_visitor!48):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_visitor";
  }

  @(ExpressionsBasisDelegatorVisitor.class):JavaClassFile{
    simpleName = "ExpressionsBasisDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_visitor/ExpressionsBasisDelegatorVisitor.class";
  }

  @(ExpressionsBasisInheritanceVisitor.class):JavaClassFile{
    simpleName = "ExpressionsBasisInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_visitor/ExpressionsBasisInheritanceVisitor.class";
  }

  @(ExpressionsBasisParentAwareVisitor.class):JavaClassFile{
    simpleName = "ExpressionsBasisParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_visitor/ExpressionsBasisParentAwareVisitor.class";
  }

  @(ExpressionsBasisVisitor.class):JavaClassFile{
    simpleName = "ExpressionsBasisVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/expressionsbasis/_visitor/ExpressionsBasisVisitor.class";
  }

  @(javaclassexpressions):Directory{
    simpleName = "javaclassexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions";
  }

  @(_ast!55):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast";
  }

  @(ASTClassExpression$ClassExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTClassExpression$ClassExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTClassExpression$ClassExpressionBuilder.class";
  }

  @(ASTClassExpression.class):JavaClassFile{
    simpleName = "ASTClassExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTClassExpression.class";
  }

  @(ASTConstantsJavaClassExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsJavaClassExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTConstantsJavaClassExpressions.class";
  }

  @(ASTELiteralExt.class):JavaClassFile{
    simpleName = "ASTELiteralExt";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTELiteralExt.class";
  }

  @(ASTEReturnTypeExt.class):JavaClassFile{
    simpleName = "ASTEReturnTypeExt";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTEReturnTypeExt.class";
  }

  @(ASTETypeArgumentsExt.class):JavaClassFile{
    simpleName = "ASTETypeArgumentsExt";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTETypeArgumentsExt.class";
  }

  @(ASTETypeExt.class):JavaClassFile{
    simpleName = "ASTETypeExt";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTETypeExt.class";
  }

  @(ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTGenericInvocationExpression$GenericInvocationExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class";
  }

  @(ASTGenericInvocationExpression.class):JavaClassFile{
    simpleName = "ASTGenericInvocationExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationExpression.class";
  }

  @(ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class):JavaClassFile{
    simpleName = "ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class";
  }

  @(ASTGenericInvocationSuffix.class):JavaClassFile{
    simpleName = "ASTGenericInvocationSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationSuffix.class";
  }

  @(ASTInstanceofExpression$InstanceofExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTInstanceofExpression$InstanceofExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTInstanceofExpression$InstanceofExpressionBuilder.class";
  }

  @(ASTInstanceofExpression.class):JavaClassFile{
    simpleName = "ASTInstanceofExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTInstanceofExpression.class";
  }

  @(ASTJavaClassExpressionsNode.class):JavaClassFile{
    simpleName = "ASTJavaClassExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTJavaClassExpressionsNode.class";
  }

  @(ASTLiteralExpression$LiteralExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLiteralExpression$LiteralExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTLiteralExpression$LiteralExpressionBuilder.class";
  }

  @(ASTLiteralExpression.class):JavaClassFile{
    simpleName = "ASTLiteralExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTLiteralExpression.class";
  }

  @(ASTNameExpression$NameExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTNameExpression$NameExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTNameExpression$NameExpressionBuilder.class";
  }

  @(ASTNameExpression.class):JavaClassFile{
    simpleName = "ASTNameExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTNameExpression.class";
  }

  @(ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class";
  }

  @(ASTPrimaryGenericInvocationExpression.class):JavaClassFile{
    simpleName = "ASTPrimaryGenericInvocationExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTPrimaryGenericInvocationExpression.class";
  }

  @(ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimarySuperExpression$PrimarySuperExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class";
  }

  @(ASTPrimarySuperExpression.class):JavaClassFile{
    simpleName = "ASTPrimarySuperExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTPrimarySuperExpression.class";
  }

  @(ASTSuperExpression$SuperExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSuperExpression$SuperExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTSuperExpression$SuperExpressionBuilder.class";
  }

  @(ASTSuperExpression.class):JavaClassFile{
    simpleName = "ASTSuperExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTSuperExpression.class";
  }

  @(ASTSuperSuffix$SuperSuffixBuilder.class):JavaClassFile{
    simpleName = "ASTSuperSuffix$SuperSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTSuperSuffix$SuperSuffixBuilder.class";
  }

  @(ASTSuperSuffix.class!2):JavaClassFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTSuperSuffix.class";
  }

  @(ASTTypeCastExpression$TypeCastExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTTypeCastExpression$TypeCastExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTTypeCastExpression$TypeCastExpressionBuilder.class";
  }

  @(ASTTypeCastExpression.class):JavaClassFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/ASTTypeCastExpression.class";
  }

  @(JavaClassExpressionsLiterals.class):JavaClassFile{
    simpleName = "JavaClassExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsLiterals.class";
  }

  @(JavaClassExpressionsMill.class):JavaClassFile{
    simpleName = "JavaClassExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsMill.class";
  }

  @(JavaClassExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "JavaClassExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsNodeFactory.class";
  }

  @(JavaClassExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsPackage$Literals.class";
  }

  @(JavaClassExpressionsPackage.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsPackage.class";
  }

  @(JavaClassExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsPackageImpl.class";
  }

  @(_cocos!49):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos";
  }

  @(JavaClassExpressionsASTClassExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTClassExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTClassExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTELiteralExtCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTELiteralExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTELiteralExtCoCo.class";
  }

  @(JavaClassExpressionsASTEReturnTypeExtCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTEReturnTypeExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTEReturnTypeExtCoCo.class";
  }

  @(JavaClassExpressionsASTETypeArgumentsExtCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTETypeArgumentsExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTETypeArgumentsExtCoCo.class";
  }

  @(JavaClassExpressionsASTETypeExtCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTETypeExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTETypeExtCoCo.class";
  }

  @(JavaClassExpressionsASTGenericInvocationExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTGenericInvocationExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTGenericInvocationExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTGenericInvocationSuffixCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTGenericInvocationSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTGenericInvocationSuffixCoCo.class";
  }

  @(JavaClassExpressionsASTInstanceofExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTInstanceofExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTInstanceofExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTJavaClassExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.class";
  }

  @(JavaClassExpressionsASTLiteralExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTLiteralExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTLiteralExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTNameExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTNameExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTNameExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTPrimarySuperExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTPrimarySuperExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTPrimarySuperExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTSuperExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTSuperExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTSuperExpressionCoCo.class";
  }

  @(JavaClassExpressionsASTSuperSuffixCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTSuperSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTSuperSuffixCoCo.class";
  }

  @(JavaClassExpressionsASTTypeCastExpressionCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTTypeCastExpressionCoCo.class";
  }

  @(JavaClassExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "JavaClassExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsCoCoChecker.class";
  }

  @(JavaClassExpressionsJavaClassExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "JavaClassExpressionsJavaClassExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsJavaClassExpressionsPackageCoCo.class";
  }

  @(_od!49):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_od";
  }

  @(JavaClassExpressions2OD.class):JavaClassFile{
    simpleName = "JavaClassExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_od/JavaClassExpressions2OD.class";
  }

  @(_symboltable!26):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_symboltable";
  }

  @(JavaClassExpressionsLanguage.class):JavaClassFile{
    simpleName = "JavaClassExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_symboltable/JavaClassExpressionsLanguage.class";
  }

  @(JavaClassExpressionsModelLoader.class):JavaClassFile{
    simpleName = "JavaClassExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_symboltable/JavaClassExpressionsModelLoader.class";
  }

  @(_visitor!49):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_visitor";
  }

  @(JavaClassExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "JavaClassExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsDelegatorVisitor.class";
  }

  @(JavaClassExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "JavaClassExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsInheritanceVisitor.class";
  }

  @(JavaClassExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "JavaClassExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsParentAwareVisitor.class";
  }

  @(JavaClassExpressionsVisitor.class):JavaClassFile{
    simpleName = "JavaClassExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsVisitor.class";
  }

  @(lexicals!9):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals";
  }

  @(lexicals!10):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals";
  }

  @(_ast!56):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast";
  }

  @(ASTConstantsLexicals.class):JavaClassFile{
    simpleName = "ASTConstantsLexicals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/ASTConstantsLexicals.class";
  }

  @(ASTLexicalsNode.class):JavaClassFile{
    simpleName = "ASTLexicalsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/ASTLexicalsNode.class";
  }

  @(LexicalsLiterals.class):JavaClassFile{
    simpleName = "LexicalsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsLiterals.class";
  }

  @(LexicalsMill.class):JavaClassFile{
    simpleName = "LexicalsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsMill.class";
  }

  @(LexicalsNodeFactory.class):JavaClassFile{
    simpleName = "LexicalsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsNodeFactory.class";
  }

  @(LexicalsPackage$Literals.class):JavaClassFile{
    simpleName = "LexicalsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsPackage$Literals.class";
  }

  @(LexicalsPackage.class):JavaClassFile{
    simpleName = "LexicalsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsPackage.class";
  }

  @(LexicalsPackageImpl.class):JavaClassFile{
    simpleName = "LexicalsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_ast/LexicalsPackageImpl.class";
  }

  @(_cocos!50):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_cocos";
  }

  @(LexicalsASTLexicalsNodeCoCo.class):JavaClassFile{
    simpleName = "LexicalsASTLexicalsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_cocos/LexicalsASTLexicalsNodeCoCo.class";
  }

  @(LexicalsCoCoChecker.class):JavaClassFile{
    simpleName = "LexicalsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_cocos/LexicalsCoCoChecker.class";
  }

  @(LexicalsLexicalsPackageCoCo.class):JavaClassFile{
    simpleName = "LexicalsLexicalsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_cocos/LexicalsLexicalsPackageCoCo.class";
  }

  @(_od!50):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_od";
  }

  @(Lexicals2OD.class):JavaClassFile{
    simpleName = "Lexicals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_od/Lexicals2OD.class";
  }

  @(_visitor!50):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_visitor";
  }

  @(LexicalsDelegatorVisitor.class):JavaClassFile{
    simpleName = "LexicalsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_visitor/LexicalsDelegatorVisitor.class";
  }

  @(LexicalsInheritanceVisitor.class):JavaClassFile{
    simpleName = "LexicalsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_visitor/LexicalsInheritanceVisitor.class";
  }

  @(LexicalsParentAwareVisitor.class):JavaClassFile{
    simpleName = "LexicalsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_visitor/LexicalsParentAwareVisitor.class";
  }

  @(LexicalsVisitor.class):JavaClassFile{
    simpleName = "LexicalsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/lexicals/lexicals/_visitor/LexicalsVisitor.class";
  }

  @(literals!11):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals";
  }

  @(literals!12):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals";
  }

  @(_ast!57):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast";
  }

  @(ASTBooleanLiteral$BooleanLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanLiteral$BooleanLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTBooleanLiteral$BooleanLiteralBuilder.class";
  }

  @(ASTBooleanLiteral.class!2):JavaClassFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTBooleanLiteral.class";
  }

  @(ASTCharLiteral$CharLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTCharLiteral$CharLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTCharLiteral$CharLiteralBuilder.class";
  }

  @(ASTCharLiteral.class!2):JavaClassFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTCharLiteral.class";
  }

  @(ASTConstantsLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTConstantsLiterals.class";
  }

  @(ASTDoubleLiteral$DoubleLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTDoubleLiteral$DoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTDoubleLiteral$DoubleLiteralBuilder.class";
  }

  @(ASTDoubleLiteral.class!2):JavaClassFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTDoubleLiteral.class";
  }

  @(ASTFloatLiteral$FloatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTFloatLiteral$FloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTFloatLiteral$FloatLiteralBuilder.class";
  }

  @(ASTFloatLiteral.class!2):JavaClassFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTFloatLiteral.class";
  }

  @(ASTIntLiteral$IntLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTIntLiteral$IntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTIntLiteral$IntLiteralBuilder.class";
  }

  @(ASTIntLiteral.class!2):JavaClassFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTIntLiteral.class";
  }

  @(ASTLiteral.class!2):JavaClassFile{
    simpleName = "ASTLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTLiteral.class";
  }

  @(ASTLiteralsNode.class):JavaClassFile{
    simpleName = "ASTLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTLiteralsNode.class";
  }

  @(ASTLongLiteral$LongLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTLongLiteral$LongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTLongLiteral$LongLiteralBuilder.class";
  }

  @(ASTLongLiteral.class!2):JavaClassFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTLongLiteral.class";
  }

  @(ASTNullLiteral$NullLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTNullLiteral$NullLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTNullLiteral$NullLiteralBuilder.class";
  }

  @(ASTNullLiteral.class!2):JavaClassFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTNullLiteral.class";
  }

  @(ASTNumericLiteral.class!2):JavaClassFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTNumericLiteral.class";
  }

  @(ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class";
  }

  @(ASTSignedDoubleLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedDoubleLiteral.class";
  }

  @(ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedFloatLiteral$SignedFloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class";
  }

  @(ASTSignedFloatLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedFloatLiteral.class";
  }

  @(ASTSignedIntLiteral$SignedIntLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedIntLiteral$SignedIntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedIntLiteral$SignedIntLiteralBuilder.class";
  }

  @(ASTSignedIntLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedIntLiteral.class";
  }

  @(ASTSignedLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedLiteral.class";
  }

  @(ASTSignedLongLiteral$SignedLongLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedLongLiteral$SignedLongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedLongLiteral$SignedLongLiteralBuilder.class";
  }

  @(ASTSignedLongLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedLongLiteral.class";
  }

  @(ASTSignedNumericLiteral.class!2):JavaClassFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTSignedNumericLiteral.class";
  }

  @(ASTStringLiteral$StringLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTStringLiteral$StringLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTStringLiteral$StringLiteralBuilder.class";
  }

  @(ASTStringLiteral.class!2):JavaClassFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/ASTStringLiteral.class";
  }

  @(LiteralsLiterals.class):JavaClassFile{
    simpleName = "LiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsLiterals.class";
  }

  @(LiteralsMill.class):JavaClassFile{
    simpleName = "LiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsMill.class";
  }

  @(LiteralsNodeFactory.class):JavaClassFile{
    simpleName = "LiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsNodeFactory.class";
  }

  @(LiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "LiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsPackage$Literals.class";
  }

  @(LiteralsPackage.class):JavaClassFile{
    simpleName = "LiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsPackage.class";
  }

  @(LiteralsPackageImpl.class):JavaClassFile{
    simpleName = "LiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_ast/LiteralsPackageImpl.class";
  }

  @(_cocos!51):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos";
  }

  @(LiteralsASTBooleanLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTBooleanLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTBooleanLiteralCoCo.class";
  }

  @(LiteralsASTCharLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTCharLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTCharLiteralCoCo.class";
  }

  @(LiteralsASTDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTDoubleLiteralCoCo.class";
  }

  @(LiteralsASTFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTFloatLiteralCoCo.class";
  }

  @(LiteralsASTIntLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTIntLiteralCoCo.class";
  }

  @(LiteralsASTLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTLiteralCoCo.class";
  }

  @(LiteralsASTLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTLiteralsNodeCoCo.class";
  }

  @(LiteralsASTLongLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTLongLiteralCoCo.class";
  }

  @(LiteralsASTNullLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTNullLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTNullLiteralCoCo.class";
  }

  @(LiteralsASTNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTNumericLiteralCoCo.class";
  }

  @(LiteralsASTSignedDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedDoubleLiteralCoCo.class";
  }

  @(LiteralsASTSignedFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedFloatLiteralCoCo.class";
  }

  @(LiteralsASTSignedIntLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedIntLiteralCoCo.class";
  }

  @(LiteralsASTSignedLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedLiteralCoCo.class";
  }

  @(LiteralsASTSignedLongLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedLongLiteralCoCo.class";
  }

  @(LiteralsASTSignedNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTSignedNumericLiteralCoCo.class";
  }

  @(LiteralsASTStringLiteralCoCo.class):JavaClassFile{
    simpleName = "LiteralsASTStringLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsASTStringLiteralCoCo.class";
  }

  @(LiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "LiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsCoCoChecker.class";
  }

  @(LiteralsLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "LiteralsLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_cocos/LiteralsLiteralsPackageCoCo.class";
  }

  @(_od!51):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_od";
  }

  @(Literals2OD.class):JavaClassFile{
    simpleName = "Literals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_od/Literals2OD.class";
  }

  @(_symboltable!27):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_symboltable";
  }

  @(LiteralsLanguage.class):JavaClassFile{
    simpleName = "LiteralsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_symboltable/LiteralsLanguage.class";
  }

  @(LiteralsModelLoader.class):JavaClassFile{
    simpleName = "LiteralsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_symboltable/LiteralsModelLoader.class";
  }

  @(_visitor!51):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_visitor";
  }

  @(LiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "LiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_visitor/LiteralsDelegatorVisitor.class";
  }

  @(LiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "LiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_visitor/LiteralsInheritanceVisitor.class";
  }

  @(LiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "LiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_visitor/LiteralsParentAwareVisitor.class";
  }

  @(LiteralsVisitor.class):JavaClassFile{
    simpleName = "LiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/literals/_visitor/LiteralsVisitor.class";
  }

  @(LiteralsHelper.class):JavaClassFile{
    simpleName = "LiteralsHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/LiteralsHelper.class";
  }

  @(LiteralsNodeIdentHelper.class):JavaClassFile{
    simpleName = "LiteralsNodeIdentHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/LiteralsNodeIdentHelper.class";
  }

  @(prettyprint!15):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/prettyprint";
  }

  @(LiteralsPrettyPrinterConcreteVisitor.class):JavaClassFile{
    simpleName = "LiteralsPrettyPrinterConcreteVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/literals/prettyprint/LiteralsPrettyPrinterConcreteVisitor.class";
  }

  @(mcbasics):Directory{
    simpleName = "mcbasics";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics";
  }

  @(_ast!58):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast";
  }

  @(ASTConstantsMCBasics.class):JavaClassFile{
    simpleName = "ASTConstantsMCBasics";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/ASTConstantsMCBasics.class";
  }

  @(ASTMCBasicsNode.class):JavaClassFile{
    simpleName = "ASTMCBasicsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/ASTMCBasicsNode.class";
  }

  @(MCBasicsLiterals.class):JavaClassFile{
    simpleName = "MCBasicsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsLiterals.class";
  }

  @(MCBasicsMill.class):JavaClassFile{
    simpleName = "MCBasicsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsMill.class";
  }

  @(MCBasicsNodeFactory.class):JavaClassFile{
    simpleName = "MCBasicsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsNodeFactory.class";
  }

  @(MCBasicsPackage$Literals.class):JavaClassFile{
    simpleName = "MCBasicsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsPackage$Literals.class";
  }

  @(MCBasicsPackage.class):JavaClassFile{
    simpleName = "MCBasicsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsPackage.class";
  }

  @(MCBasicsPackageImpl.class):JavaClassFile{
    simpleName = "MCBasicsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_ast/MCBasicsPackageImpl.class";
  }

  @(_cocos!52):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_cocos";
  }

  @(MCBasicsASTMCBasicsNodeCoCo.class):JavaClassFile{
    simpleName = "MCBasicsASTMCBasicsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_cocos/MCBasicsASTMCBasicsNodeCoCo.class";
  }

  @(MCBasicsCoCoChecker.class):JavaClassFile{
    simpleName = "MCBasicsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_cocos/MCBasicsCoCoChecker.class";
  }

  @(MCBasicsMCBasicsPackageCoCo.class):JavaClassFile{
    simpleName = "MCBasicsMCBasicsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_cocos/MCBasicsMCBasicsPackageCoCo.class";
  }

  @(_od!52):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_od";
  }

  @(MCBasics2OD.class):JavaClassFile{
    simpleName = "MCBasics2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_od/MCBasics2OD.class";
  }

  @(_visitor!52):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_visitor";
  }

  @(MCBasicsDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCBasicsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_visitor/MCBasicsDelegatorVisitor.class";
  }

  @(MCBasicsInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCBasicsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_visitor/MCBasicsInheritanceVisitor.class";
  }

  @(MCBasicsParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCBasicsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_visitor/MCBasicsParentAwareVisitor.class";
  }

  @(MCBasicsVisitor.class):JavaClassFile{
    simpleName = "MCBasicsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasics/_visitor/MCBasicsVisitor.class";
  }

  @(mcbasictypes1):Directory{
    simpleName = "mcbasictypes1";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1";
  }

  @(_ast!59):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast";
  }

  @(ASTBooleanType$BooleanTypeBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanType$BooleanTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTBooleanType$BooleanTypeBuilder.class";
  }

  @(ASTBooleanType.class):JavaClassFile{
    simpleName = "ASTBooleanType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTBooleanType.class";
  }

  @(ASTByteType$ByteTypeBuilder.class):JavaClassFile{
    simpleName = "ASTByteType$ByteTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTByteType$ByteTypeBuilder.class";
  }

  @(ASTByteType.class):JavaClassFile{
    simpleName = "ASTByteType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTByteType.class";
  }

  @(ASTCharType$CharTypeBuilder.class):JavaClassFile{
    simpleName = "ASTCharType$CharTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTCharType$CharTypeBuilder.class";
  }

  @(ASTCharType.class):JavaClassFile{
    simpleName = "ASTCharType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTCharType.class";
  }

  @(ASTConstantsMCBasicTypes1.class):JavaClassFile{
    simpleName = "ASTConstantsMCBasicTypes1";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTConstantsMCBasicTypes1.class";
  }

  @(ASTDoubleType$DoubleTypeBuilder.class):JavaClassFile{
    simpleName = "ASTDoubleType$DoubleTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTDoubleType$DoubleTypeBuilder.class";
  }

  @(ASTDoubleType.class):JavaClassFile{
    simpleName = "ASTDoubleType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTDoubleType.class";
  }

  @(ASTFloatType$FloatTypeBuilder.class):JavaClassFile{
    simpleName = "ASTFloatType$FloatTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTFloatType$FloatTypeBuilder.class";
  }

  @(ASTFloatType.class):JavaClassFile{
    simpleName = "ASTFloatType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTFloatType.class";
  }

  @(ASTImportStatement$ImportStatementBuilder.class):JavaClassFile{
    simpleName = "ASTImportStatement$ImportStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTImportStatement$ImportStatementBuilder.class";
  }

  @(ASTImportStatement.class!2):JavaClassFile{
    simpleName = "ASTImportStatement";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTImportStatement.class";
  }

  @(ASTIntType$IntTypeBuilder.class):JavaClassFile{
    simpleName = "ASTIntType$IntTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTIntType$IntTypeBuilder.class";
  }

  @(ASTIntType.class):JavaClassFile{
    simpleName = "ASTIntType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTIntType.class";
  }

  @(ASTLongType$LongTypeBuilder.class):JavaClassFile{
    simpleName = "ASTLongType$LongTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTLongType$LongTypeBuilder.class";
  }

  @(ASTLongType.class):JavaClassFile{
    simpleName = "ASTLongType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTLongType.class";
  }

  @(ASTMCBasicTypes1Node.class):JavaClassFile{
    simpleName = "ASTMCBasicTypes1Node";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTMCBasicTypes1Node.class";
  }

  @(ASTNameAsReferenceType$NameAsReferenceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTNameAsReferenceType$NameAsReferenceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTNameAsReferenceType$NameAsReferenceTypeBuilder.class";
  }

  @(ASTNameAsReferenceType.class):JavaClassFile{
    simpleName = "ASTNameAsReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTNameAsReferenceType.class";
  }

  @(ASTPrimitiveType.class!2):JavaClassFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTPrimitiveType.class";
  }

  @(ASTQualifiedName$QualifiedNameBuilder.class):JavaClassFile{
    simpleName = "ASTQualifiedName$QualifiedNameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTQualifiedName$QualifiedNameBuilder.class";
  }

  @(ASTQualifiedName.class!3):JavaClassFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTQualifiedName.class";
  }

  @(ASTReferenceType.class!2):JavaClassFile{
    simpleName = "ASTReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTReferenceType.class";
  }

  @(ASTReturnType$ReturnTypeBuilder.class):JavaClassFile{
    simpleName = "ASTReturnType$ReturnTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTReturnType$ReturnTypeBuilder.class";
  }

  @(ASTReturnType.class!2):JavaClassFile{
    simpleName = "ASTReturnType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTReturnType.class";
  }

  @(ASTShortType$ShortTypeBuilder.class):JavaClassFile{
    simpleName = "ASTShortType$ShortTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTShortType$ShortTypeBuilder.class";
  }

  @(ASTShortType.class):JavaClassFile{
    simpleName = "ASTShortType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTShortType.class";
  }

  @(ASTType.class!2):JavaClassFile{
    simpleName = "ASTType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTType.class";
  }

  @(ASTVoidType$VoidTypeBuilder.class):JavaClassFile{
    simpleName = "ASTVoidType$VoidTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTVoidType$VoidTypeBuilder.class";
  }

  @(ASTVoidType.class!2):JavaClassFile{
    simpleName = "ASTVoidType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/ASTVoidType.class";
  }

  @(MCBasicTypes1Literals.class):JavaClassFile{
    simpleName = "MCBasicTypes1Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Literals.class";
  }

  @(MCBasicTypes1Mill.class):JavaClassFile{
    simpleName = "MCBasicTypes1Mill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Mill.class";
  }

  @(MCBasicTypes1NodeFactory.class):JavaClassFile{
    simpleName = "MCBasicTypes1NodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1NodeFactory.class";
  }

  @(MCBasicTypes1Package$Literals.class):JavaClassFile{
    simpleName = "MCBasicTypes1Package$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Package$Literals.class";
  }

  @(MCBasicTypes1Package.class):JavaClassFile{
    simpleName = "MCBasicTypes1Package";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Package.class";
  }

  @(MCBasicTypes1PackageImpl.class):JavaClassFile{
    simpleName = "MCBasicTypes1PackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_ast/MCBasicTypes1PackageImpl.class";
  }

  @(_cocos!53):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos";
  }

  @(MCBasicTypes1ASTBooleanTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTBooleanTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTBooleanTypeCoCo.class";
  }

  @(MCBasicTypes1ASTByteTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTByteTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTByteTypeCoCo.class";
  }

  @(MCBasicTypes1ASTCharTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTCharTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTCharTypeCoCo.class";
  }

  @(MCBasicTypes1ASTDoubleTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTDoubleTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTDoubleTypeCoCo.class";
  }

  @(MCBasicTypes1ASTFloatTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTFloatTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTFloatTypeCoCo.class";
  }

  @(MCBasicTypes1ASTImportStatementCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTImportStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTImportStatementCoCo.class";
  }

  @(MCBasicTypes1ASTIntTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTIntTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTIntTypeCoCo.class";
  }

  @(MCBasicTypes1ASTLongTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTLongTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTLongTypeCoCo.class";
  }

  @(MCBasicTypes1ASTMCBasicTypes1NodeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTMCBasicTypes1NodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTMCBasicTypes1NodeCoCo.class";
  }

  @(MCBasicTypes1ASTNameAsReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTNameAsReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTNameAsReferenceTypeCoCo.class";
  }

  @(MCBasicTypes1ASTPrimitiveTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTPrimitiveTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTPrimitiveTypeCoCo.class";
  }

  @(MCBasicTypes1ASTQualifiedNameCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTQualifiedNameCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTQualifiedNameCoCo.class";
  }

  @(MCBasicTypes1ASTReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTReferenceTypeCoCo.class";
  }

  @(MCBasicTypes1ASTReturnTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTReturnTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTReturnTypeCoCo.class";
  }

  @(MCBasicTypes1ASTShortTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTShortTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTShortTypeCoCo.class";
  }

  @(MCBasicTypes1ASTTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTTypeCoCo.class";
  }

  @(MCBasicTypes1ASTVoidTypeCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1ASTVoidTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTVoidTypeCoCo.class";
  }

  @(MCBasicTypes1CoCoChecker.class):JavaClassFile{
    simpleName = "MCBasicTypes1CoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1CoCoChecker.class";
  }

  @(MCBasicTypes1MCBasicTypes1PackageCoCo.class):JavaClassFile{
    simpleName = "MCBasicTypes1MCBasicTypes1PackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1MCBasicTypes1PackageCoCo.class";
  }

  @(_od!53):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_od";
  }

  @(MCBasicTypes12OD.class):JavaClassFile{
    simpleName = "MCBasicTypes12OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_od/MCBasicTypes12OD.class";
  }

  @(_symboltable!28):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_symboltable";
  }

  @(MCBasicTypes1Language.class):JavaClassFile{
    simpleName = "MCBasicTypes1Language";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_symboltable/MCBasicTypes1Language.class";
  }

  @(MCBasicTypes1ModelLoader.class):JavaClassFile{
    simpleName = "MCBasicTypes1ModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_symboltable/MCBasicTypes1ModelLoader.class";
  }

  @(_visitor!53):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_visitor";
  }

  @(MCBasicTypes1DelegatorVisitor.class):JavaClassFile{
    simpleName = "MCBasicTypes1DelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1DelegatorVisitor.class";
  }

  @(MCBasicTypes1InheritanceVisitor.class):JavaClassFile{
    simpleName = "MCBasicTypes1InheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1InheritanceVisitor.class";
  }

  @(MCBasicTypes1ParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCBasicTypes1ParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1ParentAwareVisitor.class";
  }

  @(MCBasicTypes1Visitor.class):JavaClassFile{
    simpleName = "MCBasicTypes1Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1Visitor.class";
  }

  @(mccommon):Directory{
    simpleName = "mccommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon";
  }

  @(_ast!60):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast";
  }

  @(ASTConstantsMCCommon.class):JavaClassFile{
    simpleName = "ASTConstantsMCCommon";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/ASTConstantsMCCommon.class";
  }

  @(ASTMCCommonNode.class):JavaClassFile{
    simpleName = "ASTMCCommonNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/ASTMCCommonNode.class";
  }

  @(MCCommonLiterals.class):JavaClassFile{
    simpleName = "MCCommonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonLiterals.class";
  }

  @(MCCommonMill.class):JavaClassFile{
    simpleName = "MCCommonMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonMill.class";
  }

  @(MCCommonNodeFactory.class):JavaClassFile{
    simpleName = "MCCommonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonNodeFactory.class";
  }

  @(MCCommonPackage$Literals.class):JavaClassFile{
    simpleName = "MCCommonPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonPackage$Literals.class";
  }

  @(MCCommonPackage.class):JavaClassFile{
    simpleName = "MCCommonPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonPackage.class";
  }

  @(MCCommonPackageImpl.class):JavaClassFile{
    simpleName = "MCCommonPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_ast/MCCommonPackageImpl.class";
  }

  @(_cocos!54):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_cocos";
  }

  @(MCCommonASTMCCommonNodeCoCo.class):JavaClassFile{
    simpleName = "MCCommonASTMCCommonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_cocos/MCCommonASTMCCommonNodeCoCo.class";
  }

  @(MCCommonCoCoChecker.class):JavaClassFile{
    simpleName = "MCCommonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_cocos/MCCommonCoCoChecker.class";
  }

  @(MCCommonMCCommonPackageCoCo.class):JavaClassFile{
    simpleName = "MCCommonMCCommonPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_cocos/MCCommonMCCommonPackageCoCo.class";
  }

  @(_od!54):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_od";
  }

  @(MCCommon2OD.class):JavaClassFile{
    simpleName = "MCCommon2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_od/MCCommon2OD.class";
  }

  @(_visitor!54):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_visitor";
  }

  @(MCCommonDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCCommonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_visitor/MCCommonDelegatorVisitor.class";
  }

  @(MCCommonInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCCommonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_visitor/MCCommonInheritanceVisitor.class";
  }

  @(MCCommonParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCCommonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_visitor/MCCommonParentAwareVisitor.class";
  }

  @(MCCommonVisitor.class):JavaClassFile{
    simpleName = "MCCommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mccommon/_visitor/MCCommonVisitor.class";
  }

  @(mcexpressions):Directory{
    simpleName = "mcexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions";
  }

  @(_ast!61):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast";
  }

  @(ASTAddExpression$AddExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTAddExpression$AddExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTAddExpression$AddExpressionBuilder.class";
  }

  @(ASTAddExpression.class):JavaClassFile{
    simpleName = "ASTAddExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTAddExpression.class";
  }

  @(ASTArguments$ArgumentsBuilder.class!2):JavaClassFile{
    simpleName = "ASTArguments$ArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTArguments$ArgumentsBuilder.class";
  }

  @(ASTArguments.class!3):JavaClassFile{
    simpleName = "ASTArguments";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTArguments.class";
  }

  @(ASTArrayExpression$ArrayExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTArrayExpression$ArrayExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTArrayExpression$ArrayExpressionBuilder.class";
  }

  @(ASTArrayExpression.class):JavaClassFile{
    simpleName = "ASTArrayExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTArrayExpression.class";
  }

  @(ASTAssignmentExpression$AssignmentExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTAssignmentExpression$AssignmentExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTAssignmentExpression$AssignmentExpressionBuilder.class";
  }

  @(ASTAssignmentExpression.class!2):JavaClassFile{
    simpleName = "ASTAssignmentExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTAssignmentExpression.class";
  }

  @(ASTBinaryAndOpExpression$BinaryAndOpExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryAndOpExpression$BinaryAndOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryAndOpExpression$BinaryAndOpExpressionBuilder.class";
  }

  @(ASTBinaryAndOpExpression.class):JavaClassFile{
    simpleName = "ASTBinaryAndOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryAndOpExpression.class";
  }

  @(ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class";
  }

  @(ASTBinaryOrOpExpression.class!2):JavaClassFile{
    simpleName = "ASTBinaryOrOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryOrOpExpression.class";
  }

  @(ASTBinaryXorOpExpression$BinaryXorOpExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTBinaryXorOpExpression$BinaryXorOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryXorOpExpression$BinaryXorOpExpressionBuilder.class";
  }

  @(ASTBinaryXorOpExpression.class):JavaClassFile{
    simpleName = "ASTBinaryXorOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBinaryXorOpExpression.class";
  }

  @(ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class";
  }

  @(ASTBooleanAndOpExpression.class!2):JavaClassFile{
    simpleName = "ASTBooleanAndOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanAndOpExpression.class";
  }

  @(ASTBooleanNotExpression$BooleanNotExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTBooleanNotExpression$BooleanNotExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanNotExpression$BooleanNotExpressionBuilder.class";
  }

  @(ASTBooleanNotExpression.class!2):JavaClassFile{
    simpleName = "ASTBooleanNotExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanNotExpression.class";
  }

  @(ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class";
  }

  @(ASTBooleanOrOpExpression.class!2):JavaClassFile{
    simpleName = "ASTBooleanOrOpExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBooleanOrOpExpression.class";
  }

  @(ASTBracketExpression$BracketExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTBracketExpression$BracketExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBracketExpression$BracketExpressionBuilder.class";
  }

  @(ASTBracketExpression.class!2):JavaClassFile{
    simpleName = "ASTBracketExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTBracketExpression.class";
  }

  @(ASTCallExpression$CallExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTCallExpression$CallExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTCallExpression$CallExpressionBuilder.class";
  }

  @(ASTCallExpression.class!2):JavaClassFile{
    simpleName = "ASTCallExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTCallExpression.class";
  }

  @(ASTClassExpression$ClassExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTClassExpression$ClassExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTClassExpression$ClassExpressionBuilder.class";
  }

  @(ASTClassExpression.class!2):JavaClassFile{
    simpleName = "ASTClassExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTClassExpression.class";
  }

  @(ASTComparisonExpression$ComparisonExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTComparisonExpression$ComparisonExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTComparisonExpression$ComparisonExpressionBuilder.class";
  }

  @(ASTComparisonExpression.class):JavaClassFile{
    simpleName = "ASTComparisonExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTComparisonExpression.class";
  }

  @(ASTConditionalExpression$ConditionalExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTConditionalExpression$ConditionalExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTConditionalExpression$ConditionalExpressionBuilder.class";
  }

  @(ASTConditionalExpression.class!2):JavaClassFile{
    simpleName = "ASTConditionalExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTConditionalExpression.class";
  }

  @(ASTConstantsMCExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsMCExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTConstantsMCExpressions.class";
  }

  @(ASTExpression.class!4):JavaClassFile{
    simpleName = "ASTExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTExpression.class";
  }

  @(ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTGenericInvocationExpression$GenericInvocationExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class";
  }

  @(ASTGenericInvocationExpression.class!2):JavaClassFile{
    simpleName = "ASTGenericInvocationExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTGenericInvocationExpression.class";
  }

  @(ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class!2):JavaClassFile{
    simpleName = "ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class";
  }

  @(ASTGenericInvocationSuffix.class!2):JavaClassFile{
    simpleName = "ASTGenericInvocationSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTGenericInvocationSuffix.class";
  }

  @(ASTIdentityExpression$IdentityExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTIdentityExpression$IdentityExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTIdentityExpression$IdentityExpressionBuilder.class";
  }

  @(ASTIdentityExpression.class):JavaClassFile{
    simpleName = "ASTIdentityExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTIdentityExpression.class";
  }

  @(ASTInstanceofExpression$InstanceofExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTInstanceofExpression$InstanceofExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTInstanceofExpression$InstanceofExpressionBuilder.class";
  }

  @(ASTInstanceofExpression.class!2):JavaClassFile{
    simpleName = "ASTInstanceofExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTInstanceofExpression.class";
  }

  @(ASTLiteralExpression$LiteralExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTLiteralExpression$LiteralExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTLiteralExpression$LiteralExpressionBuilder.class";
  }

  @(ASTLiteralExpression.class!2):JavaClassFile{
    simpleName = "ASTLiteralExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTLiteralExpression.class";
  }

  @(ASTLogicalNotExpression$LogicalNotExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTLogicalNotExpression$LogicalNotExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTLogicalNotExpression$LogicalNotExpressionBuilder.class";
  }

  @(ASTLogicalNotExpression.class!2):JavaClassFile{
    simpleName = "ASTLogicalNotExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTLogicalNotExpression.class";
  }

  @(ASTMCExpressionsNode.class):JavaClassFile{
    simpleName = "ASTMCExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTMCExpressionsNode.class";
  }

  @(ASTMultExpression$MultExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTMultExpression$MultExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTMultExpression$MultExpressionBuilder.class";
  }

  @(ASTMultExpression.class!2):JavaClassFile{
    simpleName = "ASTMultExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTMultExpression.class";
  }

  @(ASTNameExpression$NameExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTNameExpression$NameExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTNameExpression$NameExpressionBuilder.class";
  }

  @(ASTNameExpression.class!2):JavaClassFile{
    simpleName = "ASTNameExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTNameExpression.class";
  }

  @(ASTPrefixExpression$PrefixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrefixExpression$PrefixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrefixExpression$PrefixExpressionBuilder.class";
  }

  @(ASTPrefixExpression.class):JavaClassFile{
    simpleName = "ASTPrefixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrefixExpression.class";
  }

  @(ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class";
  }

  @(ASTPrimaryGenericInvocationExpression.class!2):JavaClassFile{
    simpleName = "ASTPrimaryGenericInvocationExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimaryGenericInvocationExpression.class";
  }

  @(ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTPrimarySuperExpression$PrimarySuperExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class";
  }

  @(ASTPrimarySuperExpression.class!2):JavaClassFile{
    simpleName = "ASTPrimarySuperExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimarySuperExpression.class";
  }

  @(ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimaryThisExpression$PrimaryThisExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class";
  }

  @(ASTPrimaryThisExpression.class):JavaClassFile{
    simpleName = "ASTPrimaryThisExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTPrimaryThisExpression.class";
  }

  @(ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTQualifiedNameExpression$QualifiedNameExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class";
  }

  @(ASTQualifiedNameExpression.class):JavaClassFile{
    simpleName = "ASTQualifiedNameExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTQualifiedNameExpression.class";
  }

  @(ASTShiftExpression$ShiftExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTShiftExpression$ShiftExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTShiftExpression$ShiftExpressionBuilder.class";
  }

  @(ASTShiftExpression.class):JavaClassFile{
    simpleName = "ASTShiftExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTShiftExpression.class";
  }

  @(ASTSuffixExpression$SuffixExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSuffixExpression$SuffixExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuffixExpression$SuffixExpressionBuilder.class";
  }

  @(ASTSuffixExpression.class):JavaClassFile{
    simpleName = "ASTSuffixExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuffixExpression.class";
  }

  @(ASTSuperExpression$SuperExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTSuperExpression$SuperExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuperExpression$SuperExpressionBuilder.class";
  }

  @(ASTSuperExpression.class!2):JavaClassFile{
    simpleName = "ASTSuperExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuperExpression.class";
  }

  @(ASTSuperSuffix$SuperSuffixBuilder.class!2):JavaClassFile{
    simpleName = "ASTSuperSuffix$SuperSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuperSuffix$SuperSuffixBuilder.class";
  }

  @(ASTSuperSuffix.class!3):JavaClassFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTSuperSuffix.class";
  }

  @(ASTThisExpression$ThisExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTThisExpression$ThisExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTThisExpression$ThisExpressionBuilder.class";
  }

  @(ASTThisExpression.class):JavaClassFile{
    simpleName = "ASTThisExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTThisExpression.class";
  }

  @(ASTTypeCastExpression$TypeCastExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTTypeCastExpression$TypeCastExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTTypeCastExpression$TypeCastExpressionBuilder.class";
  }

  @(ASTTypeCastExpression.class!2):JavaClassFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/ASTTypeCastExpression.class";
  }

  @(MCExpressionsLiterals.class):JavaClassFile{
    simpleName = "MCExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsLiterals.class";
  }

  @(MCExpressionsMill.class):JavaClassFile{
    simpleName = "MCExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsMill.class";
  }

  @(MCExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "MCExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsNodeFactory.class";
  }

  @(MCExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "MCExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsPackage$Literals.class";
  }

  @(MCExpressionsPackage.class):JavaClassFile{
    simpleName = "MCExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsPackage.class";
  }

  @(MCExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "MCExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_ast/MCExpressionsPackageImpl.class";
  }

  @(_cocos!55):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos";
  }

  @(MCExpressionsASTAddExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTAddExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTAddExpressionCoCo.class";
  }

  @(MCExpressionsASTArgumentsCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTArgumentsCoCo.class";
  }

  @(MCExpressionsASTArrayExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTArrayExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTArrayExpressionCoCo.class";
  }

  @(MCExpressionsASTAssignmentExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTAssignmentExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTAssignmentExpressionCoCo.class";
  }

  @(MCExpressionsASTBinaryAndOpExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBinaryAndOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryAndOpExpressionCoCo.class";
  }

  @(MCExpressionsASTBinaryOrOpExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBinaryOrOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryOrOpExpressionCoCo.class";
  }

  @(MCExpressionsASTBinaryXorOpExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBinaryXorOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryXorOpExpressionCoCo.class";
  }

  @(MCExpressionsASTBooleanAndOpExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBooleanAndOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanAndOpExpressionCoCo.class";
  }

  @(MCExpressionsASTBooleanNotExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBooleanNotExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanNotExpressionCoCo.class";
  }

  @(MCExpressionsASTBooleanOrOpExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBooleanOrOpExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanOrOpExpressionCoCo.class";
  }

  @(MCExpressionsASTBracketExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTBracketExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTBracketExpressionCoCo.class";
  }

  @(MCExpressionsASTCallExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTCallExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTCallExpressionCoCo.class";
  }

  @(MCExpressionsASTClassExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTClassExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTClassExpressionCoCo.class";
  }

  @(MCExpressionsASTComparisonExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTComparisonExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTComparisonExpressionCoCo.class";
  }

  @(MCExpressionsASTConditionalExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTConditionalExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTConditionalExpressionCoCo.class";
  }

  @(MCExpressionsASTExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTExpressionCoCo.class";
  }

  @(MCExpressionsASTGenericInvocationExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTGenericInvocationExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTGenericInvocationExpressionCoCo.class";
  }

  @(MCExpressionsASTGenericInvocationSuffixCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTGenericInvocationSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTGenericInvocationSuffixCoCo.class";
  }

  @(MCExpressionsASTIdentityExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTIdentityExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTIdentityExpressionCoCo.class";
  }

  @(MCExpressionsASTInstanceofExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTInstanceofExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTInstanceofExpressionCoCo.class";
  }

  @(MCExpressionsASTLiteralExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTLiteralExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTLiteralExpressionCoCo.class";
  }

  @(MCExpressionsASTLogicalNotExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTLogicalNotExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTLogicalNotExpressionCoCo.class";
  }

  @(MCExpressionsASTMCExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTMCExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTMCExpressionsNodeCoCo.class";
  }

  @(MCExpressionsASTMultExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTMultExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTMultExpressionCoCo.class";
  }

  @(MCExpressionsASTNameExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTNameExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTNameExpressionCoCo.class";
  }

  @(MCExpressionsASTPrefixExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTPrefixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrefixExpressionCoCo.class";
  }

  @(MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTPrimaryGenericInvocationExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.class";
  }

  @(MCExpressionsASTPrimarySuperExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTPrimarySuperExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimarySuperExpressionCoCo.class";
  }

  @(MCExpressionsASTPrimaryThisExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTPrimaryThisExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimaryThisExpressionCoCo.class";
  }

  @(MCExpressionsASTQualifiedNameExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTQualifiedNameExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTQualifiedNameExpressionCoCo.class";
  }

  @(MCExpressionsASTShiftExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTShiftExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTShiftExpressionCoCo.class";
  }

  @(MCExpressionsASTSuffixExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTSuffixExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuffixExpressionCoCo.class";
  }

  @(MCExpressionsASTSuperExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTSuperExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuperExpressionCoCo.class";
  }

  @(MCExpressionsASTSuperSuffixCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTSuperSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuperSuffixCoCo.class";
  }

  @(MCExpressionsASTThisExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTThisExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTThisExpressionCoCo.class";
  }

  @(MCExpressionsASTTypeCastExpressionCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsASTTypeCastExpressionCoCo.class";
  }

  @(MCExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "MCExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsCoCoChecker.class";
  }

  @(MCExpressionsMCExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "MCExpressionsMCExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_cocos/MCExpressionsMCExpressionsPackageCoCo.class";
  }

  @(_od!55):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_od";
  }

  @(MCExpressions2OD.class):JavaClassFile{
    simpleName = "MCExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_od/MCExpressions2OD.class";
  }

  @(_symboltable!29):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_symboltable";
  }

  @(MCExpressionsLanguage.class):JavaClassFile{
    simpleName = "MCExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_symboltable/MCExpressionsLanguage.class";
  }

  @(MCExpressionsModelLoader.class):JavaClassFile{
    simpleName = "MCExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_symboltable/MCExpressionsModelLoader.class";
  }

  @(_visitor!55):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_visitor";
  }

  @(MCExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_visitor/MCExpressionsDelegatorVisitor.class";
  }

  @(MCExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_visitor/MCExpressionsInheritanceVisitor.class";
  }

  @(MCExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_visitor/MCExpressionsParentAwareVisitor.class";
  }

  @(MCExpressionsVisitor.class):JavaClassFile{
    simpleName = "MCExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcexpressions/_visitor/MCExpressionsVisitor.class";
  }

  @(mchexnumbers):Directory{
    simpleName = "mchexnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers";
  }

  @(_ast!62):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast";
  }

  @(ASTConstantsMCHexNumbers.class):JavaClassFile{
    simpleName = "ASTConstantsMCHexNumbers";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTConstantsMCHexNumbers.class";
  }

  @(ASTHexadecimal$HexadecimalBuilder.class):JavaClassFile{
    simpleName = "ASTHexadecimal$HexadecimalBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTHexadecimal$HexadecimalBuilder.class";
  }

  @(ASTHexadecimal.class):JavaClassFile{
    simpleName = "ASTHexadecimal";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTHexadecimal.class";
  }

  @(ASTHexInteger$HexIntegerBuilder.class):JavaClassFile{
    simpleName = "ASTHexInteger$HexIntegerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTHexInteger$HexIntegerBuilder.class";
  }

  @(ASTHexInteger.class):JavaClassFile{
    simpleName = "ASTHexInteger";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTHexInteger.class";
  }

  @(ASTMCHexNumbersNode.class):JavaClassFile{
    simpleName = "ASTMCHexNumbersNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/ASTMCHexNumbersNode.class";
  }

  @(MCHexNumbersLiterals.class):JavaClassFile{
    simpleName = "MCHexNumbersLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersLiterals.class";
  }

  @(MCHexNumbersMill.class):JavaClassFile{
    simpleName = "MCHexNumbersMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersMill.class";
  }

  @(MCHexNumbersNodeFactory.class):JavaClassFile{
    simpleName = "MCHexNumbersNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersNodeFactory.class";
  }

  @(MCHexNumbersPackage$Literals.class):JavaClassFile{
    simpleName = "MCHexNumbersPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersPackage$Literals.class";
  }

  @(MCHexNumbersPackage.class):JavaClassFile{
    simpleName = "MCHexNumbersPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersPackage.class";
  }

  @(MCHexNumbersPackageImpl.class):JavaClassFile{
    simpleName = "MCHexNumbersPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_ast/MCHexNumbersPackageImpl.class";
  }

  @(_cocos!56):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos";
  }

  @(MCHexNumbersASTHexadecimalCoCo.class):JavaClassFile{
    simpleName = "MCHexNumbersASTHexadecimalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTHexadecimalCoCo.class";
  }

  @(MCHexNumbersASTHexIntegerCoCo.class):JavaClassFile{
    simpleName = "MCHexNumbersASTHexIntegerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTHexIntegerCoCo.class";
  }

  @(MCHexNumbersASTMCHexNumbersNodeCoCo.class):JavaClassFile{
    simpleName = "MCHexNumbersASTMCHexNumbersNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTMCHexNumbersNodeCoCo.class";
  }

  @(MCHexNumbersCoCoChecker.class):JavaClassFile{
    simpleName = "MCHexNumbersCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos/MCHexNumbersCoCoChecker.class";
  }

  @(MCHexNumbersMCHexNumbersPackageCoCo.class):JavaClassFile{
    simpleName = "MCHexNumbersMCHexNumbersPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_cocos/MCHexNumbersMCHexNumbersPackageCoCo.class";
  }

  @(_od!56):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_od";
  }

  @(MCHexNumbers2OD.class):JavaClassFile{
    simpleName = "MCHexNumbers2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_od/MCHexNumbers2OD.class";
  }

  @(_symboltable!30):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_symboltable";
  }

  @(MCHexNumbersLanguage.class):JavaClassFile{
    simpleName = "MCHexNumbersLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_symboltable/MCHexNumbersLanguage.class";
  }

  @(MCHexNumbersModelLoader.class):JavaClassFile{
    simpleName = "MCHexNumbersModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_symboltable/MCHexNumbersModelLoader.class";
  }

  @(_visitor!56):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_visitor";
  }

  @(MCHexNumbersDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCHexNumbersDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_visitor/MCHexNumbersDelegatorVisitor.class";
  }

  @(MCHexNumbersInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCHexNumbersInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_visitor/MCHexNumbersInheritanceVisitor.class";
  }

  @(MCHexNumbersParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCHexNumbersParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_visitor/MCHexNumbersParentAwareVisitor.class";
  }

  @(MCHexNumbersVisitor.class):JavaClassFile{
    simpleName = "MCHexNumbersVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mchexnumbers/_visitor/MCHexNumbersVisitor.class";
  }

  @(mcliterals!2):Directory{
    simpleName = "mcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals";
  }

  @(_ast!63):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast";
  }

  @(ASTBooleanLiteral$BooleanLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTBooleanLiteral$BooleanLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTBooleanLiteral$BooleanLiteralBuilder.class";
  }

  @(ASTBooleanLiteral.class!3):JavaClassFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTBooleanLiteral.class";
  }

  @(ASTCharLiteral$CharLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTCharLiteral$CharLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTCharLiteral$CharLiteralBuilder.class";
  }

  @(ASTCharLiteral.class!3):JavaClassFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTCharLiteral.class";
  }

  @(ASTConstantsMCLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsMCLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTConstantsMCLiterals.class";
  }

  @(ASTDoubleLiteral$DoubleLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTDoubleLiteral$DoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTDoubleLiteral$DoubleLiteralBuilder.class";
  }

  @(ASTDoubleLiteral.class!3):JavaClassFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTDoubleLiteral.class";
  }

  @(ASTFloatLiteral$FloatLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTFloatLiteral$FloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTFloatLiteral$FloatLiteralBuilder.class";
  }

  @(ASTFloatLiteral.class!3):JavaClassFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTFloatLiteral.class";
  }

  @(ASTIntLiteral$IntLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTIntLiteral$IntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTIntLiteral$IntLiteralBuilder.class";
  }

  @(ASTIntLiteral.class!3):JavaClassFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTIntLiteral.class";
  }

  @(ASTLiteral.class!3):JavaClassFile{
    simpleName = "ASTLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTLiteral.class";
  }

  @(ASTLongLiteral$LongLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTLongLiteral$LongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTLongLiteral$LongLiteralBuilder.class";
  }

  @(ASTLongLiteral.class!3):JavaClassFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTLongLiteral.class";
  }

  @(ASTMCLiteralsNode.class):JavaClassFile{
    simpleName = "ASTMCLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTMCLiteralsNode.class";
  }

  @(ASTNatLiteral$NatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTNatLiteral$NatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTNatLiteral$NatLiteralBuilder.class";
  }

  @(ASTNatLiteral.class):JavaClassFile{
    simpleName = "ASTNatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTNatLiteral.class";
  }

  @(ASTNullLiteral$NullLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTNullLiteral$NullLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTNullLiteral$NullLiteralBuilder.class";
  }

  @(ASTNullLiteral.class!3):JavaClassFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTNullLiteral.class";
  }

  @(ASTNumericLiteral.class!3):JavaClassFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTNumericLiteral.class";
  }

  @(ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class";
  }

  @(ASTSignedDoubleLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedDoubleLiteral.class";
  }

  @(ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTSignedFloatLiteral$SignedFloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class";
  }

  @(ASTSignedFloatLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedFloatLiteral.class";
  }

  @(ASTSignedIntLiteral$SignedIntLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTSignedIntLiteral$SignedIntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedIntLiteral$SignedIntLiteralBuilder.class";
  }

  @(ASTSignedIntLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedIntLiteral.class";
  }

  @(ASTSignedLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedLiteral.class";
  }

  @(ASTSignedLongLiteral$SignedLongLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTSignedLongLiteral$SignedLongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedLongLiteral$SignedLongLiteralBuilder.class";
  }

  @(ASTSignedLongLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedLongLiteral.class";
  }

  @(ASTSignedNatLiteral$SignedNatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedNatLiteral$SignedNatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedNatLiteral$SignedNatLiteralBuilder.class";
  }

  @(ASTSignedNatLiteral.class):JavaClassFile{
    simpleName = "ASTSignedNatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedNatLiteral.class";
  }

  @(ASTSignedNumericLiteral.class!3):JavaClassFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTSignedNumericLiteral.class";
  }

  @(ASTStringLiteral$StringLiteralBuilder.class!2):JavaClassFile{
    simpleName = "ASTStringLiteral$StringLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTStringLiteral$StringLiteralBuilder.class";
  }

  @(ASTStringLiteral.class!3):JavaClassFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/ASTStringLiteral.class";
  }

  @(MCLiteralsLiterals.class):JavaClassFile{
    simpleName = "MCLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsLiterals.class";
  }

  @(MCLiteralsMill.class):JavaClassFile{
    simpleName = "MCLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsMill.class";
  }

  @(MCLiteralsNodeFactory.class):JavaClassFile{
    simpleName = "MCLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsNodeFactory.class";
  }

  @(MCLiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "MCLiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsPackage$Literals.class";
  }

  @(MCLiteralsPackage.class):JavaClassFile{
    simpleName = "MCLiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsPackage.class";
  }

  @(MCLiteralsPackageImpl.class):JavaClassFile{
    simpleName = "MCLiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_ast/MCLiteralsPackageImpl.class";
  }

  @(_cocos!57):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos";
  }

  @(MCLiteralsASTBooleanLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTBooleanLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTBooleanLiteralCoCo.class";
  }

  @(MCLiteralsASTCharLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTCharLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTCharLiteralCoCo.class";
  }

  @(MCLiteralsASTDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTDoubleLiteralCoCo.class";
  }

  @(MCLiteralsASTFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTFloatLiteralCoCo.class";
  }

  @(MCLiteralsASTIntLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTIntLiteralCoCo.class";
  }

  @(MCLiteralsASTLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTLiteralCoCo.class";
  }

  @(MCLiteralsASTLongLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTLongLiteralCoCo.class";
  }

  @(MCLiteralsASTMCLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTMCLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTMCLiteralsNodeCoCo.class";
  }

  @(MCLiteralsASTNatLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTNatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTNatLiteralCoCo.class";
  }

  @(MCLiteralsASTNullLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTNullLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTNullLiteralCoCo.class";
  }

  @(MCLiteralsASTNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTNumericLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedDoubleLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedFloatLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedIntLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedIntLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedLongLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedLongLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedNatLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedNatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedNatLiteralCoCo.class";
  }

  @(MCLiteralsASTSignedNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedNumericLiteralCoCo.class";
  }

  @(MCLiteralsASTStringLiteralCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsASTStringLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsASTStringLiteralCoCo.class";
  }

  @(MCLiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "MCLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsCoCoChecker.class";
  }

  @(MCLiteralsMCLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "MCLiteralsMCLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_cocos/MCLiteralsMCLiteralsPackageCoCo.class";
  }

  @(_od!57):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_od";
  }

  @(MCLiterals2OD.class):JavaClassFile{
    simpleName = "MCLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_od/MCLiterals2OD.class";
  }

  @(_symboltable!31):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_symboltable";
  }

  @(MCLiteralsLanguage.class):JavaClassFile{
    simpleName = "MCLiteralsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_symboltable/MCLiteralsLanguage.class";
  }

  @(MCLiteralsModelLoader.class):JavaClassFile{
    simpleName = "MCLiteralsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_symboltable/MCLiteralsModelLoader.class";
  }

  @(_visitor!57):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_visitor";
  }

  @(MCLiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_visitor/MCLiteralsDelegatorVisitor.class";
  }

  @(MCLiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_visitor/MCLiteralsInheritanceVisitor.class";
  }

  @(MCLiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_visitor/MCLiteralsParentAwareVisitor.class";
  }

  @(MCLiteralsVisitor.class):JavaClassFile{
    simpleName = "MCLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcliterals/_visitor/MCLiteralsVisitor.class";
  }

  @(MCLiteralsDecoder.class):JavaClassFile{
    simpleName = "MCLiteralsDecoder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/MCLiteralsDecoder.class";
  }

  @(MCLiteralsPrettyPrinterConcreteVisitor.class):JavaClassFile{
    simpleName = "MCLiteralsPrettyPrinterConcreteVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/MCLiteralsPrettyPrinterConcreteVisitor.class";
  }

  @(mcnumbers):Directory{
    simpleName = "mcnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers";
  }

  @(_ast!64):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast";
  }

  @(ASTConstantsMCNumbers.class):JavaClassFile{
    simpleName = "ASTConstantsMCNumbers";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTConstantsMCNumbers.class";
  }

  @(ASTDecimal$DecimalBuilder.class):JavaClassFile{
    simpleName = "ASTDecimal$DecimalBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTDecimal$DecimalBuilder.class";
  }

  @(ASTDecimal.class):JavaClassFile{
    simpleName = "ASTDecimal";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTDecimal.class";
  }

  @(ASTInteger$IntegerBuilder.class):JavaClassFile{
    simpleName = "ASTInteger$IntegerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTInteger$IntegerBuilder.class";
  }

  @(ASTInteger.class):JavaClassFile{
    simpleName = "ASTInteger";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTInteger.class";
  }

  @(ASTMCNumbersNode.class):JavaClassFile{
    simpleName = "ASTMCNumbersNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTMCNumbersNode.class";
  }

  @(ASTNumber.class):JavaClassFile{
    simpleName = "ASTNumber";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/ASTNumber.class";
  }

  @(MCNumbersLiterals.class):JavaClassFile{
    simpleName = "MCNumbersLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersLiterals.class";
  }

  @(MCNumbersMill.class):JavaClassFile{
    simpleName = "MCNumbersMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersMill.class";
  }

  @(MCNumbersNodeFactory.class):JavaClassFile{
    simpleName = "MCNumbersNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersNodeFactory.class";
  }

  @(MCNumbersPackage$Literals.class):JavaClassFile{
    simpleName = "MCNumbersPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersPackage$Literals.class";
  }

  @(MCNumbersPackage.class):JavaClassFile{
    simpleName = "MCNumbersPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersPackage.class";
  }

  @(MCNumbersPackageImpl.class):JavaClassFile{
    simpleName = "MCNumbersPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_ast/MCNumbersPackageImpl.class";
  }

  @(_cocos!58):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos";
  }

  @(MCNumbersASTDecimalCoCo.class):JavaClassFile{
    simpleName = "MCNumbersASTDecimalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersASTDecimalCoCo.class";
  }

  @(MCNumbersASTIntegerCoCo.class):JavaClassFile{
    simpleName = "MCNumbersASTIntegerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersASTIntegerCoCo.class";
  }

  @(MCNumbersASTMCNumbersNodeCoCo.class):JavaClassFile{
    simpleName = "MCNumbersASTMCNumbersNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersASTMCNumbersNodeCoCo.class";
  }

  @(MCNumbersASTNumberCoCo.class):JavaClassFile{
    simpleName = "MCNumbersASTNumberCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersASTNumberCoCo.class";
  }

  @(MCNumbersCoCoChecker.class):JavaClassFile{
    simpleName = "MCNumbersCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersCoCoChecker.class";
  }

  @(MCNumbersMCNumbersPackageCoCo.class):JavaClassFile{
    simpleName = "MCNumbersMCNumbersPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_cocos/MCNumbersMCNumbersPackageCoCo.class";
  }

  @(_od!58):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_od";
  }

  @(MCNumbers2OD.class):JavaClassFile{
    simpleName = "MCNumbers2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_od/MCNumbers2OD.class";
  }

  @(_symboltable!32):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_symboltable";
  }

  @(MCNumbersLanguage.class):JavaClassFile{
    simpleName = "MCNumbersLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_symboltable/MCNumbersLanguage.class";
  }

  @(MCNumbersModelLoader.class):JavaClassFile{
    simpleName = "MCNumbersModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_symboltable/MCNumbersModelLoader.class";
  }

  @(_visitor!58):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_visitor";
  }

  @(MCNumbersDelegatorVisitor.class):JavaClassFile{
    simpleName = "MCNumbersDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_visitor/MCNumbersDelegatorVisitor.class";
  }

  @(MCNumbersInheritanceVisitor.class):JavaClassFile{
    simpleName = "MCNumbersInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_visitor/MCNumbersInheritanceVisitor.class";
  }

  @(MCNumbersParentAwareVisitor.class):JavaClassFile{
    simpleName = "MCNumbersParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_visitor/MCNumbersParentAwareVisitor.class";
  }

  @(MCNumbersVisitor.class):JavaClassFile{
    simpleName = "MCNumbersVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/mcnumbers/_visitor/MCNumbersVisitor.class";
  }

  @(oclexpressions):Directory{
    simpleName = "oclexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions";
  }

  @(_ast!65):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast";
  }

  @(ASTAnyExpr$AnyExprBuilder.class):JavaClassFile{
    simpleName = "ASTAnyExpr$AnyExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTAnyExpr$AnyExprBuilder.class";
  }

  @(ASTAnyExpr.class):JavaClassFile{
    simpleName = "ASTAnyExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTAnyExpr.class";
  }

  @(ASTConstantsOCLExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsOCLExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTConstantsOCLExpressions.class";
  }

  @(ASTEDeclarationExt.class):JavaClassFile{
    simpleName = "ASTEDeclarationExt";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTEDeclarationExt.class";
  }

  @(ASTExistsExpr$ExistsExprBuilder.class):JavaClassFile{
    simpleName = "ASTExistsExpr$ExistsExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTExistsExpr$ExistsExprBuilder.class";
  }

  @(ASTExistsExpr.class):JavaClassFile{
    simpleName = "ASTExistsExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTExistsExpr.class";
  }

  @(ASTForallExpr$ForallExprBuilder.class):JavaClassFile{
    simpleName = "ASTForallExpr$ForallExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTForallExpr$ForallExprBuilder.class";
  }

  @(ASTForallExpr.class):JavaClassFile{
    simpleName = "ASTForallExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTForallExpr.class";
  }

  @(ASTIfThenElseExpr$IfThenElseExprBuilder.class):JavaClassFile{
    simpleName = "ASTIfThenElseExpr$IfThenElseExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTIfThenElseExpr$IfThenElseExprBuilder.class";
  }

  @(ASTIfThenElseExpr.class):JavaClassFile{
    simpleName = "ASTIfThenElseExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTIfThenElseExpr.class";
  }

  @(ASTImpliesExpression$ImpliesExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTImpliesExpression$ImpliesExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTImpliesExpression$ImpliesExpressionBuilder.class";
  }

  @(ASTImpliesExpression.class):JavaClassFile{
    simpleName = "ASTImpliesExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTImpliesExpression.class";
  }

  @(ASTInExpr$InExprBuilder.class):JavaClassFile{
    simpleName = "ASTInExpr$InExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTInExpr$InExprBuilder.class";
  }

  @(ASTInExpr.class):JavaClassFile{
    simpleName = "ASTInExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTInExpr.class";
  }

  @(ASTInstanceOfExpression$InstanceOfExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTInstanceOfExpression$InstanceOfExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTInstanceOfExpression$InstanceOfExpressionBuilder.class";
  }

  @(ASTInstanceOfExpression.class):JavaClassFile{
    simpleName = "ASTInstanceOfExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTInstanceOfExpression.class";
  }

  @(ASTIterateExpr$IterateExprBuilder.class):JavaClassFile{
    simpleName = "ASTIterateExpr$IterateExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTIterateExpr$IterateExprBuilder.class";
  }

  @(ASTIterateExpr.class):JavaClassFile{
    simpleName = "ASTIterateExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTIterateExpr.class";
  }

  @(ASTLetDeclaration$LetDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTLetDeclaration$LetDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTLetDeclaration$LetDeclarationBuilder.class";
  }

  @(ASTLetDeclaration.class):JavaClassFile{
    simpleName = "ASTLetDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTLetDeclaration.class";
  }

  @(ASTLetinExpr$LetinExprBuilder.class):JavaClassFile{
    simpleName = "ASTLetinExpr$LetinExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTLetinExpr$LetinExprBuilder.class";
  }

  @(ASTLetinExpr.class):JavaClassFile{
    simpleName = "ASTLetinExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTLetinExpr.class";
  }

  @(ASTOCLArgumentQualification$OCLArgumentQualificationBuilder.class):JavaClassFile{
    simpleName = "ASTOCLArgumentQualification$OCLArgumentQualificationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLArgumentQualification$OCLArgumentQualificationBuilder.class";
  }

  @(ASTOCLArgumentQualification.class):JavaClassFile{
    simpleName = "ASTOCLArgumentQualification";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLArgumentQualification.class";
  }

  @(ASTOCLArrayQualification$OCLArrayQualificationBuilder.class):JavaClassFile{
    simpleName = "ASTOCLArrayQualification$OCLArrayQualificationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLArrayQualification$OCLArrayQualificationBuilder.class";
  }

  @(ASTOCLArrayQualification.class):JavaClassFile{
    simpleName = "ASTOCLArrayQualification";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLArrayQualification.class";
  }

  @(ASTOCLAtPreQualification$OCLAtPreQualificationBuilder.class):JavaClassFile{
    simpleName = "ASTOCLAtPreQualification$OCLAtPreQualificationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLAtPreQualification$OCLAtPreQualificationBuilder.class";
  }

  @(ASTOCLAtPreQualification.class):JavaClassFile{
    simpleName = "ASTOCLAtPreQualification";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLAtPreQualification.class";
  }

  @(ASTOCLCollectionItem$OCLCollectionItemBuilder.class):JavaClassFile{
    simpleName = "ASTOCLCollectionItem$OCLCollectionItemBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLCollectionItem$OCLCollectionItemBuilder.class";
  }

  @(ASTOCLCollectionItem.class):JavaClassFile{
    simpleName = "ASTOCLCollectionItem";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLCollectionItem.class";
  }

  @(ASTOCLComprehensionEnumerationStyle$OCLComprehensionEnumerationStyleBuilder.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionEnumerationStyle$OCLComprehensionEnumerationStyleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionEnumerationStyle$OCLComprehensionEnumerationStyleBuilder.class";
  }

  @(ASTOCLComprehensionEnumerationStyle.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionEnumerationStyle";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionEnumerationStyle.class";
  }

  @(ASTOCLComprehensionExpr.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionExpr.class";
  }

  @(ASTOCLComprehensionExpressionStyle$OCLComprehensionExpressionStyleBuilder.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionExpressionStyle$OCLComprehensionExpressionStyleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionExpressionStyle$OCLComprehensionExpressionStyleBuilder.class";
  }

  @(ASTOCLComprehensionExpressionStyle.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionExpressionStyle";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionExpressionStyle.class";
  }

  @(ASTOCLComprehensionItem$OCLComprehensionItemBuilder.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionItem$OCLComprehensionItemBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionItem$OCLComprehensionItemBuilder.class";
  }

  @(ASTOCLComprehensionItem.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionItem";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionItem.class";
  }

  @(ASTOCLComprehensionPrimary$OCLComprehensionPrimaryBuilder.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionPrimary$OCLComprehensionPrimaryBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionPrimary$OCLComprehensionPrimaryBuilder.class";
  }

  @(ASTOCLComprehensionPrimary.class):JavaClassFile{
    simpleName = "ASTOCLComprehensionPrimary";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLComprehensionPrimary.class";
  }

  @(ASTOCLDefinedPrimary$OCLDefinedPrimaryBuilder.class):JavaClassFile{
    simpleName = "ASTOCLDefinedPrimary$OCLDefinedPrimaryBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLDefinedPrimary$OCLDefinedPrimaryBuilder.class";
  }

  @(ASTOCLDefinedPrimary.class):JavaClassFile{
    simpleName = "ASTOCLDefinedPrimary";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLDefinedPrimary.class";
  }

  @(ASTOCLExpressionsNode.class):JavaClassFile{
    simpleName = "ASTOCLExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLExpressionsNode.class";
  }

  @(ASTOCLIsNewPrimary$OCLIsNewPrimaryBuilder.class):JavaClassFile{
    simpleName = "ASTOCLIsNewPrimary$OCLIsNewPrimaryBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLIsNewPrimary$OCLIsNewPrimaryBuilder.class";
  }

  @(ASTOCLIsNewPrimary.class):JavaClassFile{
    simpleName = "ASTOCLIsNewPrimary";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLIsNewPrimary.class";
  }

  @(ASTOCLPrimary.class):JavaClassFile{
    simpleName = "ASTOCLPrimary";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLPrimary.class";
  }

  @(ASTOCLQualification.class):JavaClassFile{
    simpleName = "ASTOCLQualification";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLQualification.class";
  }

  @(ASTOCLQualifiedPrimary$OCLQualifiedPrimaryBuilder.class):JavaClassFile{
    simpleName = "ASTOCLQualifiedPrimary$OCLQualifiedPrimaryBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLQualifiedPrimary$OCLQualifiedPrimaryBuilder.class";
  }

  @(ASTOCLQualifiedPrimary.class):JavaClassFile{
    simpleName = "ASTOCLQualifiedPrimary";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLQualifiedPrimary.class";
  }

  @(ASTOCLTransitivQualification$OCLTransitivQualificationBuilder.class):JavaClassFile{
    simpleName = "ASTOCLTransitivQualification$OCLTransitivQualificationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLTransitivQualification$OCLTransitivQualificationBuilder.class";
  }

  @(ASTOCLTransitivQualification.class):JavaClassFile{
    simpleName = "ASTOCLTransitivQualification";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTOCLTransitivQualification.class";
  }

  @(ASTParenthizedExpression$ParenthizedExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTParenthizedExpression$ParenthizedExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTParenthizedExpression$ParenthizedExpressionBuilder.class";
  }

  @(ASTParenthizedExpression.class):JavaClassFile{
    simpleName = "ASTParenthizedExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTParenthizedExpression.class";
  }

  @(ASTSingleLogicalORExpr$SingleLogicalORExprBuilder.class):JavaClassFile{
    simpleName = "ASTSingleLogicalORExpr$SingleLogicalORExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTSingleLogicalORExpr$SingleLogicalORExprBuilder.class";
  }

  @(ASTSingleLogicalORExpr.class):JavaClassFile{
    simpleName = "ASTSingleLogicalORExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTSingleLogicalORExpr.class";
  }

  @(ASTTypeCastExpression$TypeCastExpressionBuilder.class!3):JavaClassFile{
    simpleName = "ASTTypeCastExpression$TypeCastExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTTypeCastExpression$TypeCastExpressionBuilder.class";
  }

  @(ASTTypeCastExpression.class!3):JavaClassFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTTypeCastExpression.class";
  }

  @(ASTTypeIfExpr$TypeIfExprBuilder.class):JavaClassFile{
    simpleName = "ASTTypeIfExpr$TypeIfExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTTypeIfExpr$TypeIfExprBuilder.class";
  }

  @(ASTTypeIfExpr.class):JavaClassFile{
    simpleName = "ASTTypeIfExpr";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/ASTTypeIfExpr.class";
  }

  @(OCLExpressionsLiterals.class):JavaClassFile{
    simpleName = "OCLExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsLiterals.class";
  }

  @(OCLExpressionsMill.class):JavaClassFile{
    simpleName = "OCLExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsMill.class";
  }

  @(OCLExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "OCLExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsNodeFactory.class";
  }

  @(OCLExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "OCLExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsPackage$Literals.class";
  }

  @(OCLExpressionsPackage.class):JavaClassFile{
    simpleName = "OCLExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsPackage.class";
  }

  @(OCLExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "OCLExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_ast/OCLExpressionsPackageImpl.class";
  }

  @(_cocos!59):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos";
  }

  @(OCLExpressionsASTAnyExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTAnyExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTAnyExprCoCo.class";
  }

  @(OCLExpressionsASTEDeclarationExtCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTEDeclarationExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTEDeclarationExtCoCo.class";
  }

  @(OCLExpressionsASTExistsExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTExistsExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTExistsExprCoCo.class";
  }

  @(OCLExpressionsASTForallExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTForallExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTForallExprCoCo.class";
  }

  @(OCLExpressionsASTIfThenElseExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTIfThenElseExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTIfThenElseExprCoCo.class";
  }

  @(OCLExpressionsASTImpliesExpressionCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTImpliesExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTImpliesExpressionCoCo.class";
  }

  @(OCLExpressionsASTInExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTInExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTInExprCoCo.class";
  }

  @(OCLExpressionsASTInstanceOfExpressionCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTInstanceOfExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTInstanceOfExpressionCoCo.class";
  }

  @(OCLExpressionsASTIterateExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTIterateExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTIterateExprCoCo.class";
  }

  @(OCLExpressionsASTLetDeclarationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTLetDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTLetDeclarationCoCo.class";
  }

  @(OCLExpressionsASTLetinExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTLetinExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTLetinExprCoCo.class";
  }

  @(OCLExpressionsASTOCLArgumentQualificationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLArgumentQualificationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLArgumentQualificationCoCo.class";
  }

  @(OCLExpressionsASTOCLArrayQualificationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLArrayQualificationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLArrayQualificationCoCo.class";
  }

  @(OCLExpressionsASTOCLAtPreQualificationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLAtPreQualificationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLAtPreQualificationCoCo.class";
  }

  @(OCLExpressionsASTOCLCollectionItemCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLCollectionItemCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLCollectionItemCoCo.class";
  }

  @(OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.class";
  }

  @(OCLExpressionsASTOCLComprehensionExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLComprehensionExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionExprCoCo.class";
  }

  @(OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLComprehensionExpressionStyleCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.class";
  }

  @(OCLExpressionsASTOCLComprehensionItemCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLComprehensionItemCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionItemCoCo.class";
  }

  @(OCLExpressionsASTOCLComprehensionPrimaryCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLComprehensionPrimaryCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionPrimaryCoCo.class";
  }

  @(OCLExpressionsASTOCLDefinedPrimaryCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLDefinedPrimaryCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLDefinedPrimaryCoCo.class";
  }

  @(OCLExpressionsASTOCLExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLExpressionsNodeCoCo.class";
  }

  @(OCLExpressionsASTOCLIsNewPrimaryCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLIsNewPrimaryCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLIsNewPrimaryCoCo.class";
  }

  @(OCLExpressionsASTOCLPrimaryCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLPrimaryCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLPrimaryCoCo.class";
  }

  @(OCLExpressionsASTOCLQualificationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLQualificationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLQualificationCoCo.class";
  }

  @(OCLExpressionsASTOCLQualifiedPrimaryCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLQualifiedPrimaryCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLQualifiedPrimaryCoCo.class";
  }

  @(OCLExpressionsASTOCLTransitivQualificationCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTOCLTransitivQualificationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLTransitivQualificationCoCo.class";
  }

  @(OCLExpressionsASTParenthizedExpressionCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTParenthizedExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTParenthizedExpressionCoCo.class";
  }

  @(OCLExpressionsASTSingleLogicalORExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTSingleLogicalORExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTSingleLogicalORExprCoCo.class";
  }

  @(OCLExpressionsASTTypeCastExpressionCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTTypeCastExpressionCoCo.class";
  }

  @(OCLExpressionsASTTypeIfExprCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsASTTypeIfExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsASTTypeIfExprCoCo.class";
  }

  @(OCLExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "OCLExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsCoCoChecker.class";
  }

  @(OCLExpressionsOCLExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "OCLExpressionsOCLExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_cocos/OCLExpressionsOCLExpressionsPackageCoCo.class";
  }

  @(_od!59):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_od";
  }

  @(OCLExpressions2OD.class):JavaClassFile{
    simpleName = "OCLExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_od/OCLExpressions2OD.class";
  }

  @(_symboltable!33):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_symboltable";
  }

  @(OCLExpressionsLanguage.class):JavaClassFile{
    simpleName = "OCLExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_symboltable/OCLExpressionsLanguage.class";
  }

  @(OCLExpressionsModelLoader.class):JavaClassFile{
    simpleName = "OCLExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_symboltable/OCLExpressionsModelLoader.class";
  }

  @(_visitor!59):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_visitor";
  }

  @(OCLExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "OCLExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_visitor/OCLExpressionsDelegatorVisitor.class";
  }

  @(OCLExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "OCLExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_visitor/OCLExpressionsInheritanceVisitor.class";
  }

  @(OCLExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "OCLExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_visitor/OCLExpressionsParentAwareVisitor.class";
  }

  @(OCLExpressionsVisitor.class):JavaClassFile{
    simpleName = "OCLExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/oclexpressions/_visitor/OCLExpressionsVisitor.class";
  }

  @(prettyprint!16):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint";
  }

  @(CardinalityPrettyPrinter.class):JavaClassFile{
    simpleName = "CardinalityPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/CardinalityPrettyPrinter.class";
  }

  @(CompletenessPrettyPrinter.class):JavaClassFile{
    simpleName = "CompletenessPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/CompletenessPrettyPrinter.class";
  }

  @(MCBasicTypes1PrettyPrinter.class):JavaClassFile{
    simpleName = "MCBasicTypes1PrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/MCBasicTypes1PrettyPrinter.class";
  }

  @(MCHexNumbersPrettyPrinter.class):JavaClassFile{
    simpleName = "MCHexNumbersPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/MCHexNumbersPrettyPrinter.class";
  }

  @(MCNumbersPrettyPrinter.class):JavaClassFile{
    simpleName = "MCNumbersPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/MCNumbersPrettyPrinter.class";
  }

  @(StringLiteralsPrettyPrinter.class):JavaClassFile{
    simpleName = "StringLiteralsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/StringLiteralsPrettyPrinter.class";
  }

  @(UMLModifierPrettyPrinter.class):JavaClassFile{
    simpleName = "UMLModifierPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/UMLModifierPrettyPrinter.class";
  }

  @(UMLStereotypePrettyPrinter.class):JavaClassFile{
    simpleName = "UMLStereotypePrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/prettyprint/UMLStereotypePrettyPrinter.class";
  }

  @(setexpressions):Directory{
    simpleName = "setexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions";
  }

  @(_ast!66):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast";
  }

  @(ASTConstantsSetExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsSetExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTConstantsSetExpressions.class";
  }

  @(ASTIntersectionExpressionInfix$IntersectionExpressionInfixBuilder.class):JavaClassFile{
    simpleName = "ASTIntersectionExpressionInfix$IntersectionExpressionInfixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIntersectionExpressionInfix$IntersectionExpressionInfixBuilder.class";
  }

  @(ASTIntersectionExpressionInfix.class):JavaClassFile{
    simpleName = "ASTIntersectionExpressionInfix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIntersectionExpressionInfix.class";
  }

  @(ASTIntersectionExpressionPrefix$IntersectionExpressionPrefixBuilder.class):JavaClassFile{
    simpleName = "ASTIntersectionExpressionPrefix$IntersectionExpressionPrefixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIntersectionExpressionPrefix$IntersectionExpressionPrefixBuilder.class";
  }

  @(ASTIntersectionExpressionPrefix.class):JavaClassFile{
    simpleName = "ASTIntersectionExpressionPrefix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIntersectionExpressionPrefix.class";
  }

  @(ASTIsInExpression$IsInExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTIsInExpression$IsInExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIsInExpression$IsInExpressionBuilder.class";
  }

  @(ASTIsInExpression.class):JavaClassFile{
    simpleName = "ASTIsInExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTIsInExpression.class";
  }

  @(ASTSetAndExpression$SetAndExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSetAndExpression$SetAndExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetAndExpression$SetAndExpressionBuilder.class";
  }

  @(ASTSetAndExpression.class):JavaClassFile{
    simpleName = "ASTSetAndExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetAndExpression.class";
  }

  @(ASTSetExpressionsNode.class):JavaClassFile{
    simpleName = "ASTSetExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetExpressionsNode.class";
  }

  @(ASTSetInExpression$SetInExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSetInExpression$SetInExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetInExpression$SetInExpressionBuilder.class";
  }

  @(ASTSetInExpression.class):JavaClassFile{
    simpleName = "ASTSetInExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetInExpression.class";
  }

  @(ASTSetOrExpression$SetOrExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSetOrExpression$SetOrExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetOrExpression$SetOrExpressionBuilder.class";
  }

  @(ASTSetOrExpression.class):JavaClassFile{
    simpleName = "ASTSetOrExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetOrExpression.class";
  }

  @(ASTSetXOrExpression$SetXOrExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTSetXOrExpression$SetXOrExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetXOrExpression$SetXOrExpressionBuilder.class";
  }

  @(ASTSetXOrExpression.class):JavaClassFile{
    simpleName = "ASTSetXOrExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTSetXOrExpression.class";
  }

  @(ASTUnionExpressionInfix$UnionExpressionInfixBuilder.class):JavaClassFile{
    simpleName = "ASTUnionExpressionInfix$UnionExpressionInfixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTUnionExpressionInfix$UnionExpressionInfixBuilder.class";
  }

  @(ASTUnionExpressionInfix.class):JavaClassFile{
    simpleName = "ASTUnionExpressionInfix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTUnionExpressionInfix.class";
  }

  @(ASTUnionExpressionPrefix$UnionExpressionPrefixBuilder.class):JavaClassFile{
    simpleName = "ASTUnionExpressionPrefix$UnionExpressionPrefixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTUnionExpressionPrefix$UnionExpressionPrefixBuilder.class";
  }

  @(ASTUnionExpressionPrefix.class):JavaClassFile{
    simpleName = "ASTUnionExpressionPrefix";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/ASTUnionExpressionPrefix.class";
  }

  @(SetExpressionsLiterals.class):JavaClassFile{
    simpleName = "SetExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsLiterals.class";
  }

  @(SetExpressionsMill.class):JavaClassFile{
    simpleName = "SetExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsMill.class";
  }

  @(SetExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "SetExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsNodeFactory.class";
  }

  @(SetExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "SetExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsPackage$Literals.class";
  }

  @(SetExpressionsPackage.class):JavaClassFile{
    simpleName = "SetExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsPackage.class";
  }

  @(SetExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "SetExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_ast/SetExpressionsPackageImpl.class";
  }

  @(_cocos!60):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos";
  }

  @(SetExpressionsASTIntersectionExpressionInfixCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTIntersectionExpressionInfixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTIntersectionExpressionInfixCoCo.class";
  }

  @(SetExpressionsASTIntersectionExpressionPrefixCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTIntersectionExpressionPrefixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTIntersectionExpressionPrefixCoCo.class";
  }

  @(SetExpressionsASTIsInExpressionCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTIsInExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTIsInExpressionCoCo.class";
  }

  @(SetExpressionsASTSetAndExpressionCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTSetAndExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTSetAndExpressionCoCo.class";
  }

  @(SetExpressionsASTSetExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTSetExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTSetExpressionsNodeCoCo.class";
  }

  @(SetExpressionsASTSetInExpressionCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTSetInExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTSetInExpressionCoCo.class";
  }

  @(SetExpressionsASTSetOrExpressionCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTSetOrExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTSetOrExpressionCoCo.class";
  }

  @(SetExpressionsASTSetXOrExpressionCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTSetXOrExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTSetXOrExpressionCoCo.class";
  }

  @(SetExpressionsASTUnionExpressionInfixCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTUnionExpressionInfixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTUnionExpressionInfixCoCo.class";
  }

  @(SetExpressionsASTUnionExpressionPrefixCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsASTUnionExpressionPrefixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsASTUnionExpressionPrefixCoCo.class";
  }

  @(SetExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "SetExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsCoCoChecker.class";
  }

  @(SetExpressionsSetExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "SetExpressionsSetExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_cocos/SetExpressionsSetExpressionsPackageCoCo.class";
  }

  @(_od!60):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_od";
  }

  @(SetExpressions2OD.class):JavaClassFile{
    simpleName = "SetExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_od/SetExpressions2OD.class";
  }

  @(_symboltable!34):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_symboltable";
  }

  @(SetExpressionsLanguage.class):JavaClassFile{
    simpleName = "SetExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_symboltable/SetExpressionsLanguage.class";
  }

  @(SetExpressionsModelLoader.class):JavaClassFile{
    simpleName = "SetExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_symboltable/SetExpressionsModelLoader.class";
  }

  @(_visitor!60):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_visitor";
  }

  @(SetExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "SetExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_visitor/SetExpressionsDelegatorVisitor.class";
  }

  @(SetExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "SetExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_visitor/SetExpressionsInheritanceVisitor.class";
  }

  @(SetExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "SetExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_visitor/SetExpressionsParentAwareVisitor.class";
  }

  @(SetExpressionsVisitor.class):JavaClassFile{
    simpleName = "SetExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/setexpressions/_visitor/SetExpressionsVisitor.class";
  }

  @(shiftexpressions):Directory{
    simpleName = "shiftexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions";
  }

  @(_ast!67):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast";
  }

  @(ASTArrayExpression$ArrayExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTArrayExpression$ArrayExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTArrayExpression$ArrayExpressionBuilder.class";
  }

  @(ASTArrayExpression.class!2):JavaClassFile{
    simpleName = "ASTArrayExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTArrayExpression.class";
  }

  @(ASTConstantsShiftExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsShiftExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTConstantsShiftExpressions.class";
  }

  @(ASTLeftShiftExpression$LeftShiftExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLeftShiftExpression$LeftShiftExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTLeftShiftExpression$LeftShiftExpressionBuilder.class";
  }

  @(ASTLeftShiftExpression.class):JavaClassFile{
    simpleName = "ASTLeftShiftExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTLeftShiftExpression.class";
  }

  @(ASTLogicalRightShiftExpression$LogicalRightShiftExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTLogicalRightShiftExpression$LogicalRightShiftExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTLogicalRightShiftExpression$LogicalRightShiftExpressionBuilder.class";
  }

  @(ASTLogicalRightShiftExpression.class):JavaClassFile{
    simpleName = "ASTLogicalRightShiftExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTLogicalRightShiftExpression.class";
  }

  @(ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTPrimaryThisExpression$PrimaryThisExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class";
  }

  @(ASTPrimaryThisExpression.class!2):JavaClassFile{
    simpleName = "ASTPrimaryThisExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTPrimaryThisExpression.class";
  }

  @(ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTQualifiedNameExpression$QualifiedNameExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class";
  }

  @(ASTQualifiedNameExpression.class!2):JavaClassFile{
    simpleName = "ASTQualifiedNameExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTQualifiedNameExpression.class";
  }

  @(ASTRightShiftExpression$RightShiftExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTRightShiftExpression$RightShiftExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTRightShiftExpression$RightShiftExpressionBuilder.class";
  }

  @(ASTRightShiftExpression.class):JavaClassFile{
    simpleName = "ASTRightShiftExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTRightShiftExpression.class";
  }

  @(ASTShiftExpression.class!2):JavaClassFile{
    simpleName = "ASTShiftExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTShiftExpression.class";
  }

  @(ASTShiftExpressionsNode.class):JavaClassFile{
    simpleName = "ASTShiftExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTShiftExpressionsNode.class";
  }

  @(ASTThisExpression$ThisExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTThisExpression$ThisExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTThisExpression$ThisExpressionBuilder.class";
  }

  @(ASTThisExpression.class!2):JavaClassFile{
    simpleName = "ASTThisExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ASTThisExpression.class";
  }

  @(ShiftExpressionsLiterals.class):JavaClassFile{
    simpleName = "ShiftExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsLiterals.class";
  }

  @(ShiftExpressionsMill.class):JavaClassFile{
    simpleName = "ShiftExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsMill.class";
  }

  @(ShiftExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "ShiftExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsNodeFactory.class";
  }

  @(ShiftExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "ShiftExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsPackage$Literals.class";
  }

  @(ShiftExpressionsPackage.class):JavaClassFile{
    simpleName = "ShiftExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsPackage.class";
  }

  @(ShiftExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "ShiftExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_ast/ShiftExpressionsPackageImpl.class";
  }

  @(_cocos!61):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos";
  }

  @(ShiftExpressionsASTArrayExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTArrayExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTArrayExpressionCoCo.class";
  }

  @(ShiftExpressionsASTLeftShiftExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTLeftShiftExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTLeftShiftExpressionCoCo.class";
  }

  @(ShiftExpressionsASTLogicalRightShiftExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTLogicalRightShiftExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTLogicalRightShiftExpressionCoCo.class";
  }

  @(ShiftExpressionsASTPrimaryThisExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTPrimaryThisExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTPrimaryThisExpressionCoCo.class";
  }

  @(ShiftExpressionsASTQualifiedNameExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTQualifiedNameExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTQualifiedNameExpressionCoCo.class";
  }

  @(ShiftExpressionsASTRightShiftExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTRightShiftExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTRightShiftExpressionCoCo.class";
  }

  @(ShiftExpressionsASTShiftExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTShiftExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTShiftExpressionCoCo.class";
  }

  @(ShiftExpressionsASTShiftExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTShiftExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTShiftExpressionsNodeCoCo.class";
  }

  @(ShiftExpressionsASTThisExpressionCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsASTThisExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTThisExpressionCoCo.class";
  }

  @(ShiftExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "ShiftExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsCoCoChecker.class";
  }

  @(ShiftExpressionsShiftExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "ShiftExpressionsShiftExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_cocos/ShiftExpressionsShiftExpressionsPackageCoCo.class";
  }

  @(_od!61):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_od";
  }

  @(ShiftExpressions2OD.class):JavaClassFile{
    simpleName = "ShiftExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_od/ShiftExpressions2OD.class";
  }

  @(_symboltable!35):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_symboltable";
  }

  @(ShiftExpressionsLanguage.class):JavaClassFile{
    simpleName = "ShiftExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_symboltable/ShiftExpressionsLanguage.class";
  }

  @(ShiftExpressionsModelLoader.class):JavaClassFile{
    simpleName = "ShiftExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_symboltable/ShiftExpressionsModelLoader.class";
  }

  @(_visitor!61):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_visitor";
  }

  @(ShiftExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "ShiftExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_visitor/ShiftExpressionsDelegatorVisitor.class";
  }

  @(ShiftExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "ShiftExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_visitor/ShiftExpressionsInheritanceVisitor.class";
  }

  @(ShiftExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "ShiftExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_visitor/ShiftExpressionsParentAwareVisitor.class";
  }

  @(ShiftExpressionsVisitor.class):JavaClassFile{
    simpleName = "ShiftExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/shiftexpressions/_visitor/ShiftExpressionsVisitor.class";
  }

  @(stringliterals):Directory{
    simpleName = "stringliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals";
  }

  @(_ast!68):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast";
  }

  @(ASTCharLiteral$CharLiteralBuilder.class!3):JavaClassFile{
    simpleName = "ASTCharLiteral$CharLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTCharLiteral$CharLiteralBuilder.class";
  }

  @(ASTCharLiteral.class!4):JavaClassFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTCharLiteral.class";
  }

  @(ASTConstantsStringLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsStringLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTConstantsStringLiterals.class";
  }

  @(ASTStringLiteral$StringLiteralBuilder.class!3):JavaClassFile{
    simpleName = "ASTStringLiteral$StringLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTStringLiteral$StringLiteralBuilder.class";
  }

  @(ASTStringLiteral.class!4):JavaClassFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTStringLiteral.class";
  }

  @(ASTStringLiteralsNode.class):JavaClassFile{
    simpleName = "ASTStringLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/ASTStringLiteralsNode.class";
  }

  @(StringLiteralsLiterals.class):JavaClassFile{
    simpleName = "StringLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsLiterals.class";
  }

  @(StringLiteralsMill.class):JavaClassFile{
    simpleName = "StringLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsMill.class";
  }

  @(StringLiteralsNodeFactory.class):JavaClassFile{
    simpleName = "StringLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsNodeFactory.class";
  }

  @(StringLiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "StringLiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsPackage$Literals.class";
  }

  @(StringLiteralsPackage.class):JavaClassFile{
    simpleName = "StringLiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsPackage.class";
  }

  @(StringLiteralsPackageImpl.class):JavaClassFile{
    simpleName = "StringLiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_ast/StringLiteralsPackageImpl.class";
  }

  @(_cocos!62):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos";
  }

  @(StringLiteralsASTCharLiteralCoCo.class):JavaClassFile{
    simpleName = "StringLiteralsASTCharLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos/StringLiteralsASTCharLiteralCoCo.class";
  }

  @(StringLiteralsASTStringLiteralCoCo.class):JavaClassFile{
    simpleName = "StringLiteralsASTStringLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos/StringLiteralsASTStringLiteralCoCo.class";
  }

  @(StringLiteralsASTStringLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "StringLiteralsASTStringLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos/StringLiteralsASTStringLiteralsNodeCoCo.class";
  }

  @(StringLiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "StringLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos/StringLiteralsCoCoChecker.class";
  }

  @(StringLiteralsStringLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "StringLiteralsStringLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_cocos/StringLiteralsStringLiteralsPackageCoCo.class";
  }

  @(_od!62):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_od";
  }

  @(StringLiterals2OD.class):JavaClassFile{
    simpleName = "StringLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_od/StringLiterals2OD.class";
  }

  @(_symboltable!36):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_symboltable";
  }

  @(StringLiteralsLanguage.class):JavaClassFile{
    simpleName = "StringLiteralsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_symboltable/StringLiteralsLanguage.class";
  }

  @(StringLiteralsModelLoader.class):JavaClassFile{
    simpleName = "StringLiteralsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_symboltable/StringLiteralsModelLoader.class";
  }

  @(_visitor!62):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_visitor";
  }

  @(StringLiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "StringLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_visitor/StringLiteralsDelegatorVisitor.class";
  }

  @(StringLiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "StringLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_visitor/StringLiteralsInheritanceVisitor.class";
  }

  @(StringLiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "StringLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_visitor/StringLiteralsParentAwareVisitor.class";
  }

  @(StringLiteralsVisitor.class):JavaClassFile{
    simpleName = "StringLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/stringliterals/_visitor/StringLiteralsVisitor.class";
  }

  @(types!15):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types";
  }

  @(JTypeSymbolsHelper$CommonJTypeReferenceFactory.class):JavaClassFile{
    simpleName = "JTypeSymbolsHelper$CommonJTypeReferenceFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/JTypeSymbolsHelper$CommonJTypeReferenceFactory.class";
  }

  @(JTypeSymbolsHelper$JTypeFactory.class):JavaClassFile{
    simpleName = "JTypeSymbolsHelper$JTypeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/JTypeSymbolsHelper$JTypeFactory.class";
  }

  @(JTypeSymbolsHelper$JTypeReferenceFactory.class):JavaClassFile{
    simpleName = "JTypeSymbolsHelper$JTypeReferenceFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/JTypeSymbolsHelper$JTypeReferenceFactory.class";
  }

  @(JTypeSymbolsHelper.class):JavaClassFile{
    simpleName = "JTypeSymbolsHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/JTypeSymbolsHelper.class";
  }

  @(prettyprint!17):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/prettyprint";
  }

  @(TypesPrettyPrinterConcreteVisitor.class):JavaClassFile{
    simpleName = "TypesPrettyPrinterConcreteVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/prettyprint/TypesPrettyPrinterConcreteVisitor.class";
  }

  @(types!16):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types";
  }

  @(_ast!69):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast";
  }

  @(ASTArrayType$ArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTArrayType$ArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTArrayType$ArrayTypeBuilder.class";
  }

  @(ASTArrayType.class!2):JavaClassFile{
    simpleName = "ASTArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTArrayType.class";
  }

  @(ASTComplexArrayType$ComplexArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTComplexArrayType$ComplexArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTComplexArrayType$ComplexArrayTypeBuilder.class";
  }

  @(ASTComplexArrayType.class!2):JavaClassFile{
    simpleName = "ASTComplexArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTComplexArrayType.class";
  }

  @(ASTComplexReferenceType$ComplexReferenceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTComplexReferenceType$ComplexReferenceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTComplexReferenceType$ComplexReferenceTypeBuilder.class";
  }

  @(ASTComplexReferenceType.class!2):JavaClassFile{
    simpleName = "ASTComplexReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTComplexReferenceType.class";
  }

  @(ASTConstantsTypes.class):JavaClassFile{
    simpleName = "ASTConstantsTypes";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTConstantsTypes.class";
  }

  @(ASTImportStatement$ImportStatementBuilder.class!2):JavaClassFile{
    simpleName = "ASTImportStatement$ImportStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTImportStatement$ImportStatementBuilder.class";
  }

  @(ASTImportStatement.class!3):JavaClassFile{
    simpleName = "ASTImportStatement";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTImportStatement.class";
  }

  @(ASTPrimitiveArrayType$PrimitiveArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveArrayType$PrimitiveArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTPrimitiveArrayType$PrimitiveArrayTypeBuilder.class";
  }

  @(ASTPrimitiveArrayType.class!2):JavaClassFile{
    simpleName = "ASTPrimitiveArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTPrimitiveArrayType.class";
  }

  @(ASTPrimitiveType$PrimitiveTypeBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveType$PrimitiveTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTPrimitiveType$PrimitiveTypeBuilder.class";
  }

  @(ASTPrimitiveType.class!3):JavaClassFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTPrimitiveType.class";
  }

  @(ASTQualifiedName$QualifiedNameBuilder.class!2):JavaClassFile{
    simpleName = "ASTQualifiedName$QualifiedNameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTQualifiedName$QualifiedNameBuilder.class";
  }

  @(ASTQualifiedName.class!4):JavaClassFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTQualifiedName.class";
  }

  @(ASTReferenceType.class!3):JavaClassFile{
    simpleName = "ASTReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTReferenceType.class";
  }

  @(ASTReturnType.class!3):JavaClassFile{
    simpleName = "ASTReturnType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTReturnType.class";
  }

  @(ASTSimpleReferenceType$SimpleReferenceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTSimpleReferenceType$SimpleReferenceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTSimpleReferenceType$SimpleReferenceTypeBuilder.class";
  }

  @(ASTSimpleReferenceType.class!2):JavaClassFile{
    simpleName = "ASTSimpleReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTSimpleReferenceType.class";
  }

  @(ASTType.class!3):JavaClassFile{
    simpleName = "ASTType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTType.class";
  }

  @(ASTTypeArgument.class!2):JavaClassFile{
    simpleName = "ASTTypeArgument";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeArgument.class";
  }

  @(ASTTypeArguments$TypeArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTTypeArguments$TypeArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeArguments$TypeArgumentsBuilder.class";
  }

  @(ASTTypeArguments.class!2):JavaClassFile{
    simpleName = "ASTTypeArguments";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeArguments.class";
  }

  @(ASTTypeParameters$TypeParametersBuilder.class):JavaClassFile{
    simpleName = "ASTTypeParameters$TypeParametersBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeParameters$TypeParametersBuilder.class";
  }

  @(ASTTypeParameters.class!2):JavaClassFile{
    simpleName = "ASTTypeParameters";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeParameters.class";
  }

  @(ASTTypesNode.class):JavaClassFile{
    simpleName = "ASTTypesNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypesNode.class";
  }

  @(ASTTypeVariableDeclaration$TypeVariableDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTTypeVariableDeclaration$TypeVariableDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeVariableDeclaration$TypeVariableDeclarationBuilder.class";
  }

  @(ASTTypeVariableDeclaration.class!2):JavaClassFile{
    simpleName = "ASTTypeVariableDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTTypeVariableDeclaration.class";
  }

  @(ASTVoidType$VoidTypeBuilder.class!2):JavaClassFile{
    simpleName = "ASTVoidType$VoidTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTVoidType$VoidTypeBuilder.class";
  }

  @(ASTVoidType.class!3):JavaClassFile{
    simpleName = "ASTVoidType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTVoidType.class";
  }

  @(ASTWildcardType$WildcardTypeBuilder.class):JavaClassFile{
    simpleName = "ASTWildcardType$WildcardTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTWildcardType$WildcardTypeBuilder.class";
  }

  @(ASTWildcardType.class!2):JavaClassFile{
    simpleName = "ASTWildcardType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/ASTWildcardType.class";
  }

  @(TypesLiterals.class):JavaClassFile{
    simpleName = "TypesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesLiterals.class";
  }

  @(TypesMill.class):JavaClassFile{
    simpleName = "TypesMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesMill.class";
  }

  @(TypesNodeFactory.class):JavaClassFile{
    simpleName = "TypesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesNodeFactory.class";
  }

  @(TypesPackage$Literals.class):JavaClassFile{
    simpleName = "TypesPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesPackage$Literals.class";
  }

  @(TypesPackage.class):JavaClassFile{
    simpleName = "TypesPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesPackage.class";
  }

  @(TypesPackageImpl.class):JavaClassFile{
    simpleName = "TypesPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_ast/TypesPackageImpl.class";
  }

  @(_cocos!63):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos";
  }

  @(TypesASTArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTArrayTypeCoCo.class";
  }

  @(TypesASTComplexArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTComplexArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTComplexArrayTypeCoCo.class";
  }

  @(TypesASTComplexReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTComplexReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTComplexReferenceTypeCoCo.class";
  }

  @(TypesASTImportStatementCoCo.class):JavaClassFile{
    simpleName = "TypesASTImportStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTImportStatementCoCo.class";
  }

  @(TypesASTPrimitiveArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTPrimitiveArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTPrimitiveArrayTypeCoCo.class";
  }

  @(TypesASTPrimitiveTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTPrimitiveTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTPrimitiveTypeCoCo.class";
  }

  @(TypesASTQualifiedNameCoCo.class):JavaClassFile{
    simpleName = "TypesASTQualifiedNameCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTQualifiedNameCoCo.class";
  }

  @(TypesASTReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTReferenceTypeCoCo.class";
  }

  @(TypesASTReturnTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTReturnTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTReturnTypeCoCo.class";
  }

  @(TypesASTSimpleReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTSimpleReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTSimpleReferenceTypeCoCo.class";
  }

  @(TypesASTTypeArgumentCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypeArgumentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypeArgumentCoCo.class";
  }

  @(TypesASTTypeArgumentsCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypeArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypeArgumentsCoCo.class";
  }

  @(TypesASTTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypeCoCo.class";
  }

  @(TypesASTTypeParametersCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypeParametersCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypeParametersCoCo.class";
  }

  @(TypesASTTypesNodeCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypesNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypesNodeCoCo.class";
  }

  @(TypesASTTypeVariableDeclarationCoCo.class):JavaClassFile{
    simpleName = "TypesASTTypeVariableDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTTypeVariableDeclarationCoCo.class";
  }

  @(TypesASTVoidTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTVoidTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTVoidTypeCoCo.class";
  }

  @(TypesASTWildcardTypeCoCo.class):JavaClassFile{
    simpleName = "TypesASTWildcardTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesASTWildcardTypeCoCo.class";
  }

  @(TypesCoCoChecker.class):JavaClassFile{
    simpleName = "TypesCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesCoCoChecker.class";
  }

  @(TypesTypesPackageCoCo.class):JavaClassFile{
    simpleName = "TypesTypesPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_cocos/TypesTypesPackageCoCo.class";
  }

  @(_od!63):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_od";
  }

  @(Types2OD.class):JavaClassFile{
    simpleName = "Types2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_od/Types2OD.class";
  }

  @(_symboltable!37):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_symboltable";
  }

  @(TypesLanguage.class):JavaClassFile{
    simpleName = "TypesLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_symboltable/TypesLanguage.class";
  }

  @(TypesModelLoader.class):JavaClassFile{
    simpleName = "TypesModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_symboltable/TypesModelLoader.class";
  }

  @(_visitor!63):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_visitor";
  }

  @(TypesDelegatorVisitor.class):JavaClassFile{
    simpleName = "TypesDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_visitor/TypesDelegatorVisitor.class";
  }

  @(TypesInheritanceVisitor.class):JavaClassFile{
    simpleName = "TypesInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_visitor/TypesInheritanceVisitor.class";
  }

  @(TypesParentAwareVisitor.class):JavaClassFile{
    simpleName = "TypesParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_visitor/TypesParentAwareVisitor.class";
  }

  @(TypesVisitor.class):JavaClassFile{
    simpleName = "TypesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/types/_visitor/TypesVisitor.class";
  }

  @(TypesHelper.class):JavaClassFile{
    simpleName = "TypesHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/TypesHelper.class";
  }

  @(TypesNodeIdentHelper.class):JavaClassFile{
    simpleName = "TypesNodeIdentHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/TypesNodeIdentHelper.class";
  }

  @(TypesPrinter.class):JavaClassFile{
    simpleName = "TypesPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/types/TypesPrinter.class";
  }

  @(umlmodifier):Directory{
    simpleName = "umlmodifier";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier";
  }

  @(_ast!70):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast";
  }

  @(ASTConstantsUMLModifier.class):JavaClassFile{
    simpleName = "ASTConstantsUMLModifier";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/ASTConstantsUMLModifier.class";
  }

  @(ASTModifier$ModifierBuilder.class!2):JavaClassFile{
    simpleName = "ASTModifier$ModifierBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/ASTModifier$ModifierBuilder.class";
  }

  @(ASTModifier.class!4):JavaClassFile{
    simpleName = "ASTModifier";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/ASTModifier.class";
  }

  @(ASTUMLModifierNode.class):JavaClassFile{
    simpleName = "ASTUMLModifierNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/ASTUMLModifierNode.class";
  }

  @(UMLModifierLiterals.class):JavaClassFile{
    simpleName = "UMLModifierLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierLiterals.class";
  }

  @(UMLModifierMill.class):JavaClassFile{
    simpleName = "UMLModifierMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierMill.class";
  }

  @(UMLModifierNodeFactory.class):JavaClassFile{
    simpleName = "UMLModifierNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierNodeFactory.class";
  }

  @(UMLModifierPackage$Literals.class):JavaClassFile{
    simpleName = "UMLModifierPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierPackage$Literals.class";
  }

  @(UMLModifierPackage.class):JavaClassFile{
    simpleName = "UMLModifierPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierPackage.class";
  }

  @(UMLModifierPackageImpl.class):JavaClassFile{
    simpleName = "UMLModifierPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_ast/UMLModifierPackageImpl.class";
  }

  @(_cocos!64):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_cocos";
  }

  @(UMLModifierASTModifierCoCo.class):JavaClassFile{
    simpleName = "UMLModifierASTModifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_cocos/UMLModifierASTModifierCoCo.class";
  }

  @(UMLModifierASTUMLModifierNodeCoCo.class):JavaClassFile{
    simpleName = "UMLModifierASTUMLModifierNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_cocos/UMLModifierASTUMLModifierNodeCoCo.class";
  }

  @(UMLModifierCoCoChecker.class):JavaClassFile{
    simpleName = "UMLModifierCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_cocos/UMLModifierCoCoChecker.class";
  }

  @(UMLModifierUMLModifierPackageCoCo.class):JavaClassFile{
    simpleName = "UMLModifierUMLModifierPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_cocos/UMLModifierUMLModifierPackageCoCo.class";
  }

  @(_od!64):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_od";
  }

  @(UMLModifier2OD.class):JavaClassFile{
    simpleName = "UMLModifier2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_od/UMLModifier2OD.class";
  }

  @(_symboltable!38):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_symboltable";
  }

  @(UMLModifierLanguage.class):JavaClassFile{
    simpleName = "UMLModifierLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_symboltable/UMLModifierLanguage.class";
  }

  @(UMLModifierModelLoader.class):JavaClassFile{
    simpleName = "UMLModifierModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_symboltable/UMLModifierModelLoader.class";
  }

  @(_visitor!64):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_visitor";
  }

  @(UMLModifierDelegatorVisitor.class):JavaClassFile{
    simpleName = "UMLModifierDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_visitor/UMLModifierDelegatorVisitor.class";
  }

  @(UMLModifierInheritanceVisitor.class):JavaClassFile{
    simpleName = "UMLModifierInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_visitor/UMLModifierInheritanceVisitor.class";
  }

  @(UMLModifierParentAwareVisitor.class):JavaClassFile{
    simpleName = "UMLModifierParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_visitor/UMLModifierParentAwareVisitor.class";
  }

  @(UMLModifierVisitor.class):JavaClassFile{
    simpleName = "UMLModifierVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlmodifier/_visitor/UMLModifierVisitor.class";
  }

  @(umlstereotype):Directory{
    simpleName = "umlstereotype";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype";
  }

  @(_ast!71):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast";
  }

  @(ASTConstantsUMLStereotype.class):JavaClassFile{
    simpleName = "ASTConstantsUMLStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTConstantsUMLStereotype.class";
  }

  @(ASTStereotype$StereotypeBuilder.class!2):JavaClassFile{
    simpleName = "ASTStereotype$StereotypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTStereotype$StereotypeBuilder.class";
  }

  @(ASTStereotype.class!4):JavaClassFile{
    simpleName = "ASTStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTStereotype.class";
  }

  @(ASTStereoValue$StereoValueBuilder.class!2):JavaClassFile{
    simpleName = "ASTStereoValue$StereoValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTStereoValue$StereoValueBuilder.class";
  }

  @(ASTStereoValue.class!3):JavaClassFile{
    simpleName = "ASTStereoValue";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTStereoValue.class";
  }

  @(ASTUMLStereotypeNode.class):JavaClassFile{
    simpleName = "ASTUMLStereotypeNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/ASTUMLStereotypeNode.class";
  }

  @(UMLStereotypeLiterals.class):JavaClassFile{
    simpleName = "UMLStereotypeLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypeLiterals.class";
  }

  @(UMLStereotypeMill.class):JavaClassFile{
    simpleName = "UMLStereotypeMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypeMill.class";
  }

  @(UMLStereotypeNodeFactory.class):JavaClassFile{
    simpleName = "UMLStereotypeNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypeNodeFactory.class";
  }

  @(UMLStereotypePackage$Literals.class):JavaClassFile{
    simpleName = "UMLStereotypePackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypePackage$Literals.class";
  }

  @(UMLStereotypePackage.class):JavaClassFile{
    simpleName = "UMLStereotypePackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypePackage.class";
  }

  @(UMLStereotypePackageImpl.class):JavaClassFile{
    simpleName = "UMLStereotypePackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_ast/UMLStereotypePackageImpl.class";
  }

  @(_cocos!65):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos";
  }

  @(UMLStereotypeASTStereotypeCoCo.class):JavaClassFile{
    simpleName = "UMLStereotypeASTStereotypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos/UMLStereotypeASTStereotypeCoCo.class";
  }

  @(UMLStereotypeASTStereoValueCoCo.class):JavaClassFile{
    simpleName = "UMLStereotypeASTStereoValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos/UMLStereotypeASTStereoValueCoCo.class";
  }

  @(UMLStereotypeASTUMLStereotypeNodeCoCo.class):JavaClassFile{
    simpleName = "UMLStereotypeASTUMLStereotypeNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos/UMLStereotypeASTUMLStereotypeNodeCoCo.class";
  }

  @(UMLStereotypeCoCoChecker.class):JavaClassFile{
    simpleName = "UMLStereotypeCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos/UMLStereotypeCoCoChecker.class";
  }

  @(UMLStereotypeUMLStereotypePackageCoCo.class):JavaClassFile{
    simpleName = "UMLStereotypeUMLStereotypePackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_cocos/UMLStereotypeUMLStereotypePackageCoCo.class";
  }

  @(_od!65):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_od";
  }

  @(UMLStereotype2OD.class):JavaClassFile{
    simpleName = "UMLStereotype2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_od/UMLStereotype2OD.class";
  }

  @(_symboltable!39):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_symboltable";
  }

  @(UMLStereotypeLanguage.class):JavaClassFile{
    simpleName = "UMLStereotypeLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_symboltable/UMLStereotypeLanguage.class";
  }

  @(UMLStereotypeModelLoader.class):JavaClassFile{
    simpleName = "UMLStereotypeModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_symboltable/UMLStereotypeModelLoader.class";
  }

  @(_visitor!65):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_visitor";
  }

  @(UMLStereotypeDelegatorVisitor.class):JavaClassFile{
    simpleName = "UMLStereotypeDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_visitor/UMLStereotypeDelegatorVisitor.class";
  }

  @(UMLStereotypeInheritanceVisitor.class):JavaClassFile{
    simpleName = "UMLStereotypeInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_visitor/UMLStereotypeInheritanceVisitor.class";
  }

  @(UMLStereotypeParentAwareVisitor.class):JavaClassFile{
    simpleName = "UMLStereotypeParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_visitor/UMLStereotypeParentAwareVisitor.class";
  }

  @(UMLStereotypeVisitor.class):JavaClassFile{
    simpleName = "UMLStereotypeVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/classes/de/monticore/umlstereotype/_visitor/UMLStereotypeVisitor.class";
  }

  @(generated-sources!4):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources";
  }

  @(annotations!4):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/annotations";
  }

  @(monticore!30):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore";
  }

  @(sourcecode!2):Directory{
    simpleName = "sourcecode";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode";
  }

  @(de!29):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de";
  }

  @(monticore!31):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore";
  }

  @(assignmentexpressions!2):Directory{
    simpleName = "assignmentexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions";
  }

  @(_ast!72):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast";
  }

  @(AssignmentExpressionsLiterals.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsLiterals.java";
  }

  @(AssignmentExpressionsMill.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsMill.java";
  }

  @(AssignmentExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsNodeFactory.java";
  }

  @(AssignmentExpressionsPackage.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsPackage.java";
  }

  @(AssignmentExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/AssignmentExpressionsPackageImpl.java";
  }

  @(ASTAndAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTAndAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTAndAssignmentExpression.java";
  }

  @(ASTAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTAssignmentExpression.java";
  }

  @(ASTAssignmentExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTAssignmentExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTAssignmentExpressionsNode.java";
  }

  @(ASTBinaryAndExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryAndExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTBinaryAndExpression.java";
  }

  @(ASTBinaryOrOpExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryOrOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTBinaryOrOpExpression.java";
  }

  @(ASTBinaryXorAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryXorAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTBinaryXorAssignmentExpression.java";
  }

  @(ASTBinaryXorExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryXorExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTBinaryXorExpression.java";
  }

  @(ASTConstantsAssignmentExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsAssignmentExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTConstantsAssignmentExpressions.java";
  }

  @(ASTDecPrefixExpression.java):JavaSourceFile{
    simpleName = "ASTDecPrefixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTDecPrefixExpression.java";
  }

  @(ASTDecSuffixExpression.java):JavaSourceFile{
    simpleName = "ASTDecSuffixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTDecSuffixExpression.java";
  }

  @(ASTDivideAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTDivideAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTDivideAssignmentExpression.java";
  }

  @(ASTIncPrefixExpression.java):JavaSourceFile{
    simpleName = "ASTIncPrefixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTIncPrefixExpression.java";
  }

  @(ASTIncSuffixExpression.java):JavaSourceFile{
    simpleName = "ASTIncSuffixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTIncSuffixExpression.java";
  }

  @(ASTLeftShiftAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTLeftShiftAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTLeftShiftAssignmentExpression.java";
  }

  @(ASTLogicalRightAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTLogicalRightAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTLogicalRightAssignmentExpression.java";
  }

  @(ASTMinusAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTMinusAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTMinusAssignmentExpression.java";
  }

  @(ASTMinusPrefixExpression.java):JavaSourceFile{
    simpleName = "ASTMinusPrefixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTMinusPrefixExpression.java";
  }

  @(ASTModuloAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTModuloAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTModuloAssignmentExpression.java";
  }

  @(ASTMultAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTMultAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTMultAssignmentExpression.java";
  }

  @(ASTOrAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTOrAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTOrAssignmentExpression.java";
  }

  @(ASTPlusAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTPlusAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTPlusAssignmentExpression.java";
  }

  @(ASTPlusPrefixExpression.java):JavaSourceFile{
    simpleName = "ASTPlusPrefixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTPlusPrefixExpression.java";
  }

  @(ASTRegularAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTRegularAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTRegularAssignmentExpression.java";
  }

  @(ASTRightShiftAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTRightShiftAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_ast/ASTRightShiftAssignmentExpression.java";
  }

  @(_cocos!66):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos";
  }

  @(AssignmentExpressionsAssignmentExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsAssignmentExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsAssignmentExpressionsPackageCoCo.java";
  }

  @(AssignmentExpressionsASTAndAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTAndAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAndAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTAssignmentExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.java";
  }

  @(AssignmentExpressionsASTBinaryAndExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTBinaryAndExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryAndExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTBinaryOrOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTBinaryOrOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryOrOpExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTBinaryXorExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTBinaryXorExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTBinaryXorExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTDecPrefixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTDecPrefixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDecPrefixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTDecSuffixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTDecSuffixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDecSuffixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTDivideAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTDivideAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTDivideAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTIncPrefixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTIncPrefixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTIncPrefixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTIncSuffixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTIncSuffixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTIncSuffixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTMinusAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTMinusAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMinusAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTMinusPrefixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTMinusPrefixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMinusPrefixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTModuloAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTModuloAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTModuloAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTMultAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTMultAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTMultAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTOrAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTOrAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTOrAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTPlusAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTPlusAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTPlusAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTPlusPrefixExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTPlusPrefixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTPlusPrefixExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTRegularAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTRegularAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTRegularAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.java";
  }

  @(AssignmentExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_cocos/AssignmentExpressionsCoCoChecker.java";
  }

  @(_od!66):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_od";
  }

  @(AssignmentExpressions2OD.java):JavaSourceFile{
    simpleName = "AssignmentExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_od/AssignmentExpressions2OD.java";
  }

  @(_symboltable!40):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_symboltable";
  }

  @(AssignmentExpressionsLanguage.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_symboltable/AssignmentExpressionsLanguage.java";
  }

  @(AssignmentExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_symboltable/AssignmentExpressionsModelLoader.java";
  }

  @(_visitor!66):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_visitor";
  }

  @(AssignmentExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsDelegatorVisitor.java";
  }

  @(AssignmentExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsInheritanceVisitor.java";
  }

  @(AssignmentExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsParentAwareVisitor.java";
  }

  @(AssignmentExpressionsVisitor.java):JavaSourceFile{
    simpleName = "AssignmentExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/assignmentexpressions/_visitor/AssignmentExpressionsVisitor.java";
  }

  @(cardinality!2):Directory{
    simpleName = "cardinality";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality";
  }

  @(_ast!73):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast";
  }

  @(ASTCardinality.java!2):JavaSourceFile{
    simpleName = "ASTCardinality";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/ASTCardinality.java";
  }

  @(ASTCardinalityNode.java):JavaSourceFile{
    simpleName = "ASTCardinalityNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/ASTCardinalityNode.java";
  }

  @(ASTConstantsCardinality.java):JavaSourceFile{
    simpleName = "ASTConstantsCardinality";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/ASTConstantsCardinality.java";
  }

  @(CardinalityLiterals.java):JavaSourceFile{
    simpleName = "CardinalityLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/CardinalityLiterals.java";
  }

  @(CardinalityMill.java):JavaSourceFile{
    simpleName = "CardinalityMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/CardinalityMill.java";
  }

  @(CardinalityNodeFactory.java):JavaSourceFile{
    simpleName = "CardinalityNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/CardinalityNodeFactory.java";
  }

  @(CardinalityPackage.java):JavaSourceFile{
    simpleName = "CardinalityPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/CardinalityPackage.java";
  }

  @(CardinalityPackageImpl.java):JavaSourceFile{
    simpleName = "CardinalityPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_ast/CardinalityPackageImpl.java";
  }

  @(_cocos!67):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_cocos";
  }

  @(CardinalityASTCardinalityCoCo.java):JavaSourceFile{
    simpleName = "CardinalityASTCardinalityCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_cocos/CardinalityASTCardinalityCoCo.java";
  }

  @(CardinalityASTCardinalityNodeCoCo.java):JavaSourceFile{
    simpleName = "CardinalityASTCardinalityNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_cocos/CardinalityASTCardinalityNodeCoCo.java";
  }

  @(CardinalityCardinalityPackageCoCo.java):JavaSourceFile{
    simpleName = "CardinalityCardinalityPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_cocos/CardinalityCardinalityPackageCoCo.java";
  }

  @(CardinalityCoCoChecker.java):JavaSourceFile{
    simpleName = "CardinalityCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_cocos/CardinalityCoCoChecker.java";
  }

  @(_od!67):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_od";
  }

  @(Cardinality2OD.java):JavaSourceFile{
    simpleName = "Cardinality2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_od/Cardinality2OD.java";
  }

  @(_symboltable!41):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_symboltable";
  }

  @(CardinalityLanguage.java):JavaSourceFile{
    simpleName = "CardinalityLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_symboltable/CardinalityLanguage.java";
  }

  @(CardinalityModelLoader.java):JavaSourceFile{
    simpleName = "CardinalityModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_symboltable/CardinalityModelLoader.java";
  }

  @(_visitor!67):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_visitor";
  }

  @(CardinalityDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CardinalityDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_visitor/CardinalityDelegatorVisitor.java";
  }

  @(CardinalityInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CardinalityInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_visitor/CardinalityInheritanceVisitor.java";
  }

  @(CardinalityParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CardinalityParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_visitor/CardinalityParentAwareVisitor.java";
  }

  @(CardinalityVisitor.java):JavaSourceFile{
    simpleName = "CardinalityVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/cardinality/_visitor/CardinalityVisitor.java";
  }

  @(common!11):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common";
  }

  @(common!12):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common";
  }

  @(_ast!74):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast";
  }

  @(ASTCardinality.java!3):JavaSourceFile{
    simpleName = "ASTCardinality";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTCardinality.java";
  }

  @(ASTCommonNode.java):JavaSourceFile{
    simpleName = "ASTCommonNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTCommonNode.java";
  }

  @(ASTCompleteness.java!2):JavaSourceFile{
    simpleName = "ASTCompleteness";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTCompleteness.java";
  }

  @(ASTConstantsCommon.java):JavaSourceFile{
    simpleName = "ASTConstantsCommon";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTConstantsCommon.java";
  }

  @(ASTModifier.java!3):JavaSourceFile{
    simpleName = "ASTModifier";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTModifier.java";
  }

  @(ASTStereotype.java!3):JavaSourceFile{
    simpleName = "ASTStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTStereotype.java";
  }

  @(ASTStereoValue.java!2):JavaSourceFile{
    simpleName = "ASTStereoValue";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/ASTStereoValue.java";
  }

  @(CommonLiterals.java):JavaSourceFile{
    simpleName = "CommonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/CommonLiterals.java";
  }

  @(CommonMill.java):JavaSourceFile{
    simpleName = "CommonMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/CommonMill.java";
  }

  @(CommonNodeFactory.java):JavaSourceFile{
    simpleName = "CommonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/CommonNodeFactory.java";
  }

  @(CommonPackage.java):JavaSourceFile{
    simpleName = "CommonPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/CommonPackage.java";
  }

  @(CommonPackageImpl.java):JavaSourceFile{
    simpleName = "CommonPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_ast/CommonPackageImpl.java";
  }

  @(_cocos!68):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos";
  }

  @(CommonASTCardinalityCoCo.java):JavaSourceFile{
    simpleName = "CommonASTCardinalityCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTCardinalityCoCo.java";
  }

  @(CommonASTCommonNodeCoCo.java):JavaSourceFile{
    simpleName = "CommonASTCommonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTCommonNodeCoCo.java";
  }

  @(CommonASTCompletenessCoCo.java):JavaSourceFile{
    simpleName = "CommonASTCompletenessCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTCompletenessCoCo.java";
  }

  @(CommonASTModifierCoCo.java):JavaSourceFile{
    simpleName = "CommonASTModifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTModifierCoCo.java";
  }

  @(CommonASTStereotypeCoCo.java):JavaSourceFile{
    simpleName = "CommonASTStereotypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTStereotypeCoCo.java";
  }

  @(CommonASTStereoValueCoCo.java):JavaSourceFile{
    simpleName = "CommonASTStereoValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonASTStereoValueCoCo.java";
  }

  @(CommonCoCoChecker.java):JavaSourceFile{
    simpleName = "CommonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonCoCoChecker.java";
  }

  @(CommonCommonPackageCoCo.java):JavaSourceFile{
    simpleName = "CommonCommonPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_cocos/CommonCommonPackageCoCo.java";
  }

  @(_od!68):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_od";
  }

  @(Common2OD.java):JavaSourceFile{
    simpleName = "Common2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_od/Common2OD.java";
  }

  @(_symboltable!42):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_symboltable";
  }

  @(CommonLanguage.java):JavaSourceFile{
    simpleName = "CommonLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_symboltable/CommonLanguage.java";
  }

  @(CommonModelLoader.java):JavaSourceFile{
    simpleName = "CommonModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_symboltable/CommonModelLoader.java";
  }

  @(_visitor!68):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_visitor";
  }

  @(CommonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CommonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_visitor/CommonDelegatorVisitor.java";
  }

  @(CommonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CommonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_visitor/CommonInheritanceVisitor.java";
  }

  @(CommonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CommonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_visitor/CommonParentAwareVisitor.java";
  }

  @(CommonVisitor.java):JavaSourceFile{
    simpleName = "CommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/common/common/_visitor/CommonVisitor.java";
  }

  @(commonexpressions!2):Directory{
    simpleName = "commonexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions";
  }

  @(_ast!75):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast";
  }

  @(ASTArguments.java!2):JavaSourceFile{
    simpleName = "ASTArguments";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTArguments.java";
  }

  @(ASTBooleanAndOpExpression.java):JavaSourceFile{
    simpleName = "ASTBooleanAndOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTBooleanAndOpExpression.java";
  }

  @(ASTBooleanNotExpression.java):JavaSourceFile{
    simpleName = "ASTBooleanNotExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTBooleanNotExpression.java";
  }

  @(ASTBooleanOrOpExpression.java):JavaSourceFile{
    simpleName = "ASTBooleanOrOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTBooleanOrOpExpression.java";
  }

  @(ASTBracketExpression.java):JavaSourceFile{
    simpleName = "ASTBracketExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTBracketExpression.java";
  }

  @(ASTCallExpression.java):JavaSourceFile{
    simpleName = "ASTCallExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTCallExpression.java";
  }

  @(ASTCommonExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTCommonExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTCommonExpressionsNode.java";
  }

  @(ASTConditionalExpression.java):JavaSourceFile{
    simpleName = "ASTConditionalExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTConditionalExpression.java";
  }

  @(ASTConstantsCommonExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsCommonExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTConstantsCommonExpressions.java";
  }

  @(ASTDivideExpression.java):JavaSourceFile{
    simpleName = "ASTDivideExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTDivideExpression.java";
  }

  @(ASTEqualsExpression.java):JavaSourceFile{
    simpleName = "ASTEqualsExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTEqualsExpression.java";
  }

  @(ASTEquivalentExpression.java):JavaSourceFile{
    simpleName = "ASTEquivalentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTEquivalentExpression.java";
  }

  @(ASTGreaterEqualExpression.java):JavaSourceFile{
    simpleName = "ASTGreaterEqualExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTGreaterEqualExpression.java";
  }

  @(ASTGreaterThanExpression.java):JavaSourceFile{
    simpleName = "ASTGreaterThanExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTGreaterThanExpression.java";
  }

  @(ASTInfixExpression.java):JavaSourceFile{
    simpleName = "ASTInfixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTInfixExpression.java";
  }

  @(ASTLessEqualExpression.java):JavaSourceFile{
    simpleName = "ASTLessEqualExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTLessEqualExpression.java";
  }

  @(ASTLessThanExpression.java):JavaSourceFile{
    simpleName = "ASTLessThanExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTLessThanExpression.java";
  }

  @(ASTLogicalNotExpression.java):JavaSourceFile{
    simpleName = "ASTLogicalNotExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTLogicalNotExpression.java";
  }

  @(ASTMinusExpression.java):JavaSourceFile{
    simpleName = "ASTMinusExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTMinusExpression.java";
  }

  @(ASTModuloExpression.java):JavaSourceFile{
    simpleName = "ASTModuloExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTModuloExpression.java";
  }

  @(ASTMultExpression.java):JavaSourceFile{
    simpleName = "ASTMultExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTMultExpression.java";
  }

  @(ASTNotEqualsExpression.java):JavaSourceFile{
    simpleName = "ASTNotEqualsExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTNotEqualsExpression.java";
  }

  @(ASTPlusExpression.java):JavaSourceFile{
    simpleName = "ASTPlusExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTPlusExpression.java";
  }

  @(ASTSimpleAssignmentExpression.java):JavaSourceFile{
    simpleName = "ASTSimpleAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/ASTSimpleAssignmentExpression.java";
  }

  @(CommonExpressionsLiterals.java):JavaSourceFile{
    simpleName = "CommonExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/CommonExpressionsLiterals.java";
  }

  @(CommonExpressionsMill.java):JavaSourceFile{
    simpleName = "CommonExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/CommonExpressionsMill.java";
  }

  @(CommonExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "CommonExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/CommonExpressionsNodeFactory.java";
  }

  @(CommonExpressionsPackage.java):JavaSourceFile{
    simpleName = "CommonExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/CommonExpressionsPackage.java";
  }

  @(CommonExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "CommonExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_ast/CommonExpressionsPackageImpl.java";
  }

  @(_cocos!69):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos";
  }

  @(CommonExpressionsASTArgumentsCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTArgumentsCoCo.java";
  }

  @(CommonExpressionsASTBooleanAndOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTBooleanAndOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanAndOpExpressionCoCo.java";
  }

  @(CommonExpressionsASTBooleanNotExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTBooleanNotExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanNotExpressionCoCo.java";
  }

  @(CommonExpressionsASTBooleanOrOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTBooleanOrOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBooleanOrOpExpressionCoCo.java";
  }

  @(CommonExpressionsASTBracketExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTBracketExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTBracketExpressionCoCo.java";
  }

  @(CommonExpressionsASTCallExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTCallExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTCallExpressionCoCo.java";
  }

  @(CommonExpressionsASTCommonExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTCommonExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTCommonExpressionsNodeCoCo.java";
  }

  @(CommonExpressionsASTConditionalExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTConditionalExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTConditionalExpressionCoCo.java";
  }

  @(CommonExpressionsASTDivideExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTDivideExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTDivideExpressionCoCo.java";
  }

  @(CommonExpressionsASTEqualsExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTEqualsExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTEqualsExpressionCoCo.java";
  }

  @(CommonExpressionsASTEquivalentExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTEquivalentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTEquivalentExpressionCoCo.java";
  }

  @(CommonExpressionsASTGreaterEqualExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTGreaterEqualExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTGreaterEqualExpressionCoCo.java";
  }

  @(CommonExpressionsASTGreaterThanExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTGreaterThanExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTGreaterThanExpressionCoCo.java";
  }

  @(CommonExpressionsASTInfixExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTInfixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTInfixExpressionCoCo.java";
  }

  @(CommonExpressionsASTLessEqualExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTLessEqualExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLessEqualExpressionCoCo.java";
  }

  @(CommonExpressionsASTLessThanExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTLessThanExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLessThanExpressionCoCo.java";
  }

  @(CommonExpressionsASTLogicalNotExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTLogicalNotExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTLogicalNotExpressionCoCo.java";
  }

  @(CommonExpressionsASTMinusExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTMinusExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTMinusExpressionCoCo.java";
  }

  @(CommonExpressionsASTModuloExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTModuloExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTModuloExpressionCoCo.java";
  }

  @(CommonExpressionsASTMultExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTMultExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTMultExpressionCoCo.java";
  }

  @(CommonExpressionsASTNotEqualsExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTNotEqualsExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTNotEqualsExpressionCoCo.java";
  }

  @(CommonExpressionsASTPlusExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTPlusExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTPlusExpressionCoCo.java";
  }

  @(CommonExpressionsASTSimpleAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsASTSimpleAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsASTSimpleAssignmentExpressionCoCo.java";
  }

  @(CommonExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "CommonExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsCoCoChecker.java";
  }

  @(CommonExpressionsCommonExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "CommonExpressionsCommonExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_cocos/CommonExpressionsCommonExpressionsPackageCoCo.java";
  }

  @(_od!69):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_od";
  }

  @(CommonExpressions2OD.java):JavaSourceFile{
    simpleName = "CommonExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_od/CommonExpressions2OD.java";
  }

  @(_symboltable!43):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_symboltable";
  }

  @(CommonExpressionsLanguage.java):JavaSourceFile{
    simpleName = "CommonExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_symboltable/CommonExpressionsLanguage.java";
  }

  @(CommonExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "CommonExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_symboltable/CommonExpressionsModelLoader.java";
  }

  @(_visitor!69):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_visitor";
  }

  @(CommonExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CommonExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_visitor/CommonExpressionsDelegatorVisitor.java";
  }

  @(CommonExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CommonExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_visitor/CommonExpressionsInheritanceVisitor.java";
  }

  @(CommonExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CommonExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_visitor/CommonExpressionsParentAwareVisitor.java";
  }

  @(CommonExpressionsVisitor.java):JavaSourceFile{
    simpleName = "CommonExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/commonexpressions/_visitor/CommonExpressionsVisitor.java";
  }

  @(completeness!2):Directory{
    simpleName = "completeness";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness";
  }

  @(_ast!76):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast";
  }

  @(ASTCompleteness.java!3):JavaSourceFile{
    simpleName = "ASTCompleteness";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/ASTCompleteness.java";
  }

  @(ASTCompletenessNode.java):JavaSourceFile{
    simpleName = "ASTCompletenessNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/ASTCompletenessNode.java";
  }

  @(ASTConstantsCompleteness.java):JavaSourceFile{
    simpleName = "ASTConstantsCompleteness";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/ASTConstantsCompleteness.java";
  }

  @(CompletenessLiterals.java):JavaSourceFile{
    simpleName = "CompletenessLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/CompletenessLiterals.java";
  }

  @(CompletenessMill.java):JavaSourceFile{
    simpleName = "CompletenessMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/CompletenessMill.java";
  }

  @(CompletenessNodeFactory.java):JavaSourceFile{
    simpleName = "CompletenessNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/CompletenessNodeFactory.java";
  }

  @(CompletenessPackage.java):JavaSourceFile{
    simpleName = "CompletenessPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/CompletenessPackage.java";
  }

  @(CompletenessPackageImpl.java):JavaSourceFile{
    simpleName = "CompletenessPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_ast/CompletenessPackageImpl.java";
  }

  @(_cocos!70):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_cocos";
  }

  @(CompletenessASTCompletenessCoCo.java):JavaSourceFile{
    simpleName = "CompletenessASTCompletenessCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_cocos/CompletenessASTCompletenessCoCo.java";
  }

  @(CompletenessASTCompletenessNodeCoCo.java):JavaSourceFile{
    simpleName = "CompletenessASTCompletenessNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_cocos/CompletenessASTCompletenessNodeCoCo.java";
  }

  @(CompletenessCoCoChecker.java):JavaSourceFile{
    simpleName = "CompletenessCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_cocos/CompletenessCoCoChecker.java";
  }

  @(CompletenessCompletenessPackageCoCo.java):JavaSourceFile{
    simpleName = "CompletenessCompletenessPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_cocos/CompletenessCompletenessPackageCoCo.java";
  }

  @(_od!70):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_od";
  }

  @(Completeness2OD.java):JavaSourceFile{
    simpleName = "Completeness2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_od/Completeness2OD.java";
  }

  @(_symboltable!44):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_symboltable";
  }

  @(CompletenessLanguage.java):JavaSourceFile{
    simpleName = "CompletenessLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_symboltable/CompletenessLanguage.java";
  }

  @(CompletenessModelLoader.java):JavaSourceFile{
    simpleName = "CompletenessModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_symboltable/CompletenessModelLoader.java";
  }

  @(_visitor!70):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_visitor";
  }

  @(CompletenessDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CompletenessDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_visitor/CompletenessDelegatorVisitor.java";
  }

  @(CompletenessInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CompletenessInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_visitor/CompletenessInheritanceVisitor.java";
  }

  @(CompletenessParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CompletenessParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_visitor/CompletenessParentAwareVisitor.java";
  }

  @(CompletenessVisitor.java):JavaSourceFile{
    simpleName = "CompletenessVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/completeness/_visitor/CompletenessVisitor.java";
  }

  @(expressionsbasis!2):Directory{
    simpleName = "expressionsbasis";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis";
  }

  @(_ast!77):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast";
  }

  @(ASTConstantsExpressionsBasis.java):JavaSourceFile{
    simpleName = "ASTConstantsExpressionsBasis";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ASTConstantsExpressionsBasis.java";
  }

  @(ASTExpression.java!3):JavaSourceFile{
    simpleName = "ASTExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ASTExpression.java";
  }

  @(ASTExpressionsBasisNode.java):JavaSourceFile{
    simpleName = "ASTExpressionsBasisNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ASTExpressionsBasisNode.java";
  }

  @(ExpressionsBasisLiterals.java):JavaSourceFile{
    simpleName = "ExpressionsBasisLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ExpressionsBasisLiterals.java";
  }

  @(ExpressionsBasisMill.java):JavaSourceFile{
    simpleName = "ExpressionsBasisMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ExpressionsBasisMill.java";
  }

  @(ExpressionsBasisNodeFactory.java):JavaSourceFile{
    simpleName = "ExpressionsBasisNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ExpressionsBasisNodeFactory.java";
  }

  @(ExpressionsBasisPackage.java):JavaSourceFile{
    simpleName = "ExpressionsBasisPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ExpressionsBasisPackage.java";
  }

  @(ExpressionsBasisPackageImpl.java):JavaSourceFile{
    simpleName = "ExpressionsBasisPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_ast/ExpressionsBasisPackageImpl.java";
  }

  @(_cocos!71):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_cocos";
  }

  @(ExpressionsBasisASTExpressionCoCo.java):JavaSourceFile{
    simpleName = "ExpressionsBasisASTExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_cocos/ExpressionsBasisASTExpressionCoCo.java";
  }

  @(ExpressionsBasisASTExpressionsBasisNodeCoCo.java):JavaSourceFile{
    simpleName = "ExpressionsBasisASTExpressionsBasisNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_cocos/ExpressionsBasisASTExpressionsBasisNodeCoCo.java";
  }

  @(ExpressionsBasisCoCoChecker.java):JavaSourceFile{
    simpleName = "ExpressionsBasisCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_cocos/ExpressionsBasisCoCoChecker.java";
  }

  @(ExpressionsBasisExpressionsBasisPackageCoCo.java):JavaSourceFile{
    simpleName = "ExpressionsBasisExpressionsBasisPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_cocos/ExpressionsBasisExpressionsBasisPackageCoCo.java";
  }

  @(_od!71):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_od";
  }

  @(ExpressionsBasis2OD.java):JavaSourceFile{
    simpleName = "ExpressionsBasis2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_od/ExpressionsBasis2OD.java";
  }

  @(_symboltable!45):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_symboltable";
  }

  @(ExpressionsBasisLanguage.java):JavaSourceFile{
    simpleName = "ExpressionsBasisLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_symboltable/ExpressionsBasisLanguage.java";
  }

  @(ExpressionsBasisModelLoader.java):JavaSourceFile{
    simpleName = "ExpressionsBasisModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_symboltable/ExpressionsBasisModelLoader.java";
  }

  @(_visitor!71):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_visitor";
  }

  @(ExpressionsBasisDelegatorVisitor.java):JavaSourceFile{
    simpleName = "ExpressionsBasisDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_visitor/ExpressionsBasisDelegatorVisitor.java";
  }

  @(ExpressionsBasisInheritanceVisitor.java):JavaSourceFile{
    simpleName = "ExpressionsBasisInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_visitor/ExpressionsBasisInheritanceVisitor.java";
  }

  @(ExpressionsBasisParentAwareVisitor.java):JavaSourceFile{
    simpleName = "ExpressionsBasisParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_visitor/ExpressionsBasisParentAwareVisitor.java";
  }

  @(ExpressionsBasisVisitor.java):JavaSourceFile{
    simpleName = "ExpressionsBasisVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/expressionsbasis/_visitor/ExpressionsBasisVisitor.java";
  }

  @(javaclassexpressions!2):Directory{
    simpleName = "javaclassexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions";
  }

  @(_ast!78):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast";
  }

  @(ASTClassExpression.java):JavaSourceFile{
    simpleName = "ASTClassExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTClassExpression.java";
  }

  @(ASTConstantsJavaClassExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsJavaClassExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTConstantsJavaClassExpressions.java";
  }

  @(ASTELiteralExt.java):JavaSourceFile{
    simpleName = "ASTELiteralExt";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTELiteralExt.java";
  }

  @(ASTEReturnTypeExt.java):JavaSourceFile{
    simpleName = "ASTEReturnTypeExt";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTEReturnTypeExt.java";
  }

  @(ASTETypeArgumentsExt.java):JavaSourceFile{
    simpleName = "ASTETypeArgumentsExt";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTETypeArgumentsExt.java";
  }

  @(ASTETypeExt.java):JavaSourceFile{
    simpleName = "ASTETypeExt";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTETypeExt.java";
  }

  @(ASTGenericInvocationExpression.java):JavaSourceFile{
    simpleName = "ASTGenericInvocationExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationExpression.java";
  }

  @(ASTGenericInvocationSuffix.java):JavaSourceFile{
    simpleName = "ASTGenericInvocationSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTGenericInvocationSuffix.java";
  }

  @(ASTInstanceofExpression.java):JavaSourceFile{
    simpleName = "ASTInstanceofExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTInstanceofExpression.java";
  }

  @(ASTJavaClassExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTJavaClassExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTJavaClassExpressionsNode.java";
  }

  @(ASTLiteralExpression.java):JavaSourceFile{
    simpleName = "ASTLiteralExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTLiteralExpression.java";
  }

  @(ASTNameExpression.java):JavaSourceFile{
    simpleName = "ASTNameExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTNameExpression.java";
  }

  @(ASTPrimaryGenericInvocationExpression.java):JavaSourceFile{
    simpleName = "ASTPrimaryGenericInvocationExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTPrimaryGenericInvocationExpression.java";
  }

  @(ASTPrimarySuperExpression.java):JavaSourceFile{
    simpleName = "ASTPrimarySuperExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTPrimarySuperExpression.java";
  }

  @(ASTSuperExpression.java):JavaSourceFile{
    simpleName = "ASTSuperExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTSuperExpression.java";
  }

  @(ASTSuperSuffix.java!2):JavaSourceFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTSuperSuffix.java";
  }

  @(ASTTypeCastExpression.java):JavaSourceFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/ASTTypeCastExpression.java";
  }

  @(JavaClassExpressionsLiterals.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsLiterals.java";
  }

  @(JavaClassExpressionsMill.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsMill.java";
  }

  @(JavaClassExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsNodeFactory.java";
  }

  @(JavaClassExpressionsPackage.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsPackage.java";
  }

  @(JavaClassExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_ast/JavaClassExpressionsPackageImpl.java";
  }

  @(_cocos!72):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos";
  }

  @(JavaClassExpressionsASTClassExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTClassExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTClassExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTELiteralExtCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTELiteralExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTELiteralExtCoCo.java";
  }

  @(JavaClassExpressionsASTEReturnTypeExtCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTEReturnTypeExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTEReturnTypeExtCoCo.java";
  }

  @(JavaClassExpressionsASTETypeArgumentsExtCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTETypeArgumentsExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTETypeArgumentsExtCoCo.java";
  }

  @(JavaClassExpressionsASTETypeExtCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTETypeExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTETypeExtCoCo.java";
  }

  @(JavaClassExpressionsASTGenericInvocationExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTGenericInvocationExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTGenericInvocationExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTGenericInvocationSuffixCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTGenericInvocationSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTGenericInvocationSuffixCoCo.java";
  }

  @(JavaClassExpressionsASTInstanceofExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTInstanceofExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTInstanceofExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTJavaClassExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.java";
  }

  @(JavaClassExpressionsASTLiteralExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTLiteralExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTLiteralExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTNameExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTNameExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTNameExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTPrimarySuperExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTPrimarySuperExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTPrimarySuperExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTSuperExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTSuperExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTSuperExpressionCoCo.java";
  }

  @(JavaClassExpressionsASTSuperSuffixCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTSuperSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTSuperSuffixCoCo.java";
  }

  @(JavaClassExpressionsASTTypeCastExpressionCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsASTTypeCastExpressionCoCo.java";
  }

  @(JavaClassExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsCoCoChecker.java";
  }

  @(JavaClassExpressionsJavaClassExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsJavaClassExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_cocos/JavaClassExpressionsJavaClassExpressionsPackageCoCo.java";
  }

  @(_od!72):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_od";
  }

  @(JavaClassExpressions2OD.java):JavaSourceFile{
    simpleName = "JavaClassExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_od/JavaClassExpressions2OD.java";
  }

  @(_symboltable!46):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_symboltable";
  }

  @(JavaClassExpressionsLanguage.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_symboltable/JavaClassExpressionsLanguage.java";
  }

  @(JavaClassExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_symboltable/JavaClassExpressionsModelLoader.java";
  }

  @(_visitor!72):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_visitor";
  }

  @(JavaClassExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsDelegatorVisitor.java";
  }

  @(JavaClassExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsInheritanceVisitor.java";
  }

  @(JavaClassExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsParentAwareVisitor.java";
  }

  @(JavaClassExpressionsVisitor.java):JavaSourceFile{
    simpleName = "JavaClassExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/javaclassexpressions/_visitor/JavaClassExpressionsVisitor.java";
  }

  @(lexicals!11):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals";
  }

  @(lexicals!12):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals";
  }

  @(_ast!79):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast";
  }

  @(ASTConstantsLexicals.java):JavaSourceFile{
    simpleName = "ASTConstantsLexicals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/ASTConstantsLexicals.java";
  }

  @(ASTLexicalsNode.java):JavaSourceFile{
    simpleName = "ASTLexicalsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/ASTLexicalsNode.java";
  }

  @(LexicalsLiterals.java):JavaSourceFile{
    simpleName = "LexicalsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/LexicalsLiterals.java";
  }

  @(LexicalsMill.java):JavaSourceFile{
    simpleName = "LexicalsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/LexicalsMill.java";
  }

  @(LexicalsNodeFactory.java):JavaSourceFile{
    simpleName = "LexicalsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/LexicalsNodeFactory.java";
  }

  @(LexicalsPackage.java):JavaSourceFile{
    simpleName = "LexicalsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/LexicalsPackage.java";
  }

  @(LexicalsPackageImpl.java):JavaSourceFile{
    simpleName = "LexicalsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_ast/LexicalsPackageImpl.java";
  }

  @(_cocos!73):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_cocos";
  }

  @(LexicalsASTLexicalsNodeCoCo.java):JavaSourceFile{
    simpleName = "LexicalsASTLexicalsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_cocos/LexicalsASTLexicalsNodeCoCo.java";
  }

  @(LexicalsCoCoChecker.java):JavaSourceFile{
    simpleName = "LexicalsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_cocos/LexicalsCoCoChecker.java";
  }

  @(LexicalsLexicalsPackageCoCo.java):JavaSourceFile{
    simpleName = "LexicalsLexicalsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_cocos/LexicalsLexicalsPackageCoCo.java";
  }

  @(_od!73):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_od";
  }

  @(Lexicals2OD.java):JavaSourceFile{
    simpleName = "Lexicals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_od/Lexicals2OD.java";
  }

  @(_visitor!73):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_visitor";
  }

  @(LexicalsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "LexicalsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_visitor/LexicalsDelegatorVisitor.java";
  }

  @(LexicalsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "LexicalsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_visitor/LexicalsInheritanceVisitor.java";
  }

  @(LexicalsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "LexicalsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_visitor/LexicalsParentAwareVisitor.java";
  }

  @(LexicalsVisitor.java):JavaSourceFile{
    simpleName = "LexicalsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/lexicals/lexicals/_visitor/LexicalsVisitor.java";
  }

  @(literals!13):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals";
  }

  @(literals!14):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals";
  }

  @(_ast!80):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast";
  }

  @(ASTBooleanLiteral.java!2):JavaSourceFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTBooleanLiteral.java";
  }

  @(ASTCharLiteral.java!2):JavaSourceFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTCharLiteral.java";
  }

  @(ASTConstantsLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTConstantsLiterals.java";
  }

  @(ASTDoubleLiteral.java!2):JavaSourceFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTDoubleLiteral.java";
  }

  @(ASTFloatLiteral.java!2):JavaSourceFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTFloatLiteral.java";
  }

  @(ASTIntLiteral.java!2):JavaSourceFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTIntLiteral.java";
  }

  @(ASTLiteral.java!2):JavaSourceFile{
    simpleName = "ASTLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTLiteral.java";
  }

  @(ASTLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTLiteralsNode.java";
  }

  @(ASTLongLiteral.java!2):JavaSourceFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTLongLiteral.java";
  }

  @(ASTNullLiteral.java!2):JavaSourceFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTNullLiteral.java";
  }

  @(ASTNumericLiteral.java!2):JavaSourceFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTNumericLiteral.java";
  }

  @(ASTSignedDoubleLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedDoubleLiteral.java";
  }

  @(ASTSignedFloatLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedFloatLiteral.java";
  }

  @(ASTSignedIntLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedIntLiteral.java";
  }

  @(ASTSignedLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedLiteral.java";
  }

  @(ASTSignedLongLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedLongLiteral.java";
  }

  @(ASTSignedNumericLiteral.java!2):JavaSourceFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTSignedNumericLiteral.java";
  }

  @(ASTStringLiteral.java!2):JavaSourceFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/ASTStringLiteral.java";
  }

  @(LiteralsLiterals.java):JavaSourceFile{
    simpleName = "LiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/LiteralsLiterals.java";
  }

  @(LiteralsMill.java):JavaSourceFile{
    simpleName = "LiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/LiteralsMill.java";
  }

  @(LiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "LiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/LiteralsNodeFactory.java";
  }

  @(LiteralsPackage.java):JavaSourceFile{
    simpleName = "LiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/LiteralsPackage.java";
  }

  @(LiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "LiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_ast/LiteralsPackageImpl.java";
  }

  @(_cocos!74):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos";
  }

  @(LiteralsASTBooleanLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTBooleanLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTBooleanLiteralCoCo.java";
  }

  @(LiteralsASTCharLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTCharLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTCharLiteralCoCo.java";
  }

  @(LiteralsASTDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTDoubleLiteralCoCo.java";
  }

  @(LiteralsASTFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTFloatLiteralCoCo.java";
  }

  @(LiteralsASTIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTIntLiteralCoCo.java";
  }

  @(LiteralsASTLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTLiteralCoCo.java";
  }

  @(LiteralsASTLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTLiteralsNodeCoCo.java";
  }

  @(LiteralsASTLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTLongLiteralCoCo.java";
  }

  @(LiteralsASTNullLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTNullLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTNullLiteralCoCo.java";
  }

  @(LiteralsASTNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTNumericLiteralCoCo.java";
  }

  @(LiteralsASTSignedDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedDoubleLiteralCoCo.java";
  }

  @(LiteralsASTSignedFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedFloatLiteralCoCo.java";
  }

  @(LiteralsASTSignedIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedIntLiteralCoCo.java";
  }

  @(LiteralsASTSignedLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedLiteralCoCo.java";
  }

  @(LiteralsASTSignedLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedLongLiteralCoCo.java";
  }

  @(LiteralsASTSignedNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTSignedNumericLiteralCoCo.java";
  }

  @(LiteralsASTStringLiteralCoCo.java):JavaSourceFile{
    simpleName = "LiteralsASTStringLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsASTStringLiteralCoCo.java";
  }

  @(LiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "LiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsCoCoChecker.java";
  }

  @(LiteralsLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "LiteralsLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_cocos/LiteralsLiteralsPackageCoCo.java";
  }

  @(_od!74):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_od";
  }

  @(Literals2OD.java):JavaSourceFile{
    simpleName = "Literals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_od/Literals2OD.java";
  }

  @(_symboltable!47):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_symboltable";
  }

  @(LiteralsLanguage.java):JavaSourceFile{
    simpleName = "LiteralsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_symboltable/LiteralsLanguage.java";
  }

  @(LiteralsModelLoader.java):JavaSourceFile{
    simpleName = "LiteralsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_symboltable/LiteralsModelLoader.java";
  }

  @(_visitor!74):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_visitor";
  }

  @(LiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "LiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_visitor/LiteralsDelegatorVisitor.java";
  }

  @(LiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "LiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_visitor/LiteralsInheritanceVisitor.java";
  }

  @(LiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "LiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_visitor/LiteralsParentAwareVisitor.java";
  }

  @(LiteralsVisitor.java):JavaSourceFile{
    simpleName = "LiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/literals/literals/_visitor/LiteralsVisitor.java";
  }

  @(mcbasics!2):Directory{
    simpleName = "mcbasics";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics";
  }

  @(_ast!81):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast";
  }

  @(ASTConstantsMCBasics.java):JavaSourceFile{
    simpleName = "ASTConstantsMCBasics";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/ASTConstantsMCBasics.java";
  }

  @(ASTMCBasicsNode.java):JavaSourceFile{
    simpleName = "ASTMCBasicsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/ASTMCBasicsNode.java";
  }

  @(MCBasicsLiterals.java):JavaSourceFile{
    simpleName = "MCBasicsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/MCBasicsLiterals.java";
  }

  @(MCBasicsMill.java):JavaSourceFile{
    simpleName = "MCBasicsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/MCBasicsMill.java";
  }

  @(MCBasicsNodeFactory.java):JavaSourceFile{
    simpleName = "MCBasicsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/MCBasicsNodeFactory.java";
  }

  @(MCBasicsPackage.java):JavaSourceFile{
    simpleName = "MCBasicsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/MCBasicsPackage.java";
  }

  @(MCBasicsPackageImpl.java):JavaSourceFile{
    simpleName = "MCBasicsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_ast/MCBasicsPackageImpl.java";
  }

  @(_cocos!75):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_cocos";
  }

  @(MCBasicsASTMCBasicsNodeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicsASTMCBasicsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_cocos/MCBasicsASTMCBasicsNodeCoCo.java";
  }

  @(MCBasicsCoCoChecker.java):JavaSourceFile{
    simpleName = "MCBasicsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_cocos/MCBasicsCoCoChecker.java";
  }

  @(MCBasicsMCBasicsPackageCoCo.java):JavaSourceFile{
    simpleName = "MCBasicsMCBasicsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_cocos/MCBasicsMCBasicsPackageCoCo.java";
  }

  @(_od!75):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_od";
  }

  @(MCBasics2OD.java):JavaSourceFile{
    simpleName = "MCBasics2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_od/MCBasics2OD.java";
  }

  @(_visitor!75):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_visitor";
  }

  @(MCBasicsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCBasicsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_visitor/MCBasicsDelegatorVisitor.java";
  }

  @(MCBasicsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCBasicsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_visitor/MCBasicsInheritanceVisitor.java";
  }

  @(MCBasicsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCBasicsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_visitor/MCBasicsParentAwareVisitor.java";
  }

  @(MCBasicsVisitor.java):JavaSourceFile{
    simpleName = "MCBasicsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasics/_visitor/MCBasicsVisitor.java";
  }

  @(mcbasictypes1!2):Directory{
    simpleName = "mcbasictypes1";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1";
  }

  @(_ast!82):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast";
  }

  @(ASTBooleanType.java):JavaSourceFile{
    simpleName = "ASTBooleanType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTBooleanType.java";
  }

  @(ASTByteType.java):JavaSourceFile{
    simpleName = "ASTByteType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTByteType.java";
  }

  @(ASTCharType.java):JavaSourceFile{
    simpleName = "ASTCharType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTCharType.java";
  }

  @(ASTConstantsMCBasicTypes1.java):JavaSourceFile{
    simpleName = "ASTConstantsMCBasicTypes1";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTConstantsMCBasicTypes1.java";
  }

  @(ASTDoubleType.java):JavaSourceFile{
    simpleName = "ASTDoubleType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTDoubleType.java";
  }

  @(ASTFloatType.java):JavaSourceFile{
    simpleName = "ASTFloatType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTFloatType.java";
  }

  @(ASTImportStatement.java!2):JavaSourceFile{
    simpleName = "ASTImportStatement";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTImportStatement.java";
  }

  @(ASTIntType.java):JavaSourceFile{
    simpleName = "ASTIntType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTIntType.java";
  }

  @(ASTLongType.java):JavaSourceFile{
    simpleName = "ASTLongType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTLongType.java";
  }

  @(ASTMCBasicTypes1Node.java):JavaSourceFile{
    simpleName = "ASTMCBasicTypes1Node";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTMCBasicTypes1Node.java";
  }

  @(ASTNameAsReferenceType.java):JavaSourceFile{
    simpleName = "ASTNameAsReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTNameAsReferenceType.java";
  }

  @(ASTPrimitiveType.java!2):JavaSourceFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTPrimitiveType.java";
  }

  @(ASTQualifiedName.java!3):JavaSourceFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTQualifiedName.java";
  }

  @(ASTReferenceType.java!2):JavaSourceFile{
    simpleName = "ASTReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTReferenceType.java";
  }

  @(ASTReturnType.java!2):JavaSourceFile{
    simpleName = "ASTReturnType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTReturnType.java";
  }

  @(ASTShortType.java):JavaSourceFile{
    simpleName = "ASTShortType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTShortType.java";
  }

  @(ASTType.java!2):JavaSourceFile{
    simpleName = "ASTType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTType.java";
  }

  @(ASTVoidType.java!2):JavaSourceFile{
    simpleName = "ASTVoidType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/ASTVoidType.java";
  }

  @(MCBasicTypes1Literals.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Literals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Literals.java";
  }

  @(MCBasicTypes1Mill.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Mill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Mill.java";
  }

  @(MCBasicTypes1NodeFactory.java):JavaSourceFile{
    simpleName = "MCBasicTypes1NodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/MCBasicTypes1NodeFactory.java";
  }

  @(MCBasicTypes1Package.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Package";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/MCBasicTypes1Package.java";
  }

  @(MCBasicTypes1PackageImpl.java):JavaSourceFile{
    simpleName = "MCBasicTypes1PackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_ast/MCBasicTypes1PackageImpl.java";
  }

  @(_cocos!76):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos";
  }

  @(MCBasicTypes1ASTBooleanTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTBooleanTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTBooleanTypeCoCo.java";
  }

  @(MCBasicTypes1ASTByteTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTByteTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTByteTypeCoCo.java";
  }

  @(MCBasicTypes1ASTCharTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTCharTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTCharTypeCoCo.java";
  }

  @(MCBasicTypes1ASTDoubleTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTDoubleTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTDoubleTypeCoCo.java";
  }

  @(MCBasicTypes1ASTFloatTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTFloatTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTFloatTypeCoCo.java";
  }

  @(MCBasicTypes1ASTImportStatementCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTImportStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTImportStatementCoCo.java";
  }

  @(MCBasicTypes1ASTIntTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTIntTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTIntTypeCoCo.java";
  }

  @(MCBasicTypes1ASTLongTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTLongTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTLongTypeCoCo.java";
  }

  @(MCBasicTypes1ASTMCBasicTypes1NodeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTMCBasicTypes1NodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTMCBasicTypes1NodeCoCo.java";
  }

  @(MCBasicTypes1ASTNameAsReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTNameAsReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTNameAsReferenceTypeCoCo.java";
  }

  @(MCBasicTypes1ASTPrimitiveTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTPrimitiveTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTPrimitiveTypeCoCo.java";
  }

  @(MCBasicTypes1ASTQualifiedNameCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTQualifiedNameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTQualifiedNameCoCo.java";
  }

  @(MCBasicTypes1ASTReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTReferenceTypeCoCo.java";
  }

  @(MCBasicTypes1ASTReturnTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTReturnTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTReturnTypeCoCo.java";
  }

  @(MCBasicTypes1ASTShortTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTShortTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTShortTypeCoCo.java";
  }

  @(MCBasicTypes1ASTTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTTypeCoCo.java";
  }

  @(MCBasicTypes1ASTVoidTypeCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ASTVoidTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1ASTVoidTypeCoCo.java";
  }

  @(MCBasicTypes1CoCoChecker.java):JavaSourceFile{
    simpleName = "MCBasicTypes1CoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1CoCoChecker.java";
  }

  @(MCBasicTypes1MCBasicTypes1PackageCoCo.java):JavaSourceFile{
    simpleName = "MCBasicTypes1MCBasicTypes1PackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_cocos/MCBasicTypes1MCBasicTypes1PackageCoCo.java";
  }

  @(_od!76):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_od";
  }

  @(MCBasicTypes12OD.java):JavaSourceFile{
    simpleName = "MCBasicTypes12OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_od/MCBasicTypes12OD.java";
  }

  @(_symboltable!48):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_symboltable";
  }

  @(MCBasicTypes1Language.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Language";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_symboltable/MCBasicTypes1Language.java";
  }

  @(MCBasicTypes1ModelLoader.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_symboltable/MCBasicTypes1ModelLoader.java";
  }

  @(_visitor!76):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_visitor";
  }

  @(MCBasicTypes1DelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCBasicTypes1DelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1DelegatorVisitor.java";
  }

  @(MCBasicTypes1InheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCBasicTypes1InheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1InheritanceVisitor.java";
  }

  @(MCBasicTypes1ParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCBasicTypes1ParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1ParentAwareVisitor.java";
  }

  @(MCBasicTypes1Visitor.java):JavaSourceFile{
    simpleName = "MCBasicTypes1Visitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcbasictypes1/_visitor/MCBasicTypes1Visitor.java";
  }

  @(mccommon!2):Directory{
    simpleName = "mccommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon";
  }

  @(_ast!83):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast";
  }

  @(ASTConstantsMCCommon.java):JavaSourceFile{
    simpleName = "ASTConstantsMCCommon";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/ASTConstantsMCCommon.java";
  }

  @(ASTMCCommonNode.java):JavaSourceFile{
    simpleName = "ASTMCCommonNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/ASTMCCommonNode.java";
  }

  @(MCCommonLiterals.java):JavaSourceFile{
    simpleName = "MCCommonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/MCCommonLiterals.java";
  }

  @(MCCommonMill.java):JavaSourceFile{
    simpleName = "MCCommonMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/MCCommonMill.java";
  }

  @(MCCommonNodeFactory.java):JavaSourceFile{
    simpleName = "MCCommonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/MCCommonNodeFactory.java";
  }

  @(MCCommonPackage.java):JavaSourceFile{
    simpleName = "MCCommonPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/MCCommonPackage.java";
  }

  @(MCCommonPackageImpl.java):JavaSourceFile{
    simpleName = "MCCommonPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_ast/MCCommonPackageImpl.java";
  }

  @(_cocos!77):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_cocos";
  }

  @(MCCommonASTMCCommonNodeCoCo.java):JavaSourceFile{
    simpleName = "MCCommonASTMCCommonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_cocos/MCCommonASTMCCommonNodeCoCo.java";
  }

  @(MCCommonCoCoChecker.java):JavaSourceFile{
    simpleName = "MCCommonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_cocos/MCCommonCoCoChecker.java";
  }

  @(MCCommonMCCommonPackageCoCo.java):JavaSourceFile{
    simpleName = "MCCommonMCCommonPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_cocos/MCCommonMCCommonPackageCoCo.java";
  }

  @(_od!77):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_od";
  }

  @(MCCommon2OD.java):JavaSourceFile{
    simpleName = "MCCommon2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_od/MCCommon2OD.java";
  }

  @(_visitor!77):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_visitor";
  }

  @(MCCommonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCCommonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_visitor/MCCommonDelegatorVisitor.java";
  }

  @(MCCommonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCCommonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_visitor/MCCommonInheritanceVisitor.java";
  }

  @(MCCommonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCCommonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_visitor/MCCommonParentAwareVisitor.java";
  }

  @(MCCommonVisitor.java):JavaSourceFile{
    simpleName = "MCCommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mccommon/_visitor/MCCommonVisitor.java";
  }

  @(mcexpressions!2):Directory{
    simpleName = "mcexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions";
  }

  @(_ast!84):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast";
  }

  @(ASTAddExpression.java):JavaSourceFile{
    simpleName = "ASTAddExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTAddExpression.java";
  }

  @(ASTArguments.java!3):JavaSourceFile{
    simpleName = "ASTArguments";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTArguments.java";
  }

  @(ASTArrayExpression.java):JavaSourceFile{
    simpleName = "ASTArrayExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTArrayExpression.java";
  }

  @(ASTAssignmentExpression.java!2):JavaSourceFile{
    simpleName = "ASTAssignmentExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTAssignmentExpression.java";
  }

  @(ASTBinaryAndOpExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryAndOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBinaryAndOpExpression.java";
  }

  @(ASTBinaryOrOpExpression.java!2):JavaSourceFile{
    simpleName = "ASTBinaryOrOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBinaryOrOpExpression.java";
  }

  @(ASTBinaryXorOpExpression.java):JavaSourceFile{
    simpleName = "ASTBinaryXorOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBinaryXorOpExpression.java";
  }

  @(ASTBooleanAndOpExpression.java!2):JavaSourceFile{
    simpleName = "ASTBooleanAndOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBooleanAndOpExpression.java";
  }

  @(ASTBooleanNotExpression.java!2):JavaSourceFile{
    simpleName = "ASTBooleanNotExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBooleanNotExpression.java";
  }

  @(ASTBooleanOrOpExpression.java!2):JavaSourceFile{
    simpleName = "ASTBooleanOrOpExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBooleanOrOpExpression.java";
  }

  @(ASTBracketExpression.java!2):JavaSourceFile{
    simpleName = "ASTBracketExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTBracketExpression.java";
  }

  @(ASTCallExpression.java!2):JavaSourceFile{
    simpleName = "ASTCallExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTCallExpression.java";
  }

  @(ASTClassExpression.java!2):JavaSourceFile{
    simpleName = "ASTClassExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTClassExpression.java";
  }

  @(ASTComparisonExpression.java):JavaSourceFile{
    simpleName = "ASTComparisonExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTComparisonExpression.java";
  }

  @(ASTConditionalExpression.java!2):JavaSourceFile{
    simpleName = "ASTConditionalExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTConditionalExpression.java";
  }

  @(ASTConstantsMCExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsMCExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTConstantsMCExpressions.java";
  }

  @(ASTExpression.java!4):JavaSourceFile{
    simpleName = "ASTExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTExpression.java";
  }

  @(ASTGenericInvocationExpression.java!2):JavaSourceFile{
    simpleName = "ASTGenericInvocationExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTGenericInvocationExpression.java";
  }

  @(ASTGenericInvocationSuffix.java!2):JavaSourceFile{
    simpleName = "ASTGenericInvocationSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTGenericInvocationSuffix.java";
  }

  @(ASTIdentityExpression.java):JavaSourceFile{
    simpleName = "ASTIdentityExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTIdentityExpression.java";
  }

  @(ASTInstanceofExpression.java!2):JavaSourceFile{
    simpleName = "ASTInstanceofExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTInstanceofExpression.java";
  }

  @(ASTLiteralExpression.java!2):JavaSourceFile{
    simpleName = "ASTLiteralExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTLiteralExpression.java";
  }

  @(ASTLogicalNotExpression.java!2):JavaSourceFile{
    simpleName = "ASTLogicalNotExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTLogicalNotExpression.java";
  }

  @(ASTMCExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTMCExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTMCExpressionsNode.java";
  }

  @(ASTMultExpression.java!2):JavaSourceFile{
    simpleName = "ASTMultExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTMultExpression.java";
  }

  @(ASTNameExpression.java!2):JavaSourceFile{
    simpleName = "ASTNameExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTNameExpression.java";
  }

  @(ASTPrefixExpression.java):JavaSourceFile{
    simpleName = "ASTPrefixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTPrefixExpression.java";
  }

  @(ASTPrimaryGenericInvocationExpression.java!2):JavaSourceFile{
    simpleName = "ASTPrimaryGenericInvocationExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTPrimaryGenericInvocationExpression.java";
  }

  @(ASTPrimarySuperExpression.java!2):JavaSourceFile{
    simpleName = "ASTPrimarySuperExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTPrimarySuperExpression.java";
  }

  @(ASTPrimaryThisExpression.java):JavaSourceFile{
    simpleName = "ASTPrimaryThisExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTPrimaryThisExpression.java";
  }

  @(ASTQualifiedNameExpression.java):JavaSourceFile{
    simpleName = "ASTQualifiedNameExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTQualifiedNameExpression.java";
  }

  @(ASTShiftExpression.java):JavaSourceFile{
    simpleName = "ASTShiftExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTShiftExpression.java";
  }

  @(ASTSuffixExpression.java):JavaSourceFile{
    simpleName = "ASTSuffixExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTSuffixExpression.java";
  }

  @(ASTSuperExpression.java!2):JavaSourceFile{
    simpleName = "ASTSuperExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTSuperExpression.java";
  }

  @(ASTSuperSuffix.java!3):JavaSourceFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTSuperSuffix.java";
  }

  @(ASTThisExpression.java):JavaSourceFile{
    simpleName = "ASTThisExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTThisExpression.java";
  }

  @(ASTTypeCastExpression.java!2):JavaSourceFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/ASTTypeCastExpression.java";
  }

  @(MCExpressionsLiterals.java):JavaSourceFile{
    simpleName = "MCExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/MCExpressionsLiterals.java";
  }

  @(MCExpressionsMill.java):JavaSourceFile{
    simpleName = "MCExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/MCExpressionsMill.java";
  }

  @(MCExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "MCExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/MCExpressionsNodeFactory.java";
  }

  @(MCExpressionsPackage.java):JavaSourceFile{
    simpleName = "MCExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/MCExpressionsPackage.java";
  }

  @(MCExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "MCExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_ast/MCExpressionsPackageImpl.java";
  }

  @(_cocos!78):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos";
  }

  @(MCExpressionsASTAddExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTAddExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTAddExpressionCoCo.java";
  }

  @(MCExpressionsASTArgumentsCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTArgumentsCoCo.java";
  }

  @(MCExpressionsASTArrayExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTArrayExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTArrayExpressionCoCo.java";
  }

  @(MCExpressionsASTAssignmentExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTAssignmentExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTAssignmentExpressionCoCo.java";
  }

  @(MCExpressionsASTBinaryAndOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBinaryAndOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryAndOpExpressionCoCo.java";
  }

  @(MCExpressionsASTBinaryOrOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBinaryOrOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryOrOpExpressionCoCo.java";
  }

  @(MCExpressionsASTBinaryXorOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBinaryXorOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBinaryXorOpExpressionCoCo.java";
  }

  @(MCExpressionsASTBooleanAndOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBooleanAndOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanAndOpExpressionCoCo.java";
  }

  @(MCExpressionsASTBooleanNotExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBooleanNotExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanNotExpressionCoCo.java";
  }

  @(MCExpressionsASTBooleanOrOpExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBooleanOrOpExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBooleanOrOpExpressionCoCo.java";
  }

  @(MCExpressionsASTBracketExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTBracketExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTBracketExpressionCoCo.java";
  }

  @(MCExpressionsASTCallExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTCallExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTCallExpressionCoCo.java";
  }

  @(MCExpressionsASTClassExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTClassExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTClassExpressionCoCo.java";
  }

  @(MCExpressionsASTComparisonExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTComparisonExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTComparisonExpressionCoCo.java";
  }

  @(MCExpressionsASTConditionalExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTConditionalExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTConditionalExpressionCoCo.java";
  }

  @(MCExpressionsASTExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTExpressionCoCo.java";
  }

  @(MCExpressionsASTGenericInvocationExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTGenericInvocationExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTGenericInvocationExpressionCoCo.java";
  }

  @(MCExpressionsASTGenericInvocationSuffixCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTGenericInvocationSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTGenericInvocationSuffixCoCo.java";
  }

  @(MCExpressionsASTIdentityExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTIdentityExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTIdentityExpressionCoCo.java";
  }

  @(MCExpressionsASTInstanceofExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTInstanceofExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTInstanceofExpressionCoCo.java";
  }

  @(MCExpressionsASTLiteralExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTLiteralExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTLiteralExpressionCoCo.java";
  }

  @(MCExpressionsASTLogicalNotExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTLogicalNotExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTLogicalNotExpressionCoCo.java";
  }

  @(MCExpressionsASTMCExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTMCExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTMCExpressionsNodeCoCo.java";
  }

  @(MCExpressionsASTMultExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTMultExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTMultExpressionCoCo.java";
  }

  @(MCExpressionsASTNameExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTNameExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTNameExpressionCoCo.java";
  }

  @(MCExpressionsASTPrefixExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTPrefixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrefixExpressionCoCo.java";
  }

  @(MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTPrimaryGenericInvocationExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.java";
  }

  @(MCExpressionsASTPrimarySuperExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTPrimarySuperExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimarySuperExpressionCoCo.java";
  }

  @(MCExpressionsASTPrimaryThisExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTPrimaryThisExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTPrimaryThisExpressionCoCo.java";
  }

  @(MCExpressionsASTQualifiedNameExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTQualifiedNameExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTQualifiedNameExpressionCoCo.java";
  }

  @(MCExpressionsASTShiftExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTShiftExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTShiftExpressionCoCo.java";
  }

  @(MCExpressionsASTSuffixExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTSuffixExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuffixExpressionCoCo.java";
  }

  @(MCExpressionsASTSuperExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTSuperExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuperExpressionCoCo.java";
  }

  @(MCExpressionsASTSuperSuffixCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTSuperSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTSuperSuffixCoCo.java";
  }

  @(MCExpressionsASTThisExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTThisExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTThisExpressionCoCo.java";
  }

  @(MCExpressionsASTTypeCastExpressionCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsASTTypeCastExpressionCoCo.java";
  }

  @(MCExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "MCExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsCoCoChecker.java";
  }

  @(MCExpressionsMCExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "MCExpressionsMCExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_cocos/MCExpressionsMCExpressionsPackageCoCo.java";
  }

  @(_od!78):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_od";
  }

  @(MCExpressions2OD.java):JavaSourceFile{
    simpleName = "MCExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_od/MCExpressions2OD.java";
  }

  @(_symboltable!49):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_symboltable";
  }

  @(MCExpressionsLanguage.java):JavaSourceFile{
    simpleName = "MCExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_symboltable/MCExpressionsLanguage.java";
  }

  @(MCExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "MCExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_symboltable/MCExpressionsModelLoader.java";
  }

  @(_visitor!78):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_visitor";
  }

  @(MCExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_visitor/MCExpressionsDelegatorVisitor.java";
  }

  @(MCExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_visitor/MCExpressionsInheritanceVisitor.java";
  }

  @(MCExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_visitor/MCExpressionsParentAwareVisitor.java";
  }

  @(MCExpressionsVisitor.java):JavaSourceFile{
    simpleName = "MCExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcexpressions/_visitor/MCExpressionsVisitor.java";
  }

  @(mchexnumbers!2):Directory{
    simpleName = "mchexnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers";
  }

  @(_ast!85):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast";
  }

  @(ASTConstantsMCHexNumbers.java):JavaSourceFile{
    simpleName = "ASTConstantsMCHexNumbers";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/ASTConstantsMCHexNumbers.java";
  }

  @(ASTHexadecimal.java):JavaSourceFile{
    simpleName = "ASTHexadecimal";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/ASTHexadecimal.java";
  }

  @(ASTHexInteger.java):JavaSourceFile{
    simpleName = "ASTHexInteger";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/ASTHexInteger.java";
  }

  @(ASTMCHexNumbersNode.java):JavaSourceFile{
    simpleName = "ASTMCHexNumbersNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/ASTMCHexNumbersNode.java";
  }

  @(MCHexNumbersLiterals.java):JavaSourceFile{
    simpleName = "MCHexNumbersLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/MCHexNumbersLiterals.java";
  }

  @(MCHexNumbersMill.java):JavaSourceFile{
    simpleName = "MCHexNumbersMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/MCHexNumbersMill.java";
  }

  @(MCHexNumbersNodeFactory.java):JavaSourceFile{
    simpleName = "MCHexNumbersNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/MCHexNumbersNodeFactory.java";
  }

  @(MCHexNumbersPackage.java):JavaSourceFile{
    simpleName = "MCHexNumbersPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/MCHexNumbersPackage.java";
  }

  @(MCHexNumbersPackageImpl.java):JavaSourceFile{
    simpleName = "MCHexNumbersPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_ast/MCHexNumbersPackageImpl.java";
  }

  @(_cocos!79):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos";
  }

  @(MCHexNumbersASTHexadecimalCoCo.java):JavaSourceFile{
    simpleName = "MCHexNumbersASTHexadecimalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTHexadecimalCoCo.java";
  }

  @(MCHexNumbersASTHexIntegerCoCo.java):JavaSourceFile{
    simpleName = "MCHexNumbersASTHexIntegerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTHexIntegerCoCo.java";
  }

  @(MCHexNumbersASTMCHexNumbersNodeCoCo.java):JavaSourceFile{
    simpleName = "MCHexNumbersASTMCHexNumbersNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos/MCHexNumbersASTMCHexNumbersNodeCoCo.java";
  }

  @(MCHexNumbersCoCoChecker.java):JavaSourceFile{
    simpleName = "MCHexNumbersCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos/MCHexNumbersCoCoChecker.java";
  }

  @(MCHexNumbersMCHexNumbersPackageCoCo.java):JavaSourceFile{
    simpleName = "MCHexNumbersMCHexNumbersPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_cocos/MCHexNumbersMCHexNumbersPackageCoCo.java";
  }

  @(_od!79):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_od";
  }

  @(MCHexNumbers2OD.java):JavaSourceFile{
    simpleName = "MCHexNumbers2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_od/MCHexNumbers2OD.java";
  }

  @(_symboltable!50):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_symboltable";
  }

  @(MCHexNumbersLanguage.java):JavaSourceFile{
    simpleName = "MCHexNumbersLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_symboltable/MCHexNumbersLanguage.java";
  }

  @(MCHexNumbersModelLoader.java):JavaSourceFile{
    simpleName = "MCHexNumbersModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_symboltable/MCHexNumbersModelLoader.java";
  }

  @(_visitor!79):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_visitor";
  }

  @(MCHexNumbersDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCHexNumbersDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_visitor/MCHexNumbersDelegatorVisitor.java";
  }

  @(MCHexNumbersInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCHexNumbersInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_visitor/MCHexNumbersInheritanceVisitor.java";
  }

  @(MCHexNumbersParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCHexNumbersParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_visitor/MCHexNumbersParentAwareVisitor.java";
  }

  @(MCHexNumbersVisitor.java):JavaSourceFile{
    simpleName = "MCHexNumbersVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mchexnumbers/_visitor/MCHexNumbersVisitor.java";
  }

  @(mcliterals!3):Directory{
    simpleName = "mcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals";
  }

  @(_ast!86):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast";
  }

  @(ASTBooleanLiteral.java!3):JavaSourceFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTBooleanLiteral.java";
  }

  @(ASTCharLiteral.java!3):JavaSourceFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTCharLiteral.java";
  }

  @(ASTConstantsMCLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsMCLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTConstantsMCLiterals.java";
  }

  @(ASTDoubleLiteral.java!3):JavaSourceFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTDoubleLiteral.java";
  }

  @(ASTFloatLiteral.java!3):JavaSourceFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTFloatLiteral.java";
  }

  @(ASTIntLiteral.java!3):JavaSourceFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTIntLiteral.java";
  }

  @(ASTLiteral.java!3):JavaSourceFile{
    simpleName = "ASTLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTLiteral.java";
  }

  @(ASTLongLiteral.java!3):JavaSourceFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTLongLiteral.java";
  }

  @(ASTMCLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTMCLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTMCLiteralsNode.java";
  }

  @(ASTNatLiteral.java):JavaSourceFile{
    simpleName = "ASTNatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTNatLiteral.java";
  }

  @(ASTNullLiteral.java!3):JavaSourceFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTNullLiteral.java";
  }

  @(ASTNumericLiteral.java!3):JavaSourceFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTNumericLiteral.java";
  }

  @(ASTSignedDoubleLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedDoubleLiteral.java";
  }

  @(ASTSignedFloatLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedFloatLiteral.java";
  }

  @(ASTSignedIntLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedIntLiteral.java";
  }

  @(ASTSignedLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedLiteral.java";
  }

  @(ASTSignedLongLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedLongLiteral.java";
  }

  @(ASTSignedNatLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedNatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedNatLiteral.java";
  }

  @(ASTSignedNumericLiteral.java!3):JavaSourceFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTSignedNumericLiteral.java";
  }

  @(ASTStringLiteral.java!3):JavaSourceFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/ASTStringLiteral.java";
  }

  @(MCLiteralsLiterals.java):JavaSourceFile{
    simpleName = "MCLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/MCLiteralsLiterals.java";
  }

  @(MCLiteralsMill.java):JavaSourceFile{
    simpleName = "MCLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/MCLiteralsMill.java";
  }

  @(MCLiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "MCLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/MCLiteralsNodeFactory.java";
  }

  @(MCLiteralsPackage.java):JavaSourceFile{
    simpleName = "MCLiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/MCLiteralsPackage.java";
  }

  @(MCLiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "MCLiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_ast/MCLiteralsPackageImpl.java";
  }

  @(_cocos!80):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos";
  }

  @(MCLiteralsASTBooleanLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTBooleanLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTBooleanLiteralCoCo.java";
  }

  @(MCLiteralsASTCharLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTCharLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTCharLiteralCoCo.java";
  }

  @(MCLiteralsASTDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTDoubleLiteralCoCo.java";
  }

  @(MCLiteralsASTFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTFloatLiteralCoCo.java";
  }

  @(MCLiteralsASTIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTIntLiteralCoCo.java";
  }

  @(MCLiteralsASTLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTLiteralCoCo.java";
  }

  @(MCLiteralsASTLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTLongLiteralCoCo.java";
  }

  @(MCLiteralsASTMCLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTMCLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTMCLiteralsNodeCoCo.java";
  }

  @(MCLiteralsASTNatLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTNatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTNatLiteralCoCo.java";
  }

  @(MCLiteralsASTNullLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTNullLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTNullLiteralCoCo.java";
  }

  @(MCLiteralsASTNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTNumericLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedDoubleLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedFloatLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedIntLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedLongLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedNatLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedNatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedNatLiteralCoCo.java";
  }

  @(MCLiteralsASTSignedNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTSignedNumericLiteralCoCo.java";
  }

  @(MCLiteralsASTStringLiteralCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsASTStringLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsASTStringLiteralCoCo.java";
  }

  @(MCLiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "MCLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsCoCoChecker.java";
  }

  @(MCLiteralsMCLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "MCLiteralsMCLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_cocos/MCLiteralsMCLiteralsPackageCoCo.java";
  }

  @(_od!80):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_od";
  }

  @(MCLiterals2OD.java):JavaSourceFile{
    simpleName = "MCLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_od/MCLiterals2OD.java";
  }

  @(_symboltable!51):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_symboltable";
  }

  @(MCLiteralsLanguage.java):JavaSourceFile{
    simpleName = "MCLiteralsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_symboltable/MCLiteralsLanguage.java";
  }

  @(MCLiteralsModelLoader.java):JavaSourceFile{
    simpleName = "MCLiteralsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_symboltable/MCLiteralsModelLoader.java";
  }

  @(_visitor!80):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_visitor";
  }

  @(MCLiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_visitor/MCLiteralsDelegatorVisitor.java";
  }

  @(MCLiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_visitor/MCLiteralsInheritanceVisitor.java";
  }

  @(MCLiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_visitor/MCLiteralsParentAwareVisitor.java";
  }

  @(MCLiteralsVisitor.java):JavaSourceFile{
    simpleName = "MCLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcliterals/_visitor/MCLiteralsVisitor.java";
  }

  @(mcnumbers!2):Directory{
    simpleName = "mcnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers";
  }

  @(_ast!87):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast";
  }

  @(ASTConstantsMCNumbers.java):JavaSourceFile{
    simpleName = "ASTConstantsMCNumbers";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/ASTConstantsMCNumbers.java";
  }

  @(ASTDecimal.java):JavaSourceFile{
    simpleName = "ASTDecimal";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/ASTDecimal.java";
  }

  @(ASTInteger.java):JavaSourceFile{
    simpleName = "ASTInteger";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/ASTInteger.java";
  }

  @(ASTMCNumbersNode.java):JavaSourceFile{
    simpleName = "ASTMCNumbersNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/ASTMCNumbersNode.java";
  }

  @(ASTNumber.java):JavaSourceFile{
    simpleName = "ASTNumber";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/ASTNumber.java";
  }

  @(MCNumbersLiterals.java):JavaSourceFile{
    simpleName = "MCNumbersLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/MCNumbersLiterals.java";
  }

  @(MCNumbersMill.java):JavaSourceFile{
    simpleName = "MCNumbersMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/MCNumbersMill.java";
  }

  @(MCNumbersNodeFactory.java):JavaSourceFile{
    simpleName = "MCNumbersNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/MCNumbersNodeFactory.java";
  }

  @(MCNumbersPackage.java):JavaSourceFile{
    simpleName = "MCNumbersPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/MCNumbersPackage.java";
  }

  @(MCNumbersPackageImpl.java):JavaSourceFile{
    simpleName = "MCNumbersPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_ast/MCNumbersPackageImpl.java";
  }

  @(_cocos!81):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos";
  }

  @(MCNumbersASTDecimalCoCo.java):JavaSourceFile{
    simpleName = "MCNumbersASTDecimalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersASTDecimalCoCo.java";
  }

  @(MCNumbersASTIntegerCoCo.java):JavaSourceFile{
    simpleName = "MCNumbersASTIntegerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersASTIntegerCoCo.java";
  }

  @(MCNumbersASTMCNumbersNodeCoCo.java):JavaSourceFile{
    simpleName = "MCNumbersASTMCNumbersNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersASTMCNumbersNodeCoCo.java";
  }

  @(MCNumbersASTNumberCoCo.java):JavaSourceFile{
    simpleName = "MCNumbersASTNumberCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersASTNumberCoCo.java";
  }

  @(MCNumbersCoCoChecker.java):JavaSourceFile{
    simpleName = "MCNumbersCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersCoCoChecker.java";
  }

  @(MCNumbersMCNumbersPackageCoCo.java):JavaSourceFile{
    simpleName = "MCNumbersMCNumbersPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_cocos/MCNumbersMCNumbersPackageCoCo.java";
  }

  @(_od!81):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_od";
  }

  @(MCNumbers2OD.java):JavaSourceFile{
    simpleName = "MCNumbers2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_od/MCNumbers2OD.java";
  }

  @(_symboltable!52):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_symboltable";
  }

  @(MCNumbersLanguage.java):JavaSourceFile{
    simpleName = "MCNumbersLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_symboltable/MCNumbersLanguage.java";
  }

  @(MCNumbersModelLoader.java):JavaSourceFile{
    simpleName = "MCNumbersModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_symboltable/MCNumbersModelLoader.java";
  }

  @(_visitor!81):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_visitor";
  }

  @(MCNumbersDelegatorVisitor.java):JavaSourceFile{
    simpleName = "MCNumbersDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_visitor/MCNumbersDelegatorVisitor.java";
  }

  @(MCNumbersInheritanceVisitor.java):JavaSourceFile{
    simpleName = "MCNumbersInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_visitor/MCNumbersInheritanceVisitor.java";
  }

  @(MCNumbersParentAwareVisitor.java):JavaSourceFile{
    simpleName = "MCNumbersParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_visitor/MCNumbersParentAwareVisitor.java";
  }

  @(MCNumbersVisitor.java):JavaSourceFile{
    simpleName = "MCNumbersVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/mcnumbers/_visitor/MCNumbersVisitor.java";
  }

  @(oclexpressions!2):Directory{
    simpleName = "oclexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions";
  }

  @(_ast!88):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast";
  }

  @(ASTAnyExpr.java):JavaSourceFile{
    simpleName = "ASTAnyExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTAnyExpr.java";
  }

  @(ASTConstantsOCLExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsOCLExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTConstantsOCLExpressions.java";
  }

  @(ASTEDeclarationExt.java):JavaSourceFile{
    simpleName = "ASTEDeclarationExt";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTEDeclarationExt.java";
  }

  @(ASTExistsExpr.java):JavaSourceFile{
    simpleName = "ASTExistsExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTExistsExpr.java";
  }

  @(ASTForallExpr.java):JavaSourceFile{
    simpleName = "ASTForallExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTForallExpr.java";
  }

  @(ASTIfThenElseExpr.java):JavaSourceFile{
    simpleName = "ASTIfThenElseExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTIfThenElseExpr.java";
  }

  @(ASTImpliesExpression.java):JavaSourceFile{
    simpleName = "ASTImpliesExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTImpliesExpression.java";
  }

  @(ASTInExpr.java):JavaSourceFile{
    simpleName = "ASTInExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTInExpr.java";
  }

  @(ASTInstanceOfExpression.java):JavaSourceFile{
    simpleName = "ASTInstanceOfExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTInstanceOfExpression.java";
  }

  @(ASTIterateExpr.java):JavaSourceFile{
    simpleName = "ASTIterateExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTIterateExpr.java";
  }

  @(ASTLetDeclaration.java):JavaSourceFile{
    simpleName = "ASTLetDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTLetDeclaration.java";
  }

  @(ASTLetinExpr.java):JavaSourceFile{
    simpleName = "ASTLetinExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTLetinExpr.java";
  }

  @(ASTOCLArgumentQualification.java):JavaSourceFile{
    simpleName = "ASTOCLArgumentQualification";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLArgumentQualification.java";
  }

  @(ASTOCLArrayQualification.java):JavaSourceFile{
    simpleName = "ASTOCLArrayQualification";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLArrayQualification.java";
  }

  @(ASTOCLAtPreQualification.java):JavaSourceFile{
    simpleName = "ASTOCLAtPreQualification";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLAtPreQualification.java";
  }

  @(ASTOCLCollectionItem.java):JavaSourceFile{
    simpleName = "ASTOCLCollectionItem";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLCollectionItem.java";
  }

  @(ASTOCLComprehensionEnumerationStyle.java):JavaSourceFile{
    simpleName = "ASTOCLComprehensionEnumerationStyle";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLComprehensionEnumerationStyle.java";
  }

  @(ASTOCLComprehensionExpr.java):JavaSourceFile{
    simpleName = "ASTOCLComprehensionExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLComprehensionExpr.java";
  }

  @(ASTOCLComprehensionExpressionStyle.java):JavaSourceFile{
    simpleName = "ASTOCLComprehensionExpressionStyle";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLComprehensionExpressionStyle.java";
  }

  @(ASTOCLComprehensionItem.java):JavaSourceFile{
    simpleName = "ASTOCLComprehensionItem";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLComprehensionItem.java";
  }

  @(ASTOCLComprehensionPrimary.java):JavaSourceFile{
    simpleName = "ASTOCLComprehensionPrimary";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLComprehensionPrimary.java";
  }

  @(ASTOCLDefinedPrimary.java):JavaSourceFile{
    simpleName = "ASTOCLDefinedPrimary";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLDefinedPrimary.java";
  }

  @(ASTOCLExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTOCLExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLExpressionsNode.java";
  }

  @(ASTOCLIsNewPrimary.java):JavaSourceFile{
    simpleName = "ASTOCLIsNewPrimary";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLIsNewPrimary.java";
  }

  @(ASTOCLPrimary.java):JavaSourceFile{
    simpleName = "ASTOCLPrimary";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLPrimary.java";
  }

  @(ASTOCLQualification.java):JavaSourceFile{
    simpleName = "ASTOCLQualification";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLQualification.java";
  }

  @(ASTOCLQualifiedPrimary.java):JavaSourceFile{
    simpleName = "ASTOCLQualifiedPrimary";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLQualifiedPrimary.java";
  }

  @(ASTOCLTransitivQualification.java):JavaSourceFile{
    simpleName = "ASTOCLTransitivQualification";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTOCLTransitivQualification.java";
  }

  @(ASTParenthizedExpression.java):JavaSourceFile{
    simpleName = "ASTParenthizedExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTParenthizedExpression.java";
  }

  @(ASTSingleLogicalORExpr.java):JavaSourceFile{
    simpleName = "ASTSingleLogicalORExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTSingleLogicalORExpr.java";
  }

  @(ASTTypeCastExpression.java!3):JavaSourceFile{
    simpleName = "ASTTypeCastExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTTypeCastExpression.java";
  }

  @(ASTTypeIfExpr.java):JavaSourceFile{
    simpleName = "ASTTypeIfExpr";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/ASTTypeIfExpr.java";
  }

  @(OCLExpressionsLiterals.java):JavaSourceFile{
    simpleName = "OCLExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/OCLExpressionsLiterals.java";
  }

  @(OCLExpressionsMill.java):JavaSourceFile{
    simpleName = "OCLExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/OCLExpressionsMill.java";
  }

  @(OCLExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "OCLExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/OCLExpressionsNodeFactory.java";
  }

  @(OCLExpressionsPackage.java):JavaSourceFile{
    simpleName = "OCLExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/OCLExpressionsPackage.java";
  }

  @(OCLExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "OCLExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_ast/OCLExpressionsPackageImpl.java";
  }

  @(_cocos!82):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos";
  }

  @(OCLExpressionsASTAnyExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTAnyExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTAnyExprCoCo.java";
  }

  @(OCLExpressionsASTEDeclarationExtCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTEDeclarationExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTEDeclarationExtCoCo.java";
  }

  @(OCLExpressionsASTExistsExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTExistsExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTExistsExprCoCo.java";
  }

  @(OCLExpressionsASTForallExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTForallExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTForallExprCoCo.java";
  }

  @(OCLExpressionsASTIfThenElseExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTIfThenElseExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTIfThenElseExprCoCo.java";
  }

  @(OCLExpressionsASTImpliesExpressionCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTImpliesExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTImpliesExpressionCoCo.java";
  }

  @(OCLExpressionsASTInExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTInExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTInExprCoCo.java";
  }

  @(OCLExpressionsASTInstanceOfExpressionCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTInstanceOfExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTInstanceOfExpressionCoCo.java";
  }

  @(OCLExpressionsASTIterateExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTIterateExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTIterateExprCoCo.java";
  }

  @(OCLExpressionsASTLetDeclarationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTLetDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTLetDeclarationCoCo.java";
  }

  @(OCLExpressionsASTLetinExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTLetinExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTLetinExprCoCo.java";
  }

  @(OCLExpressionsASTOCLArgumentQualificationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLArgumentQualificationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLArgumentQualificationCoCo.java";
  }

  @(OCLExpressionsASTOCLArrayQualificationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLArrayQualificationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLArrayQualificationCoCo.java";
  }

  @(OCLExpressionsASTOCLAtPreQualificationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLAtPreQualificationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLAtPreQualificationCoCo.java";
  }

  @(OCLExpressionsASTOCLCollectionItemCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLCollectionItemCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLCollectionItemCoCo.java";
  }

  @(OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.java";
  }

  @(OCLExpressionsASTOCLComprehensionExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLComprehensionExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionExprCoCo.java";
  }

  @(OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLComprehensionExpressionStyleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.java";
  }

  @(OCLExpressionsASTOCLComprehensionItemCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLComprehensionItemCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionItemCoCo.java";
  }

  @(OCLExpressionsASTOCLComprehensionPrimaryCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLComprehensionPrimaryCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLComprehensionPrimaryCoCo.java";
  }

  @(OCLExpressionsASTOCLDefinedPrimaryCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLDefinedPrimaryCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLDefinedPrimaryCoCo.java";
  }

  @(OCLExpressionsASTOCLExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLExpressionsNodeCoCo.java";
  }

  @(OCLExpressionsASTOCLIsNewPrimaryCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLIsNewPrimaryCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLIsNewPrimaryCoCo.java";
  }

  @(OCLExpressionsASTOCLPrimaryCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLPrimaryCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLPrimaryCoCo.java";
  }

  @(OCLExpressionsASTOCLQualificationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLQualificationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLQualificationCoCo.java";
  }

  @(OCLExpressionsASTOCLQualifiedPrimaryCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLQualifiedPrimaryCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLQualifiedPrimaryCoCo.java";
  }

  @(OCLExpressionsASTOCLTransitivQualificationCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTOCLTransitivQualificationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTOCLTransitivQualificationCoCo.java";
  }

  @(OCLExpressionsASTParenthizedExpressionCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTParenthizedExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTParenthizedExpressionCoCo.java";
  }

  @(OCLExpressionsASTSingleLogicalORExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTSingleLogicalORExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTSingleLogicalORExprCoCo.java";
  }

  @(OCLExpressionsASTTypeCastExpressionCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTTypeCastExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTTypeCastExpressionCoCo.java";
  }

  @(OCLExpressionsASTTypeIfExprCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsASTTypeIfExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsASTTypeIfExprCoCo.java";
  }

  @(OCLExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "OCLExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsCoCoChecker.java";
  }

  @(OCLExpressionsOCLExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "OCLExpressionsOCLExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_cocos/OCLExpressionsOCLExpressionsPackageCoCo.java";
  }

  @(_od!82):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_od";
  }

  @(OCLExpressions2OD.java):JavaSourceFile{
    simpleName = "OCLExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_od/OCLExpressions2OD.java";
  }

  @(_symboltable!53):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_symboltable";
  }

  @(OCLExpressionsLanguage.java):JavaSourceFile{
    simpleName = "OCLExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_symboltable/OCLExpressionsLanguage.java";
  }

  @(OCLExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "OCLExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_symboltable/OCLExpressionsModelLoader.java";
  }

  @(_visitor!82):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_visitor";
  }

  @(OCLExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "OCLExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_visitor/OCLExpressionsDelegatorVisitor.java";
  }

  @(OCLExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "OCLExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_visitor/OCLExpressionsInheritanceVisitor.java";
  }

  @(OCLExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "OCLExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_visitor/OCLExpressionsParentAwareVisitor.java";
  }

  @(OCLExpressionsVisitor.java):JavaSourceFile{
    simpleName = "OCLExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/oclexpressions/_visitor/OCLExpressionsVisitor.java";
  }

  @(setexpressions!2):Directory{
    simpleName = "setexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions";
  }

  @(_ast!89):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast";
  }

  @(ASTConstantsSetExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsSetExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTConstantsSetExpressions.java";
  }

  @(ASTIntersectionExpressionInfix.java):JavaSourceFile{
    simpleName = "ASTIntersectionExpressionInfix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTIntersectionExpressionInfix.java";
  }

  @(ASTIntersectionExpressionPrefix.java):JavaSourceFile{
    simpleName = "ASTIntersectionExpressionPrefix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTIntersectionExpressionPrefix.java";
  }

  @(ASTIsInExpression.java):JavaSourceFile{
    simpleName = "ASTIsInExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTIsInExpression.java";
  }

  @(ASTSetAndExpression.java):JavaSourceFile{
    simpleName = "ASTSetAndExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTSetAndExpression.java";
  }

  @(ASTSetExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTSetExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTSetExpressionsNode.java";
  }

  @(ASTSetInExpression.java):JavaSourceFile{
    simpleName = "ASTSetInExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTSetInExpression.java";
  }

  @(ASTSetOrExpression.java):JavaSourceFile{
    simpleName = "ASTSetOrExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTSetOrExpression.java";
  }

  @(ASTSetXOrExpression.java):JavaSourceFile{
    simpleName = "ASTSetXOrExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTSetXOrExpression.java";
  }

  @(ASTUnionExpressionInfix.java):JavaSourceFile{
    simpleName = "ASTUnionExpressionInfix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTUnionExpressionInfix.java";
  }

  @(ASTUnionExpressionPrefix.java):JavaSourceFile{
    simpleName = "ASTUnionExpressionPrefix";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/ASTUnionExpressionPrefix.java";
  }

  @(SetExpressionsLiterals.java):JavaSourceFile{
    simpleName = "SetExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/SetExpressionsLiterals.java";
  }

  @(SetExpressionsMill.java):JavaSourceFile{
    simpleName = "SetExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/SetExpressionsMill.java";
  }

  @(SetExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "SetExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/SetExpressionsNodeFactory.java";
  }

  @(SetExpressionsPackage.java):JavaSourceFile{
    simpleName = "SetExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/SetExpressionsPackage.java";
  }

  @(SetExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "SetExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_ast/SetExpressionsPackageImpl.java";
  }

  @(_cocos!83):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos";
  }

  @(SetExpressionsASTIntersectionExpressionInfixCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTIntersectionExpressionInfixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTIntersectionExpressionInfixCoCo.java";
  }

  @(SetExpressionsASTIntersectionExpressionPrefixCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTIntersectionExpressionPrefixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTIntersectionExpressionPrefixCoCo.java";
  }

  @(SetExpressionsASTIsInExpressionCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTIsInExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTIsInExpressionCoCo.java";
  }

  @(SetExpressionsASTSetAndExpressionCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTSetAndExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTSetAndExpressionCoCo.java";
  }

  @(SetExpressionsASTSetExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTSetExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTSetExpressionsNodeCoCo.java";
  }

  @(SetExpressionsASTSetInExpressionCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTSetInExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTSetInExpressionCoCo.java";
  }

  @(SetExpressionsASTSetOrExpressionCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTSetOrExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTSetOrExpressionCoCo.java";
  }

  @(SetExpressionsASTSetXOrExpressionCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTSetXOrExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTSetXOrExpressionCoCo.java";
  }

  @(SetExpressionsASTUnionExpressionInfixCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTUnionExpressionInfixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTUnionExpressionInfixCoCo.java";
  }

  @(SetExpressionsASTUnionExpressionPrefixCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsASTUnionExpressionPrefixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsASTUnionExpressionPrefixCoCo.java";
  }

  @(SetExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "SetExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsCoCoChecker.java";
  }

  @(SetExpressionsSetExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "SetExpressionsSetExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_cocos/SetExpressionsSetExpressionsPackageCoCo.java";
  }

  @(_od!83):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_od";
  }

  @(SetExpressions2OD.java):JavaSourceFile{
    simpleName = "SetExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_od/SetExpressions2OD.java";
  }

  @(_symboltable!54):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_symboltable";
  }

  @(SetExpressionsLanguage.java):JavaSourceFile{
    simpleName = "SetExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_symboltable/SetExpressionsLanguage.java";
  }

  @(SetExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "SetExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_symboltable/SetExpressionsModelLoader.java";
  }

  @(_visitor!83):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_visitor";
  }

  @(SetExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SetExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_visitor/SetExpressionsDelegatorVisitor.java";
  }

  @(SetExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SetExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_visitor/SetExpressionsInheritanceVisitor.java";
  }

  @(SetExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SetExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_visitor/SetExpressionsParentAwareVisitor.java";
  }

  @(SetExpressionsVisitor.java):JavaSourceFile{
    simpleName = "SetExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/setexpressions/_visitor/SetExpressionsVisitor.java";
  }

  @(shiftexpressions!2):Directory{
    simpleName = "shiftexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions";
  }

  @(_ast!90):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast";
  }

  @(ASTArrayExpression.java!2):JavaSourceFile{
    simpleName = "ASTArrayExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTArrayExpression.java";
  }

  @(ASTConstantsShiftExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsShiftExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTConstantsShiftExpressions.java";
  }

  @(ASTLeftShiftExpression.java):JavaSourceFile{
    simpleName = "ASTLeftShiftExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTLeftShiftExpression.java";
  }

  @(ASTLogicalRightShiftExpression.java):JavaSourceFile{
    simpleName = "ASTLogicalRightShiftExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTLogicalRightShiftExpression.java";
  }

  @(ASTPrimaryThisExpression.java!2):JavaSourceFile{
    simpleName = "ASTPrimaryThisExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTPrimaryThisExpression.java";
  }

  @(ASTQualifiedNameExpression.java!2):JavaSourceFile{
    simpleName = "ASTQualifiedNameExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTQualifiedNameExpression.java";
  }

  @(ASTRightShiftExpression.java):JavaSourceFile{
    simpleName = "ASTRightShiftExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTRightShiftExpression.java";
  }

  @(ASTShiftExpression.java!2):JavaSourceFile{
    simpleName = "ASTShiftExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTShiftExpression.java";
  }

  @(ASTShiftExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTShiftExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTShiftExpressionsNode.java";
  }

  @(ASTThisExpression.java!2):JavaSourceFile{
    simpleName = "ASTThisExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ASTThisExpression.java";
  }

  @(ShiftExpressionsLiterals.java):JavaSourceFile{
    simpleName = "ShiftExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ShiftExpressionsLiterals.java";
  }

  @(ShiftExpressionsMill.java):JavaSourceFile{
    simpleName = "ShiftExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ShiftExpressionsMill.java";
  }

  @(ShiftExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "ShiftExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ShiftExpressionsNodeFactory.java";
  }

  @(ShiftExpressionsPackage.java):JavaSourceFile{
    simpleName = "ShiftExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ShiftExpressionsPackage.java";
  }

  @(ShiftExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "ShiftExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_ast/ShiftExpressionsPackageImpl.java";
  }

  @(_cocos!84):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos";
  }

  @(ShiftExpressionsASTArrayExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTArrayExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTArrayExpressionCoCo.java";
  }

  @(ShiftExpressionsASTLeftShiftExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTLeftShiftExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTLeftShiftExpressionCoCo.java";
  }

  @(ShiftExpressionsASTLogicalRightShiftExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTLogicalRightShiftExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTLogicalRightShiftExpressionCoCo.java";
  }

  @(ShiftExpressionsASTPrimaryThisExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTPrimaryThisExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTPrimaryThisExpressionCoCo.java";
  }

  @(ShiftExpressionsASTQualifiedNameExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTQualifiedNameExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTQualifiedNameExpressionCoCo.java";
  }

  @(ShiftExpressionsASTRightShiftExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTRightShiftExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTRightShiftExpressionCoCo.java";
  }

  @(ShiftExpressionsASTShiftExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTShiftExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTShiftExpressionCoCo.java";
  }

  @(ShiftExpressionsASTShiftExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTShiftExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTShiftExpressionsNodeCoCo.java";
  }

  @(ShiftExpressionsASTThisExpressionCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsASTThisExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsASTThisExpressionCoCo.java";
  }

  @(ShiftExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "ShiftExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsCoCoChecker.java";
  }

  @(ShiftExpressionsShiftExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "ShiftExpressionsShiftExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_cocos/ShiftExpressionsShiftExpressionsPackageCoCo.java";
  }

  @(_od!84):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_od";
  }

  @(ShiftExpressions2OD.java):JavaSourceFile{
    simpleName = "ShiftExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_od/ShiftExpressions2OD.java";
  }

  @(_symboltable!55):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_symboltable";
  }

  @(ShiftExpressionsLanguage.java):JavaSourceFile{
    simpleName = "ShiftExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_symboltable/ShiftExpressionsLanguage.java";
  }

  @(ShiftExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "ShiftExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_symboltable/ShiftExpressionsModelLoader.java";
  }

  @(_visitor!84):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_visitor";
  }

  @(ShiftExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "ShiftExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_visitor/ShiftExpressionsDelegatorVisitor.java";
  }

  @(ShiftExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "ShiftExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_visitor/ShiftExpressionsInheritanceVisitor.java";
  }

  @(ShiftExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "ShiftExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_visitor/ShiftExpressionsParentAwareVisitor.java";
  }

  @(ShiftExpressionsVisitor.java):JavaSourceFile{
    simpleName = "ShiftExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/shiftexpressions/_visitor/ShiftExpressionsVisitor.java";
  }

  @(stringliterals!2):Directory{
    simpleName = "stringliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals";
  }

  @(_ast!91):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast";
  }

  @(ASTCharLiteral.java!4):JavaSourceFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/ASTCharLiteral.java";
  }

  @(ASTConstantsStringLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsStringLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/ASTConstantsStringLiterals.java";
  }

  @(ASTStringLiteral.java!4):JavaSourceFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/ASTStringLiteral.java";
  }

  @(ASTStringLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTStringLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/ASTStringLiteralsNode.java";
  }

  @(StringLiteralsLiterals.java):JavaSourceFile{
    simpleName = "StringLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/StringLiteralsLiterals.java";
  }

  @(StringLiteralsMill.java):JavaSourceFile{
    simpleName = "StringLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/StringLiteralsMill.java";
  }

  @(StringLiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "StringLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/StringLiteralsNodeFactory.java";
  }

  @(StringLiteralsPackage.java):JavaSourceFile{
    simpleName = "StringLiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/StringLiteralsPackage.java";
  }

  @(StringLiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "StringLiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_ast/StringLiteralsPackageImpl.java";
  }

  @(_cocos!85):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos";
  }

  @(StringLiteralsASTCharLiteralCoCo.java):JavaSourceFile{
    simpleName = "StringLiteralsASTCharLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos/StringLiteralsASTCharLiteralCoCo.java";
  }

  @(StringLiteralsASTStringLiteralCoCo.java):JavaSourceFile{
    simpleName = "StringLiteralsASTStringLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos/StringLiteralsASTStringLiteralCoCo.java";
  }

  @(StringLiteralsASTStringLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "StringLiteralsASTStringLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos/StringLiteralsASTStringLiteralsNodeCoCo.java";
  }

  @(StringLiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "StringLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos/StringLiteralsCoCoChecker.java";
  }

  @(StringLiteralsStringLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "StringLiteralsStringLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_cocos/StringLiteralsStringLiteralsPackageCoCo.java";
  }

  @(_od!85):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_od";
  }

  @(StringLiterals2OD.java):JavaSourceFile{
    simpleName = "StringLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_od/StringLiterals2OD.java";
  }

  @(_symboltable!56):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_symboltable";
  }

  @(StringLiteralsLanguage.java):JavaSourceFile{
    simpleName = "StringLiteralsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_symboltable/StringLiteralsLanguage.java";
  }

  @(StringLiteralsModelLoader.java):JavaSourceFile{
    simpleName = "StringLiteralsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_symboltable/StringLiteralsModelLoader.java";
  }

  @(_visitor!85):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_visitor";
  }

  @(StringLiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "StringLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_visitor/StringLiteralsDelegatorVisitor.java";
  }

  @(StringLiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "StringLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_visitor/StringLiteralsInheritanceVisitor.java";
  }

  @(StringLiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "StringLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_visitor/StringLiteralsParentAwareVisitor.java";
  }

  @(StringLiteralsVisitor.java):JavaSourceFile{
    simpleName = "StringLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/stringliterals/_visitor/StringLiteralsVisitor.java";
  }

  @(types!17):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types";
  }

  @(types!18):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types";
  }

  @(_ast!92):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast";
  }

  @(ASTArrayType.java!2):JavaSourceFile{
    simpleName = "ASTArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTArrayType.java";
  }

  @(ASTComplexArrayType.java!2):JavaSourceFile{
    simpleName = "ASTComplexArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTComplexArrayType.java";
  }

  @(ASTComplexReferenceType.java!2):JavaSourceFile{
    simpleName = "ASTComplexReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTComplexReferenceType.java";
  }

  @(ASTConstantsTypes.java):JavaSourceFile{
    simpleName = "ASTConstantsTypes";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTConstantsTypes.java";
  }

  @(ASTImportStatement.java!3):JavaSourceFile{
    simpleName = "ASTImportStatement";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTImportStatement.java";
  }

  @(ASTPrimitiveArrayType.java!2):JavaSourceFile{
    simpleName = "ASTPrimitiveArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTPrimitiveArrayType.java";
  }

  @(ASTPrimitiveType.java!3):JavaSourceFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTPrimitiveType.java";
  }

  @(ASTQualifiedName.java!4):JavaSourceFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTQualifiedName.java";
  }

  @(ASTReferenceType.java!3):JavaSourceFile{
    simpleName = "ASTReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTReferenceType.java";
  }

  @(ASTReturnType.java!3):JavaSourceFile{
    simpleName = "ASTReturnType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTReturnType.java";
  }

  @(ASTSimpleReferenceType.java!2):JavaSourceFile{
    simpleName = "ASTSimpleReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTSimpleReferenceType.java";
  }

  @(ASTType.java!3):JavaSourceFile{
    simpleName = "ASTType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTType.java";
  }

  @(ASTTypeArgument.java!2):JavaSourceFile{
    simpleName = "ASTTypeArgument";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTTypeArgument.java";
  }

  @(ASTTypeArguments.java!2):JavaSourceFile{
    simpleName = "ASTTypeArguments";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTTypeArguments.java";
  }

  @(ASTTypeParameters.java!2):JavaSourceFile{
    simpleName = "ASTTypeParameters";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTTypeParameters.java";
  }

  @(ASTTypesNode.java):JavaSourceFile{
    simpleName = "ASTTypesNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTTypesNode.java";
  }

  @(ASTTypeVariableDeclaration.java!2):JavaSourceFile{
    simpleName = "ASTTypeVariableDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTTypeVariableDeclaration.java";
  }

  @(ASTVoidType.java!3):JavaSourceFile{
    simpleName = "ASTVoidType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTVoidType.java";
  }

  @(ASTWildcardType.java!2):JavaSourceFile{
    simpleName = "ASTWildcardType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/ASTWildcardType.java";
  }

  @(TypesLiterals.java):JavaSourceFile{
    simpleName = "TypesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/TypesLiterals.java";
  }

  @(TypesMill.java):JavaSourceFile{
    simpleName = "TypesMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/TypesMill.java";
  }

  @(TypesNodeFactory.java):JavaSourceFile{
    simpleName = "TypesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/TypesNodeFactory.java";
  }

  @(TypesPackage.java):JavaSourceFile{
    simpleName = "TypesPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/TypesPackage.java";
  }

  @(TypesPackageImpl.java):JavaSourceFile{
    simpleName = "TypesPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_ast/TypesPackageImpl.java";
  }

  @(_cocos!86):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos";
  }

  @(TypesASTArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTArrayTypeCoCo.java";
  }

  @(TypesASTComplexArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTComplexArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTComplexArrayTypeCoCo.java";
  }

  @(TypesASTComplexReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTComplexReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTComplexReferenceTypeCoCo.java";
  }

  @(TypesASTImportStatementCoCo.java):JavaSourceFile{
    simpleName = "TypesASTImportStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTImportStatementCoCo.java";
  }

  @(TypesASTPrimitiveArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTPrimitiveArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTPrimitiveArrayTypeCoCo.java";
  }

  @(TypesASTPrimitiveTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTPrimitiveTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTPrimitiveTypeCoCo.java";
  }

  @(TypesASTQualifiedNameCoCo.java):JavaSourceFile{
    simpleName = "TypesASTQualifiedNameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTQualifiedNameCoCo.java";
  }

  @(TypesASTReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTReferenceTypeCoCo.java";
  }

  @(TypesASTReturnTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTReturnTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTReturnTypeCoCo.java";
  }

  @(TypesASTSimpleReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTSimpleReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTSimpleReferenceTypeCoCo.java";
  }

  @(TypesASTTypeArgumentCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypeArgumentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypeArgumentCoCo.java";
  }

  @(TypesASTTypeArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypeArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypeArgumentsCoCo.java";
  }

  @(TypesASTTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypeCoCo.java";
  }

  @(TypesASTTypeParametersCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypeParametersCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypeParametersCoCo.java";
  }

  @(TypesASTTypesNodeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypesNodeCoCo.java";
  }

  @(TypesASTTypeVariableDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TypesASTTypeVariableDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTTypeVariableDeclarationCoCo.java";
  }

  @(TypesASTVoidTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTVoidTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTVoidTypeCoCo.java";
  }

  @(TypesASTWildcardTypeCoCo.java):JavaSourceFile{
    simpleName = "TypesASTWildcardTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesASTWildcardTypeCoCo.java";
  }

  @(TypesCoCoChecker.java):JavaSourceFile{
    simpleName = "TypesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesCoCoChecker.java";
  }

  @(TypesTypesPackageCoCo.java):JavaSourceFile{
    simpleName = "TypesTypesPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_cocos/TypesTypesPackageCoCo.java";
  }

  @(_od!86):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_od";
  }

  @(Types2OD.java):JavaSourceFile{
    simpleName = "Types2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_od/Types2OD.java";
  }

  @(_symboltable!57):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_symboltable";
  }

  @(TypesLanguage.java):JavaSourceFile{
    simpleName = "TypesLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_symboltable/TypesLanguage.java";
  }

  @(TypesModelLoader.java):JavaSourceFile{
    simpleName = "TypesModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_symboltable/TypesModelLoader.java";
  }

  @(_visitor!86):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_visitor";
  }

  @(TypesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TypesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_visitor/TypesDelegatorVisitor.java";
  }

  @(TypesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TypesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_visitor/TypesInheritanceVisitor.java";
  }

  @(TypesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TypesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_visitor/TypesParentAwareVisitor.java";
  }

  @(TypesVisitor.java):JavaSourceFile{
    simpleName = "TypesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/types/types/_visitor/TypesVisitor.java";
  }

  @(umlmodifier!2):Directory{
    simpleName = "umlmodifier";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier";
  }

  @(_ast!93):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast";
  }

  @(ASTConstantsUMLModifier.java):JavaSourceFile{
    simpleName = "ASTConstantsUMLModifier";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/ASTConstantsUMLModifier.java";
  }

  @(ASTModifier.java!4):JavaSourceFile{
    simpleName = "ASTModifier";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/ASTModifier.java";
  }

  @(ASTUMLModifierNode.java):JavaSourceFile{
    simpleName = "ASTUMLModifierNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/ASTUMLModifierNode.java";
  }

  @(UMLModifierLiterals.java):JavaSourceFile{
    simpleName = "UMLModifierLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/UMLModifierLiterals.java";
  }

  @(UMLModifierMill.java):JavaSourceFile{
    simpleName = "UMLModifierMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/UMLModifierMill.java";
  }

  @(UMLModifierNodeFactory.java):JavaSourceFile{
    simpleName = "UMLModifierNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/UMLModifierNodeFactory.java";
  }

  @(UMLModifierPackage.java):JavaSourceFile{
    simpleName = "UMLModifierPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/UMLModifierPackage.java";
  }

  @(UMLModifierPackageImpl.java):JavaSourceFile{
    simpleName = "UMLModifierPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_ast/UMLModifierPackageImpl.java";
  }

  @(_cocos!87):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_cocos";
  }

  @(UMLModifierASTModifierCoCo.java):JavaSourceFile{
    simpleName = "UMLModifierASTModifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_cocos/UMLModifierASTModifierCoCo.java";
  }

  @(UMLModifierASTUMLModifierNodeCoCo.java):JavaSourceFile{
    simpleName = "UMLModifierASTUMLModifierNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_cocos/UMLModifierASTUMLModifierNodeCoCo.java";
  }

  @(UMLModifierCoCoChecker.java):JavaSourceFile{
    simpleName = "UMLModifierCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_cocos/UMLModifierCoCoChecker.java";
  }

  @(UMLModifierUMLModifierPackageCoCo.java):JavaSourceFile{
    simpleName = "UMLModifierUMLModifierPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_cocos/UMLModifierUMLModifierPackageCoCo.java";
  }

  @(_od!87):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_od";
  }

  @(UMLModifier2OD.java):JavaSourceFile{
    simpleName = "UMLModifier2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_od/UMLModifier2OD.java";
  }

  @(_symboltable!58):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_symboltable";
  }

  @(UMLModifierLanguage.java):JavaSourceFile{
    simpleName = "UMLModifierLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_symboltable/UMLModifierLanguage.java";
  }

  @(UMLModifierModelLoader.java):JavaSourceFile{
    simpleName = "UMLModifierModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_symboltable/UMLModifierModelLoader.java";
  }

  @(_visitor!87):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_visitor";
  }

  @(UMLModifierDelegatorVisitor.java):JavaSourceFile{
    simpleName = "UMLModifierDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_visitor/UMLModifierDelegatorVisitor.java";
  }

  @(UMLModifierInheritanceVisitor.java):JavaSourceFile{
    simpleName = "UMLModifierInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_visitor/UMLModifierInheritanceVisitor.java";
  }

  @(UMLModifierParentAwareVisitor.java):JavaSourceFile{
    simpleName = "UMLModifierParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_visitor/UMLModifierParentAwareVisitor.java";
  }

  @(UMLModifierVisitor.java):JavaSourceFile{
    simpleName = "UMLModifierVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlmodifier/_visitor/UMLModifierVisitor.java";
  }

  @(umlstereotype!2):Directory{
    simpleName = "umlstereotype";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype";
  }

  @(_ast!94):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast";
  }

  @(ASTConstantsUMLStereotype.java):JavaSourceFile{
    simpleName = "ASTConstantsUMLStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/ASTConstantsUMLStereotype.java";
  }

  @(ASTStereotype.java!4):JavaSourceFile{
    simpleName = "ASTStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/ASTStereotype.java";
  }

  @(ASTStereoValue.java!3):JavaSourceFile{
    simpleName = "ASTStereoValue";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/ASTStereoValue.java";
  }

  @(ASTUMLStereotypeNode.java):JavaSourceFile{
    simpleName = "ASTUMLStereotypeNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/ASTUMLStereotypeNode.java";
  }

  @(UMLStereotypeLiterals.java):JavaSourceFile{
    simpleName = "UMLStereotypeLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/UMLStereotypeLiterals.java";
  }

  @(UMLStereotypeMill.java):JavaSourceFile{
    simpleName = "UMLStereotypeMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/UMLStereotypeMill.java";
  }

  @(UMLStereotypeNodeFactory.java):JavaSourceFile{
    simpleName = "UMLStereotypeNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/UMLStereotypeNodeFactory.java";
  }

  @(UMLStereotypePackage.java):JavaSourceFile{
    simpleName = "UMLStereotypePackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/UMLStereotypePackage.java";
  }

  @(UMLStereotypePackageImpl.java):JavaSourceFile{
    simpleName = "UMLStereotypePackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_ast/UMLStereotypePackageImpl.java";
  }

  @(_cocos!88):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos";
  }

  @(UMLStereotypeASTStereotypeCoCo.java):JavaSourceFile{
    simpleName = "UMLStereotypeASTStereotypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos/UMLStereotypeASTStereotypeCoCo.java";
  }

  @(UMLStereotypeASTStereoValueCoCo.java):JavaSourceFile{
    simpleName = "UMLStereotypeASTStereoValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos/UMLStereotypeASTStereoValueCoCo.java";
  }

  @(UMLStereotypeASTUMLStereotypeNodeCoCo.java):JavaSourceFile{
    simpleName = "UMLStereotypeASTUMLStereotypeNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos/UMLStereotypeASTUMLStereotypeNodeCoCo.java";
  }

  @(UMLStereotypeCoCoChecker.java):JavaSourceFile{
    simpleName = "UMLStereotypeCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos/UMLStereotypeCoCoChecker.java";
  }

  @(UMLStereotypeUMLStereotypePackageCoCo.java):JavaSourceFile{
    simpleName = "UMLStereotypeUMLStereotypePackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_cocos/UMLStereotypeUMLStereotypePackageCoCo.java";
  }

  @(_od!88):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_od";
  }

  @(UMLStereotype2OD.java):JavaSourceFile{
    simpleName = "UMLStereotype2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_od/UMLStereotype2OD.java";
  }

  @(_symboltable!59):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_symboltable";
  }

  @(UMLStereotypeLanguage.java):JavaSourceFile{
    simpleName = "UMLStereotypeLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_symboltable/UMLStereotypeLanguage.java";
  }

  @(UMLStereotypeModelLoader.java):JavaSourceFile{
    simpleName = "UMLStereotypeModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_symboltable/UMLStereotypeModelLoader.java";
  }

  @(_visitor!88):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_visitor";
  }

  @(UMLStereotypeDelegatorVisitor.java):JavaSourceFile{
    simpleName = "UMLStereotypeDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_visitor/UMLStereotypeDelegatorVisitor.java";
  }

  @(UMLStereotypeInheritanceVisitor.java):JavaSourceFile{
    simpleName = "UMLStereotypeInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_visitor/UMLStereotypeInheritanceVisitor.java";
  }

  @(UMLStereotypeParentAwareVisitor.java):JavaSourceFile{
    simpleName = "UMLStereotypeParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_visitor/UMLStereotypeParentAwareVisitor.java";
  }

  @(UMLStereotypeVisitor.java):JavaSourceFile{
    simpleName = "UMLStereotypeVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/de/monticore/umlstereotype/_visitor/UMLStereotypeVisitor.java";
  }

  @(reports!4):Directory{
    simpleName = "reports";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports";
  }

  @(de.monticore!3):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.AssignmentExpressions";
  }

  @(de.monticore!4):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.Cardinality";
  }

  @(de.monticore.common):Directory{
    simpleName = "de.monticore.common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.common.Common";
  }

  @(de.monticore!5):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.CommonExpressions";
  }

  @(de.monticore!6):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.Completeness";
  }

  @(de.monticore!7):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.ExpressionsBasis";
  }

  @(de.monticore!8):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.JavaClassExpressions";
  }

  @(de.monticore.lexicals):Directory{
    simpleName = "de.monticore.lexicals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.lexicals.Lexicals";
  }

  @(de.monticore.literals):Directory{
    simpleName = "de.monticore.literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.literals.Literals";
  }

  @(de.monticore!9):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCBasics";
  }

  @(de.monticore!10):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCBasicTypes1";
  }

  @(de.monticore!11):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCCommon";
  }

  @(de.monticore!12):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCExpressions";
  }

  @(de.monticore!13):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCHexNumbers";
  }

  @(de.monticore!14):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCLiterals";
  }

  @(de.monticore!15):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.MCNumbers";
  }

  @(de.monticore!16):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.OCLExpressions";
  }

  @(de.monticore!17):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.SetExpressions";
  }

  @(de.monticore!18):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.ShiftExpressions";
  }

  @(de.monticore!19):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.StringLiterals";
  }

  @(de.monticore.types):Directory{
    simpleName = "de.monticore.types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.types.Types";
  }

  @(de.monticore!20):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.UMLModifier";
  }

  @(de.monticore!21):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/sourcecode/reports/de.monticore.UMLStereotype";
  }

  @(symboltable!17):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-sources/monticore/symboltable";
  }

  @(generated-test-sources!3):Directory{
    simpleName = "generated-test-sources";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources";
  }

  @(monticore!32):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore";
  }

  @(sourcecode!3):Directory{
    simpleName = "sourcecode";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode";
  }

  @(de!30):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de";
  }

  @(monticore!33):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore";
  }

  @(common!13):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common";
  }

  @(testcommon!2):Directory{
    simpleName = "testcommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon";
  }

  @(_ast!95):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast";
  }

  @(ASTConstantsTestCommon.java!2):JavaSourceFile{
    simpleName = "ASTConstantsTestCommon";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/ASTConstantsTestCommon.java";
  }

  @(ASTTestCommonNode.java!2):JavaSourceFile{
    simpleName = "ASTTestCommonNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/ASTTestCommonNode.java";
  }

  @(TestCommonLiterals.java!2):JavaSourceFile{
    simpleName = "TestCommonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/TestCommonLiterals.java";
  }

  @(TestCommonMill.java!2):JavaSourceFile{
    simpleName = "TestCommonMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/TestCommonMill.java";
  }

  @(TestCommonNodeFactory.java!2):JavaSourceFile{
    simpleName = "TestCommonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/TestCommonNodeFactory.java";
  }

  @(TestCommonPackage.java):JavaSourceFile{
    simpleName = "TestCommonPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/TestCommonPackage.java";
  }

  @(TestCommonPackageImpl.java):JavaSourceFile{
    simpleName = "TestCommonPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_ast/TestCommonPackageImpl.java";
  }

  @(_cocos!89):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_cocos";
  }

  @(TestCommonASTTestCommonNodeCoCo.java!2):JavaSourceFile{
    simpleName = "TestCommonASTTestCommonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_cocos/TestCommonASTTestCommonNodeCoCo.java";
  }

  @(TestCommonCoCoChecker.java!2):JavaSourceFile{
    simpleName = "TestCommonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_cocos/TestCommonCoCoChecker.java";
  }

  @(TestCommonTestCommonPackageCoCo.java):JavaSourceFile{
    simpleName = "TestCommonTestCommonPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_cocos/TestCommonTestCommonPackageCoCo.java";
  }

  @(_od!89):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_od";
  }

  @(TestCommon2OD.java!2):JavaSourceFile{
    simpleName = "TestCommon2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_od/TestCommon2OD.java";
  }

  @(_parser!14):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser";
  }

  @(TestCommonAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestCommonAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser/TestCommonAntlrBaseListener.java";
  }

  @(TestCommonAntlrLexer.java):JavaSourceFile{
    simpleName = "TestCommonAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser/TestCommonAntlrLexer.java";
  }

  @(TestCommonAntlrListener.java):JavaSourceFile{
    simpleName = "TestCommonAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser/TestCommonAntlrListener.java";
  }

  @(TestCommonAntlrParser.java):JavaSourceFile{
    simpleName = "TestCommonAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser/TestCommonAntlrParser.java";
  }

  @(TestCommonParser.java):JavaSourceFile{
    simpleName = "TestCommonParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_parser/TestCommonParser.java";
  }

  @(_visitor!89):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_visitor";
  }

  @(TestCommonDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "TestCommonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_visitor/TestCommonDelegatorVisitor.java";
  }

  @(TestCommonInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "TestCommonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_visitor/TestCommonInheritanceVisitor.java";
  }

  @(TestCommonParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "TestCommonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_visitor/TestCommonParentAwareVisitor.java";
  }

  @(TestCommonVisitor.java!2):JavaSourceFile{
    simpleName = "TestCommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/common/testcommon/_visitor/TestCommonVisitor.java";
  }

  @(literals!15):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals";
  }

  @(testliterals!2):Directory{
    simpleName = "testliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals";
  }

  @(_ast!96):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast";
  }

  @(ASTConstantsTestLiterals.java!2):JavaSourceFile{
    simpleName = "ASTConstantsTestLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/ASTConstantsTestLiterals.java";
  }

  @(ASTTestLiteralsNode.java!2):JavaSourceFile{
    simpleName = "ASTTestLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/ASTTestLiteralsNode.java";
  }

  @(TestLiteralsLiterals.java!2):JavaSourceFile{
    simpleName = "TestLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/TestLiteralsLiterals.java";
  }

  @(TestLiteralsMill.java!2):JavaSourceFile{
    simpleName = "TestLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/TestLiteralsMill.java";
  }

  @(TestLiteralsNodeFactory.java!2):JavaSourceFile{
    simpleName = "TestLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/TestLiteralsNodeFactory.java";
  }

  @(TestLiteralsPackage.java):JavaSourceFile{
    simpleName = "TestLiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/TestLiteralsPackage.java";
  }

  @(TestLiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "TestLiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_ast/TestLiteralsPackageImpl.java";
  }

  @(_cocos!90):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_cocos";
  }

  @(TestLiteralsASTTestLiteralsNodeCoCo.java!2):JavaSourceFile{
    simpleName = "TestLiteralsASTTestLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_cocos/TestLiteralsASTTestLiteralsNodeCoCo.java";
  }

  @(TestLiteralsCoCoChecker.java!2):JavaSourceFile{
    simpleName = "TestLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_cocos/TestLiteralsCoCoChecker.java";
  }

  @(TestLiteralsTestLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsTestLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_cocos/TestLiteralsTestLiteralsPackageCoCo.java";
  }

  @(_od!90):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_od";
  }

  @(TestLiterals2OD.java!2):JavaSourceFile{
    simpleName = "TestLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_od/TestLiterals2OD.java";
  }

  @(_parser!15):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser";
  }

  @(TestLiteralsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestLiteralsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrBaseListener.java";
  }

  @(TestLiteralsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestLiteralsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrLexer.java";
  }

  @(TestLiteralsAntlrListener.java):JavaSourceFile{
    simpleName = "TestLiteralsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrListener.java";
  }

  @(TestLiteralsAntlrParser.java):JavaSourceFile{
    simpleName = "TestLiteralsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser.java";
  }

  @(TestLiteralsParser.java):JavaSourceFile{
    simpleName = "TestLiteralsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_parser/TestLiteralsParser.java";
  }

  @(_visitor!90):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_visitor";
  }

  @(TestLiteralsDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "TestLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_visitor/TestLiteralsDelegatorVisitor.java";
  }

  @(TestLiteralsInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "TestLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_visitor/TestLiteralsInheritanceVisitor.java";
  }

  @(TestLiteralsParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "TestLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_visitor/TestLiteralsParentAwareVisitor.java";
  }

  @(TestLiteralsVisitor.java!2):JavaSourceFile{
    simpleName = "TestLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/literals/testliterals/_visitor/TestLiteralsVisitor.java";
  }

  @(testassignmentexpressions):Directory{
    simpleName = "testassignmentexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions";
  }

  @(_ast!97):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast";
  }

  @(ASTConstantsTestAssignmentExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestAssignmentExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/ASTConstantsTestAssignmentExpressions.java";
  }

  @(ASTPrimaryExpression.java!2):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTTestAssignmentExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestAssignmentExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/ASTTestAssignmentExpressionsNode.java";
  }

  @(TestAssignmentExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsLiterals.java";
  }

  @(TestAssignmentExpressionsMill.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsMill.java";
  }

  @(TestAssignmentExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsNodeFactory.java";
  }

  @(TestAssignmentExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsPackage.java";
  }

  @(TestAssignmentExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsPackageImpl.java";
  }

  @(_cocos!91):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_cocos";
  }

  @(TestAssignmentExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.java";
  }

  @(TestAssignmentExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsCoCoChecker.java";
  }

  @(TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.java";
  }

  @(_od!91):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_od";
  }

  @(TestAssignmentExpressions2OD.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_od/TestAssignmentExpressions2OD.java";
  }

  @(_parser!16):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser";
  }

  @(TestAssignmentExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrBaseListener.java";
  }

  @(TestAssignmentExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrLexer.java";
  }

  @(TestAssignmentExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrListener.java";
  }

  @(TestAssignmentExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser.java";
  }

  @(TestAssignmentExpressionsParser.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsParser.java";
  }

  @(_symboltable!60):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_symboltable";
  }

  @(TestAssignmentExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_symboltable/TestAssignmentExpressionsLanguage.java";
  }

  @(TestAssignmentExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_symboltable/TestAssignmentExpressionsModelLoader.java";
  }

  @(_visitor!91):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_visitor";
  }

  @(TestAssignmentExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsDelegatorVisitor.java";
  }

  @(TestAssignmentExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsInheritanceVisitor.java";
  }

  @(TestAssignmentExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsParentAwareVisitor.java";
  }

  @(TestAssignmentExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestAssignmentExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsVisitor.java";
  }

  @(testcardinality):Directory{
    simpleName = "testcardinality";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality";
  }

  @(_ast!98):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast";
  }

  @(ASTConstantsTestCardinality.java):JavaSourceFile{
    simpleName = "ASTConstantsTestCardinality";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/ASTConstantsTestCardinality.java";
  }

  @(ASTTestCardinalityNode.java):JavaSourceFile{
    simpleName = "ASTTestCardinalityNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/ASTTestCardinalityNode.java";
  }

  @(TestCardinalityLiterals.java):JavaSourceFile{
    simpleName = "TestCardinalityLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/TestCardinalityLiterals.java";
  }

  @(TestCardinalityMill.java):JavaSourceFile{
    simpleName = "TestCardinalityMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/TestCardinalityMill.java";
  }

  @(TestCardinalityNodeFactory.java):JavaSourceFile{
    simpleName = "TestCardinalityNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/TestCardinalityNodeFactory.java";
  }

  @(TestCardinalityPackage.java):JavaSourceFile{
    simpleName = "TestCardinalityPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/TestCardinalityPackage.java";
  }

  @(TestCardinalityPackageImpl.java):JavaSourceFile{
    simpleName = "TestCardinalityPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_ast/TestCardinalityPackageImpl.java";
  }

  @(_cocos!92):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_cocos";
  }

  @(TestCardinalityASTTestCardinalityNodeCoCo.java):JavaSourceFile{
    simpleName = "TestCardinalityASTTestCardinalityNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_cocos/TestCardinalityASTTestCardinalityNodeCoCo.java";
  }

  @(TestCardinalityCoCoChecker.java):JavaSourceFile{
    simpleName = "TestCardinalityCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_cocos/TestCardinalityCoCoChecker.java";
  }

  @(TestCardinalityTestCardinalityPackageCoCo.java):JavaSourceFile{
    simpleName = "TestCardinalityTestCardinalityPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_cocos/TestCardinalityTestCardinalityPackageCoCo.java";
  }

  @(_od!92):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_od";
  }

  @(TestCardinality2OD.java):JavaSourceFile{
    simpleName = "TestCardinality2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_od/TestCardinality2OD.java";
  }

  @(_parser!17):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser";
  }

  @(TestCardinalityAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestCardinalityAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser/TestCardinalityAntlrBaseListener.java";
  }

  @(TestCardinalityAntlrLexer.java):JavaSourceFile{
    simpleName = "TestCardinalityAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser/TestCardinalityAntlrLexer.java";
  }

  @(TestCardinalityAntlrListener.java):JavaSourceFile{
    simpleName = "TestCardinalityAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser/TestCardinalityAntlrListener.java";
  }

  @(TestCardinalityAntlrParser.java):JavaSourceFile{
    simpleName = "TestCardinalityAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser.java";
  }

  @(TestCardinalityParser.java):JavaSourceFile{
    simpleName = "TestCardinalityParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_parser/TestCardinalityParser.java";
  }

  @(_visitor!92):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_visitor";
  }

  @(TestCardinalityDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestCardinalityDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_visitor/TestCardinalityDelegatorVisitor.java";
  }

  @(TestCardinalityInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestCardinalityInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_visitor/TestCardinalityInheritanceVisitor.java";
  }

  @(TestCardinalityParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestCardinalityParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_visitor/TestCardinalityParentAwareVisitor.java";
  }

  @(TestCardinalityVisitor.java):JavaSourceFile{
    simpleName = "TestCardinalityVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcardinality/_visitor/TestCardinalityVisitor.java";
  }

  @(testcommonexpressions):Directory{
    simpleName = "testcommonexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions";
  }

  @(_ast!99):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast";
  }

  @(ASTConstantsTestCommonExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestCommonExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/ASTConstantsTestCommonExpressions.java";
  }

  @(ASTPrimaryExpression.java!3):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTTestCommonExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestCommonExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/ASTTestCommonExpressionsNode.java";
  }

  @(TestCommonExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsLiterals.java";
  }

  @(TestCommonExpressionsMill.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsMill.java";
  }

  @(TestCommonExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsNodeFactory.java";
  }

  @(TestCommonExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsPackage.java";
  }

  @(TestCommonExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsPackageImpl.java";
  }

  @(_cocos!93):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_cocos";
  }

  @(TestCommonExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsASTTestCommonExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.java";
  }

  @(TestCommonExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsCoCoChecker.java";
  }

  @(TestCommonExpressionsTestCommonExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsTestCommonExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsTestCommonExpressionsPackageCoCo.java";
  }

  @(_od!93):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_od";
  }

  @(TestCommonExpressions2OD.java):JavaSourceFile{
    simpleName = "TestCommonExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_od/TestCommonExpressions2OD.java";
  }

  @(_parser!18):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser";
  }

  @(TestCommonExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrBaseListener.java";
  }

  @(TestCommonExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrLexer.java";
  }

  @(TestCommonExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrListener.java";
  }

  @(TestCommonExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser.java";
  }

  @(TestCommonExpressionsParser.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsParser.java";
  }

  @(_symboltable!61):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_symboltable";
  }

  @(TestCommonExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_symboltable/TestCommonExpressionsLanguage.java";
  }

  @(TestCommonExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_symboltable/TestCommonExpressionsModelLoader.java";
  }

  @(_visitor!93):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_visitor";
  }

  @(TestCommonExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsDelegatorVisitor.java";
  }

  @(TestCommonExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsInheritanceVisitor.java";
  }

  @(TestCommonExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsParentAwareVisitor.java";
  }

  @(TestCommonExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestCommonExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsVisitor.java";
  }

  @(testcompleteness):Directory{
    simpleName = "testcompleteness";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness";
  }

  @(_ast!100):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast";
  }

  @(ASTCompletenessList.java):JavaSourceFile{
    simpleName = "ASTCompletenessList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/ASTCompletenessList.java";
  }

  @(ASTConstantsTestCompleteness.java):JavaSourceFile{
    simpleName = "ASTConstantsTestCompleteness";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/ASTConstantsTestCompleteness.java";
  }

  @(ASTTestCompletenessNode.java):JavaSourceFile{
    simpleName = "ASTTestCompletenessNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/ASTTestCompletenessNode.java";
  }

  @(TestCompletenessLiterals.java):JavaSourceFile{
    simpleName = "TestCompletenessLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/TestCompletenessLiterals.java";
  }

  @(TestCompletenessMill.java):JavaSourceFile{
    simpleName = "TestCompletenessMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/TestCompletenessMill.java";
  }

  @(TestCompletenessNodeFactory.java):JavaSourceFile{
    simpleName = "TestCompletenessNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/TestCompletenessNodeFactory.java";
  }

  @(TestCompletenessPackage.java):JavaSourceFile{
    simpleName = "TestCompletenessPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/TestCompletenessPackage.java";
  }

  @(TestCompletenessPackageImpl.java):JavaSourceFile{
    simpleName = "TestCompletenessPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_ast/TestCompletenessPackageImpl.java";
  }

  @(_cocos!94):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_cocos";
  }

  @(TestCompletenessASTCompletenessListCoCo.java):JavaSourceFile{
    simpleName = "TestCompletenessASTCompletenessListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_cocos/TestCompletenessASTCompletenessListCoCo.java";
  }

  @(TestCompletenessASTTestCompletenessNodeCoCo.java):JavaSourceFile{
    simpleName = "TestCompletenessASTTestCompletenessNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_cocos/TestCompletenessASTTestCompletenessNodeCoCo.java";
  }

  @(TestCompletenessCoCoChecker.java):JavaSourceFile{
    simpleName = "TestCompletenessCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_cocos/TestCompletenessCoCoChecker.java";
  }

  @(TestCompletenessTestCompletenessPackageCoCo.java):JavaSourceFile{
    simpleName = "TestCompletenessTestCompletenessPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_cocos/TestCompletenessTestCompletenessPackageCoCo.java";
  }

  @(_od!94):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_od";
  }

  @(TestCompleteness2OD.java):JavaSourceFile{
    simpleName = "TestCompleteness2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_od/TestCompleteness2OD.java";
  }

  @(_parser!19):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser";
  }

  @(TestCompletenessAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestCompletenessAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser/TestCompletenessAntlrBaseListener.java";
  }

  @(TestCompletenessAntlrLexer.java):JavaSourceFile{
    simpleName = "TestCompletenessAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser/TestCompletenessAntlrLexer.java";
  }

  @(TestCompletenessAntlrListener.java):JavaSourceFile{
    simpleName = "TestCompletenessAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser/TestCompletenessAntlrListener.java";
  }

  @(TestCompletenessAntlrParser.java):JavaSourceFile{
    simpleName = "TestCompletenessAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser.java";
  }

  @(TestCompletenessParser.java):JavaSourceFile{
    simpleName = "TestCompletenessParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_parser/TestCompletenessParser.java";
  }

  @(_symboltable!62):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_symboltable";
  }

  @(TestCompletenessLanguage.java):JavaSourceFile{
    simpleName = "TestCompletenessLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_symboltable/TestCompletenessLanguage.java";
  }

  @(TestCompletenessModelLoader.java):JavaSourceFile{
    simpleName = "TestCompletenessModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_symboltable/TestCompletenessModelLoader.java";
  }

  @(_visitor!94):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_visitor";
  }

  @(TestCompletenessDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestCompletenessDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_visitor/TestCompletenessDelegatorVisitor.java";
  }

  @(TestCompletenessInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestCompletenessInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_visitor/TestCompletenessInheritanceVisitor.java";
  }

  @(TestCompletenessParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestCompletenessParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_visitor/TestCompletenessParentAwareVisitor.java";
  }

  @(TestCompletenessVisitor.java):JavaSourceFile{
    simpleName = "TestCompletenessVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testcompleteness/_visitor/TestCompletenessVisitor.java";
  }

  @(testjavaclassexpressions):Directory{
    simpleName = "testjavaclassexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions";
  }

  @(_ast!101):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast";
  }

  @(ASTConstantsTestJavaClassExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestJavaClassExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTConstantsTestJavaClassExpressions.java";
  }

  @(ASTELiteral.java):JavaSourceFile{
    simpleName = "ASTELiteral";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTELiteral.java";
  }

  @(ASTEReturnType.java):JavaSourceFile{
    simpleName = "ASTEReturnType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTEReturnType.java";
  }

  @(ASTEType.java):JavaSourceFile{
    simpleName = "ASTEType";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTEType.java";
  }

  @(ASTETypeArguments.java):JavaSourceFile{
    simpleName = "ASTETypeArguments";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTETypeArguments.java";
  }

  @(ASTPrimaryExpression.java!4):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTTestJavaClassExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestJavaClassExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/ASTTestJavaClassExpressionsNode.java";
  }

  @(TestJavaClassExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsLiterals.java";
  }

  @(TestJavaClassExpressionsMill.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsMill.java";
  }

  @(TestJavaClassExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsNodeFactory.java";
  }

  @(TestJavaClassExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsPackage.java";
  }

  @(TestJavaClassExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsPackageImpl.java";
  }

  @(_cocos!95):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos";
  }

  @(TestJavaClassExpressionsASTELiteralCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTELiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTELiteralCoCo.java";
  }

  @(TestJavaClassExpressionsASTEReturnTypeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTEReturnTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTEReturnTypeCoCo.java";
  }

  @(TestJavaClassExpressionsASTETypeArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTETypeArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTETypeArgumentsCoCo.java";
  }

  @(TestJavaClassExpressionsASTETypeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTETypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTETypeCoCo.java";
  }

  @(TestJavaClassExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.java";
  }

  @(TestJavaClassExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsCoCoChecker.java";
  }

  @(TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.java";
  }

  @(_od!95):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_od";
  }

  @(TestJavaClassExpressions2OD.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_od/TestJavaClassExpressions2OD.java";
  }

  @(_parser!20):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser";
  }

  @(TestJavaClassExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrBaseListener.java";
  }

  @(TestJavaClassExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrLexer.java";
  }

  @(TestJavaClassExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrListener.java";
  }

  @(TestJavaClassExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser.java";
  }

  @(TestJavaClassExpressionsParser.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsParser.java";
  }

  @(_symboltable!63):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_symboltable";
  }

  @(TestJavaClassExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_symboltable/TestJavaClassExpressionsLanguage.java";
  }

  @(TestJavaClassExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_symboltable/TestJavaClassExpressionsModelLoader.java";
  }

  @(_visitor!95):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_visitor";
  }

  @(TestJavaClassExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsDelegatorVisitor.java";
  }

  @(TestJavaClassExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsInheritanceVisitor.java";
  }

  @(TestJavaClassExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsParentAwareVisitor.java";
  }

  @(TestJavaClassExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestJavaClassExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsVisitor.java";
  }

  @(testmcbasictypes1):Directory{
    simpleName = "testmcbasictypes1";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1";
  }

  @(_ast!102):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast";
  }

  @(ASTCharTypeList.java):JavaSourceFile{
    simpleName = "ASTCharTypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTCharTypeList.java";
  }

  @(ASTConstantsTestMCBasicTypes1.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCBasicTypes1";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTConstantsTestMCBasicTypes1.java";
  }

  @(ASTImportStatementList.java):JavaSourceFile{
    simpleName = "ASTImportStatementList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTImportStatementList.java";
  }

  @(ASTNameAsReferenceTypeList.java):JavaSourceFile{
    simpleName = "ASTNameAsReferenceTypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTNameAsReferenceTypeList.java";
  }

  @(ASTPrimitiveTypeList.java):JavaSourceFile{
    simpleName = "ASTPrimitiveTypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTPrimitiveTypeList.java";
  }

  @(ASTQualifiedNameList.java):JavaSourceFile{
    simpleName = "ASTQualifiedNameList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTQualifiedNameList.java";
  }

  @(ASTReturnTypeList.java):JavaSourceFile{
    simpleName = "ASTReturnTypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTReturnTypeList.java";
  }

  @(ASTTestMCBasicTypes1Node.java):JavaSourceFile{
    simpleName = "ASTTestMCBasicTypes1Node";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTTestMCBasicTypes1Node.java";
  }

  @(ASTTypeList.java):JavaSourceFile{
    simpleName = "ASTTypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/ASTTypeList.java";
  }

  @(TestMCBasicTypes1Literals.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Literals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Literals.java";
  }

  @(TestMCBasicTypes1Mill.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Mill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Mill.java";
  }

  @(TestMCBasicTypes1NodeFactory.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1NodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1NodeFactory.java";
  }

  @(TestMCBasicTypes1Package.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Package";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Package.java";
  }

  @(TestMCBasicTypes1PackageImpl.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1PackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1PackageImpl.java";
  }

  @(_cocos!96):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos";
  }

  @(TestMCBasicTypes1ASTCharTypeListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTCharTypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTCharTypeListCoCo.java";
  }

  @(TestMCBasicTypes1ASTImportStatementListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTImportStatementListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTImportStatementListCoCo.java";
  }

  @(TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.java";
  }

  @(TestMCBasicTypes1ASTPrimitiveTypeListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTPrimitiveTypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTPrimitiveTypeListCoCo.java";
  }

  @(TestMCBasicTypes1ASTQualifiedNameListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTQualifiedNameListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTQualifiedNameListCoCo.java";
  }

  @(TestMCBasicTypes1ASTReturnTypeListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTReturnTypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTReturnTypeListCoCo.java";
  }

  @(TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.java";
  }

  @(TestMCBasicTypes1ASTTypeListCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ASTTypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTTypeListCoCo.java";
  }

  @(TestMCBasicTypes1CoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1CoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1CoCoChecker.java";
  }

  @(TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1TestMCBasicTypes1PackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.java";
  }

  @(_od!96):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_od";
  }

  @(TestMCBasicTypes12OD.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes12OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_od/TestMCBasicTypes12OD.java";
  }

  @(_parser!21):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser";
  }

  @(TestMCBasicTypes1AntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1AntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrBaseListener.java";
  }

  @(TestMCBasicTypes1AntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1AntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrLexer.java";
  }

  @(TestMCBasicTypes1AntlrListener.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1AntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrListener.java";
  }

  @(TestMCBasicTypes1AntlrParser.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1AntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser.java";
  }

  @(TestMCBasicTypes1Parser.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Parser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1Parser.java";
  }

  @(_symboltable!64):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_symboltable";
  }

  @(TestMCBasicTypes1Language.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Language";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_symboltable/TestMCBasicTypes1Language.java";
  }

  @(TestMCBasicTypes1ModelLoader.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_symboltable/TestMCBasicTypes1ModelLoader.java";
  }

  @(_visitor!96):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_visitor";
  }

  @(TestMCBasicTypes1DelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1DelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1DelegatorVisitor.java";
  }

  @(TestMCBasicTypes1InheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1InheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1InheritanceVisitor.java";
  }

  @(TestMCBasicTypes1ParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1ParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1ParentAwareVisitor.java";
  }

  @(TestMCBasicTypes1Visitor.java):JavaSourceFile{
    simpleName = "TestMCBasicTypes1Visitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1Visitor.java";
  }

  @(testmccommon):Directory{
    simpleName = "testmccommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon";
  }

  @(_ast!103):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast";
  }

  @(ASTA.java!9):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/ASTA.java";
  }

  @(ASTConstantsTestMCCommon.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCCommon";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/ASTConstantsTestMCCommon.java";
  }

  @(ASTTestMCCommonNode.java):JavaSourceFile{
    simpleName = "ASTTestMCCommonNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/ASTTestMCCommonNode.java";
  }

  @(TestMCCommonLiterals.java):JavaSourceFile{
    simpleName = "TestMCCommonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/TestMCCommonLiterals.java";
  }

  @(TestMCCommonMill.java):JavaSourceFile{
    simpleName = "TestMCCommonMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/TestMCCommonMill.java";
  }

  @(TestMCCommonNodeFactory.java):JavaSourceFile{
    simpleName = "TestMCCommonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/TestMCCommonNodeFactory.java";
  }

  @(TestMCCommonPackage.java):JavaSourceFile{
    simpleName = "TestMCCommonPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/TestMCCommonPackage.java";
  }

  @(TestMCCommonPackageImpl.java):JavaSourceFile{
    simpleName = "TestMCCommonPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_ast/TestMCCommonPackageImpl.java";
  }

  @(_cocos!97):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_cocos";
  }

  @(TestMCCommonASTACoCo.java):JavaSourceFile{
    simpleName = "TestMCCommonASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_cocos/TestMCCommonASTACoCo.java";
  }

  @(TestMCCommonASTTestMCCommonNodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCCommonASTTestMCCommonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_cocos/TestMCCommonASTTestMCCommonNodeCoCo.java";
  }

  @(TestMCCommonCoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCCommonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_cocos/TestMCCommonCoCoChecker.java";
  }

  @(TestMCCommonTestMCCommonPackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCCommonTestMCCommonPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_cocos/TestMCCommonTestMCCommonPackageCoCo.java";
  }

  @(_od!97):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_od";
  }

  @(TestMCCommon2OD.java):JavaSourceFile{
    simpleName = "TestMCCommon2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_od/TestMCCommon2OD.java";
  }

  @(_parser!22):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser";
  }

  @(TestMCCommonAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCCommonAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser/TestMCCommonAntlrBaseListener.java";
  }

  @(TestMCCommonAntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCCommonAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser/TestMCCommonAntlrLexer.java";
  }

  @(TestMCCommonAntlrListener.java):JavaSourceFile{
    simpleName = "TestMCCommonAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser/TestMCCommonAntlrListener.java";
  }

  @(TestMCCommonAntlrParser.java):JavaSourceFile{
    simpleName = "TestMCCommonAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser.java";
  }

  @(TestMCCommonParser.java):JavaSourceFile{
    simpleName = "TestMCCommonParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_parser/TestMCCommonParser.java";
  }

  @(_symboltable!65):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_symboltable";
  }

  @(TestMCCommonLanguage.java):JavaSourceFile{
    simpleName = "TestMCCommonLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_symboltable/TestMCCommonLanguage.java";
  }

  @(TestMCCommonModelLoader.java):JavaSourceFile{
    simpleName = "TestMCCommonModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_symboltable/TestMCCommonModelLoader.java";
  }

  @(_visitor!97):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_visitor";
  }

  @(TestMCCommonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCCommonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_visitor/TestMCCommonDelegatorVisitor.java";
  }

  @(TestMCCommonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCCommonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_visitor/TestMCCommonInheritanceVisitor.java";
  }

  @(TestMCCommonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCCommonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_visitor/TestMCCommonParentAwareVisitor.java";
  }

  @(TestMCCommonVisitor.java):JavaSourceFile{
    simpleName = "TestMCCommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmccommon/_visitor/TestMCCommonVisitor.java";
  }

  @(testmchexnumbers):Directory{
    simpleName = "testmchexnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers";
  }

  @(_ast!104):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast";
  }

  @(ASTConstantsTestMCHexNumbers.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCHexNumbers";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/ASTConstantsTestMCHexNumbers.java";
  }

  @(ASTTestMCHexNumbersNode.java):JavaSourceFile{
    simpleName = "ASTTestMCHexNumbersNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/ASTTestMCHexNumbersNode.java";
  }

  @(TestMCHexNumbersLiterals.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersLiterals.java";
  }

  @(TestMCHexNumbersMill.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersMill.java";
  }

  @(TestMCHexNumbersNodeFactory.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersNodeFactory.java";
  }

  @(TestMCHexNumbersPackage.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersPackage.java";
  }

  @(TestMCHexNumbersPackageImpl.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersPackageImpl.java";
  }

  @(_cocos!98):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_cocos";
  }

  @(TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersASTTestMCHexNumbersNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.java";
  }

  @(TestMCHexNumbersCoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersCoCoChecker.java";
  }

  @(TestMCHexNumbersTestMCHexNumbersPackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersTestMCHexNumbersPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersTestMCHexNumbersPackageCoCo.java";
  }

  @(_od!98):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_od";
  }

  @(TestMCHexNumbers2OD.java):JavaSourceFile{
    simpleName = "TestMCHexNumbers2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_od/TestMCHexNumbers2OD.java";
  }

  @(_parser!23):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser";
  }

  @(TestMCHexNumbersAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrBaseListener.java";
  }

  @(TestMCHexNumbersAntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrLexer.java";
  }

  @(TestMCHexNumbersAntlrListener.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrListener.java";
  }

  @(TestMCHexNumbersAntlrParser.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser.java";
  }

  @(TestMCHexNumbersParser.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersParser.java";
  }

  @(_visitor!98):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_visitor";
  }

  @(TestMCHexNumbersDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersDelegatorVisitor.java";
  }

  @(TestMCHexNumbersInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersInheritanceVisitor.java";
  }

  @(TestMCHexNumbersParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersParentAwareVisitor.java";
  }

  @(TestMCHexNumbersVisitor.java):JavaSourceFile{
    simpleName = "TestMCHexNumbersVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersVisitor.java";
  }

  @(testmcliterals):Directory{
    simpleName = "testmcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals";
  }

  @(_ast!105):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast";
  }

  @(ASTConstantsTestMCLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/ASTConstantsTestMCLiterals.java";
  }

  @(ASTTestMCLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTTestMCLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/ASTTestMCLiteralsNode.java";
  }

  @(TestMCLiteralsLiterals.java):JavaSourceFile{
    simpleName = "TestMCLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/TestMCLiteralsLiterals.java";
  }

  @(TestMCLiteralsMill.java):JavaSourceFile{
    simpleName = "TestMCLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/TestMCLiteralsMill.java";
  }

  @(TestMCLiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "TestMCLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/TestMCLiteralsNodeFactory.java";
  }

  @(TestMCLiteralsPackage.java):JavaSourceFile{
    simpleName = "TestMCLiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/TestMCLiteralsPackage.java";
  }

  @(TestMCLiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "TestMCLiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_ast/TestMCLiteralsPackageImpl.java";
  }

  @(_cocos!99):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_cocos";
  }

  @(TestMCLiteralsASTTestMCLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsASTTestMCLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_cocos/TestMCLiteralsASTTestMCLiteralsNodeCoCo.java";
  }

  @(TestMCLiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_cocos/TestMCLiteralsCoCoChecker.java";
  }

  @(TestMCLiteralsTestMCLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsTestMCLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_cocos/TestMCLiteralsTestMCLiteralsPackageCoCo.java";
  }

  @(_od!99):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_od";
  }

  @(TestMCLiterals2OD.java):JavaSourceFile{
    simpleName = "TestMCLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_od/TestMCLiterals2OD.java";
  }

  @(_parser!24):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser";
  }

  @(TestMCLiteralsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrBaseListener.java";
  }

  @(TestMCLiteralsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCLiteralsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrLexer.java";
  }

  @(TestMCLiteralsAntlrListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrListener.java";
  }

  @(TestMCLiteralsAntlrParser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser.java";
  }

  @(TestMCLiteralsParser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_parser/TestMCLiteralsParser.java";
  }

  @(_visitor!99):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_visitor";
  }

  @(TestMCLiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_visitor/TestMCLiteralsDelegatorVisitor.java";
  }

  @(TestMCLiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_visitor/TestMCLiteralsInheritanceVisitor.java";
  }

  @(TestMCLiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_visitor/TestMCLiteralsParentAwareVisitor.java";
  }

  @(TestMCLiteralsVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliterals/_visitor/TestMCLiteralsVisitor.java";
  }

  @(testmcliteralsv2):Directory{
    simpleName = "testmcliteralsv2";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2";
  }

  @(_ast!106):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast";
  }

  @(ASTAnyToken.java):JavaSourceFile{
    simpleName = "ASTAnyToken";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTAnyToken.java";
  }

  @(ASTAnyTokenList.java):JavaSourceFile{
    simpleName = "ASTAnyTokenList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTAnyTokenList.java";
  }

  @(ASTBTest.java):JavaSourceFile{
    simpleName = "ASTBTest";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTBTest.java";
  }

  @(ASTCharList.java):JavaSourceFile{
    simpleName = "ASTCharList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTCharList.java";
  }

  @(ASTConstantsTestMCLiteralsV2.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCLiteralsV2";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTConstantsTestMCLiteralsV2.java";
  }

  @(ASTDecimalList.java):JavaSourceFile{
    simpleName = "ASTDecimalList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTDecimalList.java";
  }

  @(ASTIntegerList.java):JavaSourceFile{
    simpleName = "ASTIntegerList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTIntegerList.java";
  }

  @(ASTStringList.java):JavaSourceFile{
    simpleName = "ASTStringList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTStringList.java";
  }

  @(ASTTestMCLiteralsV2Node.java):JavaSourceFile{
    simpleName = "ASTTestMCLiteralsV2Node";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/ASTTestMCLiteralsV2Node.java";
  }

  @(TestMCLiteralsV2Literals.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Literals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Literals.java";
  }

  @(TestMCLiteralsV2Mill.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Mill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Mill.java";
  }

  @(TestMCLiteralsV2NodeFactory.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2NodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2NodeFactory.java";
  }

  @(TestMCLiteralsV2Package.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Package";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Package.java";
  }

  @(TestMCLiteralsV2PackageImpl.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2PackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2PackageImpl.java";
  }

  @(_cocos!100):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos";
  }

  @(TestMCLiteralsV2ASTAnyTokenCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTAnyTokenCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTAnyTokenCoCo.java";
  }

  @(TestMCLiteralsV2ASTAnyTokenListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTAnyTokenListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTAnyTokenListCoCo.java";
  }

  @(TestMCLiteralsV2ASTBTestCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTBTestCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTBTestCoCo.java";
  }

  @(TestMCLiteralsV2ASTCharListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTCharListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTCharListCoCo.java";
  }

  @(TestMCLiteralsV2ASTDecimalListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTDecimalListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTDecimalListCoCo.java";
  }

  @(TestMCLiteralsV2ASTIntegerListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTIntegerListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTIntegerListCoCo.java";
  }

  @(TestMCLiteralsV2ASTStringListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTStringListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTStringListCoCo.java";
  }

  @(TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.java";
  }

  @(TestMCLiteralsV2CoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2CoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2CoCoChecker.java";
  }

  @(TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2TestMCLiteralsV2PackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.java";
  }

  @(_od!100):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_od";
  }

  @(TestMCLiteralsV22OD.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV22OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_od/TestMCLiteralsV22OD.java";
  }

  @(_parser!25):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser";
  }

  @(TestMCLiteralsV2AntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2AntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrBaseListener.java";
  }

  @(TestMCLiteralsV2AntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2AntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrLexer.java";
  }

  @(TestMCLiteralsV2AntlrListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2AntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrListener.java";
  }

  @(TestMCLiteralsV2AntlrParser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2AntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser.java";
  }

  @(TestMCLiteralsV2Parser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Parser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2Parser.java";
  }

  @(_symboltable!66):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_symboltable";
  }

  @(TestMCLiteralsV2Language.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Language";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_symboltable/TestMCLiteralsV2Language.java";
  }

  @(TestMCLiteralsV2ModelLoader.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_symboltable/TestMCLiteralsV2ModelLoader.java";
  }

  @(_visitor!100):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_visitor";
  }

  @(TestMCLiteralsV2DelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2DelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2DelegatorVisitor.java";
  }

  @(TestMCLiteralsV2InheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2InheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2InheritanceVisitor.java";
  }

  @(TestMCLiteralsV2ParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2ParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2ParentAwareVisitor.java";
  }

  @(TestMCLiteralsV2Visitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV2Visitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2Visitor.java";
  }

  @(testmcliteralsv3):Directory{
    simpleName = "testmcliteralsv3";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3";
  }

  @(_ast!107):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast";
  }

  @(ASTAnyToken.java!2):JavaSourceFile{
    simpleName = "ASTAnyToken";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTAnyToken.java";
  }

  @(ASTAnyTokenList.java!2):JavaSourceFile{
    simpleName = "ASTAnyTokenList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTAnyTokenList.java";
  }

  @(ASTConstantsTestMCLiteralsV3.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCLiteralsV3";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTConstantsTestMCLiteralsV3.java";
  }

  @(ASTDecimalList.java!2):JavaSourceFile{
    simpleName = "ASTDecimalList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTDecimalList.java";
  }

  @(ASTIntegerList.java!2):JavaSourceFile{
    simpleName = "ASTIntegerList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTIntegerList.java";
  }

  @(ASTNumberList.java):JavaSourceFile{
    simpleName = "ASTNumberList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTNumberList.java";
  }

  @(ASTTestMCLiteralsV3Node.java):JavaSourceFile{
    simpleName = "ASTTestMCLiteralsV3Node";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/ASTTestMCLiteralsV3Node.java";
  }

  @(TestMCLiteralsV3Literals.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Literals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Literals.java";
  }

  @(TestMCLiteralsV3Mill.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Mill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Mill.java";
  }

  @(TestMCLiteralsV3NodeFactory.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3NodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3NodeFactory.java";
  }

  @(TestMCLiteralsV3Package.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Package";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Package.java";
  }

  @(TestMCLiteralsV3PackageImpl.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3PackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3PackageImpl.java";
  }

  @(_cocos!101):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos";
  }

  @(TestMCLiteralsV3ASTAnyTokenCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTAnyTokenCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTAnyTokenCoCo.java";
  }

  @(TestMCLiteralsV3ASTAnyTokenListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTAnyTokenListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTAnyTokenListCoCo.java";
  }

  @(TestMCLiteralsV3ASTDecimalListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTDecimalListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTDecimalListCoCo.java";
  }

  @(TestMCLiteralsV3ASTIntegerListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTIntegerListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTIntegerListCoCo.java";
  }

  @(TestMCLiteralsV3ASTNumberListCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTNumberListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTNumberListCoCo.java";
  }

  @(TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.java";
  }

  @(TestMCLiteralsV3CoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3CoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3CoCoChecker.java";
  }

  @(TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3TestMCLiteralsV3PackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.java";
  }

  @(_od!101):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_od";
  }

  @(TestMCLiteralsV32OD.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV32OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_od/TestMCLiteralsV32OD.java";
  }

  @(_parser!26):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser";
  }

  @(TestMCLiteralsV3AntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3AntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrBaseListener.java";
  }

  @(TestMCLiteralsV3AntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3AntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrLexer.java";
  }

  @(TestMCLiteralsV3AntlrListener.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3AntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrListener.java";
  }

  @(TestMCLiteralsV3AntlrParser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3AntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser.java";
  }

  @(TestMCLiteralsV3Parser.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Parser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3Parser.java";
  }

  @(_symboltable!67):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_symboltable";
  }

  @(TestMCLiteralsV3Language.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Language";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_symboltable/TestMCLiteralsV3Language.java";
  }

  @(TestMCLiteralsV3ModelLoader.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_symboltable/TestMCLiteralsV3ModelLoader.java";
  }

  @(_visitor!101):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_visitor";
  }

  @(TestMCLiteralsV3DelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3DelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3DelegatorVisitor.java";
  }

  @(TestMCLiteralsV3InheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3InheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3InheritanceVisitor.java";
  }

  @(TestMCLiteralsV3ParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3ParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3ParentAwareVisitor.java";
  }

  @(TestMCLiteralsV3Visitor.java):JavaSourceFile{
    simpleName = "TestMCLiteralsV3Visitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3Visitor.java";
  }

  @(testmcnumbers):Directory{
    simpleName = "testmcnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers";
  }

  @(_ast!108):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast";
  }

  @(ASTConstantsTestMCNumbers.java):JavaSourceFile{
    simpleName = "ASTConstantsTestMCNumbers";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/ASTConstantsTestMCNumbers.java";
  }

  @(ASTTestMCNumbersNode.java):JavaSourceFile{
    simpleName = "ASTTestMCNumbersNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/ASTTestMCNumbersNode.java";
  }

  @(TestMCNumbersLiterals.java):JavaSourceFile{
    simpleName = "TestMCNumbersLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/TestMCNumbersLiterals.java";
  }

  @(TestMCNumbersMill.java):JavaSourceFile{
    simpleName = "TestMCNumbersMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/TestMCNumbersMill.java";
  }

  @(TestMCNumbersNodeFactory.java):JavaSourceFile{
    simpleName = "TestMCNumbersNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/TestMCNumbersNodeFactory.java";
  }

  @(TestMCNumbersPackage.java):JavaSourceFile{
    simpleName = "TestMCNumbersPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/TestMCNumbersPackage.java";
  }

  @(TestMCNumbersPackageImpl.java):JavaSourceFile{
    simpleName = "TestMCNumbersPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_ast/TestMCNumbersPackageImpl.java";
  }

  @(_cocos!102):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_cocos";
  }

  @(TestMCNumbersASTTestMCNumbersNodeCoCo.java):JavaSourceFile{
    simpleName = "TestMCNumbersASTTestMCNumbersNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_cocos/TestMCNumbersASTTestMCNumbersNodeCoCo.java";
  }

  @(TestMCNumbersCoCoChecker.java):JavaSourceFile{
    simpleName = "TestMCNumbersCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_cocos/TestMCNumbersCoCoChecker.java";
  }

  @(TestMCNumbersTestMCNumbersPackageCoCo.java):JavaSourceFile{
    simpleName = "TestMCNumbersTestMCNumbersPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_cocos/TestMCNumbersTestMCNumbersPackageCoCo.java";
  }

  @(_od!102):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_od";
  }

  @(TestMCNumbers2OD.java):JavaSourceFile{
    simpleName = "TestMCNumbers2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_od/TestMCNumbers2OD.java";
  }

  @(_parser!27):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser";
  }

  @(TestMCNumbersAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestMCNumbersAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrBaseListener.java";
  }

  @(TestMCNumbersAntlrLexer.java):JavaSourceFile{
    simpleName = "TestMCNumbersAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrLexer.java";
  }

  @(TestMCNumbersAntlrListener.java):JavaSourceFile{
    simpleName = "TestMCNumbersAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrListener.java";
  }

  @(TestMCNumbersAntlrParser.java):JavaSourceFile{
    simpleName = "TestMCNumbersAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser.java";
  }

  @(TestMCNumbersParser.java):JavaSourceFile{
    simpleName = "TestMCNumbersParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_parser/TestMCNumbersParser.java";
  }

  @(_visitor!102):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_visitor";
  }

  @(TestMCNumbersDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestMCNumbersDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_visitor/TestMCNumbersDelegatorVisitor.java";
  }

  @(TestMCNumbersInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestMCNumbersInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_visitor/TestMCNumbersInheritanceVisitor.java";
  }

  @(TestMCNumbersParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestMCNumbersParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_visitor/TestMCNumbersParentAwareVisitor.java";
  }

  @(TestMCNumbersVisitor.java):JavaSourceFile{
    simpleName = "TestMCNumbersVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testmcnumbers/_visitor/TestMCNumbersVisitor.java";
  }

  @(testoclexpressions):Directory{
    simpleName = "testoclexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions";
  }

  @(_ast!109):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast";
  }

  @(ASTConstantsTestOCLExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestOCLExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/ASTConstantsTestOCLExpressions.java";
  }

  @(ASTEDeclaration.java):JavaSourceFile{
    simpleName = "ASTEDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/ASTEDeclaration.java";
  }

  @(ASTPrimaryExpression.java!5):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTPrimaryNestedExpression.java):JavaSourceFile{
    simpleName = "ASTPrimaryNestedExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/ASTPrimaryNestedExpression.java";
  }

  @(ASTTestOCLExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestOCLExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/ASTTestOCLExpressionsNode.java";
  }

  @(TestOCLExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/TestOCLExpressionsLiterals.java";
  }

  @(TestOCLExpressionsMill.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/TestOCLExpressionsMill.java";
  }

  @(TestOCLExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/TestOCLExpressionsNodeFactory.java";
  }

  @(TestOCLExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/TestOCLExpressionsPackage.java";
  }

  @(TestOCLExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_ast/TestOCLExpressionsPackageImpl.java";
  }

  @(_cocos!103):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos";
  }

  @(TestOCLExpressionsASTEDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsASTEDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTEDeclarationCoCo.java";
  }

  @(TestOCLExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestOCLExpressionsASTPrimaryNestedExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsASTPrimaryNestedExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTPrimaryNestedExpressionCoCo.java";
  }

  @(TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsASTTestOCLExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.java";
  }

  @(TestOCLExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsCoCoChecker.java";
  }

  @(TestOCLExpressionsTestOCLExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsTestOCLExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsTestOCLExpressionsPackageCoCo.java";
  }

  @(_od!103):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_od";
  }

  @(TestOCLExpressions2OD.java):JavaSourceFile{
    simpleName = "TestOCLExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_od/TestOCLExpressions2OD.java";
  }

  @(_parser!28):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser";
  }

  @(TestOCLExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrBaseListener.java";
  }

  @(TestOCLExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrLexer.java";
  }

  @(TestOCLExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrListener.java";
  }

  @(TestOCLExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser.java";
  }

  @(TestOCLExpressionsParser.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_parser/TestOCLExpressionsParser.java";
  }

  @(_symboltable!68):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_symboltable";
  }

  @(TestOCLExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_symboltable/TestOCLExpressionsLanguage.java";
  }

  @(TestOCLExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_symboltable/TestOCLExpressionsModelLoader.java";
  }

  @(_visitor!103):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_visitor";
  }

  @(TestOCLExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsDelegatorVisitor.java";
  }

  @(TestOCLExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsInheritanceVisitor.java";
  }

  @(TestOCLExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsParentAwareVisitor.java";
  }

  @(TestOCLExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestOCLExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsVisitor.java";
  }

  @(testsetexpressions):Directory{
    simpleName = "testsetexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions";
  }

  @(_ast!110):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast";
  }

  @(ASTConstantsTestSetExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestSetExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/ASTConstantsTestSetExpressions.java";
  }

  @(ASTPrimaryExpression.java!6):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTTestSetExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestSetExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/ASTTestSetExpressionsNode.java";
  }

  @(TestSetExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestSetExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/TestSetExpressionsLiterals.java";
  }

  @(TestSetExpressionsMill.java):JavaSourceFile{
    simpleName = "TestSetExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/TestSetExpressionsMill.java";
  }

  @(TestSetExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestSetExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/TestSetExpressionsNodeFactory.java";
  }

  @(TestSetExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestSetExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/TestSetExpressionsPackage.java";
  }

  @(TestSetExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestSetExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_ast/TestSetExpressionsPackageImpl.java";
  }

  @(_cocos!104):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_cocos";
  }

  @(TestSetExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestSetExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_cocos/TestSetExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestSetExpressionsASTTestSetExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestSetExpressionsASTTestSetExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_cocos/TestSetExpressionsASTTestSetExpressionsNodeCoCo.java";
  }

  @(TestSetExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestSetExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_cocos/TestSetExpressionsCoCoChecker.java";
  }

  @(TestSetExpressionsTestSetExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestSetExpressionsTestSetExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_cocos/TestSetExpressionsTestSetExpressionsPackageCoCo.java";
  }

  @(_od!104):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_od";
  }

  @(TestSetExpressions2OD.java):JavaSourceFile{
    simpleName = "TestSetExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_od/TestSetExpressions2OD.java";
  }

  @(_parser!29):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser";
  }

  @(TestSetExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestSetExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrBaseListener.java";
  }

  @(TestSetExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestSetExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrLexer.java";
  }

  @(TestSetExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestSetExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrListener.java";
  }

  @(TestSetExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestSetExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser.java";
  }

  @(TestSetExpressionsParser.java):JavaSourceFile{
    simpleName = "TestSetExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_parser/TestSetExpressionsParser.java";
  }

  @(_symboltable!69):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_symboltable";
  }

  @(TestSetExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestSetExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_symboltable/TestSetExpressionsLanguage.java";
  }

  @(TestSetExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestSetExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_symboltable/TestSetExpressionsModelLoader.java";
  }

  @(_visitor!104):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_visitor";
  }

  @(TestSetExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestSetExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_visitor/TestSetExpressionsDelegatorVisitor.java";
  }

  @(TestSetExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestSetExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_visitor/TestSetExpressionsInheritanceVisitor.java";
  }

  @(TestSetExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestSetExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_visitor/TestSetExpressionsParentAwareVisitor.java";
  }

  @(TestSetExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestSetExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testsetexpressions/_visitor/TestSetExpressionsVisitor.java";
  }

  @(testshiftexpressions):Directory{
    simpleName = "testshiftexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions";
  }

  @(_ast!111):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast";
  }

  @(ASTConstantsTestShiftExpressions.java):JavaSourceFile{
    simpleName = "ASTConstantsTestShiftExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/ASTConstantsTestShiftExpressions.java";
  }

  @(ASTPrimaryExpression.java!7):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/ASTPrimaryExpression.java";
  }

  @(ASTTestShiftExpressionsNode.java):JavaSourceFile{
    simpleName = "ASTTestShiftExpressionsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/ASTTestShiftExpressionsNode.java";
  }

  @(TestShiftExpressionsLiterals.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsLiterals.java";
  }

  @(TestShiftExpressionsMill.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsMill.java";
  }

  @(TestShiftExpressionsNodeFactory.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsNodeFactory.java";
  }

  @(TestShiftExpressionsPackage.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsPackage.java";
  }

  @(TestShiftExpressionsPackageImpl.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsPackageImpl.java";
  }

  @(_cocos!105):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_cocos";
  }

  @(TestShiftExpressionsASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsASTPrimaryExpressionCoCo.java";
  }

  @(TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsASTTestShiftExpressionsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.java";
  }

  @(TestShiftExpressionsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsCoCoChecker.java";
  }

  @(TestShiftExpressionsTestShiftExpressionsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsTestShiftExpressionsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsTestShiftExpressionsPackageCoCo.java";
  }

  @(_od!105):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_od";
  }

  @(TestShiftExpressions2OD.java):JavaSourceFile{
    simpleName = "TestShiftExpressions2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_od/TestShiftExpressions2OD.java";
  }

  @(_parser!30):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser";
  }

  @(TestShiftExpressionsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrBaseListener.java";
  }

  @(TestShiftExpressionsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrLexer.java";
  }

  @(TestShiftExpressionsAntlrListener.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrListener.java";
  }

  @(TestShiftExpressionsAntlrParser.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser.java";
  }

  @(TestShiftExpressionsParser.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsParser.java";
  }

  @(_symboltable!70):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_symboltable";
  }

  @(TestShiftExpressionsLanguage.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_symboltable/TestShiftExpressionsLanguage.java";
  }

  @(TestShiftExpressionsModelLoader.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_symboltable/TestShiftExpressionsModelLoader.java";
  }

  @(_visitor!105):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_visitor";
  }

  @(TestShiftExpressionsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsDelegatorVisitor.java";
  }

  @(TestShiftExpressionsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsInheritanceVisitor.java";
  }

  @(TestShiftExpressionsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsParentAwareVisitor.java";
  }

  @(TestShiftExpressionsVisitor.java):JavaSourceFile{
    simpleName = "TestShiftExpressionsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsVisitor.java";
  }

  @(teststringliterals):Directory{
    simpleName = "teststringliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals";
  }

  @(_ast!112):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast";
  }

  @(ASTCharLiteralList.java):JavaSourceFile{
    simpleName = "ASTCharLiteralList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/ASTCharLiteralList.java";
  }

  @(ASTConstantsTestStringLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsTestStringLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/ASTConstantsTestStringLiterals.java";
  }

  @(ASTStringLiteralList.java):JavaSourceFile{
    simpleName = "ASTStringLiteralList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/ASTStringLiteralList.java";
  }

  @(ASTTestStringLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTTestStringLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/ASTTestStringLiteralsNode.java";
  }

  @(TestStringLiteralsLiterals.java):JavaSourceFile{
    simpleName = "TestStringLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/TestStringLiteralsLiterals.java";
  }

  @(TestStringLiteralsMill.java):JavaSourceFile{
    simpleName = "TestStringLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/TestStringLiteralsMill.java";
  }

  @(TestStringLiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "TestStringLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/TestStringLiteralsNodeFactory.java";
  }

  @(TestStringLiteralsPackage.java):JavaSourceFile{
    simpleName = "TestStringLiteralsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/TestStringLiteralsPackage.java";
  }

  @(TestStringLiteralsPackageImpl.java):JavaSourceFile{
    simpleName = "TestStringLiteralsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_ast/TestStringLiteralsPackageImpl.java";
  }

  @(_cocos!106):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos";
  }

  @(TestStringLiteralsASTCharLiteralListCoCo.java):JavaSourceFile{
    simpleName = "TestStringLiteralsASTCharLiteralListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTCharLiteralListCoCo.java";
  }

  @(TestStringLiteralsASTStringLiteralListCoCo.java):JavaSourceFile{
    simpleName = "TestStringLiteralsASTStringLiteralListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTStringLiteralListCoCo.java";
  }

  @(TestStringLiteralsASTTestStringLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestStringLiteralsASTTestStringLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTTestStringLiteralsNodeCoCo.java";
  }

  @(TestStringLiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestStringLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos/TestStringLiteralsCoCoChecker.java";
  }

  @(TestStringLiteralsTestStringLiteralsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestStringLiteralsTestStringLiteralsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_cocos/TestStringLiteralsTestStringLiteralsPackageCoCo.java";
  }

  @(_od!106):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_od";
  }

  @(TestStringLiterals2OD.java):JavaSourceFile{
    simpleName = "TestStringLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_od/TestStringLiterals2OD.java";
  }

  @(_parser!31):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser";
  }

  @(TestStringLiteralsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestStringLiteralsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrBaseListener.java";
  }

  @(TestStringLiteralsAntlrLexer.java):JavaSourceFile{
    simpleName = "TestStringLiteralsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrLexer.java";
  }

  @(TestStringLiteralsAntlrListener.java):JavaSourceFile{
    simpleName = "TestStringLiteralsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrListener.java";
  }

  @(TestStringLiteralsAntlrParser.java):JavaSourceFile{
    simpleName = "TestStringLiteralsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser.java";
  }

  @(TestStringLiteralsParser.java):JavaSourceFile{
    simpleName = "TestStringLiteralsParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_parser/TestStringLiteralsParser.java";
  }

  @(_symboltable!71):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_symboltable";
  }

  @(TestStringLiteralsLanguage.java):JavaSourceFile{
    simpleName = "TestStringLiteralsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_symboltable/TestStringLiteralsLanguage.java";
  }

  @(TestStringLiteralsModelLoader.java):JavaSourceFile{
    simpleName = "TestStringLiteralsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_symboltable/TestStringLiteralsModelLoader.java";
  }

  @(_visitor!106):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_visitor";
  }

  @(TestStringLiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestStringLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_visitor/TestStringLiteralsDelegatorVisitor.java";
  }

  @(TestStringLiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestStringLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_visitor/TestStringLiteralsInheritanceVisitor.java";
  }

  @(TestStringLiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestStringLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_visitor/TestStringLiteralsParentAwareVisitor.java";
  }

  @(TestStringLiteralsVisitor.java):JavaSourceFile{
    simpleName = "TestStringLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/teststringliterals/_visitor/TestStringLiteralsVisitor.java";
  }

  @(testumlmodifier):Directory{
    simpleName = "testumlmodifier";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier";
  }

  @(_ast!113):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast";
  }

  @(ASTA.java!10):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/ASTA.java";
  }

  @(ASTConstantsTestUMLModifier.java):JavaSourceFile{
    simpleName = "ASTConstantsTestUMLModifier";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/ASTConstantsTestUMLModifier.java";
  }

  @(ASTTestUMLModifierNode.java):JavaSourceFile{
    simpleName = "ASTTestUMLModifierNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/ASTTestUMLModifierNode.java";
  }

  @(TestUMLModifierLiterals.java):JavaSourceFile{
    simpleName = "TestUMLModifierLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/TestUMLModifierLiterals.java";
  }

  @(TestUMLModifierMill.java):JavaSourceFile{
    simpleName = "TestUMLModifierMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/TestUMLModifierMill.java";
  }

  @(TestUMLModifierNodeFactory.java):JavaSourceFile{
    simpleName = "TestUMLModifierNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/TestUMLModifierNodeFactory.java";
  }

  @(TestUMLModifierPackage.java):JavaSourceFile{
    simpleName = "TestUMLModifierPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/TestUMLModifierPackage.java";
  }

  @(TestUMLModifierPackageImpl.java):JavaSourceFile{
    simpleName = "TestUMLModifierPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_ast/TestUMLModifierPackageImpl.java";
  }

  @(_cocos!107):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_cocos";
  }

  @(TestUMLModifierASTACoCo.java):JavaSourceFile{
    simpleName = "TestUMLModifierASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_cocos/TestUMLModifierASTACoCo.java";
  }

  @(TestUMLModifierASTTestUMLModifierNodeCoCo.java):JavaSourceFile{
    simpleName = "TestUMLModifierASTTestUMLModifierNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_cocos/TestUMLModifierASTTestUMLModifierNodeCoCo.java";
  }

  @(TestUMLModifierCoCoChecker.java):JavaSourceFile{
    simpleName = "TestUMLModifierCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_cocos/TestUMLModifierCoCoChecker.java";
  }

  @(TestUMLModifierTestUMLModifierPackageCoCo.java):JavaSourceFile{
    simpleName = "TestUMLModifierTestUMLModifierPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_cocos/TestUMLModifierTestUMLModifierPackageCoCo.java";
  }

  @(_od!107):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_od";
  }

  @(TestUMLModifier2OD.java):JavaSourceFile{
    simpleName = "TestUMLModifier2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_od/TestUMLModifier2OD.java";
  }

  @(_parser!32):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser";
  }

  @(TestUMLModifierAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestUMLModifierAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrBaseListener.java";
  }

  @(TestUMLModifierAntlrLexer.java):JavaSourceFile{
    simpleName = "TestUMLModifierAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrLexer.java";
  }

  @(TestUMLModifierAntlrListener.java):JavaSourceFile{
    simpleName = "TestUMLModifierAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrListener.java";
  }

  @(TestUMLModifierAntlrParser.java):JavaSourceFile{
    simpleName = "TestUMLModifierAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser.java";
  }

  @(TestUMLModifierParser.java):JavaSourceFile{
    simpleName = "TestUMLModifierParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_parser/TestUMLModifierParser.java";
  }

  @(_symboltable!72):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_symboltable";
  }

  @(TestUMLModifierLanguage.java):JavaSourceFile{
    simpleName = "TestUMLModifierLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_symboltable/TestUMLModifierLanguage.java";
  }

  @(TestUMLModifierModelLoader.java):JavaSourceFile{
    simpleName = "TestUMLModifierModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_symboltable/TestUMLModifierModelLoader.java";
  }

  @(_visitor!107):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_visitor";
  }

  @(TestUMLModifierDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestUMLModifierDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_visitor/TestUMLModifierDelegatorVisitor.java";
  }

  @(TestUMLModifierInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestUMLModifierInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_visitor/TestUMLModifierInheritanceVisitor.java";
  }

  @(TestUMLModifierParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestUMLModifierParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_visitor/TestUMLModifierParentAwareVisitor.java";
  }

  @(TestUMLModifierVisitor.java):JavaSourceFile{
    simpleName = "TestUMLModifierVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlmodifier/_visitor/TestUMLModifierVisitor.java";
  }

  @(testumlstereotype):Directory{
    simpleName = "testumlstereotype";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype";
  }

  @(_ast!114):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast";
  }

  @(ASTConstantsTestUMLStereotype.java):JavaSourceFile{
    simpleName = "ASTConstantsTestUMLStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/ASTConstantsTestUMLStereotype.java";
  }

  @(ASTStereotypeList.java):JavaSourceFile{
    simpleName = "ASTStereotypeList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/ASTStereotypeList.java";
  }

  @(ASTStereoValueList.java):JavaSourceFile{
    simpleName = "ASTStereoValueList";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/ASTStereoValueList.java";
  }

  @(ASTTestUMLStereotypeNode.java):JavaSourceFile{
    simpleName = "ASTTestUMLStereotypeNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/ASTTestUMLStereotypeNode.java";
  }

  @(TestUMLStereotypeLiterals.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/TestUMLStereotypeLiterals.java";
  }

  @(TestUMLStereotypeMill.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/TestUMLStereotypeMill.java";
  }

  @(TestUMLStereotypeNodeFactory.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/TestUMLStereotypeNodeFactory.java";
  }

  @(TestUMLStereotypePackage.java):JavaSourceFile{
    simpleName = "TestUMLStereotypePackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/TestUMLStereotypePackage.java";
  }

  @(TestUMLStereotypePackageImpl.java):JavaSourceFile{
    simpleName = "TestUMLStereotypePackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_ast/TestUMLStereotypePackageImpl.java";
  }

  @(_cocos!108):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos";
  }

  @(TestUMLStereotypeASTStereotypeListCoCo.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeASTStereotypeListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTStereotypeListCoCo.java";
  }

  @(TestUMLStereotypeASTStereoValueListCoCo.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeASTStereoValueListCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTStereoValueListCoCo.java";
  }

  @(TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeASTTestUMLStereotypeNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.java";
  }

  @(TestUMLStereotypeCoCoChecker.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeCoCoChecker.java";
  }

  @(TestUMLStereotypeTestUMLStereotypePackageCoCo.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeTestUMLStereotypePackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeTestUMLStereotypePackageCoCo.java";
  }

  @(_od!108):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_od";
  }

  @(TestUMLStereotype2OD.java):JavaSourceFile{
    simpleName = "TestUMLStereotype2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_od/TestUMLStereotype2OD.java";
  }

  @(_parser!33):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser";
  }

  @(TestUMLStereotypeAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrBaseListener.java";
  }

  @(TestUMLStereotypeAntlrLexer.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrLexer.java";
  }

  @(TestUMLStereotypeAntlrListener.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrListener.java";
  }

  @(TestUMLStereotypeAntlrParser.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser.java";
  }

  @(TestUMLStereotypeParser.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_parser/TestUMLStereotypeParser.java";
  }

  @(_symboltable!73):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_symboltable";
  }

  @(TestUMLStereotypeLanguage.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_symboltable/TestUMLStereotypeLanguage.java";
  }

  @(TestUMLStereotypeModelLoader.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_symboltable/TestUMLStereotypeModelLoader.java";
  }

  @(_visitor!108):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_visitor";
  }

  @(TestUMLStereotypeDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeDelegatorVisitor.java";
  }

  @(TestUMLStereotypeInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeInheritanceVisitor.java";
  }

  @(TestUMLStereotypeParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeParentAwareVisitor.java";
  }

  @(TestUMLStereotypeVisitor.java):JavaSourceFile{
    simpleName = "TestUMLStereotypeVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeVisitor.java";
  }

  @(types!19):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types";
  }

  @(testtypes!2):Directory{
    simpleName = "testtypes";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes";
  }

  @(_ast!115):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast";
  }

  @(ASTConstantsTestTypes.java!2):JavaSourceFile{
    simpleName = "ASTConstantsTestTypes";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/ASTConstantsTestTypes.java";
  }

  @(ASTTestTypesNode.java!2):JavaSourceFile{
    simpleName = "ASTTestTypesNode";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/ASTTestTypesNode.java";
  }

  @(TestTypesLiterals.java!2):JavaSourceFile{
    simpleName = "TestTypesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/TestTypesLiterals.java";
  }

  @(TestTypesMill.java!2):JavaSourceFile{
    simpleName = "TestTypesMill";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/TestTypesMill.java";
  }

  @(TestTypesNodeFactory.java!2):JavaSourceFile{
    simpleName = "TestTypesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/TestTypesNodeFactory.java";
  }

  @(TestTypesPackage.java):JavaSourceFile{
    simpleName = "TestTypesPackage";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/TestTypesPackage.java";
  }

  @(TestTypesPackageImpl.java):JavaSourceFile{
    simpleName = "TestTypesPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_ast/TestTypesPackageImpl.java";
  }

  @(_cocos!109):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_cocos";
  }

  @(TestTypesASTTestTypesNodeCoCo.java!2):JavaSourceFile{
    simpleName = "TestTypesASTTestTypesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_cocos/TestTypesASTTestTypesNodeCoCo.java";
  }

  @(TestTypesCoCoChecker.java!2):JavaSourceFile{
    simpleName = "TestTypesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_cocos/TestTypesCoCoChecker.java";
  }

  @(TestTypesTestTypesPackageCoCo.java):JavaSourceFile{
    simpleName = "TestTypesTestTypesPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_cocos/TestTypesTestTypesPackageCoCo.java";
  }

  @(_od!109):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_od";
  }

  @(TestTypes2OD.java!2):JavaSourceFile{
    simpleName = "TestTypes2OD";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_od/TestTypes2OD.java";
  }

  @(_parser!34):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser";
  }

  @(TestTypesAntlrBaseListener.java):JavaSourceFile{
    simpleName = "TestTypesAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser/TestTypesAntlrBaseListener.java";
  }

  @(TestTypesAntlrLexer.java):JavaSourceFile{
    simpleName = "TestTypesAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser/TestTypesAntlrLexer.java";
  }

  @(TestTypesAntlrListener.java):JavaSourceFile{
    simpleName = "TestTypesAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser/TestTypesAntlrListener.java";
  }

  @(TestTypesAntlrParser.java):JavaSourceFile{
    simpleName = "TestTypesAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser/TestTypesAntlrParser.java";
  }

  @(TestTypesParser.java):JavaSourceFile{
    simpleName = "TestTypesParser";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_parser/TestTypesParser.java";
  }

  @(_visitor!109):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_visitor";
  }

  @(TestTypesDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "TestTypesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_visitor/TestTypesDelegatorVisitor.java";
  }

  @(TestTypesInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "TestTypesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_visitor/TestTypesInheritanceVisitor.java";
  }

  @(TestTypesParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "TestTypesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_visitor/TestTypesParentAwareVisitor.java";
  }

  @(TestTypesVisitor.java!2):JavaSourceFile{
    simpleName = "TestTypesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/de/monticore/types/testtypes/_visitor/TestTypesVisitor.java";
  }

  @(reports!5):Directory{
    simpleName = "reports";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports";
  }

  @(de.monticore.common!2):Directory{
    simpleName = "de.monticore.common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.common.TestCommon";
  }

  @(de.monticore.literals!2):Directory{
    simpleName = "de.monticore.literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.literals.TestLiterals";
  }

  @(de.monticore!22):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestAssignmentExpressions";
  }

  @(de.monticore!23):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestCardinality";
  }

  @(de.monticore!24):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestCommonExpressions";
  }

  @(de.monticore!25):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestCompleteness";
  }

  @(de.monticore!26):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestJavaClassExpressions";
  }

  @(de.monticore!27):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCBasicTypes1";
  }

  @(de.monticore!28):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCCommon";
  }

  @(de.monticore!29):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCHexNumbers";
  }

  @(de.monticore!30):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCLiterals";
  }

  @(de.monticore!31):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCLiteralsV2";
  }

  @(de.monticore!32):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCLiteralsV3";
  }

  @(de.monticore!33):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestMCNumbers";
  }

  @(de.monticore!34):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestOCLExpressions";
  }

  @(de.monticore!35):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestSetExpressions";
  }

  @(de.monticore!36):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestShiftExpressions";
  }

  @(de.monticore!37):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestStringLiterals";
  }

  @(de.monticore!38):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestUMLModifier";
  }

  @(de.monticore!39):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.TestUMLStereotype";
  }

  @(de.monticore.types!2):Directory{
    simpleName = "de.monticore.types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/monticore/sourcecode/reports/de.monticore.types.TestTypes";
  }

  @(test-annotations!3):Directory{
    simpleName = "test-annotations";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/generated-test-sources/test-annotations";
  }

  @(maven-archiver!4):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-archiver";
  }

  @(maven-status!4):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status";
  }

  @(maven-compiler-plugin!4):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status/maven-compiler-plugin";
  }

  @(compile!4):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!4):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(testCompile!3):Directory{
    simpleName = "testCompile";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status/maven-compiler-plugin/testCompile";
  }

  @(default-testCompile!3):Directory{
    simpleName = "default-testCompile";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile";
  }

  @(monticore-grammar-4.5.5.1-grammars.jar):JarArchive{
    simpleName = "monticore-grammar-4.5.5.1-grammars";
    nameExtension = "jar";
    fullName = "sources/monticore-grammar/target/monticore-grammar-4.5.5.1-grammars.jar";
  }

  @(monticore-grammar-4.5.5.1-sources.jar):JarArchive{
    simpleName = "monticore-grammar-4.5.5.1-sources";
    nameExtension = "jar";
    fullName = "sources/monticore-grammar/target/monticore-grammar-4.5.5.1-sources.jar";
  }

  @(monticore-grammar-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-grammar-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-grammar/target/monticore-grammar-4.5.5.1.jar";
  }

  @(surefire-reports!3):Directory{
    simpleName = "surefire-reports";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/surefire-reports";
  }

  @(test-classes!3):Directory{
    simpleName = "test-classes";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes";
  }

  @(de!31):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de";
  }

  @(monticore!34):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore";
  }

  @(common!14):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common";
  }

  @(StereotypeTest.class):JavaClassFile{
    simpleName = "StereotypeTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/StereotypeTest.class";
  }

  @(testcommon!3):Directory{
    simpleName = "testcommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon";
  }

  @(_ast!116):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast";
  }

  @(ASTConstantsTestCommon.class!2):JavaClassFile{
    simpleName = "ASTConstantsTestCommon";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/ASTConstantsTestCommon.class";
  }

  @(ASTTestCommonNode.class!2):JavaClassFile{
    simpleName = "ASTTestCommonNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/ASTTestCommonNode.class";
  }

  @(TestCommonLiterals.class!2):JavaClassFile{
    simpleName = "TestCommonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonLiterals.class";
  }

  @(TestCommonMill.class!2):JavaClassFile{
    simpleName = "TestCommonMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonMill.class";
  }

  @(TestCommonNodeFactory.class!2):JavaClassFile{
    simpleName = "TestCommonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonNodeFactory.class";
  }

  @(TestCommonPackage$Literals.class):JavaClassFile{
    simpleName = "TestCommonPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonPackage$Literals.class";
  }

  @(TestCommonPackage.class):JavaClassFile{
    simpleName = "TestCommonPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonPackage.class";
  }

  @(TestCommonPackageImpl.class):JavaClassFile{
    simpleName = "TestCommonPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_ast/TestCommonPackageImpl.class";
  }

  @(_cocos!110):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_cocos";
  }

  @(TestCommonASTTestCommonNodeCoCo.class!2):JavaClassFile{
    simpleName = "TestCommonASTTestCommonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_cocos/TestCommonASTTestCommonNodeCoCo.class";
  }

  @(TestCommonCoCoChecker.class!2):JavaClassFile{
    simpleName = "TestCommonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_cocos/TestCommonCoCoChecker.class";
  }

  @(TestCommonTestCommonPackageCoCo.class):JavaClassFile{
    simpleName = "TestCommonTestCommonPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_cocos/TestCommonTestCommonPackageCoCo.class";
  }

  @(_od!110):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_od";
  }

  @(TestCommon2OD.class!2):JavaClassFile{
    simpleName = "TestCommon2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_od/TestCommon2OD.class";
  }

  @(_parser!35):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser";
  }

  @(TestCommonAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestCommonAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrBaseListener.class";
  }

  @(TestCommonAntlrLexer.class):JavaClassFile{
    simpleName = "TestCommonAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrLexer.class";
  }

  @(TestCommonAntlrListener.class):JavaClassFile{
    simpleName = "TestCommonAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrListener.class";
  }

  @(TestCommonAntlrParser$ArrayTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ArrayTypeContext.class";
  }

  @(TestCommonAntlrParser$ArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ArrayType_eofContext.class";
  }

  @(TestCommonAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$BooleanLiteralContext.class";
  }

  @(TestCommonAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$CardinalityContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$CardinalityContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$CardinalityContext.class";
  }

  @(TestCommonAntlrParser$Cardinality_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Cardinality_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Cardinality_eofContext.class";
  }

  @(TestCommonAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$CharLiteralContext.class";
  }

  @(TestCommonAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$CompletenessContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$CompletenessContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$CompletenessContext.class";
  }

  @(TestCommonAntlrParser$Completeness_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Completeness_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Completeness_eofContext.class";
  }

  @(TestCommonAntlrParser$ComplexArrayTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ComplexArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ComplexArrayTypeContext.class";
  }

  @(TestCommonAntlrParser$ComplexArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ComplexArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ComplexArrayType_eofContext.class";
  }

  @(TestCommonAntlrParser$ComplexReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ComplexReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ComplexReferenceTypeContext.class";
  }

  @(TestCommonAntlrParser$ComplexReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ComplexReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ComplexReferenceType_eofContext.class";
  }

  @(TestCommonAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$DoubleLiteralContext.class";
  }

  @(TestCommonAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$FloatLiteralContext.class";
  }

  @(TestCommonAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$FloatLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$ImportStatementContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ImportStatementContext.class";
  }

  @(TestCommonAntlrParser$ImportStatement_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ImportStatement_eofContext.class";
  }

  @(TestCommonAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$IntLiteralContext.class";
  }

  @(TestCommonAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$IntLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$LiteralContext.class";
  }

  @(TestCommonAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Literal_eofContext.class";
  }

  @(TestCommonAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$LongLiteralContext.class";
  }

  @(TestCommonAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$LongLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$ModifierContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ModifierContext.class";
  }

  @(TestCommonAntlrParser$Modifier_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Modifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Modifier_eofContext.class";
  }

  @(TestCommonAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$NullLiteralContext.class";
  }

  @(TestCommonAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$NullLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$NumericLiteralContext.class";
  }

  @(TestCommonAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$NumericLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$PrimitiveArrayTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$PrimitiveArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$PrimitiveArrayTypeContext.class";
  }

  @(TestCommonAntlrParser$PrimitiveArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$PrimitiveArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$PrimitiveArrayType_eofContext.class";
  }

  @(TestCommonAntlrParser$PrimitiveTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$PrimitiveTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$PrimitiveTypeContext.class";
  }

  @(TestCommonAntlrParser$PrimitiveType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$PrimitiveType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$PrimitiveType_eofContext.class";
  }

  @(TestCommonAntlrParser$QualifiedNameContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$QualifiedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$QualifiedNameContext.class";
  }

  @(TestCommonAntlrParser$QualifiedName_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$QualifiedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$QualifiedName_eofContext.class";
  }

  @(TestCommonAntlrParser$ReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ReferenceTypeContext.class";
  }

  @(TestCommonAntlrParser$ReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ReferenceType_eofContext.class";
  }

  @(TestCommonAntlrParser$ReturnTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ReturnTypeContext.class";
  }

  @(TestCommonAntlrParser$ReturnType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$ReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$ReturnType_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedFloatLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedIntLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedLongLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedNumericLiteralContext.class";
  }

  @(TestCommonAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$SimpleReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SimpleReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SimpleReferenceTypeContext.class";
  }

  @(TestCommonAntlrParser$SimpleReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$SimpleReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$SimpleReferenceType_eofContext.class";
  }

  @(TestCommonAntlrParser$StereotypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$StereotypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$StereotypeContext.class";
  }

  @(TestCommonAntlrParser$Stereotype_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Stereotype_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Stereotype_eofContext.class";
  }

  @(TestCommonAntlrParser$StereoValueContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$StereoValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$StereoValueContext.class";
  }

  @(TestCommonAntlrParser$StereoValue_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$StereoValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$StereoValue_eofContext.class";
  }

  @(TestCommonAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$StringLiteralContext.class";
  }

  @(TestCommonAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestCommonAntlrParser$TypeArgumentContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeArgumentContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeArgumentContext.class";
  }

  @(TestCommonAntlrParser$TypeArgumentsContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeArgumentsContext.class";
  }

  @(TestCommonAntlrParser$TypeArguments_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeArguments_eofContext.class";
  }

  @(TestCommonAntlrParser$TypeArgument_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeArgument_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeArgument_eofContext.class";
  }

  @(TestCommonAntlrParser$TypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeContext.class";
  }

  @(TestCommonAntlrParser$TypeParametersContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeParametersContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeParametersContext.class";
  }

  @(TestCommonAntlrParser$TypeParameters_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeParameters_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeParameters_eofContext.class";
  }

  @(TestCommonAntlrParser$TypeVariableDeclarationContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeVariableDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeVariableDeclarationContext.class";
  }

  @(TestCommonAntlrParser$TypeVariableDeclaration_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$TypeVariableDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$TypeVariableDeclaration_eofContext.class";
  }

  @(TestCommonAntlrParser$Type_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$Type_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$Type_eofContext.class";
  }

  @(TestCommonAntlrParser$VoidTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$VoidTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$VoidTypeContext.class";
  }

  @(TestCommonAntlrParser$VoidType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$VoidType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$VoidType_eofContext.class";
  }

  @(TestCommonAntlrParser$WildcardTypeContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$WildcardTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$WildcardTypeContext.class";
  }

  @(TestCommonAntlrParser$WildcardType_eofContext.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser$WildcardType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser$WildcardType_eofContext.class";
  }

  @(TestCommonAntlrParser.class):JavaClassFile{
    simpleName = "TestCommonAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonAntlrParser.class";
  }

  @(TestCommonParser.class):JavaClassFile{
    simpleName = "TestCommonParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_parser/TestCommonParser.class";
  }

  @(_visitor!110):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_visitor";
  }

  @(TestCommonDelegatorVisitor.class!2):JavaClassFile{
    simpleName = "TestCommonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_visitor/TestCommonDelegatorVisitor.class";
  }

  @(TestCommonInheritanceVisitor.class!2):JavaClassFile{
    simpleName = "TestCommonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_visitor/TestCommonInheritanceVisitor.class";
  }

  @(TestCommonParentAwareVisitor.class!2):JavaClassFile{
    simpleName = "TestCommonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_visitor/TestCommonParentAwareVisitor.class";
  }

  @(TestCommonVisitor.class!2):JavaClassFile{
    simpleName = "TestCommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/common/testcommon/_visitor/TestCommonVisitor.class";
  }

  @(literals!16):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals";
  }

  @(CharLiteralsTest.class):JavaClassFile{
    simpleName = "CharLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/CharLiteralsTest.class";
  }

  @(DoubleLiteralsTest.class):JavaClassFile{
    simpleName = "DoubleLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/DoubleLiteralsTest.class";
  }

  @(FloatLiteralsTest.class):JavaClassFile{
    simpleName = "FloatLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/FloatLiteralsTest.class";
  }

  @(IntLiteralsTest.class):JavaClassFile{
    simpleName = "IntLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/IntLiteralsTest.class";
  }

  @(LiteralsTestHelper.class):JavaClassFile{
    simpleName = "LiteralsTestHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/LiteralsTestHelper.class";
  }

  @(LongLiteralsTest.class):JavaClassFile{
    simpleName = "LongLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/LongLiteralsTest.class";
  }

  @(NullAndBooleanLiteralsTest.class):JavaClassFile{
    simpleName = "NullAndBooleanLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/NullAndBooleanLiteralsTest.class";
  }

  @(SignedDoubleLiteralsTest.class):JavaClassFile{
    simpleName = "SignedDoubleLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/SignedDoubleLiteralsTest.class";
  }

  @(SignedFloatLiteralsTest.class):JavaClassFile{
    simpleName = "SignedFloatLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/SignedFloatLiteralsTest.class";
  }

  @(SignedIntLiteralsTest.class):JavaClassFile{
    simpleName = "SignedIntLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/SignedIntLiteralsTest.class";
  }

  @(SignedLongLiteralsTest.class):JavaClassFile{
    simpleName = "SignedLongLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/SignedLongLiteralsTest.class";
  }

  @(StringLiteralsTest.class):JavaClassFile{
    simpleName = "StringLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/StringLiteralsTest.class";
  }

  @(testliterals!3):Directory{
    simpleName = "testliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals";
  }

  @(_ast!117):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast";
  }

  @(ASTConstantsTestLiterals.class!2):JavaClassFile{
    simpleName = "ASTConstantsTestLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/ASTConstantsTestLiterals.class";
  }

  @(ASTTestLiteralsNode.class!2):JavaClassFile{
    simpleName = "ASTTestLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/ASTTestLiteralsNode.class";
  }

  @(TestLiteralsLiterals.class!2):JavaClassFile{
    simpleName = "TestLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsLiterals.class";
  }

  @(TestLiteralsMill.class!2):JavaClassFile{
    simpleName = "TestLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsMill.class";
  }

  @(TestLiteralsNodeFactory.class!2):JavaClassFile{
    simpleName = "TestLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsNodeFactory.class";
  }

  @(TestLiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "TestLiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsPackage$Literals.class";
  }

  @(TestLiteralsPackage.class):JavaClassFile{
    simpleName = "TestLiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsPackage.class";
  }

  @(TestLiteralsPackageImpl.class):JavaClassFile{
    simpleName = "TestLiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_ast/TestLiteralsPackageImpl.class";
  }

  @(_cocos!111):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_cocos";
  }

  @(TestLiteralsASTTestLiteralsNodeCoCo.class!2):JavaClassFile{
    simpleName = "TestLiteralsASTTestLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_cocos/TestLiteralsASTTestLiteralsNodeCoCo.class";
  }

  @(TestLiteralsCoCoChecker.class!2):JavaClassFile{
    simpleName = "TestLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_cocos/TestLiteralsCoCoChecker.class";
  }

  @(TestLiteralsTestLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsTestLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_cocos/TestLiteralsTestLiteralsPackageCoCo.class";
  }

  @(_od!111):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_od";
  }

  @(TestLiterals2OD.class!2):JavaClassFile{
    simpleName = "TestLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_od/TestLiterals2OD.class";
  }

  @(_parser!36):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser";
  }

  @(TestLiteralsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrBaseListener.class";
  }

  @(TestLiteralsAntlrLexer.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrLexer.class";
  }

  @(TestLiteralsAntlrListener.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrListener.class";
  }

  @(TestLiteralsAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$BooleanLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$CharLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$DoubleLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$FloatLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$FloatLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$IntLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$IntLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$LiteralContext.class";
  }

  @(TestLiteralsAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$Literal_eofContext.class";
  }

  @(TestLiteralsAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$LongLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$LongLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$NullLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$NullLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$NumericLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$NumericLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedFloatLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedIntLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedLongLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedNumericLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$StringLiteralContext.class";
  }

  @(TestLiteralsAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestLiteralsAntlrParser.class):JavaClassFile{
    simpleName = "TestLiteralsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsAntlrParser.class";
  }

  @(TestLiteralsParser.class):JavaClassFile{
    simpleName = "TestLiteralsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_parser/TestLiteralsParser.class";
  }

  @(_visitor!111):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_visitor";
  }

  @(TestLiteralsDelegatorVisitor.class!2):JavaClassFile{
    simpleName = "TestLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_visitor/TestLiteralsDelegatorVisitor.class";
  }

  @(TestLiteralsInheritanceVisitor.class!2):JavaClassFile{
    simpleName = "TestLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_visitor/TestLiteralsInheritanceVisitor.class";
  }

  @(TestLiteralsParentAwareVisitor.class!2):JavaClassFile{
    simpleName = "TestLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_visitor/TestLiteralsParentAwareVisitor.class";
  }

  @(TestLiteralsVisitor.class!2):JavaClassFile{
    simpleName = "TestLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/literals/testliterals/_visitor/TestLiteralsVisitor.class";
  }

  @(MCBasicTypes1Test.class):JavaClassFile{
    simpleName = "MCBasicTypes1Test";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/MCBasicTypes1Test.class";
  }

  @(MCCommonUnitTest.class):JavaClassFile{
    simpleName = "MCCommonUnitTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/MCCommonUnitTest.class";
  }

  @(mcliterals!4):Directory{
    simpleName = "mcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals";
  }

  @(CharLiteralsTest.class!2):JavaClassFile{
    simpleName = "CharLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/CharLiteralsTest.class";
  }

  @(DoubleLiteralsTest.class!2):JavaClassFile{
    simpleName = "DoubleLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/DoubleLiteralsTest.class";
  }

  @(FloatLiteralsTest.class!2):JavaClassFile{
    simpleName = "FloatLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/FloatLiteralsTest.class";
  }

  @(IntLiteralsTest.class!2):JavaClassFile{
    simpleName = "IntLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/IntLiteralsTest.class";
  }

  @(LongLiteralsTest.class!2):JavaClassFile{
    simpleName = "LongLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/LongLiteralsTest.class";
  }

  @(MCHexNumberUnitTests.class):JavaClassFile{
    simpleName = "MCHexNumberUnitTests";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/MCHexNumberUnitTests.class";
  }

  @(MCLiteralsTestHelper.class):JavaClassFile{
    simpleName = "MCLiteralsTestHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/MCLiteralsTestHelper.class";
  }

  @(MCLiteralsUnitTest.class):JavaClassFile{
    simpleName = "MCLiteralsUnitTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/MCLiteralsUnitTest.class";
  }

  @(NatLiteralsTest.class):JavaClassFile{
    simpleName = "NatLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/NatLiteralsTest.class";
  }

  @(NullAndBooleanLiteralsTest.class!2):JavaClassFile{
    simpleName = "NullAndBooleanLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/NullAndBooleanLiteralsTest.class";
  }

  @(SignedDoubleLiteralsTest.class!2):JavaClassFile{
    simpleName = "SignedDoubleLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/SignedDoubleLiteralsTest.class";
  }

  @(SignedFloatLiteralsTest.class!2):JavaClassFile{
    simpleName = "SignedFloatLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/SignedFloatLiteralsTest.class";
  }

  @(SignedIntLiteralsTest.class!2):JavaClassFile{
    simpleName = "SignedIntLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/SignedIntLiteralsTest.class";
  }

  @(SignedLongLiteralsTest.class!2):JavaClassFile{
    simpleName = "SignedLongLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/SignedLongLiteralsTest.class";
  }

  @(StringLiteralsTest.class!2):JavaClassFile{
    simpleName = "StringLiteralsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/mcliterals/StringLiteralsTest.class";
  }

  @(prettyprint!18):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint";
  }

  @(AssignmentExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/AssignmentExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(AssignmentExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "AssignmentExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/AssignmentExpressionsPrettyPrinterTest.class";
  }

  @(CardinalityPrettyPrinterTest.class):JavaClassFile{
    simpleName = "CardinalityPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/CardinalityPrettyPrinterTest.class";
  }

  @(CommonExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "CommonExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/CommonExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(CommonExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "CommonExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/CommonExpressionsPrettyPrinterTest.class";
  }

  @(CompletenessPrettyPrinterTest.class):JavaClassFile{
    simpleName = "CompletenessPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/CompletenessPrettyPrinterTest.class";
  }

  @(JavaClassExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/JavaClassExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(JavaClassExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "JavaClassExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/JavaClassExpressionsPrettyPrinterTest.class";
  }

  @(MCBasicTypes1PrettyPrinterTest.class):JavaClassFile{
    simpleName = "MCBasicTypes1PrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/MCBasicTypes1PrettyPrinterTest.class";
  }

  @(MCHexNumbersPrettyPrinterTest.class):JavaClassFile{
    simpleName = "MCHexNumbersPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/MCHexNumbersPrettyPrinterTest.class";
  }

  @(MCNumbersPrettyPrinterTest.class):JavaClassFile{
    simpleName = "MCNumbersPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/MCNumbersPrettyPrinterTest.class";
  }

  @(OCLExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "OCLExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/OCLExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(OCLExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "OCLExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/OCLExpressionsPrettyPrinterTest.class";
  }

  @(SetExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "SetExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/SetExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(SetExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "SetExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/SetExpressionsPrettyPrinterTest.class";
  }

  @(ShiftExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class):JavaClassFile{
    simpleName = "ShiftExpressionsPrettyPrinterTest$PrimaryPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/ShiftExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class";
  }

  @(ShiftExpressionsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "ShiftExpressionsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/ShiftExpressionsPrettyPrinterTest.class";
  }

  @(StringLiteralsPrettyPrinterTest.class):JavaClassFile{
    simpleName = "StringLiteralsPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/StringLiteralsPrettyPrinterTest.class";
  }

  @(UMLModifierPrettyPrinterTest.class):JavaClassFile{
    simpleName = "UMLModifierPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/UMLModifierPrettyPrinterTest.class";
  }

  @(UMLStereotypePrettyPrinterTest.class):JavaClassFile{
    simpleName = "UMLStereotypePrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/prettyprint/UMLStereotypePrettyPrinterTest.class";
  }

  @(testassignmentexpressions!2):Directory{
    simpleName = "testassignmentexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions";
  }

  @(_ast!118):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast";
  }

  @(ASTConstantsTestAssignmentExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestAssignmentExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/ASTConstantsTestAssignmentExpressions.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!2):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTTestAssignmentExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestAssignmentExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/ASTTestAssignmentExpressionsNode.class";
  }

  @(TestAssignmentExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsLiterals.class";
  }

  @(TestAssignmentExpressionsMill.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsMill.class";
  }

  @(TestAssignmentExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsNodeFactory.class";
  }

  @(TestAssignmentExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsPackage$Literals.class";
  }

  @(TestAssignmentExpressionsPackage.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsPackage.class";
  }

  @(TestAssignmentExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_ast/TestAssignmentExpressionsPackageImpl.class";
  }

  @(_cocos!112):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_cocos";
  }

  @(TestAssignmentExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.class";
  }

  @(TestAssignmentExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsCoCoChecker.class";
  }

  @(TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_cocos/TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.class";
  }

  @(_od!112):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_od";
  }

  @(TestAssignmentExpressions2OD.class):JavaClassFile{
    simpleName = "TestAssignmentExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_od/TestAssignmentExpressions2OD.class";
  }

  @(_parser!37):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser";
  }

  @(TestAssignmentExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrBaseListener.class";
  }

  @(TestAssignmentExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrLexer.class";
  }

  @(TestAssignmentExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrListener.class";
  }

  @(TestAssignmentExpressionsAntlrParser$AssignmentExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$AssignmentExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$AssignmentExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$AssignmentExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$AssignmentExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$AssignmentExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$DecPrefixExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$DecPrefixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$DecPrefixExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$DecPrefixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$DecPrefixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$DecPrefixExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$IncPrefixExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$IncPrefixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$IncPrefixExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$IncPrefixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$IncPrefixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$IncPrefixExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$MinusPrefixExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$MinusPrefixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$MinusPrefixExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$MinusPrefixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$MinusPrefixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$MinusPrefixExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$PlusPrefixExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$PlusPrefixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$PlusPrefixExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$PlusPrefixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$PlusPrefixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$PlusPrefixExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestAssignmentExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsAntlrParser.class";
  }

  @(TestAssignmentExpressionsParser.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_parser/TestAssignmentExpressionsParser.class";
  }

  @(_symboltable!74):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_symboltable";
  }

  @(TestAssignmentExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_symboltable/TestAssignmentExpressionsLanguage.class";
  }

  @(TestAssignmentExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_symboltable/TestAssignmentExpressionsModelLoader.class";
  }

  @(_visitor!112):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_visitor";
  }

  @(TestAssignmentExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsDelegatorVisitor.class";
  }

  @(TestAssignmentExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsInheritanceVisitor.class";
  }

  @(TestAssignmentExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsParentAwareVisitor.class";
  }

  @(TestAssignmentExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestAssignmentExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testassignmentexpressions/_visitor/TestAssignmentExpressionsVisitor.class";
  }

  @(testcardinality!2):Directory{
    simpleName = "testcardinality";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality";
  }

  @(_ast!119):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast";
  }

  @(ASTConstantsTestCardinality.class):JavaClassFile{
    simpleName = "ASTConstantsTestCardinality";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/ASTConstantsTestCardinality.class";
  }

  @(ASTTestCardinalityNode.class):JavaClassFile{
    simpleName = "ASTTestCardinalityNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/ASTTestCardinalityNode.class";
  }

  @(TestCardinalityLiterals.class):JavaClassFile{
    simpleName = "TestCardinalityLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityLiterals.class";
  }

  @(TestCardinalityMill.class):JavaClassFile{
    simpleName = "TestCardinalityMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityMill.class";
  }

  @(TestCardinalityNodeFactory.class):JavaClassFile{
    simpleName = "TestCardinalityNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityNodeFactory.class";
  }

  @(TestCardinalityPackage$Literals.class):JavaClassFile{
    simpleName = "TestCardinalityPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityPackage$Literals.class";
  }

  @(TestCardinalityPackage.class):JavaClassFile{
    simpleName = "TestCardinalityPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityPackage.class";
  }

  @(TestCardinalityPackageImpl.class):JavaClassFile{
    simpleName = "TestCardinalityPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_ast/TestCardinalityPackageImpl.class";
  }

  @(_cocos!113):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_cocos";
  }

  @(TestCardinalityASTTestCardinalityNodeCoCo.class):JavaClassFile{
    simpleName = "TestCardinalityASTTestCardinalityNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_cocos/TestCardinalityASTTestCardinalityNodeCoCo.class";
  }

  @(TestCardinalityCoCoChecker.class):JavaClassFile{
    simpleName = "TestCardinalityCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_cocos/TestCardinalityCoCoChecker.class";
  }

  @(TestCardinalityTestCardinalityPackageCoCo.class):JavaClassFile{
    simpleName = "TestCardinalityTestCardinalityPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_cocos/TestCardinalityTestCardinalityPackageCoCo.class";
  }

  @(_od!113):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_od";
  }

  @(TestCardinality2OD.class):JavaClassFile{
    simpleName = "TestCardinality2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_od/TestCardinality2OD.class";
  }

  @(_parser!38):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser";
  }

  @(TestCardinalityAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrBaseListener.class";
  }

  @(TestCardinalityAntlrLexer.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrLexer.class";
  }

  @(TestCardinalityAntlrListener.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrListener.class";
  }

  @(TestCardinalityAntlrParser$CardinalityContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$CardinalityContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$CardinalityContext.class";
  }

  @(TestCardinalityAntlrParser$Cardinality_eofContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$Cardinality_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$Cardinality_eofContext.class";
  }

  @(TestCardinalityAntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$DecimalContext.class";
  }

  @(TestCardinalityAntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$Decimal_eofContext.class";
  }

  @(TestCardinalityAntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$IntegerContext.class";
  }

  @(TestCardinalityAntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$Integer_eofContext.class";
  }

  @(TestCardinalityAntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$NumberContext.class";
  }

  @(TestCardinalityAntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser$Number_eofContext.class";
  }

  @(TestCardinalityAntlrParser.class):JavaClassFile{
    simpleName = "TestCardinalityAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityAntlrParser.class";
  }

  @(TestCardinalityParser.class):JavaClassFile{
    simpleName = "TestCardinalityParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_parser/TestCardinalityParser.class";
  }

  @(_visitor!113):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_visitor";
  }

  @(TestCardinalityDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestCardinalityDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_visitor/TestCardinalityDelegatorVisitor.class";
  }

  @(TestCardinalityInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestCardinalityInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_visitor/TestCardinalityInheritanceVisitor.class";
  }

  @(TestCardinalityParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestCardinalityParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_visitor/TestCardinalityParentAwareVisitor.class";
  }

  @(TestCardinalityVisitor.class):JavaClassFile{
    simpleName = "TestCardinalityVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcardinality/_visitor/TestCardinalityVisitor.class";
  }

  @(testcommonexpressions!2):Directory{
    simpleName = "testcommonexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions";
  }

  @(_ast!120):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast";
  }

  @(ASTConstantsTestCommonExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestCommonExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/ASTConstantsTestCommonExpressions.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!2):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!3):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTTestCommonExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestCommonExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/ASTTestCommonExpressionsNode.class";
  }

  @(TestCommonExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestCommonExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsLiterals.class";
  }

  @(TestCommonExpressionsMill.class):JavaClassFile{
    simpleName = "TestCommonExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsMill.class";
  }

  @(TestCommonExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestCommonExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsNodeFactory.class";
  }

  @(TestCommonExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestCommonExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsPackage$Literals.class";
  }

  @(TestCommonExpressionsPackage.class):JavaClassFile{
    simpleName = "TestCommonExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsPackage.class";
  }

  @(TestCommonExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestCommonExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_ast/TestCommonExpressionsPackageImpl.class";
  }

  @(_cocos!114):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_cocos";
  }

  @(TestCommonExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestCommonExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestCommonExpressionsASTTestCommonExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.class";
  }

  @(TestCommonExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestCommonExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsCoCoChecker.class";
  }

  @(TestCommonExpressionsTestCommonExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestCommonExpressionsTestCommonExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_cocos/TestCommonExpressionsTestCommonExpressionsPackageCoCo.class";
  }

  @(_od!114):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_od";
  }

  @(TestCommonExpressions2OD.class):JavaClassFile{
    simpleName = "TestCommonExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_od/TestCommonExpressions2OD.class";
  }

  @(_parser!39):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser";
  }

  @(TestCommonExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrBaseListener.class";
  }

  @(TestCommonExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrLexer.class";
  }

  @(TestCommonExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrListener.class";
  }

  @(TestCommonExpressionsAntlrParser$ArgumentsContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$ArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$ArgumentsContext.class";
  }

  @(TestCommonExpressionsAntlrParser$Arguments_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$Arguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$Arguments_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$BooleanNotExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$BooleanNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$BooleanNotExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$BooleanNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$BooleanNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$BooleanNotExpression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$BracketExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$BracketExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$BracketExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$BracketExpression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$BracketExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$BracketExpression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$InfixExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$InfixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$InfixExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$InfixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$InfixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$InfixExpression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$LogicalNotExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$LogicalNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$LogicalNotExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$LogicalNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$LogicalNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$LogicalNotExpression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestCommonExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestCommonExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestCommonExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsAntlrParser.class";
  }

  @(TestCommonExpressionsParser.class):JavaClassFile{
    simpleName = "TestCommonExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_parser/TestCommonExpressionsParser.class";
  }

  @(_symboltable!75):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_symboltable";
  }

  @(TestCommonExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestCommonExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_symboltable/TestCommonExpressionsLanguage.class";
  }

  @(TestCommonExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestCommonExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_symboltable/TestCommonExpressionsModelLoader.class";
  }

  @(_visitor!114):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_visitor";
  }

  @(TestCommonExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestCommonExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsDelegatorVisitor.class";
  }

  @(TestCommonExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestCommonExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsInheritanceVisitor.class";
  }

  @(TestCommonExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestCommonExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsParentAwareVisitor.class";
  }

  @(TestCommonExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestCommonExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcommonexpressions/_visitor/TestCommonExpressionsVisitor.class";
  }

  @(testcompleteness!2):Directory{
    simpleName = "testcompleteness";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness";
  }

  @(_ast!121):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast";
  }

  @(ASTCompletenessList$CompletenessListBuilder.class):JavaClassFile{
    simpleName = "ASTCompletenessList$CompletenessListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/ASTCompletenessList$CompletenessListBuilder.class";
  }

  @(ASTCompletenessList.class):JavaClassFile{
    simpleName = "ASTCompletenessList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/ASTCompletenessList.class";
  }

  @(ASTConstantsTestCompleteness.class):JavaClassFile{
    simpleName = "ASTConstantsTestCompleteness";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/ASTConstantsTestCompleteness.class";
  }

  @(ASTTestCompletenessNode.class):JavaClassFile{
    simpleName = "ASTTestCompletenessNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/ASTTestCompletenessNode.class";
  }

  @(TestCompletenessLiterals.class):JavaClassFile{
    simpleName = "TestCompletenessLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessLiterals.class";
  }

  @(TestCompletenessMill.class):JavaClassFile{
    simpleName = "TestCompletenessMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessMill.class";
  }

  @(TestCompletenessNodeFactory.class):JavaClassFile{
    simpleName = "TestCompletenessNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessNodeFactory.class";
  }

  @(TestCompletenessPackage$Literals.class):JavaClassFile{
    simpleName = "TestCompletenessPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessPackage$Literals.class";
  }

  @(TestCompletenessPackage.class):JavaClassFile{
    simpleName = "TestCompletenessPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessPackage.class";
  }

  @(TestCompletenessPackageImpl.class):JavaClassFile{
    simpleName = "TestCompletenessPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_ast/TestCompletenessPackageImpl.class";
  }

  @(_cocos!115):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_cocos";
  }

  @(TestCompletenessASTCompletenessListCoCo.class):JavaClassFile{
    simpleName = "TestCompletenessASTCompletenessListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_cocos/TestCompletenessASTCompletenessListCoCo.class";
  }

  @(TestCompletenessASTTestCompletenessNodeCoCo.class):JavaClassFile{
    simpleName = "TestCompletenessASTTestCompletenessNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_cocos/TestCompletenessASTTestCompletenessNodeCoCo.class";
  }

  @(TestCompletenessCoCoChecker.class):JavaClassFile{
    simpleName = "TestCompletenessCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_cocos/TestCompletenessCoCoChecker.class";
  }

  @(TestCompletenessTestCompletenessPackageCoCo.class):JavaClassFile{
    simpleName = "TestCompletenessTestCompletenessPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_cocos/TestCompletenessTestCompletenessPackageCoCo.class";
  }

  @(_od!115):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_od";
  }

  @(TestCompleteness2OD.class):JavaClassFile{
    simpleName = "TestCompleteness2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_od/TestCompleteness2OD.class";
  }

  @(_parser!40):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser";
  }

  @(TestCompletenessAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrBaseListener.class";
  }

  @(TestCompletenessAntlrLexer.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrLexer.class";
  }

  @(TestCompletenessAntlrListener.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrListener.class";
  }

  @(TestCompletenessAntlrParser$CompletenessContext.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrParser$CompletenessContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser$CompletenessContext.class";
  }

  @(TestCompletenessAntlrParser$CompletenessListContext.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrParser$CompletenessListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser$CompletenessListContext.class";
  }

  @(TestCompletenessAntlrParser$CompletenessList_eofContext.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrParser$CompletenessList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser$CompletenessList_eofContext.class";
  }

  @(TestCompletenessAntlrParser$Completeness_eofContext.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrParser$Completeness_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser$Completeness_eofContext.class";
  }

  @(TestCompletenessAntlrParser.class):JavaClassFile{
    simpleName = "TestCompletenessAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessAntlrParser.class";
  }

  @(TestCompletenessParser.class):JavaClassFile{
    simpleName = "TestCompletenessParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_parser/TestCompletenessParser.class";
  }

  @(_symboltable!76):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_symboltable";
  }

  @(TestCompletenessLanguage.class):JavaClassFile{
    simpleName = "TestCompletenessLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_symboltable/TestCompletenessLanguage.class";
  }

  @(TestCompletenessModelLoader.class):JavaClassFile{
    simpleName = "TestCompletenessModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_symboltable/TestCompletenessModelLoader.class";
  }

  @(_visitor!115):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_visitor";
  }

  @(TestCompletenessDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestCompletenessDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_visitor/TestCompletenessDelegatorVisitor.class";
  }

  @(TestCompletenessInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestCompletenessInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_visitor/TestCompletenessInheritanceVisitor.class";
  }

  @(TestCompletenessParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestCompletenessParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_visitor/TestCompletenessParentAwareVisitor.class";
  }

  @(TestCompletenessVisitor.class):JavaClassFile{
    simpleName = "TestCompletenessVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testcompleteness/_visitor/TestCompletenessVisitor.class";
  }

  @(testjavaclassexpressions!2):Directory{
    simpleName = "testjavaclassexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions";
  }

  @(_ast!122):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast";
  }

  @(ASTConstantsTestJavaClassExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestJavaClassExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTConstantsTestJavaClassExpressions.class";
  }

  @(ASTELiteral$ELiteralBuilder.class):JavaClassFile{
    simpleName = "ASTELiteral$ELiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTELiteral$ELiteralBuilder.class";
  }

  @(ASTELiteral.class):JavaClassFile{
    simpleName = "ASTELiteral";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTELiteral.class";
  }

  @(ASTEReturnType$EReturnTypeBuilder.class):JavaClassFile{
    simpleName = "ASTEReturnType$EReturnTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTEReturnType$EReturnTypeBuilder.class";
  }

  @(ASTEReturnType.class):JavaClassFile{
    simpleName = "ASTEReturnType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTEReturnType.class";
  }

  @(ASTEType$ETypeBuilder.class):JavaClassFile{
    simpleName = "ASTEType$ETypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTEType$ETypeBuilder.class";
  }

  @(ASTEType.class):JavaClassFile{
    simpleName = "ASTEType";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTEType.class";
  }

  @(ASTETypeArguments$ETypeArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTETypeArguments$ETypeArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTETypeArguments$ETypeArgumentsBuilder.class";
  }

  @(ASTETypeArguments.class):JavaClassFile{
    simpleName = "ASTETypeArguments";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTETypeArguments.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!3):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!4):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTTestJavaClassExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestJavaClassExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/ASTTestJavaClassExpressionsNode.class";
  }

  @(TestJavaClassExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsLiterals.class";
  }

  @(TestJavaClassExpressionsMill.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsMill.class";
  }

  @(TestJavaClassExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsNodeFactory.class";
  }

  @(TestJavaClassExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsPackage$Literals.class";
  }

  @(TestJavaClassExpressionsPackage.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsPackage.class";
  }

  @(TestJavaClassExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_ast/TestJavaClassExpressionsPackageImpl.class";
  }

  @(_cocos!116):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos";
  }

  @(TestJavaClassExpressionsASTELiteralCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTELiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTELiteralCoCo.class";
  }

  @(TestJavaClassExpressionsASTEReturnTypeCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTEReturnTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTEReturnTypeCoCo.class";
  }

  @(TestJavaClassExpressionsASTETypeArgumentsCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTETypeArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTETypeArgumentsCoCo.class";
  }

  @(TestJavaClassExpressionsASTETypeCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTETypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTETypeCoCo.class";
  }

  @(TestJavaClassExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.class";
  }

  @(TestJavaClassExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsCoCoChecker.class";
  }

  @(TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_cocos/TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.class";
  }

  @(_od!116):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_od";
  }

  @(TestJavaClassExpressions2OD.class):JavaClassFile{
    simpleName = "TestJavaClassExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_od/TestJavaClassExpressions2OD.class";
  }

  @(_parser!41):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser";
  }

  @(TestJavaClassExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrBaseListener.class";
  }

  @(TestJavaClassExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrLexer.class";
  }

  @(TestJavaClassExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrListener.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ArgumentsContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ArgumentsContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$Arguments_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$Arguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$Arguments_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$BooleanNotExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$BooleanNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$BooleanNotExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$BooleanNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$BooleanNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$BooleanNotExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$BracketExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$BracketExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$BracketExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$BracketExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$BracketExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$BracketExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ClassExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ClassExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ClassExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ClassExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ClassExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ClassExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ELiteralContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ELiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ELiteralContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ELiteral_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ELiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ELiteral_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$EReturnTypeContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$EReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$EReturnTypeContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$EReturnType_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$EReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$EReturnType_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ETypeArgumentsContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ETypeArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ETypeArgumentsContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ETypeArguments_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ETypeArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ETypeArguments_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ETypeContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ETypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ETypeContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$EType_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$EType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$EType_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$GenericInvocationSuffixContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$GenericInvocationSuffixContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$GenericInvocationSuffixContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$GenericInvocationSuffix_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$GenericInvocationSuffix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$GenericInvocationSuffix_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$InfixExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$InfixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$InfixExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$InfixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$InfixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$InfixExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$LiteralExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$LiteralExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$LiteralExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$LiteralExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$LiteralExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$LiteralExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$LogicalNotExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$LogicalNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$LogicalNotExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$LogicalNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$LogicalNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$LogicalNotExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$NameExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$NameExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$NameExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$NameExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$NameExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$NameExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimarySuperExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimarySuperExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimarySuperExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$PrimarySuperExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$PrimarySuperExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$PrimarySuperExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$SuperSuffixContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$SuperSuffixContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$SuperSuffixContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$SuperSuffix_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$SuperSuffix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$SuperSuffix_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$TypeCastExpressionContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$TypeCastExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$TypeCastExpressionContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser$TypeCastExpression_eofContext.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser$TypeCastExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser$TypeCastExpression_eofContext.class";
  }

  @(TestJavaClassExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsAntlrParser.class";
  }

  @(TestJavaClassExpressionsParser.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_parser/TestJavaClassExpressionsParser.class";
  }

  @(_symboltable!77):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_symboltable";
  }

  @(TestJavaClassExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_symboltable/TestJavaClassExpressionsLanguage.class";
  }

  @(TestJavaClassExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_symboltable/TestJavaClassExpressionsModelLoader.class";
  }

  @(_visitor!116):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_visitor";
  }

  @(TestJavaClassExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsDelegatorVisitor.class";
  }

  @(TestJavaClassExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsInheritanceVisitor.class";
  }

  @(TestJavaClassExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsParentAwareVisitor.class";
  }

  @(TestJavaClassExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestJavaClassExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testjavaclassexpressions/_visitor/TestJavaClassExpressionsVisitor.class";
  }

  @(testmcbasictypes1!2):Directory{
    simpleName = "testmcbasictypes1";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1";
  }

  @(_ast!123):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast";
  }

  @(ASTCharTypeList$CharTypeListBuilder.class):JavaClassFile{
    simpleName = "ASTCharTypeList$CharTypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTCharTypeList$CharTypeListBuilder.class";
  }

  @(ASTCharTypeList.class):JavaClassFile{
    simpleName = "ASTCharTypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTCharTypeList.class";
  }

  @(ASTConstantsTestMCBasicTypes1.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCBasicTypes1";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTConstantsTestMCBasicTypes1.class";
  }

  @(ASTImportStatementList$ImportStatementListBuilder.class):JavaClassFile{
    simpleName = "ASTImportStatementList$ImportStatementListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTImportStatementList$ImportStatementListBuilder.class";
  }

  @(ASTImportStatementList.class):JavaClassFile{
    simpleName = "ASTImportStatementList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTImportStatementList.class";
  }

  @(ASTNameAsReferenceTypeList$NameAsReferenceTypeListBuilder.class):JavaClassFile{
    simpleName = "ASTNameAsReferenceTypeList$NameAsReferenceTypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTNameAsReferenceTypeList$NameAsReferenceTypeListBuilder.class";
  }

  @(ASTNameAsReferenceTypeList.class):JavaClassFile{
    simpleName = "ASTNameAsReferenceTypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTNameAsReferenceTypeList.class";
  }

  @(ASTPrimitiveTypeList$PrimitiveTypeListBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveTypeList$PrimitiveTypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTPrimitiveTypeList$PrimitiveTypeListBuilder.class";
  }

  @(ASTPrimitiveTypeList.class):JavaClassFile{
    simpleName = "ASTPrimitiveTypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTPrimitiveTypeList.class";
  }

  @(ASTQualifiedNameList$QualifiedNameListBuilder.class):JavaClassFile{
    simpleName = "ASTQualifiedNameList$QualifiedNameListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTQualifiedNameList$QualifiedNameListBuilder.class";
  }

  @(ASTQualifiedNameList.class):JavaClassFile{
    simpleName = "ASTQualifiedNameList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTQualifiedNameList.class";
  }

  @(ASTReturnTypeList$ReturnTypeListBuilder.class):JavaClassFile{
    simpleName = "ASTReturnTypeList$ReturnTypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTReturnTypeList$ReturnTypeListBuilder.class";
  }

  @(ASTReturnTypeList.class):JavaClassFile{
    simpleName = "ASTReturnTypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTReturnTypeList.class";
  }

  @(ASTTestMCBasicTypes1Node.class):JavaClassFile{
    simpleName = "ASTTestMCBasicTypes1Node";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTTestMCBasicTypes1Node.class";
  }

  @(ASTTypeList$TypeListBuilder.class):JavaClassFile{
    simpleName = "ASTTypeList$TypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTTypeList$TypeListBuilder.class";
  }

  @(ASTTypeList.class):JavaClassFile{
    simpleName = "ASTTypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/ASTTypeList.class";
  }

  @(TestMCBasicTypes1Literals.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Literals.class";
  }

  @(TestMCBasicTypes1Mill.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Mill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Mill.class";
  }

  @(TestMCBasicTypes1NodeFactory.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1NodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1NodeFactory.class";
  }

  @(TestMCBasicTypes1Package$Literals.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Package$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Package$Literals.class";
  }

  @(TestMCBasicTypes1Package.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Package";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1Package.class";
  }

  @(TestMCBasicTypes1PackageImpl.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1PackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_ast/TestMCBasicTypes1PackageImpl.class";
  }

  @(_cocos!117):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos";
  }

  @(TestMCBasicTypes1ASTCharTypeListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTCharTypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTCharTypeListCoCo.class";
  }

  @(TestMCBasicTypes1ASTImportStatementListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTImportStatementListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTImportStatementListCoCo.class";
  }

  @(TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.class";
  }

  @(TestMCBasicTypes1ASTPrimitiveTypeListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTPrimitiveTypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTPrimitiveTypeListCoCo.class";
  }

  @(TestMCBasicTypes1ASTQualifiedNameListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTQualifiedNameListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTQualifiedNameListCoCo.class";
  }

  @(TestMCBasicTypes1ASTReturnTypeListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTReturnTypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTReturnTypeListCoCo.class";
  }

  @(TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.class";
  }

  @(TestMCBasicTypes1ASTTypeListCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ASTTypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1ASTTypeListCoCo.class";
  }

  @(TestMCBasicTypes1CoCoChecker.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1CoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1CoCoChecker.class";
  }

  @(TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1TestMCBasicTypes1PackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_cocos/TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.class";
  }

  @(_od!117):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_od";
  }

  @(TestMCBasicTypes12OD.class):JavaClassFile{
    simpleName = "TestMCBasicTypes12OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_od/TestMCBasicTypes12OD.class";
  }

  @(_parser!42):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser";
  }

  @(TestMCBasicTypes1AntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrBaseListener.class";
  }

  @(TestMCBasicTypes1AntlrLexer.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrLexer.class";
  }

  @(TestMCBasicTypes1AntlrListener.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrListener.class";
  }

  @(TestMCBasicTypes1AntlrParser$BooleanTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$BooleanTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$BooleanTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$BooleanType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$BooleanType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$BooleanType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ByteTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ByteTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ByteTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ByteType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ByteType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ByteType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$CharTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$CharTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$CharTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$CharTypeListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$CharTypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$CharTypeListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$CharTypeList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$CharTypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$CharTypeList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$CharType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$CharType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$CharType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$DoubleTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$DoubleTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$DoubleTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$DoubleType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$DoubleType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$DoubleType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$FloatTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$FloatTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$FloatTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$FloatType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$FloatType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$FloatType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ImportStatementContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ImportStatementContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ImportStatementListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ImportStatementListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ImportStatementListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ImportStatementList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ImportStatementList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ImportStatementList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ImportStatement_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ImportStatement_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$IntTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$IntTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$IntTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$IntType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$IntType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$IntType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$LongTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$LongTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$LongTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$LongType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$LongType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$LongType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$NameAsReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$NameAsReferenceTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$NameAsReferenceTypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$NameAsReferenceTypeListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$NameAsReferenceTypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$NameAsReferenceTypeList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$NameAsReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$NameAsReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$NameAsReferenceType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$PrimitiveTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$PrimitiveTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$PrimitiveTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$PrimitiveTypeListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$PrimitiveTypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$PrimitiveTypeListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$PrimitiveTypeList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$PrimitiveTypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$PrimitiveTypeList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$PrimitiveType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$PrimitiveType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$PrimitiveType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$QualifiedNameContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$QualifiedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$QualifiedNameContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$QualifiedNameListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$QualifiedNameListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$QualifiedNameListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$QualifiedNameList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$QualifiedNameList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$QualifiedNameList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$QualifiedName_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$QualifiedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$QualifiedName_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReferenceTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReferenceType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReturnTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReturnTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReturnTypeListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReturnTypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReturnTypeListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReturnTypeList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReturnTypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReturnTypeList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ReturnType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ReturnType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ShortTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ShortTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ShortTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$ShortType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$ShortType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$ShortType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$TypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$TypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$TypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$TypeListContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$TypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$TypeListContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$TypeList_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$TypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$TypeList_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$Type_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$Type_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$Type_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$VoidTypeContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$VoidTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$VoidTypeContext.class";
  }

  @(TestMCBasicTypes1AntlrParser$VoidType_eofContext.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser$VoidType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser$VoidType_eofContext.class";
  }

  @(TestMCBasicTypes1AntlrParser.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1AntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1AntlrParser.class";
  }

  @(TestMCBasicTypes1Parser.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Parser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_parser/TestMCBasicTypes1Parser.class";
  }

  @(_symboltable!78):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_symboltable";
  }

  @(TestMCBasicTypes1Language.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Language";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_symboltable/TestMCBasicTypes1Language.class";
  }

  @(TestMCBasicTypes1ModelLoader.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_symboltable/TestMCBasicTypes1ModelLoader.class";
  }

  @(_visitor!117):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_visitor";
  }

  @(TestMCBasicTypes1DelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1DelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1DelegatorVisitor.class";
  }

  @(TestMCBasicTypes1InheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1InheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1InheritanceVisitor.class";
  }

  @(TestMCBasicTypes1ParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1ParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1ParentAwareVisitor.class";
  }

  @(TestMCBasicTypes1Visitor.class):JavaClassFile{
    simpleName = "TestMCBasicTypes1Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcbasictypes1/_visitor/TestMCBasicTypes1Visitor.class";
  }

  @(testmccommon!2):Directory{
    simpleName = "testmccommon";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon";
  }

  @(_ast!124):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast";
  }

  @(ASTA$ABuilder.class):JavaClassFile{
    simpleName = "ASTA$ABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/ASTA$ABuilder.class";
  }

  @(ASTA.class!9):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/ASTA.class";
  }

  @(ASTConstantsTestMCCommon.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCCommon";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/ASTConstantsTestMCCommon.class";
  }

  @(ASTTestMCCommonNode.class):JavaClassFile{
    simpleName = "ASTTestMCCommonNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/ASTTestMCCommonNode.class";
  }

  @(TestMCCommonLiterals.class):JavaClassFile{
    simpleName = "TestMCCommonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonLiterals.class";
  }

  @(TestMCCommonMill.class):JavaClassFile{
    simpleName = "TestMCCommonMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonMill.class";
  }

  @(TestMCCommonNodeFactory.class):JavaClassFile{
    simpleName = "TestMCCommonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonNodeFactory.class";
  }

  @(TestMCCommonPackage$Literals.class):JavaClassFile{
    simpleName = "TestMCCommonPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonPackage$Literals.class";
  }

  @(TestMCCommonPackage.class):JavaClassFile{
    simpleName = "TestMCCommonPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonPackage.class";
  }

  @(TestMCCommonPackageImpl.class):JavaClassFile{
    simpleName = "TestMCCommonPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_ast/TestMCCommonPackageImpl.class";
  }

  @(_cocos!118):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_cocos";
  }

  @(TestMCCommonASTACoCo.class):JavaClassFile{
    simpleName = "TestMCCommonASTACoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_cocos/TestMCCommonASTACoCo.class";
  }

  @(TestMCCommonASTTestMCCommonNodeCoCo.class):JavaClassFile{
    simpleName = "TestMCCommonASTTestMCCommonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_cocos/TestMCCommonASTTestMCCommonNodeCoCo.class";
  }

  @(TestMCCommonCoCoChecker.class):JavaClassFile{
    simpleName = "TestMCCommonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_cocos/TestMCCommonCoCoChecker.class";
  }

  @(TestMCCommonTestMCCommonPackageCoCo.class):JavaClassFile{
    simpleName = "TestMCCommonTestMCCommonPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_cocos/TestMCCommonTestMCCommonPackageCoCo.class";
  }

  @(_od!118):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_od";
  }

  @(TestMCCommon2OD.class):JavaClassFile{
    simpleName = "TestMCCommon2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_od/TestMCCommon2OD.class";
  }

  @(_parser!43):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser";
  }

  @(TestMCCommonAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrBaseListener.class";
  }

  @(TestMCCommonAntlrLexer.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrLexer.class";
  }

  @(TestMCCommonAntlrListener.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrListener.class";
  }

  @(TestMCCommonAntlrParser$AContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$AContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$AContext.class";
  }

  @(TestMCCommonAntlrParser$A_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$A_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$A_eofContext.class";
  }

  @(TestMCCommonAntlrParser$CardinalityContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$CardinalityContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$CardinalityContext.class";
  }

  @(TestMCCommonAntlrParser$Cardinality_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Cardinality_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Cardinality_eofContext.class";
  }

  @(TestMCCommonAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$CharLiteralContext.class";
  }

  @(TestMCCommonAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestMCCommonAntlrParser$CompletenessContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$CompletenessContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$CompletenessContext.class";
  }

  @(TestMCCommonAntlrParser$Completeness_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Completeness_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Completeness_eofContext.class";
  }

  @(TestMCCommonAntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$DecimalContext.class";
  }

  @(TestMCCommonAntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Decimal_eofContext.class";
  }

  @(TestMCCommonAntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$IntegerContext.class";
  }

  @(TestMCCommonAntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Integer_eofContext.class";
  }

  @(TestMCCommonAntlrParser$ModifierContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$ModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$ModifierContext.class";
  }

  @(TestMCCommonAntlrParser$Modifier_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Modifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Modifier_eofContext.class";
  }

  @(TestMCCommonAntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$NumberContext.class";
  }

  @(TestMCCommonAntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Number_eofContext.class";
  }

  @(TestMCCommonAntlrParser$StereotypeContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$StereotypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$StereotypeContext.class";
  }

  @(TestMCCommonAntlrParser$Stereotype_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$Stereotype_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$Stereotype_eofContext.class";
  }

  @(TestMCCommonAntlrParser$StereoValueContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$StereoValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$StereoValueContext.class";
  }

  @(TestMCCommonAntlrParser$StereoValue_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$StereoValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$StereoValue_eofContext.class";
  }

  @(TestMCCommonAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$StringLiteralContext.class";
  }

  @(TestMCCommonAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestMCCommonAntlrParser.class):JavaClassFile{
    simpleName = "TestMCCommonAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonAntlrParser.class";
  }

  @(TestMCCommonParser.class):JavaClassFile{
    simpleName = "TestMCCommonParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_parser/TestMCCommonParser.class";
  }

  @(_symboltable!79):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_symboltable";
  }

  @(TestMCCommonLanguage.class):JavaClassFile{
    simpleName = "TestMCCommonLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_symboltable/TestMCCommonLanguage.class";
  }

  @(TestMCCommonModelLoader.class):JavaClassFile{
    simpleName = "TestMCCommonModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_symboltable/TestMCCommonModelLoader.class";
  }

  @(_visitor!118):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_visitor";
  }

  @(TestMCCommonDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCCommonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_visitor/TestMCCommonDelegatorVisitor.class";
  }

  @(TestMCCommonInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCCommonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_visitor/TestMCCommonInheritanceVisitor.class";
  }

  @(TestMCCommonParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCCommonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_visitor/TestMCCommonParentAwareVisitor.class";
  }

  @(TestMCCommonVisitor.class):JavaClassFile{
    simpleName = "TestMCCommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmccommon/_visitor/TestMCCommonVisitor.class";
  }

  @(testmchexnumbers!2):Directory{
    simpleName = "testmchexnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers";
  }

  @(_ast!125):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast";
  }

  @(ASTConstantsTestMCHexNumbers.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCHexNumbers";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/ASTConstantsTestMCHexNumbers.class";
  }

  @(ASTTestMCHexNumbersNode.class):JavaClassFile{
    simpleName = "ASTTestMCHexNumbersNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/ASTTestMCHexNumbersNode.class";
  }

  @(TestMCHexNumbersLiterals.class):JavaClassFile{
    simpleName = "TestMCHexNumbersLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersLiterals.class";
  }

  @(TestMCHexNumbersMill.class):JavaClassFile{
    simpleName = "TestMCHexNumbersMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersMill.class";
  }

  @(TestMCHexNumbersNodeFactory.class):JavaClassFile{
    simpleName = "TestMCHexNumbersNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersNodeFactory.class";
  }

  @(TestMCHexNumbersPackage$Literals.class):JavaClassFile{
    simpleName = "TestMCHexNumbersPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersPackage$Literals.class";
  }

  @(TestMCHexNumbersPackage.class):JavaClassFile{
    simpleName = "TestMCHexNumbersPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersPackage.class";
  }

  @(TestMCHexNumbersPackageImpl.class):JavaClassFile{
    simpleName = "TestMCHexNumbersPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_ast/TestMCHexNumbersPackageImpl.class";
  }

  @(_cocos!119):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_cocos";
  }

  @(TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.class):JavaClassFile{
    simpleName = "TestMCHexNumbersASTTestMCHexNumbersNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.class";
  }

  @(TestMCHexNumbersCoCoChecker.class):JavaClassFile{
    simpleName = "TestMCHexNumbersCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersCoCoChecker.class";
  }

  @(TestMCHexNumbersTestMCHexNumbersPackageCoCo.class):JavaClassFile{
    simpleName = "TestMCHexNumbersTestMCHexNumbersPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_cocos/TestMCHexNumbersTestMCHexNumbersPackageCoCo.class";
  }

  @(_od!119):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_od";
  }

  @(TestMCHexNumbers2OD.class):JavaClassFile{
    simpleName = "TestMCHexNumbers2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_od/TestMCHexNumbers2OD.class";
  }

  @(_parser!44):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser";
  }

  @(TestMCHexNumbersAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrBaseListener.class";
  }

  @(TestMCHexNumbersAntlrLexer.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrLexer.class";
  }

  @(TestMCHexNumbersAntlrListener.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrListener.class";
  }

  @(TestMCHexNumbersAntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$DecimalContext.class";
  }

  @(TestMCHexNumbersAntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$Decimal_eofContext.class";
  }

  @(TestMCHexNumbersAntlrParser$HexadecimalContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$HexadecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$HexadecimalContext.class";
  }

  @(TestMCHexNumbersAntlrParser$Hexadecimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$Hexadecimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$Hexadecimal_eofContext.class";
  }

  @(TestMCHexNumbersAntlrParser$HexIntegerContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$HexIntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$HexIntegerContext.class";
  }

  @(TestMCHexNumbersAntlrParser$HexInteger_eofContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$HexInteger_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$HexInteger_eofContext.class";
  }

  @(TestMCHexNumbersAntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$IntegerContext.class";
  }

  @(TestMCHexNumbersAntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$Integer_eofContext.class";
  }

  @(TestMCHexNumbersAntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$NumberContext.class";
  }

  @(TestMCHexNumbersAntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser$Number_eofContext.class";
  }

  @(TestMCHexNumbersAntlrParser.class):JavaClassFile{
    simpleName = "TestMCHexNumbersAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersAntlrParser.class";
  }

  @(TestMCHexNumbersParser.class):JavaClassFile{
    simpleName = "TestMCHexNumbersParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_parser/TestMCHexNumbersParser.class";
  }

  @(_visitor!119):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_visitor";
  }

  @(TestMCHexNumbersDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCHexNumbersDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersDelegatorVisitor.class";
  }

  @(TestMCHexNumbersInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCHexNumbersInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersInheritanceVisitor.class";
  }

  @(TestMCHexNumbersParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCHexNumbersParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersParentAwareVisitor.class";
  }

  @(TestMCHexNumbersVisitor.class):JavaClassFile{
    simpleName = "TestMCHexNumbersVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmchexnumbers/_visitor/TestMCHexNumbersVisitor.class";
  }

  @(testmcliterals!2):Directory{
    simpleName = "testmcliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals";
  }

  @(_ast!126):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast";
  }

  @(ASTConstantsTestMCLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/ASTConstantsTestMCLiterals.class";
  }

  @(ASTTestMCLiteralsNode.class):JavaClassFile{
    simpleName = "ASTTestMCLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/ASTTestMCLiteralsNode.class";
  }

  @(TestMCLiteralsLiterals.class):JavaClassFile{
    simpleName = "TestMCLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsLiterals.class";
  }

  @(TestMCLiteralsMill.class):JavaClassFile{
    simpleName = "TestMCLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsMill.class";
  }

  @(TestMCLiteralsNodeFactory.class):JavaClassFile{
    simpleName = "TestMCLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsNodeFactory.class";
  }

  @(TestMCLiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "TestMCLiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsPackage$Literals.class";
  }

  @(TestMCLiteralsPackage.class):JavaClassFile{
    simpleName = "TestMCLiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsPackage.class";
  }

  @(TestMCLiteralsPackageImpl.class):JavaClassFile{
    simpleName = "TestMCLiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_ast/TestMCLiteralsPackageImpl.class";
  }

  @(_cocos!120):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_cocos";
  }

  @(TestMCLiteralsASTTestMCLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsASTTestMCLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_cocos/TestMCLiteralsASTTestMCLiteralsNodeCoCo.class";
  }

  @(TestMCLiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "TestMCLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_cocos/TestMCLiteralsCoCoChecker.class";
  }

  @(TestMCLiteralsTestMCLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsTestMCLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_cocos/TestMCLiteralsTestMCLiteralsPackageCoCo.class";
  }

  @(_od!120):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_od";
  }

  @(TestMCLiterals2OD.class):JavaClassFile{
    simpleName = "TestMCLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_od/TestMCLiterals2OD.class";
  }

  @(_parser!45):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser";
  }

  @(TestMCLiteralsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrBaseListener.class";
  }

  @(TestMCLiteralsAntlrLexer.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrLexer.class";
  }

  @(TestMCLiteralsAntlrListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrListener.class";
  }

  @(TestMCLiteralsAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$BooleanLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$CharLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$DoubleLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$FloatLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$FloatLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$IntLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$IntLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$LiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$Literal_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$LongLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$LongLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$NatLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NatLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$NatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NatLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NullLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NullLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NumericLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$NumericLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedFloatLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedIntLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedLongLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedNatLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedNatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedNatLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedNatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedNatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedNatLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedNumericLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$StringLiteralContext.class";
  }

  @(TestMCLiteralsAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestMCLiteralsAntlrParser.class):JavaClassFile{
    simpleName = "TestMCLiteralsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsAntlrParser.class";
  }

  @(TestMCLiteralsParser.class):JavaClassFile{
    simpleName = "TestMCLiteralsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_parser/TestMCLiteralsParser.class";
  }

  @(_visitor!120):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_visitor";
  }

  @(TestMCLiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_visitor/TestMCLiteralsDelegatorVisitor.class";
  }

  @(TestMCLiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_visitor/TestMCLiteralsInheritanceVisitor.class";
  }

  @(TestMCLiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_visitor/TestMCLiteralsParentAwareVisitor.class";
  }

  @(TestMCLiteralsVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliterals/_visitor/TestMCLiteralsVisitor.class";
  }

  @(testmcliteralsv2!2):Directory{
    simpleName = "testmcliteralsv2";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2";
  }

  @(_ast!127):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast";
  }

  @(ASTAnyToken$AnyTokenBuilder.class):JavaClassFile{
    simpleName = "ASTAnyToken$AnyTokenBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTAnyToken$AnyTokenBuilder.class";
  }

  @(ASTAnyToken.class):JavaClassFile{
    simpleName = "ASTAnyToken";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTAnyToken.class";
  }

  @(ASTAnyTokenList$AnyTokenListBuilder.class):JavaClassFile{
    simpleName = "ASTAnyTokenList$AnyTokenListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTAnyTokenList$AnyTokenListBuilder.class";
  }

  @(ASTAnyTokenList.class):JavaClassFile{
    simpleName = "ASTAnyTokenList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTAnyTokenList.class";
  }

  @(ASTBTest$BTestBuilder.class):JavaClassFile{
    simpleName = "ASTBTest$BTestBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTBTest$BTestBuilder.class";
  }

  @(ASTBTest.class):JavaClassFile{
    simpleName = "ASTBTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTBTest.class";
  }

  @(ASTCharList$CharListBuilder.class):JavaClassFile{
    simpleName = "ASTCharList$CharListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTCharList$CharListBuilder.class";
  }

  @(ASTCharList.class):JavaClassFile{
    simpleName = "ASTCharList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTCharList.class";
  }

  @(ASTConstantsTestMCLiteralsV2.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCLiteralsV2";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTConstantsTestMCLiteralsV2.class";
  }

  @(ASTDecimalList$DecimalListBuilder.class):JavaClassFile{
    simpleName = "ASTDecimalList$DecimalListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTDecimalList$DecimalListBuilder.class";
  }

  @(ASTDecimalList.class):JavaClassFile{
    simpleName = "ASTDecimalList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTDecimalList.class";
  }

  @(ASTIntegerList$IntegerListBuilder.class):JavaClassFile{
    simpleName = "ASTIntegerList$IntegerListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTIntegerList$IntegerListBuilder.class";
  }

  @(ASTIntegerList.class):JavaClassFile{
    simpleName = "ASTIntegerList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTIntegerList.class";
  }

  @(ASTStringList$StringListBuilder.class):JavaClassFile{
    simpleName = "ASTStringList$StringListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTStringList$StringListBuilder.class";
  }

  @(ASTStringList.class):JavaClassFile{
    simpleName = "ASTStringList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTStringList.class";
  }

  @(ASTTestMCLiteralsV2Node.class):JavaClassFile{
    simpleName = "ASTTestMCLiteralsV2Node";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/ASTTestMCLiteralsV2Node.class";
  }

  @(TestMCLiteralsV2Literals.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Literals.class";
  }

  @(TestMCLiteralsV2Mill.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Mill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Mill.class";
  }

  @(TestMCLiteralsV2NodeFactory.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2NodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2NodeFactory.class";
  }

  @(TestMCLiteralsV2Package$Literals.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Package$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Package$Literals.class";
  }

  @(TestMCLiteralsV2Package.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Package";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2Package.class";
  }

  @(TestMCLiteralsV2PackageImpl.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2PackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_ast/TestMCLiteralsV2PackageImpl.class";
  }

  @(_cocos!121):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos";
  }

  @(TestMCLiteralsV2ASTAnyTokenCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTAnyTokenCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTAnyTokenCoCo.class";
  }

  @(TestMCLiteralsV2ASTAnyTokenListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTAnyTokenListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTAnyTokenListCoCo.class";
  }

  @(TestMCLiteralsV2ASTBTestCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTBTestCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTBTestCoCo.class";
  }

  @(TestMCLiteralsV2ASTCharListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTCharListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTCharListCoCo.class";
  }

  @(TestMCLiteralsV2ASTDecimalListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTDecimalListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTDecimalListCoCo.class";
  }

  @(TestMCLiteralsV2ASTIntegerListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTIntegerListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTIntegerListCoCo.class";
  }

  @(TestMCLiteralsV2ASTStringListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTStringListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTStringListCoCo.class";
  }

  @(TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.class";
  }

  @(TestMCLiteralsV2CoCoChecker.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2CoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2CoCoChecker.class";
  }

  @(TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2TestMCLiteralsV2PackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_cocos/TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.class";
  }

  @(_od!121):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_od";
  }

  @(TestMCLiteralsV22OD.class):JavaClassFile{
    simpleName = "TestMCLiteralsV22OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_od/TestMCLiteralsV22OD.class";
  }

  @(_parser!46):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser";
  }

  @(TestMCLiteralsV2AntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrBaseListener.class";
  }

  @(TestMCLiteralsV2AntlrLexer.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrLexer.class";
  }

  @(TestMCLiteralsV2AntlrListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrListener.class";
  }

  @(TestMCLiteralsV2AntlrParser$AnyTokenContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$AnyTokenContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$AnyTokenContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$AnyTokenListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$AnyTokenListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$AnyTokenListContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$AnyTokenList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$AnyTokenList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$AnyTokenList_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$AnyToken_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$AnyToken_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$AnyToken_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$BTestContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$BTestContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$BTestContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$BTest_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$BTest_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$BTest_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$CharListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$CharListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$CharListContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$CharList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$CharList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$CharList_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$CharLiteralContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$CharLiteral_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$DecimalContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$DecimalListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$DecimalListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$DecimalListContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$DecimalList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$DecimalList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$DecimalList_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$Decimal_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$IntegerContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$IntegerListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$IntegerListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$IntegerListContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$IntegerList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$IntegerList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$IntegerList_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$Integer_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$NumberContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$Number_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$StringListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$StringListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$StringListContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$StringList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$StringList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$StringList_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$StringLiteralContext.class";
  }

  @(TestMCLiteralsV2AntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser$StringLiteral_eofContext.class";
  }

  @(TestMCLiteralsV2AntlrParser.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2AntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2AntlrParser.class";
  }

  @(TestMCLiteralsV2Parser.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Parser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_parser/TestMCLiteralsV2Parser.class";
  }

  @(_symboltable!80):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_symboltable";
  }

  @(TestMCLiteralsV2Language.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Language";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_symboltable/TestMCLiteralsV2Language.class";
  }

  @(TestMCLiteralsV2ModelLoader.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_symboltable/TestMCLiteralsV2ModelLoader.class";
  }

  @(_visitor!121):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_visitor";
  }

  @(TestMCLiteralsV2DelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2DelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2DelegatorVisitor.class";
  }

  @(TestMCLiteralsV2InheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2InheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2InheritanceVisitor.class";
  }

  @(TestMCLiteralsV2ParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2ParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2ParentAwareVisitor.class";
  }

  @(TestMCLiteralsV2Visitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV2Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv2/_visitor/TestMCLiteralsV2Visitor.class";
  }

  @(testmcliteralsv3!2):Directory{
    simpleName = "testmcliteralsv3";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3";
  }

  @(_ast!128):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast";
  }

  @(ASTAnyToken$AnyTokenBuilder.class!2):JavaClassFile{
    simpleName = "ASTAnyToken$AnyTokenBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTAnyToken$AnyTokenBuilder.class";
  }

  @(ASTAnyToken.class!2):JavaClassFile{
    simpleName = "ASTAnyToken";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTAnyToken.class";
  }

  @(ASTAnyTokenList$AnyTokenListBuilder.class!2):JavaClassFile{
    simpleName = "ASTAnyTokenList$AnyTokenListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTAnyTokenList$AnyTokenListBuilder.class";
  }

  @(ASTAnyTokenList.class!2):JavaClassFile{
    simpleName = "ASTAnyTokenList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTAnyTokenList.class";
  }

  @(ASTConstantsTestMCLiteralsV3.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCLiteralsV3";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTConstantsTestMCLiteralsV3.class";
  }

  @(ASTDecimalList$DecimalListBuilder.class!2):JavaClassFile{
    simpleName = "ASTDecimalList$DecimalListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTDecimalList$DecimalListBuilder.class";
  }

  @(ASTDecimalList.class!2):JavaClassFile{
    simpleName = "ASTDecimalList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTDecimalList.class";
  }

  @(ASTIntegerList$IntegerListBuilder.class!2):JavaClassFile{
    simpleName = "ASTIntegerList$IntegerListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTIntegerList$IntegerListBuilder.class";
  }

  @(ASTIntegerList.class!2):JavaClassFile{
    simpleName = "ASTIntegerList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTIntegerList.class";
  }

  @(ASTNumberList$NumberListBuilder.class):JavaClassFile{
    simpleName = "ASTNumberList$NumberListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTNumberList$NumberListBuilder.class";
  }

  @(ASTNumberList.class):JavaClassFile{
    simpleName = "ASTNumberList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTNumberList.class";
  }

  @(ASTTestMCLiteralsV3Node.class):JavaClassFile{
    simpleName = "ASTTestMCLiteralsV3Node";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/ASTTestMCLiteralsV3Node.class";
  }

  @(TestMCLiteralsV3Literals.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Literals.class";
  }

  @(TestMCLiteralsV3Mill.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Mill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Mill.class";
  }

  @(TestMCLiteralsV3NodeFactory.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3NodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3NodeFactory.class";
  }

  @(TestMCLiteralsV3Package$Literals.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Package$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Package$Literals.class";
  }

  @(TestMCLiteralsV3Package.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Package";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3Package.class";
  }

  @(TestMCLiteralsV3PackageImpl.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3PackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_ast/TestMCLiteralsV3PackageImpl.class";
  }

  @(_cocos!122):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos";
  }

  @(TestMCLiteralsV3ASTAnyTokenCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTAnyTokenCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTAnyTokenCoCo.class";
  }

  @(TestMCLiteralsV3ASTAnyTokenListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTAnyTokenListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTAnyTokenListCoCo.class";
  }

  @(TestMCLiteralsV3ASTDecimalListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTDecimalListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTDecimalListCoCo.class";
  }

  @(TestMCLiteralsV3ASTIntegerListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTIntegerListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTIntegerListCoCo.class";
  }

  @(TestMCLiteralsV3ASTNumberListCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTNumberListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTNumberListCoCo.class";
  }

  @(TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.class";
  }

  @(TestMCLiteralsV3CoCoChecker.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3CoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3CoCoChecker.class";
  }

  @(TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3TestMCLiteralsV3PackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_cocos/TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.class";
  }

  @(_od!122):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_od";
  }

  @(TestMCLiteralsV32OD.class):JavaClassFile{
    simpleName = "TestMCLiteralsV32OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_od/TestMCLiteralsV32OD.class";
  }

  @(_parser!47):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser";
  }

  @(TestMCLiteralsV3AntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrBaseListener.class";
  }

  @(TestMCLiteralsV3AntlrLexer.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrLexer.class";
  }

  @(TestMCLiteralsV3AntlrListener.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrListener.class";
  }

  @(TestMCLiteralsV3AntlrParser$AnyTokenContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$AnyTokenContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$AnyTokenContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$AnyTokenListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$AnyTokenListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$AnyTokenListContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$AnyTokenList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$AnyTokenList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$AnyTokenList_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$AnyToken_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$AnyToken_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$AnyToken_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$CharLiteralContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$CharLiteral_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$DecimalContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$DecimalListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$DecimalListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$DecimalListContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$DecimalList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$DecimalList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$DecimalList_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$Decimal_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$HexadecimalContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$HexadecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$HexadecimalContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$Hexadecimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$Hexadecimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$Hexadecimal_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$HexIntegerContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$HexIntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$HexIntegerContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$HexInteger_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$HexInteger_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$HexInteger_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$IntegerContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$IntegerListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$IntegerListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$IntegerListContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$IntegerList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$IntegerList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$IntegerList_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$Integer_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$NumberContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$NumberListContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$NumberListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$NumberListContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$NumberList_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$NumberList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$NumberList_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$Number_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$StringLiteralContext.class";
  }

  @(TestMCLiteralsV3AntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser$StringLiteral_eofContext.class";
  }

  @(TestMCLiteralsV3AntlrParser.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3AntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3AntlrParser.class";
  }

  @(TestMCLiteralsV3Parser.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Parser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_parser/TestMCLiteralsV3Parser.class";
  }

  @(_symboltable!81):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_symboltable";
  }

  @(TestMCLiteralsV3Language.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Language";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_symboltable/TestMCLiteralsV3Language.class";
  }

  @(TestMCLiteralsV3ModelLoader.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_symboltable/TestMCLiteralsV3ModelLoader.class";
  }

  @(_visitor!122):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_visitor";
  }

  @(TestMCLiteralsV3DelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3DelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3DelegatorVisitor.class";
  }

  @(TestMCLiteralsV3InheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3InheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3InheritanceVisitor.class";
  }

  @(TestMCLiteralsV3ParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3ParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3ParentAwareVisitor.class";
  }

  @(TestMCLiteralsV3Visitor.class):JavaClassFile{
    simpleName = "TestMCLiteralsV3Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcliteralsv3/_visitor/TestMCLiteralsV3Visitor.class";
  }

  @(testmcnumbers!2):Directory{
    simpleName = "testmcnumbers";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers";
  }

  @(_ast!129):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast";
  }

  @(ASTConstantsTestMCNumbers.class):JavaClassFile{
    simpleName = "ASTConstantsTestMCNumbers";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/ASTConstantsTestMCNumbers.class";
  }

  @(ASTTestMCNumbersNode.class):JavaClassFile{
    simpleName = "ASTTestMCNumbersNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/ASTTestMCNumbersNode.class";
  }

  @(TestMCNumbersLiterals.class):JavaClassFile{
    simpleName = "TestMCNumbersLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersLiterals.class";
  }

  @(TestMCNumbersMill.class):JavaClassFile{
    simpleName = "TestMCNumbersMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersMill.class";
  }

  @(TestMCNumbersNodeFactory.class):JavaClassFile{
    simpleName = "TestMCNumbersNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersNodeFactory.class";
  }

  @(TestMCNumbersPackage$Literals.class):JavaClassFile{
    simpleName = "TestMCNumbersPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersPackage$Literals.class";
  }

  @(TestMCNumbersPackage.class):JavaClassFile{
    simpleName = "TestMCNumbersPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersPackage.class";
  }

  @(TestMCNumbersPackageImpl.class):JavaClassFile{
    simpleName = "TestMCNumbersPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_ast/TestMCNumbersPackageImpl.class";
  }

  @(_cocos!123):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_cocos";
  }

  @(TestMCNumbersASTTestMCNumbersNodeCoCo.class):JavaClassFile{
    simpleName = "TestMCNumbersASTTestMCNumbersNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_cocos/TestMCNumbersASTTestMCNumbersNodeCoCo.class";
  }

  @(TestMCNumbersCoCoChecker.class):JavaClassFile{
    simpleName = "TestMCNumbersCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_cocos/TestMCNumbersCoCoChecker.class";
  }

  @(TestMCNumbersTestMCNumbersPackageCoCo.class):JavaClassFile{
    simpleName = "TestMCNumbersTestMCNumbersPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_cocos/TestMCNumbersTestMCNumbersPackageCoCo.class";
  }

  @(_od!123):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_od";
  }

  @(TestMCNumbers2OD.class):JavaClassFile{
    simpleName = "TestMCNumbers2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_od/TestMCNumbers2OD.class";
  }

  @(_parser!48):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser";
  }

  @(TestMCNumbersAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrBaseListener.class";
  }

  @(TestMCNumbersAntlrLexer.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrLexer.class";
  }

  @(TestMCNumbersAntlrListener.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrListener.class";
  }

  @(TestMCNumbersAntlrParser$DecimalContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$DecimalContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$DecimalContext.class";
  }

  @(TestMCNumbersAntlrParser$Decimal_eofContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$Decimal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$Decimal_eofContext.class";
  }

  @(TestMCNumbersAntlrParser$IntegerContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$IntegerContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$IntegerContext.class";
  }

  @(TestMCNumbersAntlrParser$Integer_eofContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$Integer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$Integer_eofContext.class";
  }

  @(TestMCNumbersAntlrParser$NumberContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$NumberContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$NumberContext.class";
  }

  @(TestMCNumbersAntlrParser$Number_eofContext.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser$Number_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser$Number_eofContext.class";
  }

  @(TestMCNumbersAntlrParser.class):JavaClassFile{
    simpleName = "TestMCNumbersAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersAntlrParser.class";
  }

  @(TestMCNumbersParser.class):JavaClassFile{
    simpleName = "TestMCNumbersParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_parser/TestMCNumbersParser.class";
  }

  @(_visitor!123):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_visitor";
  }

  @(TestMCNumbersDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestMCNumbersDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_visitor/TestMCNumbersDelegatorVisitor.class";
  }

  @(TestMCNumbersInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestMCNumbersInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_visitor/TestMCNumbersInheritanceVisitor.class";
  }

  @(TestMCNumbersParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestMCNumbersParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_visitor/TestMCNumbersParentAwareVisitor.class";
  }

  @(TestMCNumbersVisitor.class):JavaClassFile{
    simpleName = "TestMCNumbersVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testmcnumbers/_visitor/TestMCNumbersVisitor.class";
  }

  @(testoclexpressions!2):Directory{
    simpleName = "testoclexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions";
  }

  @(_ast!130):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast";
  }

  @(ASTConstantsTestOCLExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestOCLExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTConstantsTestOCLExpressions.class";
  }

  @(ASTEDeclaration$EDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTEDeclaration$EDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTEDeclaration$EDeclarationBuilder.class";
  }

  @(ASTEDeclaration.class):JavaClassFile{
    simpleName = "ASTEDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTEDeclaration.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!4):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!5):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTPrimaryNestedExpression$PrimaryNestedExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimaryNestedExpression$PrimaryNestedExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTPrimaryNestedExpression$PrimaryNestedExpressionBuilder.class";
  }

  @(ASTPrimaryNestedExpression.class):JavaClassFile{
    simpleName = "ASTPrimaryNestedExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTPrimaryNestedExpression.class";
  }

  @(ASTTestOCLExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestOCLExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/ASTTestOCLExpressionsNode.class";
  }

  @(TestOCLExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestOCLExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsLiterals.class";
  }

  @(TestOCLExpressionsMill.class):JavaClassFile{
    simpleName = "TestOCLExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsMill.class";
  }

  @(TestOCLExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestOCLExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsNodeFactory.class";
  }

  @(TestOCLExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestOCLExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsPackage$Literals.class";
  }

  @(TestOCLExpressionsPackage.class):JavaClassFile{
    simpleName = "TestOCLExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsPackage.class";
  }

  @(TestOCLExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestOCLExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_ast/TestOCLExpressionsPackageImpl.class";
  }

  @(_cocos!124):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos";
  }

  @(TestOCLExpressionsASTEDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestOCLExpressionsASTEDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTEDeclarationCoCo.class";
  }

  @(TestOCLExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestOCLExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestOCLExpressionsASTPrimaryNestedExpressionCoCo.class):JavaClassFile{
    simpleName = "TestOCLExpressionsASTPrimaryNestedExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTPrimaryNestedExpressionCoCo.class";
  }

  @(TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestOCLExpressionsASTTestOCLExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.class";
  }

  @(TestOCLExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestOCLExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsCoCoChecker.class";
  }

  @(TestOCLExpressionsTestOCLExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestOCLExpressionsTestOCLExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_cocos/TestOCLExpressionsTestOCLExpressionsPackageCoCo.class";
  }

  @(_od!124):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_od";
  }

  @(TestOCLExpressions2OD.class):JavaClassFile{
    simpleName = "TestOCLExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_od/TestOCLExpressions2OD.class";
  }

  @(_parser!49):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser";
  }

  @(TestOCLExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrBaseListener.class";
  }

  @(TestOCLExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrLexer.class";
  }

  @(TestOCLExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrListener.class";
  }

  @(TestOCLExpressionsAntlrParser$AnyExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$AnyExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$AnyExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$AnyExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$AnyExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$AnyExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ArrayTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ArrayTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ArrayType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$BooleanLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$CardinalityContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$CardinalityContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$CardinalityContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Cardinality_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Cardinality_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Cardinality_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$CharLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$CompletenessContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$CompletenessContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$CompletenessContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Completeness_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Completeness_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Completeness_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ComplexArrayTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ComplexArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ComplexArrayTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ComplexArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ComplexArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ComplexArrayType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ComplexReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ComplexReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ComplexReferenceTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ComplexReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ComplexReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ComplexReferenceType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$DoubleLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$EDeclarationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$EDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$EDeclarationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$EDeclaration_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$EDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$EDeclaration_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ExistsExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ExistsExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ExistsExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ExistsExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ExistsExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ExistsExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$FloatLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$FloatLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ForallExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ForallExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ForallExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ForallExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ForallExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ForallExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IfThenElseExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IfThenElseExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IfThenElseExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IfThenElseExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IfThenElseExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IfThenElseExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ImportStatementContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ImportStatementContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ImportStatement_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ImportStatement_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$InExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$InExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$InExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$InExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$InExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$InExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IntLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IntLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IterateExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IterateExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IterateExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$IterateExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$IterateExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$IterateExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LetDeclarationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LetDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LetDeclarationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LetDeclaration_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LetDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LetDeclaration_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LetinExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LetinExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LetinExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LetinExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LetinExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LetinExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Literal_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LongLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$LongLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ModifierContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ModifierContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Modifier_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Modifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Modifier_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$NullLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$NullLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$NumericLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$NumericLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLArgumentQualificationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLArgumentQualificationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLArgumentQualificationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLArgumentQualification_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLArgumentQualification_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLArgumentQualification_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLArrayQualificationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLArrayQualificationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLArrayQualificationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLArrayQualification_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLArrayQualification_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLArrayQualification_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLAtPreQualificationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLAtPreQualificationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLAtPreQualificationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLAtPreQualification_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLAtPreQualification_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLAtPreQualification_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLCollectionItemContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLCollectionItemContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLCollectionItemContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLCollectionItem_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLCollectionItem_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLCollectionItem_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyleContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyleContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyleContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyle_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyle_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyle_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyleContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyleContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyleContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyle_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyle_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyle_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionItemContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionItemContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionItemContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionItem_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionItem_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionItem_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionPrimaryContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionPrimaryContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionPrimaryContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLComprehensionPrimary_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLComprehensionPrimary_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLComprehensionPrimary_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLDefinedPrimaryContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLDefinedPrimaryContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLDefinedPrimaryContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLDefinedPrimary_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLDefinedPrimary_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLDefinedPrimary_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLIsNewPrimaryContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLIsNewPrimaryContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLIsNewPrimaryContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLIsNewPrimary_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLIsNewPrimary_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLIsNewPrimary_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLPrimaryContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLPrimaryContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLPrimaryContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLPrimary_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLPrimary_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLPrimary_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLQualificationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLQualificationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLQualificationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLQualification_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLQualification_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLQualification_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLQualifiedPrimaryContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLQualifiedPrimaryContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLQualifiedPrimaryContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLQualifiedPrimary_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLQualifiedPrimary_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLQualifiedPrimary_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLTransitivQualificationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLTransitivQualificationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLTransitivQualificationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$OCLTransitivQualification_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$OCLTransitivQualification_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$OCLTransitivQualification_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ParenthizedExpressionContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ParenthizedExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ParenthizedExpressionContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ParenthizedExpression_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ParenthizedExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ParenthizedExpression_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimaryNestedExpressionContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimaryNestedExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimaryNestedExpressionContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimaryNestedExpression_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimaryNestedExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimaryNestedExpression_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimitiveArrayTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimitiveArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimitiveArrayTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimitiveArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimitiveArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimitiveArrayType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimitiveTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimitiveTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimitiveTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$PrimitiveType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$PrimitiveType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$PrimitiveType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$QualifiedNameContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$QualifiedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$QualifiedNameContext.class";
  }

  @(TestOCLExpressionsAntlrParser$QualifiedName_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$QualifiedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$QualifiedName_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ReferenceTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ReferenceType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ReturnTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ReturnTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$ReturnType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$ReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$ReturnType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedFloatLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedIntLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedLongLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedNumericLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SimpleReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SimpleReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SimpleReferenceTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$SimpleReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$SimpleReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$SimpleReferenceType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$StereotypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$StereotypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$StereotypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Stereotype_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Stereotype_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Stereotype_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$StereoValueContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$StereoValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$StereoValueContext.class";
  }

  @(TestOCLExpressionsAntlrParser$StereoValue_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$StereoValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$StereoValue_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$StringLiteralContext.class";
  }

  @(TestOCLExpressionsAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeArgumentContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeArgumentContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeArgumentContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeArgumentsContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeArgumentsContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeArguments_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeArguments_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeArgument_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeArgument_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeArgument_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeCastExpressionContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeCastExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeCastExpressionContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeCastExpression_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeCastExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeCastExpression_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeIfExprContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeIfExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeIfExprContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeIfExpr_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeIfExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeIfExpr_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeParametersContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeParametersContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeParametersContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeParameters_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeParameters_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeParameters_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeVariableDeclarationContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeVariableDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeVariableDeclarationContext.class";
  }

  @(TestOCLExpressionsAntlrParser$TypeVariableDeclaration_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$TypeVariableDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$TypeVariableDeclaration_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$Type_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$Type_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$Type_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$VoidTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$VoidTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$VoidTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$VoidType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$VoidType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$VoidType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser$WildcardTypeContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$WildcardTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$WildcardTypeContext.class";
  }

  @(TestOCLExpressionsAntlrParser$WildcardType_eofContext.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser$WildcardType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser$WildcardType_eofContext.class";
  }

  @(TestOCLExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestOCLExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsAntlrParser.class";
  }

  @(TestOCLExpressionsParser.class):JavaClassFile{
    simpleName = "TestOCLExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_parser/TestOCLExpressionsParser.class";
  }

  @(_symboltable!82):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_symboltable";
  }

  @(TestOCLExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestOCLExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_symboltable/TestOCLExpressionsLanguage.class";
  }

  @(TestOCLExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestOCLExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_symboltable/TestOCLExpressionsModelLoader.class";
  }

  @(_visitor!124):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_visitor";
  }

  @(TestOCLExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestOCLExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsDelegatorVisitor.class";
  }

  @(TestOCLExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestOCLExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsInheritanceVisitor.class";
  }

  @(TestOCLExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestOCLExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsParentAwareVisitor.class";
  }

  @(TestOCLExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestOCLExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testoclexpressions/_visitor/TestOCLExpressionsVisitor.class";
  }

  @(testsetexpressions!2):Directory{
    simpleName = "testsetexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions";
  }

  @(_ast!131):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast";
  }

  @(ASTConstantsTestSetExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestSetExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/ASTConstantsTestSetExpressions.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!5):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!6):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTTestSetExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestSetExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/ASTTestSetExpressionsNode.class";
  }

  @(TestSetExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestSetExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsLiterals.class";
  }

  @(TestSetExpressionsMill.class):JavaClassFile{
    simpleName = "TestSetExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsMill.class";
  }

  @(TestSetExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestSetExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsNodeFactory.class";
  }

  @(TestSetExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestSetExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsPackage$Literals.class";
  }

  @(TestSetExpressionsPackage.class):JavaClassFile{
    simpleName = "TestSetExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsPackage.class";
  }

  @(TestSetExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestSetExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_ast/TestSetExpressionsPackageImpl.class";
  }

  @(_cocos!125):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_cocos";
  }

  @(TestSetExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestSetExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_cocos/TestSetExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestSetExpressionsASTTestSetExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestSetExpressionsASTTestSetExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_cocos/TestSetExpressionsASTTestSetExpressionsNodeCoCo.class";
  }

  @(TestSetExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestSetExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_cocos/TestSetExpressionsCoCoChecker.class";
  }

  @(TestSetExpressionsTestSetExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestSetExpressionsTestSetExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_cocos/TestSetExpressionsTestSetExpressionsPackageCoCo.class";
  }

  @(_od!125):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_od";
  }

  @(TestSetExpressions2OD.class):JavaClassFile{
    simpleName = "TestSetExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_od/TestSetExpressions2OD.class";
  }

  @(_parser!50):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser";
  }

  @(TestSetExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrBaseListener.class";
  }

  @(TestSetExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrLexer.class";
  }

  @(TestSetExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrListener.class";
  }

  @(TestSetExpressionsAntlrParser$ArgumentsContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$ArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$ArgumentsContext.class";
  }

  @(TestSetExpressionsAntlrParser$Arguments_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$Arguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$Arguments_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$BooleanNotExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$BooleanNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$BooleanNotExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$BooleanNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$BooleanNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$BooleanNotExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$BracketExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$BracketExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$BracketExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$BracketExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$BracketExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$BracketExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$InfixExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$InfixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$InfixExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$InfixExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$InfixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$InfixExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$IntersectionExpressionPrefixContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$IntersectionExpressionPrefixContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$IntersectionExpressionPrefixContext.class";
  }

  @(TestSetExpressionsAntlrParser$IntersectionExpressionPrefix_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$IntersectionExpressionPrefix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$IntersectionExpressionPrefix_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$LogicalNotExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$LogicalNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$LogicalNotExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$LogicalNotExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$LogicalNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$LogicalNotExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetAndExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetAndExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetAndExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetAndExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetAndExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetAndExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetOrExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetOrExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetOrExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetOrExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetOrExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetOrExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetXOrExpressionContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetXOrExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetXOrExpressionContext.class";
  }

  @(TestSetExpressionsAntlrParser$SetXOrExpression_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$SetXOrExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$SetXOrExpression_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser$UnionExpressionPrefixContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$UnionExpressionPrefixContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$UnionExpressionPrefixContext.class";
  }

  @(TestSetExpressionsAntlrParser$UnionExpressionPrefix_eofContext.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser$UnionExpressionPrefix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser$UnionExpressionPrefix_eofContext.class";
  }

  @(TestSetExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestSetExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsAntlrParser.class";
  }

  @(TestSetExpressionsParser.class):JavaClassFile{
    simpleName = "TestSetExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_parser/TestSetExpressionsParser.class";
  }

  @(_symboltable!83):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_symboltable";
  }

  @(TestSetExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestSetExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_symboltable/TestSetExpressionsLanguage.class";
  }

  @(TestSetExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestSetExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_symboltable/TestSetExpressionsModelLoader.class";
  }

  @(_visitor!125):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_visitor";
  }

  @(TestSetExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestSetExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_visitor/TestSetExpressionsDelegatorVisitor.class";
  }

  @(TestSetExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestSetExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_visitor/TestSetExpressionsInheritanceVisitor.class";
  }

  @(TestSetExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestSetExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_visitor/TestSetExpressionsParentAwareVisitor.class";
  }

  @(TestSetExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestSetExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testsetexpressions/_visitor/TestSetExpressionsVisitor.class";
  }

  @(testshiftexpressions!2):Directory{
    simpleName = "testshiftexpressions";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions";
  }

  @(_ast!132):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast";
  }

  @(ASTConstantsTestShiftExpressions.class):JavaClassFile{
    simpleName = "ASTConstantsTestShiftExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/ASTConstantsTestShiftExpressions.class";
  }

  @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!6):JavaClassFile{
    simpleName = "ASTPrimaryExpression$PrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/ASTPrimaryExpression$PrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpression.class!7):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/ASTPrimaryExpression.class";
  }

  @(ASTTestShiftExpressionsNode.class):JavaClassFile{
    simpleName = "ASTTestShiftExpressionsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/ASTTestShiftExpressionsNode.class";
  }

  @(TestShiftExpressionsLiterals.class):JavaClassFile{
    simpleName = "TestShiftExpressionsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsLiterals.class";
  }

  @(TestShiftExpressionsMill.class):JavaClassFile{
    simpleName = "TestShiftExpressionsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsMill.class";
  }

  @(TestShiftExpressionsNodeFactory.class):JavaClassFile{
    simpleName = "TestShiftExpressionsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsNodeFactory.class";
  }

  @(TestShiftExpressionsPackage$Literals.class):JavaClassFile{
    simpleName = "TestShiftExpressionsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsPackage$Literals.class";
  }

  @(TestShiftExpressionsPackage.class):JavaClassFile{
    simpleName = "TestShiftExpressionsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsPackage.class";
  }

  @(TestShiftExpressionsPackageImpl.class):JavaClassFile{
    simpleName = "TestShiftExpressionsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_ast/TestShiftExpressionsPackageImpl.class";
  }

  @(_cocos!126):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_cocos";
  }

  @(TestShiftExpressionsASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestShiftExpressionsASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsASTPrimaryExpressionCoCo.class";
  }

  @(TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.class):JavaClassFile{
    simpleName = "TestShiftExpressionsASTTestShiftExpressionsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.class";
  }

  @(TestShiftExpressionsCoCoChecker.class):JavaClassFile{
    simpleName = "TestShiftExpressionsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsCoCoChecker.class";
  }

  @(TestShiftExpressionsTestShiftExpressionsPackageCoCo.class):JavaClassFile{
    simpleName = "TestShiftExpressionsTestShiftExpressionsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_cocos/TestShiftExpressionsTestShiftExpressionsPackageCoCo.class";
  }

  @(_od!126):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_od";
  }

  @(TestShiftExpressions2OD.class):JavaClassFile{
    simpleName = "TestShiftExpressions2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_od/TestShiftExpressions2OD.class";
  }

  @(_parser!51):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser";
  }

  @(TestShiftExpressionsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrBaseListener.class";
  }

  @(TestShiftExpressionsAntlrLexer.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrLexer.class";
  }

  @(TestShiftExpressionsAntlrListener.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrListener.class";
  }

  @(TestShiftExpressionsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$ExpressionContext.class";
  }

  @(TestShiftExpressionsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$Expression_eofContext.class";
  }

  @(TestShiftExpressionsAntlrParser$PrimaryExpressionContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$PrimaryExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$PrimaryExpressionContext.class";
  }

  @(TestShiftExpressionsAntlrParser$PrimaryExpression_eofContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$PrimaryExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$PrimaryExpression_eofContext.class";
  }

  @(TestShiftExpressionsAntlrParser$PrimaryThisExpressionContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$PrimaryThisExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$PrimaryThisExpressionContext.class";
  }

  @(TestShiftExpressionsAntlrParser$PrimaryThisExpression_eofContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$PrimaryThisExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$PrimaryThisExpression_eofContext.class";
  }

  @(TestShiftExpressionsAntlrParser$ShiftExpressionContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$ShiftExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$ShiftExpressionContext.class";
  }

  @(TestShiftExpressionsAntlrParser$ShiftExpression_eofContext.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser$ShiftExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser$ShiftExpression_eofContext.class";
  }

  @(TestShiftExpressionsAntlrParser.class):JavaClassFile{
    simpleName = "TestShiftExpressionsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsAntlrParser.class";
  }

  @(TestShiftExpressionsParser.class):JavaClassFile{
    simpleName = "TestShiftExpressionsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_parser/TestShiftExpressionsParser.class";
  }

  @(_symboltable!84):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_symboltable";
  }

  @(TestShiftExpressionsLanguage.class):JavaClassFile{
    simpleName = "TestShiftExpressionsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_symboltable/TestShiftExpressionsLanguage.class";
  }

  @(TestShiftExpressionsModelLoader.class):JavaClassFile{
    simpleName = "TestShiftExpressionsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_symboltable/TestShiftExpressionsModelLoader.class";
  }

  @(_visitor!126):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_visitor";
  }

  @(TestShiftExpressionsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestShiftExpressionsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsDelegatorVisitor.class";
  }

  @(TestShiftExpressionsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestShiftExpressionsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsInheritanceVisitor.class";
  }

  @(TestShiftExpressionsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestShiftExpressionsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsParentAwareVisitor.class";
  }

  @(TestShiftExpressionsVisitor.class):JavaClassFile{
    simpleName = "TestShiftExpressionsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testshiftexpressions/_visitor/TestShiftExpressionsVisitor.class";
  }

  @(teststringliterals!2):Directory{
    simpleName = "teststringliterals";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals";
  }

  @(_ast!133):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast";
  }

  @(ASTCharLiteralList$CharLiteralListBuilder.class):JavaClassFile{
    simpleName = "ASTCharLiteralList$CharLiteralListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTCharLiteralList$CharLiteralListBuilder.class";
  }

  @(ASTCharLiteralList.class):JavaClassFile{
    simpleName = "ASTCharLiteralList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTCharLiteralList.class";
  }

  @(ASTConstantsTestStringLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsTestStringLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTConstantsTestStringLiterals.class";
  }

  @(ASTStringLiteralList$StringLiteralListBuilder.class):JavaClassFile{
    simpleName = "ASTStringLiteralList$StringLiteralListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTStringLiteralList$StringLiteralListBuilder.class";
  }

  @(ASTStringLiteralList.class):JavaClassFile{
    simpleName = "ASTStringLiteralList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTStringLiteralList.class";
  }

  @(ASTTestStringLiteralsNode.class):JavaClassFile{
    simpleName = "ASTTestStringLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/ASTTestStringLiteralsNode.class";
  }

  @(TestStringLiteralsLiterals.class):JavaClassFile{
    simpleName = "TestStringLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsLiterals.class";
  }

  @(TestStringLiteralsMill.class):JavaClassFile{
    simpleName = "TestStringLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsMill.class";
  }

  @(TestStringLiteralsNodeFactory.class):JavaClassFile{
    simpleName = "TestStringLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsNodeFactory.class";
  }

  @(TestStringLiteralsPackage$Literals.class):JavaClassFile{
    simpleName = "TestStringLiteralsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsPackage$Literals.class";
  }

  @(TestStringLiteralsPackage.class):JavaClassFile{
    simpleName = "TestStringLiteralsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsPackage.class";
  }

  @(TestStringLiteralsPackageImpl.class):JavaClassFile{
    simpleName = "TestStringLiteralsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_ast/TestStringLiteralsPackageImpl.class";
  }

  @(_cocos!127):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos";
  }

  @(TestStringLiteralsASTCharLiteralListCoCo.class):JavaClassFile{
    simpleName = "TestStringLiteralsASTCharLiteralListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTCharLiteralListCoCo.class";
  }

  @(TestStringLiteralsASTStringLiteralListCoCo.class):JavaClassFile{
    simpleName = "TestStringLiteralsASTStringLiteralListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTStringLiteralListCoCo.class";
  }

  @(TestStringLiteralsASTTestStringLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "TestStringLiteralsASTTestStringLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos/TestStringLiteralsASTTestStringLiteralsNodeCoCo.class";
  }

  @(TestStringLiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "TestStringLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos/TestStringLiteralsCoCoChecker.class";
  }

  @(TestStringLiteralsTestStringLiteralsPackageCoCo.class):JavaClassFile{
    simpleName = "TestStringLiteralsTestStringLiteralsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_cocos/TestStringLiteralsTestStringLiteralsPackageCoCo.class";
  }

  @(_od!127):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_od";
  }

  @(TestStringLiterals2OD.class):JavaClassFile{
    simpleName = "TestStringLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_od/TestStringLiterals2OD.class";
  }

  @(_parser!52):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser";
  }

  @(TestStringLiteralsAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrBaseListener.class";
  }

  @(TestStringLiteralsAntlrLexer.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrLexer.class";
  }

  @(TestStringLiteralsAntlrListener.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrListener.class";
  }

  @(TestStringLiteralsAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$CharLiteralContext.class";
  }

  @(TestStringLiteralsAntlrParser$CharLiteralListContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$CharLiteralListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$CharLiteralListContext.class";
  }

  @(TestStringLiteralsAntlrParser$CharLiteralList_eofContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$CharLiteralList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$CharLiteralList_eofContext.class";
  }

  @(TestStringLiteralsAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestStringLiteralsAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$StringLiteralContext.class";
  }

  @(TestStringLiteralsAntlrParser$StringLiteralListContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$StringLiteralListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$StringLiteralListContext.class";
  }

  @(TestStringLiteralsAntlrParser$StringLiteralList_eofContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$StringLiteralList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$StringLiteralList_eofContext.class";
  }

  @(TestStringLiteralsAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestStringLiteralsAntlrParser.class):JavaClassFile{
    simpleName = "TestStringLiteralsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsAntlrParser.class";
  }

  @(TestStringLiteralsParser.class):JavaClassFile{
    simpleName = "TestStringLiteralsParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_parser/TestStringLiteralsParser.class";
  }

  @(_symboltable!85):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_symboltable";
  }

  @(TestStringLiteralsLanguage.class):JavaClassFile{
    simpleName = "TestStringLiteralsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_symboltable/TestStringLiteralsLanguage.class";
  }

  @(TestStringLiteralsModelLoader.class):JavaClassFile{
    simpleName = "TestStringLiteralsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_symboltable/TestStringLiteralsModelLoader.class";
  }

  @(_visitor!127):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_visitor";
  }

  @(TestStringLiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestStringLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_visitor/TestStringLiteralsDelegatorVisitor.class";
  }

  @(TestStringLiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestStringLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_visitor/TestStringLiteralsInheritanceVisitor.class";
  }

  @(TestStringLiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestStringLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_visitor/TestStringLiteralsParentAwareVisitor.class";
  }

  @(TestStringLiteralsVisitor.class):JavaClassFile{
    simpleName = "TestStringLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/teststringliterals/_visitor/TestStringLiteralsVisitor.class";
  }

  @(testumlmodifier!2):Directory{
    simpleName = "testumlmodifier";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier";
  }

  @(_ast!134):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast";
  }

  @(ASTA$ABuilder.class!2):JavaClassFile{
    simpleName = "ASTA$ABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/ASTA$ABuilder.class";
  }

  @(ASTA.class!10):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/ASTA.class";
  }

  @(ASTConstantsTestUMLModifier.class):JavaClassFile{
    simpleName = "ASTConstantsTestUMLModifier";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/ASTConstantsTestUMLModifier.class";
  }

  @(ASTTestUMLModifierNode.class):JavaClassFile{
    simpleName = "ASTTestUMLModifierNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/ASTTestUMLModifierNode.class";
  }

  @(TestUMLModifierLiterals.class):JavaClassFile{
    simpleName = "TestUMLModifierLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierLiterals.class";
  }

  @(TestUMLModifierMill.class):JavaClassFile{
    simpleName = "TestUMLModifierMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierMill.class";
  }

  @(TestUMLModifierNodeFactory.class):JavaClassFile{
    simpleName = "TestUMLModifierNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierNodeFactory.class";
  }

  @(TestUMLModifierPackage$Literals.class):JavaClassFile{
    simpleName = "TestUMLModifierPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierPackage$Literals.class";
  }

  @(TestUMLModifierPackage.class):JavaClassFile{
    simpleName = "TestUMLModifierPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierPackage.class";
  }

  @(TestUMLModifierPackageImpl.class):JavaClassFile{
    simpleName = "TestUMLModifierPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_ast/TestUMLModifierPackageImpl.class";
  }

  @(_cocos!128):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_cocos";
  }

  @(TestUMLModifierASTACoCo.class):JavaClassFile{
    simpleName = "TestUMLModifierASTACoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_cocos/TestUMLModifierASTACoCo.class";
  }

  @(TestUMLModifierASTTestUMLModifierNodeCoCo.class):JavaClassFile{
    simpleName = "TestUMLModifierASTTestUMLModifierNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_cocos/TestUMLModifierASTTestUMLModifierNodeCoCo.class";
  }

  @(TestUMLModifierCoCoChecker.class):JavaClassFile{
    simpleName = "TestUMLModifierCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_cocos/TestUMLModifierCoCoChecker.class";
  }

  @(TestUMLModifierTestUMLModifierPackageCoCo.class):JavaClassFile{
    simpleName = "TestUMLModifierTestUMLModifierPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_cocos/TestUMLModifierTestUMLModifierPackageCoCo.class";
  }

  @(_od!128):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_od";
  }

  @(TestUMLModifier2OD.class):JavaClassFile{
    simpleName = "TestUMLModifier2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_od/TestUMLModifier2OD.class";
  }

  @(_parser!53):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser";
  }

  @(TestUMLModifierAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrBaseListener.class";
  }

  @(TestUMLModifierAntlrLexer.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrLexer.class";
  }

  @(TestUMLModifierAntlrListener.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrListener.class";
  }

  @(TestUMLModifierAntlrParser$AContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$AContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$AContext.class";
  }

  @(TestUMLModifierAntlrParser$A_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$A_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$A_eofContext.class";
  }

  @(TestUMLModifierAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$CharLiteralContext.class";
  }

  @(TestUMLModifierAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestUMLModifierAntlrParser$ModifierContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$ModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$ModifierContext.class";
  }

  @(TestUMLModifierAntlrParser$Modifier_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$Modifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$Modifier_eofContext.class";
  }

  @(TestUMLModifierAntlrParser$StereotypeContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$StereotypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$StereotypeContext.class";
  }

  @(TestUMLModifierAntlrParser$Stereotype_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$Stereotype_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$Stereotype_eofContext.class";
  }

  @(TestUMLModifierAntlrParser$StereoValueContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$StereoValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$StereoValueContext.class";
  }

  @(TestUMLModifierAntlrParser$StereoValue_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$StereoValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$StereoValue_eofContext.class";
  }

  @(TestUMLModifierAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$StringLiteralContext.class";
  }

  @(TestUMLModifierAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestUMLModifierAntlrParser.class):JavaClassFile{
    simpleName = "TestUMLModifierAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierAntlrParser.class";
  }

  @(TestUMLModifierParser.class):JavaClassFile{
    simpleName = "TestUMLModifierParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_parser/TestUMLModifierParser.class";
  }

  @(_symboltable!86):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_symboltable";
  }

  @(TestUMLModifierLanguage.class):JavaClassFile{
    simpleName = "TestUMLModifierLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_symboltable/TestUMLModifierLanguage.class";
  }

  @(TestUMLModifierModelLoader.class):JavaClassFile{
    simpleName = "TestUMLModifierModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_symboltable/TestUMLModifierModelLoader.class";
  }

  @(_visitor!128):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_visitor";
  }

  @(TestUMLModifierDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestUMLModifierDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_visitor/TestUMLModifierDelegatorVisitor.class";
  }

  @(TestUMLModifierInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestUMLModifierInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_visitor/TestUMLModifierInheritanceVisitor.class";
  }

  @(TestUMLModifierParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestUMLModifierParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_visitor/TestUMLModifierParentAwareVisitor.class";
  }

  @(TestUMLModifierVisitor.class):JavaClassFile{
    simpleName = "TestUMLModifierVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlmodifier/_visitor/TestUMLModifierVisitor.class";
  }

  @(testumlstereotype!2):Directory{
    simpleName = "testumlstereotype";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype";
  }

  @(_ast!135):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast";
  }

  @(ASTConstantsTestUMLStereotype.class):JavaClassFile{
    simpleName = "ASTConstantsTestUMLStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTConstantsTestUMLStereotype.class";
  }

  @(ASTStereotypeList$StereotypeListBuilder.class):JavaClassFile{
    simpleName = "ASTStereotypeList$StereotypeListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTStereotypeList$StereotypeListBuilder.class";
  }

  @(ASTStereotypeList.class):JavaClassFile{
    simpleName = "ASTStereotypeList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTStereotypeList.class";
  }

  @(ASTStereoValueList$StereoValueListBuilder.class):JavaClassFile{
    simpleName = "ASTStereoValueList$StereoValueListBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTStereoValueList$StereoValueListBuilder.class";
  }

  @(ASTStereoValueList.class):JavaClassFile{
    simpleName = "ASTStereoValueList";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTStereoValueList.class";
  }

  @(ASTTestUMLStereotypeNode.class):JavaClassFile{
    simpleName = "ASTTestUMLStereotypeNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/ASTTestUMLStereotypeNode.class";
  }

  @(TestUMLStereotypeLiterals.class):JavaClassFile{
    simpleName = "TestUMLStereotypeLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypeLiterals.class";
  }

  @(TestUMLStereotypeMill.class):JavaClassFile{
    simpleName = "TestUMLStereotypeMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypeMill.class";
  }

  @(TestUMLStereotypeNodeFactory.class):JavaClassFile{
    simpleName = "TestUMLStereotypeNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypeNodeFactory.class";
  }

  @(TestUMLStereotypePackage$Literals.class):JavaClassFile{
    simpleName = "TestUMLStereotypePackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypePackage$Literals.class";
  }

  @(TestUMLStereotypePackage.class):JavaClassFile{
    simpleName = "TestUMLStereotypePackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypePackage.class";
  }

  @(TestUMLStereotypePackageImpl.class):JavaClassFile{
    simpleName = "TestUMLStereotypePackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_ast/TestUMLStereotypePackageImpl.class";
  }

  @(_cocos!129):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos";
  }

  @(TestUMLStereotypeASTStereotypeListCoCo.class):JavaClassFile{
    simpleName = "TestUMLStereotypeASTStereotypeListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTStereotypeListCoCo.class";
  }

  @(TestUMLStereotypeASTStereoValueListCoCo.class):JavaClassFile{
    simpleName = "TestUMLStereotypeASTStereoValueListCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTStereoValueListCoCo.class";
  }

  @(TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.class):JavaClassFile{
    simpleName = "TestUMLStereotypeASTTestUMLStereotypeNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.class";
  }

  @(TestUMLStereotypeCoCoChecker.class):JavaClassFile{
    simpleName = "TestUMLStereotypeCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeCoCoChecker.class";
  }

  @(TestUMLStereotypeTestUMLStereotypePackageCoCo.class):JavaClassFile{
    simpleName = "TestUMLStereotypeTestUMLStereotypePackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_cocos/TestUMLStereotypeTestUMLStereotypePackageCoCo.class";
  }

  @(_od!129):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_od";
  }

  @(TestUMLStereotype2OD.class):JavaClassFile{
    simpleName = "TestUMLStereotype2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_od/TestUMLStereotype2OD.class";
  }

  @(_parser!54):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser";
  }

  @(TestUMLStereotypeAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrBaseListener.class";
  }

  @(TestUMLStereotypeAntlrLexer.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrLexer.class";
  }

  @(TestUMLStereotypeAntlrListener.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrListener.class";
  }

  @(TestUMLStereotypeAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$CharLiteralContext.class";
  }

  @(TestUMLStereotypeAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereotypeContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereotypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereotypeContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereotypeListContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereotypeListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereotypeListContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereotypeList_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereotypeList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereotypeList_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser$Stereotype_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$Stereotype_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$Stereotype_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereoValueContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereoValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereoValueContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereoValueListContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereoValueListContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereoValueListContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereoValueList_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereoValueList_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereoValueList_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StereoValue_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StereoValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StereoValue_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StringLiteralContext.class";
  }

  @(TestUMLStereotypeAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestUMLStereotypeAntlrParser.class):JavaClassFile{
    simpleName = "TestUMLStereotypeAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeAntlrParser.class";
  }

  @(TestUMLStereotypeParser.class):JavaClassFile{
    simpleName = "TestUMLStereotypeParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_parser/TestUMLStereotypeParser.class";
  }

  @(_symboltable!87):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_symboltable";
  }

  @(TestUMLStereotypeLanguage.class):JavaClassFile{
    simpleName = "TestUMLStereotypeLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_symboltable/TestUMLStereotypeLanguage.class";
  }

  @(TestUMLStereotypeModelLoader.class):JavaClassFile{
    simpleName = "TestUMLStereotypeModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_symboltable/TestUMLStereotypeModelLoader.class";
  }

  @(_visitor!129):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_visitor";
  }

  @(TestUMLStereotypeDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestUMLStereotypeDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeDelegatorVisitor.class";
  }

  @(TestUMLStereotypeInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestUMLStereotypeInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeInheritanceVisitor.class";
  }

  @(TestUMLStereotypeParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestUMLStereotypeParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeParentAwareVisitor.class";
  }

  @(TestUMLStereotypeVisitor.class):JavaClassFile{
    simpleName = "TestUMLStereotypeVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/testumlstereotype/_visitor/TestUMLStereotypeVisitor.class";
  }

  @(types!20):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types";
  }

  @(ComplexArrayTypesTest.class):JavaClassFile{
    simpleName = "ComplexArrayTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/ComplexArrayTypesTest.class";
  }

  @(ComplexQualifiedTypesTest.class):JavaClassFile{
    simpleName = "ComplexQualifiedTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/ComplexQualifiedTypesTest.class";
  }

  @(NestedTypeArgumentsTest.class):JavaClassFile{
    simpleName = "NestedTypeArgumentsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/NestedTypeArgumentsTest.class";
  }

  @(NestedTypeParametersTest.class):JavaClassFile{
    simpleName = "NestedTypeParametersTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/NestedTypeParametersTest.class";
  }

  @(PrimitiveArrayTypesTest.class):JavaClassFile{
    simpleName = "PrimitiveArrayTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/PrimitiveArrayTypesTest.class";
  }

  @(PrimitiveTypesTest.class):JavaClassFile{
    simpleName = "PrimitiveTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/PrimitiveTypesTest.class";
  }

  @(ReturnTypesTest.class):JavaClassFile{
    simpleName = "ReturnTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/ReturnTypesTest.class";
  }

  @(testtypes!3):Directory{
    simpleName = "testtypes";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes";
  }

  @(_ast!136):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast";
  }

  @(ASTConstantsTestTypes.class!2):JavaClassFile{
    simpleName = "ASTConstantsTestTypes";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/ASTConstantsTestTypes.class";
  }

  @(ASTTestTypesNode.class!2):JavaClassFile{
    simpleName = "ASTTestTypesNode";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/ASTTestTypesNode.class";
  }

  @(TestTypesLiterals.class!2):JavaClassFile{
    simpleName = "TestTypesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesLiterals.class";
  }

  @(TestTypesMill.class!2):JavaClassFile{
    simpleName = "TestTypesMill";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesMill.class";
  }

  @(TestTypesNodeFactory.class!2):JavaClassFile{
    simpleName = "TestTypesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesNodeFactory.class";
  }

  @(TestTypesPackage$Literals.class):JavaClassFile{
    simpleName = "TestTypesPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesPackage$Literals.class";
  }

  @(TestTypesPackage.class):JavaClassFile{
    simpleName = "TestTypesPackage";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesPackage.class";
  }

  @(TestTypesPackageImpl.class):JavaClassFile{
    simpleName = "TestTypesPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_ast/TestTypesPackageImpl.class";
  }

  @(_cocos!130):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_cocos";
  }

  @(TestTypesASTTestTypesNodeCoCo.class!2):JavaClassFile{
    simpleName = "TestTypesASTTestTypesNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_cocos/TestTypesASTTestTypesNodeCoCo.class";
  }

  @(TestTypesCoCoChecker.class!2):JavaClassFile{
    simpleName = "TestTypesCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_cocos/TestTypesCoCoChecker.class";
  }

  @(TestTypesTestTypesPackageCoCo.class):JavaClassFile{
    simpleName = "TestTypesTestTypesPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_cocos/TestTypesTestTypesPackageCoCo.class";
  }

  @(_od!130):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_od";
  }

  @(TestTypes2OD.class!2):JavaClassFile{
    simpleName = "TestTypes2OD";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_od/TestTypes2OD.class";
  }

  @(_parser!55):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser";
  }

  @(TestTypesAntlrBaseListener.class):JavaClassFile{
    simpleName = "TestTypesAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrBaseListener.class";
  }

  @(TestTypesAntlrLexer.class):JavaClassFile{
    simpleName = "TestTypesAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrLexer.class";
  }

  @(TestTypesAntlrListener.class):JavaClassFile{
    simpleName = "TestTypesAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrListener.class";
  }

  @(TestTypesAntlrParser$ArrayTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ArrayTypeContext.class";
  }

  @(TestTypesAntlrParser$ArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ArrayType_eofContext.class";
  }

  @(TestTypesAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$BooleanLiteralContext.class";
  }

  @(TestTypesAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$CharLiteralContext.class";
  }

  @(TestTypesAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$CharLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$ComplexArrayTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ComplexArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ComplexArrayTypeContext.class";
  }

  @(TestTypesAntlrParser$ComplexArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ComplexArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ComplexArrayType_eofContext.class";
  }

  @(TestTypesAntlrParser$ComplexReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ComplexReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ComplexReferenceTypeContext.class";
  }

  @(TestTypesAntlrParser$ComplexReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ComplexReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ComplexReferenceType_eofContext.class";
  }

  @(TestTypesAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$DoubleLiteralContext.class";
  }

  @(TestTypesAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$FloatLiteralContext.class";
  }

  @(TestTypesAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$FloatLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$ImportStatementContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ImportStatementContext.class";
  }

  @(TestTypesAntlrParser$ImportStatement_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ImportStatement_eofContext.class";
  }

  @(TestTypesAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$IntLiteralContext.class";
  }

  @(TestTypesAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$IntLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$LiteralContext.class";
  }

  @(TestTypesAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$Literal_eofContext.class";
  }

  @(TestTypesAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$LongLiteralContext.class";
  }

  @(TestTypesAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$LongLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$NullLiteralContext.class";
  }

  @(TestTypesAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$NullLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$NumericLiteralContext.class";
  }

  @(TestTypesAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$NumericLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$PrimitiveArrayTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$PrimitiveArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$PrimitiveArrayTypeContext.class";
  }

  @(TestTypesAntlrParser$PrimitiveArrayType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$PrimitiveArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$PrimitiveArrayType_eofContext.class";
  }

  @(TestTypesAntlrParser$PrimitiveTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$PrimitiveTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$PrimitiveTypeContext.class";
  }

  @(TestTypesAntlrParser$PrimitiveType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$PrimitiveType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$PrimitiveType_eofContext.class";
  }

  @(TestTypesAntlrParser$QualifiedNameContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$QualifiedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$QualifiedNameContext.class";
  }

  @(TestTypesAntlrParser$QualifiedName_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$QualifiedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$QualifiedName_eofContext.class";
  }

  @(TestTypesAntlrParser$ReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ReferenceTypeContext.class";
  }

  @(TestTypesAntlrParser$ReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ReferenceType_eofContext.class";
  }

  @(TestTypesAntlrParser$ReturnTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ReturnTypeContext.class";
  }

  @(TestTypesAntlrParser$ReturnType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$ReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$ReturnType_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedFloatLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedIntLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedLongLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedNumericLiteralContext.class";
  }

  @(TestTypesAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$SimpleReferenceTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SimpleReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SimpleReferenceTypeContext.class";
  }

  @(TestTypesAntlrParser$SimpleReferenceType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$SimpleReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$SimpleReferenceType_eofContext.class";
  }

  @(TestTypesAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$StringLiteralContext.class";
  }

  @(TestTypesAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$StringLiteral_eofContext.class";
  }

  @(TestTypesAntlrParser$TypeArgumentContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeArgumentContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeArgumentContext.class";
  }

  @(TestTypesAntlrParser$TypeArgumentsContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeArgumentsContext.class";
  }

  @(TestTypesAntlrParser$TypeArguments_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeArguments_eofContext.class";
  }

  @(TestTypesAntlrParser$TypeArgument_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeArgument_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeArgument_eofContext.class";
  }

  @(TestTypesAntlrParser$TypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeContext.class";
  }

  @(TestTypesAntlrParser$TypeParametersContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeParametersContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeParametersContext.class";
  }

  @(TestTypesAntlrParser$TypeParameters_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeParameters_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeParameters_eofContext.class";
  }

  @(TestTypesAntlrParser$TypeVariableDeclarationContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeVariableDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeVariableDeclarationContext.class";
  }

  @(TestTypesAntlrParser$TypeVariableDeclaration_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$TypeVariableDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$TypeVariableDeclaration_eofContext.class";
  }

  @(TestTypesAntlrParser$Type_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$Type_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$Type_eofContext.class";
  }

  @(TestTypesAntlrParser$VoidTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$VoidTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$VoidTypeContext.class";
  }

  @(TestTypesAntlrParser$VoidType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$VoidType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$VoidType_eofContext.class";
  }

  @(TestTypesAntlrParser$WildcardTypeContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$WildcardTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$WildcardTypeContext.class";
  }

  @(TestTypesAntlrParser$WildcardType_eofContext.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser$WildcardType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser$WildcardType_eofContext.class";
  }

  @(TestTypesAntlrParser.class):JavaClassFile{
    simpleName = "TestTypesAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesAntlrParser.class";
  }

  @(TestTypesParser.class):JavaClassFile{
    simpleName = "TestTypesParser";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_parser/TestTypesParser.class";
  }

  @(_visitor!130):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_visitor";
  }

  @(TestTypesDelegatorVisitor.class!2):JavaClassFile{
    simpleName = "TestTypesDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_visitor/TestTypesDelegatorVisitor.class";
  }

  @(TestTypesInheritanceVisitor.class!2):JavaClassFile{
    simpleName = "TestTypesInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_visitor/TestTypesInheritanceVisitor.class";
  }

  @(TestTypesParentAwareVisitor.class!2):JavaClassFile{
    simpleName = "TestTypesParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_visitor/TestTypesParentAwareVisitor.class";
  }

  @(TestTypesVisitor.class!2):JavaClassFile{
    simpleName = "TestTypesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/testtypes/_visitor/TestTypesVisitor.class";
  }

  @(TypeArgumentsTest.class):JavaClassFile{
    simpleName = "TypeArgumentsTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/TypeArgumentsTest.class";
  }

  @(TypeParametersTest.class):JavaClassFile{
    simpleName = "TypeParametersTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/TypeParametersTest.class";
  }

  @(TypesTestHelper.class):JavaClassFile{
    simpleName = "TypesTestHelper";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/TypesTestHelper.class";
  }

  @(WildcardTypesTest.class):JavaClassFile{
    simpleName = "WildcardTypesTest";
    nameExtension = "class";
    fullName = "sources/monticore-grammar/target/test-classes/de/monticore/types/WildcardTypesTest.class";
  }

  monticoregenerator:Module{
    simpleName = "monticoregenerator";
  }

  @(monticore-generator):Directory{
    simpleName = "monticore-generator";
    nameExtension = "";
    fullName = "sources/monticore-generator";
  }

  @(it):Directory{
    simpleName = "it";
    nameExtension = "";
    fullName = "sources/monticore-generator/it";
  }

  @(src!6):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src";
  }

  @(main!6):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main";
  }

  @(grammars):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars";
  }

  @(mc):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc";
  }

  @(common):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/common";
  }

  @(embedding):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/embedding";
  }

  @(external):Directory{
    simpleName = "external";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/embedding/external";
  }

  @(transitive):Directory{
    simpleName = "transitive";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/embedding/transitive";
  }

  @(examples):Directory{
    simpleName = "examples";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples";
  }

  @(automaton!4):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/automaton";
  }

  @(input):Directory{
    simpleName = "input";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/automaton/input";
  }

  @(renaming):Directory{
    simpleName = "renaming";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/automaton/renaming";
  }

  @(cartesian):Directory{
    simpleName = "cartesian";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/cartesian";
  }

  @(lwc):Directory{
    simpleName = "lwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/lwc";
  }

  @(edl):Directory{
    simpleName = "edl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/lwc/edl";
  }

  @(odl):Directory{
    simpleName = "odl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/lwc/odl";
  }

  @(msc):Directory{
    simpleName = "msc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/msc";
  }

  @(petrinet):Directory{
    simpleName = "petrinet";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/petrinet";
  }

  @(polar):Directory{
    simpleName = "polar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/polar";
  }

  @(robot):Directory{
    simpleName = "robot";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/examples/robot";
  }

  @(feature):Directory{
    simpleName = "feature";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature";
  }

  @(abc):Directory{
    simpleName = "abc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/abc";
  }

  @(abstractgrammar):Directory{
    simpleName = "abstractgrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/abstractgrammar";
  }

  @(abstractprod):Directory{
    simpleName = "abstractprod";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/abstractprod";
  }

  @(addkeywords):Directory{
    simpleName = "addkeywords";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/addkeywords";
  }

  @(astcomparison):Directory{
    simpleName = "astcomparison";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/astcomparison";
  }

  @(astident):Directory{
    simpleName = "astident";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/astident";
  }

  @(astprod):Directory{
    simpleName = "astprod";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/astprod";
  }

  @(aststring):Directory{
    simpleName = "aststring";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/aststring";
  }

  @(automaton!5):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/automaton";
  }

  @(classgenwithingrammar):Directory{
    simpleName = "classgenwithingrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/classgenwithingrammar";
  }

  @(cocochecker):Directory{
    simpleName = "cocochecker";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/cocochecker";
  }

  @(comments):Directory{
    simpleName = "comments";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/comments";
  }

  @(compilationunit):Directory{
    simpleName = "compilationunit";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/compilationunit";
  }

  @(constantsshortform):Directory{
    simpleName = "constantsshortform";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/constantsshortform";
  }

  @(delete):Directory{
    simpleName = "delete";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/delete";
  }

  @(dsltoolstandalone):Directory{
    simpleName = "dsltoolstandalone";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/dsltoolstandalone";
  }

  @(embedding!2):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/embedding";
  }

  @(inner):Directory{
    simpleName = "inner";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/embedding/inner";
  }

  @(outer):Directory{
    simpleName = "outer";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/embedding/outer";
  }

  @(example):Directory{
    simpleName = "example";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/example";
  }

  @(nointerface):Directory{
    simpleName = "nointerface";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/example/nointerface";
  }

  @(useinterface):Directory{
    simpleName = "useinterface";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/example/useinterface";
  }

  @(expression):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/expression";
  }

  @(fautomaton):Directory{
    simpleName = "fautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/fautomaton";
  }

  @(action):Directory{
    simpleName = "action";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/fautomaton/action";
  }

  @(automaton!6):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/fautomaton/automaton";
  }

  @(automatonwithaction):Directory{
    simpleName = "automatonwithaction";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/fautomaton/automatonwithaction";
  }

  @(followoption):Directory{
    simpleName = "followoption";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/followoption";
  }

  @(grammarinherit):Directory{
    simpleName = "grammarinherit";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/grammarinherit";
  }

  @(sub):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/grammarinherit/sub";
  }

  @(sup):Directory{
    simpleName = "sup";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/grammarinherit/sup";
  }

  @(hwc):Directory{
    simpleName = "hwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/hwc";
  }

  @(inheritence):Directory{
    simpleName = "inheritence";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/inheritence";
  }

  @(interfaces):Directory{
    simpleName = "interfaces";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/interfaces";
  }

  @(javasql):Directory{
    simpleName = "javasql";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/javasql";
  }

  @(java!7):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/javasql/java";
  }

  @(javasql!2):Directory{
    simpleName = "javasql";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/javasql/javasql";
  }

  @(sql):Directory{
    simpleName = "sql";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/javasql/sql";
  }

  @(lexerformat):Directory{
    simpleName = "lexerformat";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/lexerformat";
  }

  @(linepreprocess):Directory{
    simpleName = "linepreprocess";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/linepreprocess";
  }

  @(astrules):Directory{
    simpleName = "astrules";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/linepreprocess/astrules";
  }

  @(embedding!3):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/linepreprocess/embedding";
  }

  @(synpred):Directory{
    simpleName = "synpred";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/linepreprocess/synpred";
  }

  @(synpred_llk):Directory{
    simpleName = "synpred_llk";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/linepreprocess/synpred_llk";
  }

  @(list):Directory{
    simpleName = "list";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/list";
  }

  @(listrule):Directory{
    simpleName = "listrule";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/listrule";
  }

  @(mcenum):Directory{
    simpleName = "mcenum";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/mcenum";
  }

  @(namecollision):Directory{
    simpleName = "namecollision";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/namecollision";
  }

  @(newcomments):Directory{
    simpleName = "newcomments";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/newcomments";
  }

  @(python3):Directory{
    simpleName = "python3";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/python3";
  }

  @(semanticpredicate):Directory{
    simpleName = "semanticpredicate";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/semanticpredicate";
  }

  @(sourcepositions):Directory{
    simpleName = "sourcepositions";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/sourcepositions";
  }

  @(symboltable):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/symboltable";
  }

  @(visitor):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/visitor";
  }

  @(inheritance):Directory{
    simpleName = "inheritance";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/visitor/inheritance";
  }

  @(wiki):Directory{
    simpleName = "wiki";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/feature/wiki";
  }

  @(grammar):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar";
  }

  @(concepts):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts";
  }

  @(antlr!2):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts/antlr";
  }

  @(attributes):Directory{
    simpleName = "attributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts/attributes";
  }

  @(texteditor!2):Directory{
    simpleName = "texteditor";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts/texteditor";
  }

  @(texteditoringrammar):Directory{
    simpleName = "texteditoringrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts/texteditoringrammar";
  }

  @(visualoutline):Directory{
    simpleName = "visualoutline";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/concepts/visualoutline";
  }

  @(lexicals):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/lexicals";
  }

  @(literals):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/literals";
  }

  @(types):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/grammar/types";
  }

  @(lang):Directory{
    simpleName = "lang";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/mc/lang";
  }

  @(org):Directory{
    simpleName = "org";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org";
  }

  @(moflon):Directory{
    simpleName = "moflon";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org/moflon";
  }

  @(nest):Directory{
    simpleName = "nest";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org/nest";
  }

  @(commons):Directory{
    simpleName = "commons";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org/nest/commons";
  }

  @(nestml):Directory{
    simpleName = "nestml";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org/nest/nestml";
  }

  @(spl):Directory{
    simpleName = "spl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/grammars/org/nest/spl";
  }

  @(java!8):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java";
  }

  @(mc!2):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc";
  }

  @(embedding!4):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding";
  }

  @(composite):Directory{
    simpleName = "composite";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite";
  }

  @(_symboltable!3):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable";
  }

  @(CompositeLanguage.java):JavaSourceFile{
    simpleName = "CompositeLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/CompositeLanguage.java";
  }

  @(CompositeModelLoader.java):JavaSourceFile{
    simpleName = "CompositeModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/CompositeModelLoader.java";
  }

  @(CompositeSymbolTableCreator.java):JavaSourceFile{
    simpleName = "CompositeSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/CompositeSymbolTableCreator.java";
  }

  @(SimpleCompositeSymbolTableCreator.java):JavaSourceFile{
    simpleName = "SimpleCompositeSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/SimpleCompositeSymbolTableCreator.java";
  }

  @(Text2ContentAdapter.java):JavaSourceFile{
    simpleName = "Text2ContentAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/Text2ContentAdapter.java";
  }

  @(Text2ContentResolvingFilter.java):JavaSourceFile{
    simpleName = "Text2ContentResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/composite/_symboltable/Text2ContentResolvingFilter.java";
  }

  @(embedded):Directory{
    simpleName = "embedded";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/embedded";
  }

  @(_symboltable!4):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/embedded/_symboltable";
  }

  @(EmbeddedLanguage.java):JavaSourceFile{
    simpleName = "EmbeddedLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/embedded/_symboltable/EmbeddedLanguage.java";
  }

  @(EmbeddedSymbolTableCreator.java):JavaSourceFile{
    simpleName = "EmbeddedSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/embedded/_symboltable/EmbeddedSymbolTableCreator.java";
  }

  @(external!2):Directory{
    simpleName = "external";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external";
  }

  @(composite!2):Directory{
    simpleName = "composite";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite";
  }

  @(_symboltable!5):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable";
  }

  @(CompositeLanguage.java!2):JavaSourceFile{
    simpleName = "CompositeLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable/CompositeLanguage.java";
  }

  @(CompositeModelLoader.java!2):JavaSourceFile{
    simpleName = "CompositeModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable/CompositeModelLoader.java";
  }

  @(CompositeSymbolTableCreator.java!2):JavaSourceFile{
    simpleName = "CompositeSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable/CompositeSymbolTableCreator.java";
  }

  @(Text2ContentAdapter.java!2):JavaSourceFile{
    simpleName = "Text2ContentAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable/Text2ContentAdapter.java";
  }

  @(Text2ContentResolvingFilter.java!2):JavaSourceFile{
    simpleName = "Text2ContentResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/composite/_symboltable/Text2ContentResolvingFilter.java";
  }

  @(embedded!2):Directory{
    simpleName = "embedded";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/embedded";
  }

  @(_symboltable!6):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/embedded/_symboltable";
  }

  @(EmbeddedLanguage.java!2):JavaSourceFile{
    simpleName = "EmbeddedLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/embedded/_symboltable/EmbeddedLanguage.java";
  }

  @(EmbeddedSymbolTableCreator.java!2):JavaSourceFile{
    simpleName = "EmbeddedSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/embedded/_symboltable/EmbeddedSymbolTableCreator.java";
  }

  @(host):Directory{
    simpleName = "host";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host";
  }

  @(_symboltable!7):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable";
  }

  @(ContentKind.java):JavaSourceFile{
    simpleName = "ContentKind";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/ContentKind.java";
  }

  @(ContentResolvingFilter.java):JavaSourceFile{
    simpleName = "ContentResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/ContentResolvingFilter.java";
  }

  @(ContentSymbol.java):JavaSourceFile{
    simpleName = "ContentSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/ContentSymbol.java";
  }

  @(ContentSymbolReference.java):JavaSourceFile{
    simpleName = "ContentSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/ContentSymbolReference.java";
  }

  @(HostKind.java):JavaSourceFile{
    simpleName = "HostKind";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostKind.java";
  }

  @(HostLanguage.java):JavaSourceFile{
    simpleName = "HostLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostLanguage.java";
  }

  @(HostModelLoader.java):JavaSourceFile{
    simpleName = "HostModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostModelLoader.java";
  }

  @(HostModelNameCalculator.java):JavaSourceFile{
    simpleName = "HostModelNameCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostModelNameCalculator.java";
  }

  @(HostResolvingFilter.java):JavaSourceFile{
    simpleName = "HostResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostResolvingFilter.java";
  }

  @(HostSymbol.java):JavaSourceFile{
    simpleName = "HostSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostSymbol.java";
  }

  @(HostSymbolMill.java):JavaSourceFile{
    simpleName = "HostSymbolMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostSymbolMill.java";
  }

  @(HostSymbolReference.java):JavaSourceFile{
    simpleName = "HostSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostSymbolReference.java";
  }

  @(HostSymbolTableCreator.java):JavaSourceFile{
    simpleName = "HostSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/external/host/_symboltable/HostSymbolTableCreator.java";
  }

  @(host!2):Directory{
    simpleName = "host";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/host";
  }

  @(_symboltable!8):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/host/_symboltable";
  }

  @(HostLanguage.java!2):JavaSourceFile{
    simpleName = "HostLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/host/_symboltable/HostLanguage.java";
  }

  @(HostSymbolTableCreator.java!2):JavaSourceFile{
    simpleName = "HostSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/host/_symboltable/HostSymbolTableCreator.java";
  }

  @(transitive!2):Directory{
    simpleName = "transitive";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive";
  }

  @(transcomposite):Directory{
    simpleName = "transcomposite";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transcomposite";
  }

  @(_symboltable!9):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transcomposite/_symboltable";
  }

  @(TransCompositeLanguage.java):JavaSourceFile{
    simpleName = "TransCompositeLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transcomposite/_symboltable/TransCompositeLanguage.java";
  }

  @(TransCompositeModelLoader.java):JavaSourceFile{
    simpleName = "TransCompositeModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transcomposite/_symboltable/TransCompositeModelLoader.java";
  }

  @(TransCompositeSymbolTableCreator.java):JavaSourceFile{
    simpleName = "TransCompositeSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transcomposite/_symboltable/TransCompositeSymbolTableCreator.java";
  }

  @(transhost):Directory{
    simpleName = "transhost";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transhost";
  }

  @(_symboltable!10):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transhost/_symboltable";
  }

  @(TransHostLanguage.java):JavaSourceFile{
    simpleName = "TransHostLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transhost/_symboltable/TransHostLanguage.java";
  }

  @(TransHostModelLoader.java):JavaSourceFile{
    simpleName = "TransHostModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transhost/_symboltable/TransHostModelLoader.java";
  }

  @(TransHostSymbolTableCreator.java):JavaSourceFile{
    simpleName = "TransHostSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/embedding/transitive/transhost/_symboltable/TransHostSymbolTableCreator.java";
  }

  @(examples!2):Directory{
    simpleName = "examples";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples";
  }

  @(automaton!7):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/automaton";
  }

  @(automaton!8):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/automaton/automaton";
  }

  @(_symboltable!11):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/automaton/automaton/_symboltable";
  }

  @(AutomatonLanguage.java!2):JavaSourceFile{
    simpleName = "AutomatonLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/automaton/automaton/_symboltable/AutomatonLanguage.java";
  }

  @(AutomatonSymbolTableCreator.java):JavaSourceFile{
    simpleName = "AutomatonSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/automaton/automaton/_symboltable/AutomatonSymbolTableCreator.java";
  }

  @(coord):Directory{
    simpleName = "coord";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord";
  }

  @(cartesian!2):Directory{
    simpleName = "cartesian";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/cartesian";
  }

  @(prettyprint):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/cartesian/prettyprint";
  }

  @(CartesianPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "CartesianPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/cartesian/prettyprint/CartesianPrettyPrinterConcreteVisitor.java";
  }

  @(polar!2):Directory{
    simpleName = "polar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/polar";
  }

  @(prettyprint!2):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/polar/prettyprint";
  }

  @(PolarPrettyPrinterConcreteVisitor.java):JavaSourceFile{
    simpleName = "PolarPrettyPrinterConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/polar/prettyprint/PolarPrettyPrinterConcreteVisitor.java";
  }

  @(transform):Directory{
    simpleName = "transform";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/transform";
  }

  @(CartesianToPolar.java):JavaSourceFile{
    simpleName = "CartesianToPolar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/transform/CartesianToPolar.java";
  }

  @(Mirror.java):JavaSourceFile{
    simpleName = "Mirror";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/examples/coord/transform/Mirror.java";
  }

  @(feature!2):Directory{
    simpleName = "feature";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature";
  }

  @(hwc!2):Directory{
    simpleName = "hwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc";
  }

  @(statechartdsl):Directory{
    simpleName = "statechartdsl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl";
  }

  @(_ast!5):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast";
  }

  @(ASTState.java!3):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/ASTState.java";
  }

  @(ASTStateBuilder.java!3):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/ASTStateBuilder.java";
  }

  @(ASTStatechart.java):JavaSourceFile{
    simpleName = "ASTStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/ASTStatechart.java";
  }

  @(ASTStatechartDSLNode.java):JavaSourceFile{
    simpleName = "ASTStatechartDSLNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/ASTStatechartDSLNode.java";
  }

  @(MyTransitionBuilder.java):JavaSourceFile{
    simpleName = "MyTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/MyTransitionBuilder.java";
  }

  @(StatechartDSLMill.java):JavaSourceFile{
    simpleName = "StatechartDSLMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/StatechartDSLMill.java";
  }

  @(StatechartDSLNodeFactory.java):JavaSourceFile{
    simpleName = "StatechartDSLNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/statechartdsl/_ast/StatechartDSLNodeFactory.java";
  }

  @(tagging1):Directory{
    simpleName = "tagging1";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging1";
  }

  @(_ast!6):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging1/_ast";
  }

  @(ASTTag.java):JavaSourceFile{
    simpleName = "ASTTag";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging1/_ast/ASTTag.java";
  }

  @(ASTTaggingUnit.java):JavaSourceFile{
    simpleName = "ASTTaggingUnit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging1/_ast/ASTTaggingUnit.java";
  }

  @(tagging2):Directory{
    simpleName = "tagging2";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging2";
  }

  @(_ast!7):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging2/_ast";
  }

  @(ASTScope.java):JavaSourceFile{
    simpleName = "ASTScope";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging2/_ast/ASTScope.java";
  }

  @(ASTTagElement.java):JavaSourceFile{
    simpleName = "ASTTagElement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging2/_ast/ASTTagElement.java";
  }

  @(ASTTaggingUnit.java!2):JavaSourceFile{
    simpleName = "ASTTaggingUnit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/hwc/tagging2/_ast/ASTTaggingUnit.java";
  }

  @(visitor!2):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/visitor";
  }

  @(SubConcreteVisitor.java):JavaSourceFile{
    simpleName = "SubConcreteVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/feature/visitor/SubConcreteVisitor.java";
  }

  @(grammars!2):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/java/mc/grammars";
  }

  @(TestGrammarPrinter.java):JavaSourceFile{
    simpleName = "TestGrammarPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/main/java/mc/grammars/TestGrammarPrinter.java";
  }

  @(resources!6):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/main/resources";
  }

  @(test!2):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test";
  }

  @(java!9):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java";
  }

  @(mc!3):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc";
  }

  @(ast):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/ast";
  }

  @(ASTBuilderTest.java):JavaSourceFile{
    simpleName = "ASTBuilderTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/ast/ASTBuilderTest.java";
  }

  @(ConcreteVisitorTest.java):JavaSourceFile{
    simpleName = "ConcreteVisitorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/ast/ConcreteVisitorTest.java";
  }

  @(TestVisitor.java):JavaSourceFile{
    simpleName = "TestVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/ast/TestVisitor.java";
  }

  @(embedding!5):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding";
  }

  @(CompositeTest.java):JavaSourceFile{
    simpleName = "CompositeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/CompositeTest.java";
  }

  @(EmbeddedTest.java):JavaSourceFile{
    simpleName = "EmbeddedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/EmbeddedTest.java";
  }

  @(external!3):Directory{
    simpleName = "external";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/external";
  }

  @(CompositeTest.java!2):JavaSourceFile{
    simpleName = "CompositeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/external/CompositeTest.java";
  }

  @(EmbeddedTest.java!2):JavaSourceFile{
    simpleName = "EmbeddedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/external/EmbeddedTest.java";
  }

  @(HostTest.java):JavaSourceFile{
    simpleName = "HostTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/external/HostTest.java";
  }

  @(HostTest.java!2):JavaSourceFile{
    simpleName = "HostTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/HostTest.java";
  }

  @(transitive!3):Directory{
    simpleName = "transitive";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/transitive";
  }

  @(TransCompositeTest.java):JavaSourceFile{
    simpleName = "TransCompositeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/transitive/TransCompositeTest.java";
  }

  @(TransHostTest.java):JavaSourceFile{
    simpleName = "TransHostTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/embedding/transitive/TransHostTest.java";
  }

  @(emf!3):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf";
  }

  @(emethods):Directory{
    simpleName = "emethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/emethods";
  }

  @(EGeterSeterTest.java):JavaSourceFile{
    simpleName = "EGeterSeterTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/emethods/EGeterSeterTest.java";
  }

  @(FeatureIDConversionTest.java):JavaSourceFile{
    simpleName = "FeatureIDConversionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/emethods/FeatureIDConversionTest.java";
  }

  @(eobjects):Directory{
    simpleName = "eobjects";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/eobjects";
  }

  @(CreateEObjectsTest.java):JavaSourceFile{
    simpleName = "CreateEObjectsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/eobjects/CreateEObjectsTest.java";
  }

  @(epackage):Directory{
    simpleName = "epackage";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/epackage";
  }

  @(IDTest.java):JavaSourceFile{
    simpleName = "IDTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/epackage/IDTest.java";
  }

  @(MetaObjectTest.java):JavaSourceFile{
    simpleName = "MetaObjectTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/epackage/MetaObjectTest.java";
  }

  @(etools):Directory{
    simpleName = "etools";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/etools";
  }

  @(EcoreUtilTest.java):JavaSourceFile{
    simpleName = "EcoreUtilTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/etools/EcoreUtilTest.java";
  }

  @(EmfDiffTest.java):JavaSourceFile{
    simpleName = "EmfDiffTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/etools/EmfDiffTest.java";
  }

  @(modularity):Directory{
    simpleName = "modularity";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/modularity";
  }

  @(ExternalTest.java):JavaSourceFile{
    simpleName = "ExternalTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/modularity/ExternalTest.java";
  }

  @(serialization):Directory{
    simpleName = "serialization";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/serialization";
  }

  @(ASTInstanceSerialDeserialTest.java):JavaSourceFile{
    simpleName = "ASTInstanceSerialDeserialTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/serialization/ASTInstanceSerialDeserialTest.java";
  }

  @(ASTModelSerialDeserialTest.java):JavaSourceFile{
    simpleName = "ASTModelSerialDeserialTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/emf/serialization/ASTModelSerialDeserialTest.java";
  }

  @(examples!3):Directory{
    simpleName = "examples";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples";
  }

  @(automaton!9):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/automaton";
  }

  @(TestAutomaton.java):JavaSourceFile{
    simpleName = "TestAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/automaton/TestAutomaton.java";
  }

  @(coord!2):Directory{
    simpleName = "coord";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/coord";
  }

  @(TestCoordinates.java):JavaSourceFile{
    simpleName = "TestCoordinates";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/coord/TestCoordinates.java";
  }

  @(lwc!2):Directory{
    simpleName = "lwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/lwc";
  }

  @(TestEDL.java):JavaSourceFile{
    simpleName = "TestEDL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/lwc/TestEDL.java";
  }

  @(TestODL.java):JavaSourceFile{
    simpleName = "TestODL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/examples/lwc/TestODL.java";
  }

  @(feature!3):Directory{
    simpleName = "feature";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature";
  }

  @(abc!2):Directory{
    simpleName = "abc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abc";
  }

  @(EmbedTest.java):JavaSourceFile{
    simpleName = "EmbedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abc/EmbedTest.java";
  }

  @(abstractgrammar!2):Directory{
    simpleName = "abstractgrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abstractgrammar";
  }

  @(AbstractGrammarTest.java):JavaSourceFile{
    simpleName = "AbstractGrammarTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abstractgrammar/AbstractGrammarTest.java";
  }

  @(abstractprod!2):Directory{
    simpleName = "abstractprod";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abstractprod";
  }

  @(AbstractProdTest.java):JavaSourceFile{
    simpleName = "AbstractProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/abstractprod/AbstractProdTest.java";
  }

  @(addkeywords!2):Directory{
    simpleName = "addkeywords";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/addkeywords";
  }

  @(AddKeywordsTest.java):JavaSourceFile{
    simpleName = "AddKeywordsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/addkeywords/AddKeywordsTest.java";
  }

  @(ast!2):Pkg{
    simpleName = "de.monticore.symboltable.mocks.languages.statechart";
    nameExtension = " ";
    fullName = "de.monticore.symboltable.mocks.languages.statechart.asts";
  }

  @(GeneratedAstClassesTest.java):JavaSourceFile{
    simpleName = "GeneratedAstClassesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/ast/GeneratedAstClassesTest.java";
  }

  @(ParserForInterfaceTest.java):JavaSourceFile{
    simpleName = "ParserForInterfaceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/ast/ParserForInterfaceTest.java";
  }

  @(ParserTest.java):JavaSourceFile{
    simpleName = "ParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/ast/ParserTest.java";
  }

  @(astident!2):Directory{
    simpleName = "astident";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/astident";
  }

  @(TestASTIdent.java):JavaSourceFile{
    simpleName = "TestASTIdent";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/astident/TestASTIdent.java";
  }

  @(astlist):Directory{
    simpleName = "astlist";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/astlist";
  }

  @(TestLists.java):JavaSourceFile{
    simpleName = "TestLists";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/astlist/TestLists.java";
  }

  @(aststring!2):Directory{
    simpleName = "aststring";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/aststring";
  }

  @(TestASTStringParser.java):JavaSourceFile{
    simpleName = "TestASTStringParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/aststring/TestASTStringParser.java";
  }

  @(automaton!10):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/automaton";
  }

  @(SubclassParsingTest.java):JavaSourceFile{
    simpleName = "SubclassParsingTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/automaton/SubclassParsingTest.java";
  }

  @(classgenwithingrammar!2):Directory{
    simpleName = "classgenwithingrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/classgenwithingrammar";
  }

  @(ParserTest.java!2):JavaSourceFile{
    simpleName = "ParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/classgenwithingrammar/ParserTest.java";
  }

  @(cocochecker!2):Directory{
    simpleName = "cocochecker";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/cocochecker";
  }

  @(CoCoCheckerTest.java):JavaSourceFile{
    simpleName = "CoCoCheckerTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/cocochecker/CoCoCheckerTest.java";
  }

  @(comments!2):Directory{
    simpleName = "comments";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/comments";
  }

  @(CommentsTest.java):JavaSourceFile{
    simpleName = "CommentsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/comments/CommentsTest.java";
  }

  @(CommentTest.java):JavaSourceFile{
    simpleName = "CommentTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/comments/CommentTest.java";
  }

  @(CommentTypesTest.java):JavaSourceFile{
    simpleName = "CommentTypesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/comments/CommentTypesTest.java";
  }

  @(compilationunit!2):Directory{
    simpleName = "compilationunit";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/compilationunit";
  }

  @(ParserTest.java!3):JavaSourceFile{
    simpleName = "ParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/compilationunit/ParserTest.java";
  }

  @(constantsshortform!2):Directory{
    simpleName = "constantsshortform";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/constantsshortform";
  }

  @(ConstantsShortFormTest.java):JavaSourceFile{
    simpleName = "ConstantsShortFormTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/constantsshortform/ConstantsShortFormTest.java";
  }

  @(embedding!6):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/embedding";
  }

  @(EmbeddingTest.java):JavaSourceFile{
    simpleName = "EmbeddingTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/embedding/EmbeddingTest.java";
  }

  @(EmbedTest.java!2):JavaSourceFile{
    simpleName = "EmbedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/embedding/EmbedTest.java";
  }

  @(expression!2):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression";
  }

  @(Expression2Test.java):JavaSourceFile{
    simpleName = "Expression2Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression/Expression2Test.java";
  }

  @(Expression3Test.java):JavaSourceFile{
    simpleName = "Expression3Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression/Expression3Test.java";
  }

  @(Expression4Test.java):JavaSourceFile{
    simpleName = "Expression4Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression/Expression4Test.java";
  }

  @(Expression5Test.java):JavaSourceFile{
    simpleName = "Expression5Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression/Expression5Test.java";
  }

  @(ExpressionTest.java):JavaSourceFile{
    simpleName = "ExpressionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/expression/ExpressionTest.java";
  }

  @(followoption!2):Directory{
    simpleName = "followoption";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/followoption";
  }

  @(FollowOptionTest.java):JavaSourceFile{
    simpleName = "FollowOptionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/followoption/FollowOptionTest.java";
  }

  @(grammarinherit!2):Directory{
    simpleName = "grammarinherit";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/grammarinherit";
  }

  @(TestGrammarInherit.java):JavaSourceFile{
    simpleName = "TestGrammarInherit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/grammarinherit/TestGrammarInherit.java";
  }

  @(hwc!3):Directory{
    simpleName = "hwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/hwc";
  }

  @(BuildersTest.java):JavaSourceFile{
    simpleName = "BuildersTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/hwc/BuildersTest.java";
  }

  @(HWAstTest.java):JavaSourceFile{
    simpleName = "HWAstTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/hwc/HWAstTest.java";
  }

  @(inheritence!2):Directory{
    simpleName = "inheritence";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/inheritence";
  }

  @(CloneInheritenceTest.java):JavaSourceFile{
    simpleName = "CloneInheritenceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/inheritence/CloneInheritenceTest.java";
  }

  @(InheritenceTest.java):JavaSourceFile{
    simpleName = "InheritenceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/inheritence/InheritenceTest.java";
  }

  @(interfaces!2):Directory{
    simpleName = "interfaces";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/interfaces";
  }

  @(InterfacesTest.java):JavaSourceFile{
    simpleName = "InterfacesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/interfaces/InterfacesTest.java";
  }

  @(javasql!3):Directory{
    simpleName = "javasql";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/javasql";
  }

  @(JavaSQLTest.java):JavaSourceFile{
    simpleName = "JavaSQLTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/javasql/JavaSQLTest.java";
  }

  @(lexerformat!2):Directory{
    simpleName = "lexerformat";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/lexerformat";
  }

  @(KleenePlusTest.java):JavaSourceFile{
    simpleName = "KleenePlusTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/lexerformat/KleenePlusTest.java";
  }

  @(LexerTest.java):JavaSourceFile{
    simpleName = "LexerTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/lexerformat/LexerTest.java";
  }

  @(LexRulesOrderTest.java):JavaSourceFile{
    simpleName = "LexRulesOrderTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/lexerformat/LexRulesOrderTest.java";
  }

  @(linepreprocess!2):Directory{
    simpleName = "linepreprocess";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/linepreprocess";
  }

  @(embedding!7):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/linepreprocess/embedding";
  }

  @(AutomatonOverallParserTest.java):JavaSourceFile{
    simpleName = "AutomatonOverallParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/linepreprocess/embedding/AutomatonOverallParserTest.java";
  }

  @(listrule!2):Directory{
    simpleName = "listrule";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/listrule";
  }

  @(ListRuleTest.java):JavaSourceFile{
    simpleName = "ListRuleTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/listrule/ListRuleTest.java";
  }

  @(mcenum!2):Directory{
    simpleName = "mcenum";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/mcenum";
  }

  @(EnumTest.java):JavaSourceFile{
    simpleName = "EnumTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/mcenum/EnumTest.java";
  }

  @(options):Directory{
    simpleName = "options";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/options";
  }

  @(MultipleOptionTest.java):JavaSourceFile{
    simpleName = "MultipleOptionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/options/MultipleOptionTest.java";
  }

  @(semanticpredicate!2):Directory{
    simpleName = "semanticpredicate";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/semanticpredicate";
  }

  @(SemPredWithInterfaceParserTest.java):JavaSourceFile{
    simpleName = "SemPredWithInterfaceParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/semanticpredicate/SemPredWithInterfaceParserTest.java";
  }

  @(sourcepositions!2):Directory{
    simpleName = "sourcepositions";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/sourcepositions";
  }

  @(ExpressionSourcePositionsTest.java):JavaSourceFile{
    simpleName = "ExpressionSourcePositionsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/sourcepositions/ExpressionSourcePositionsTest.java";
  }

  @(statechart):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/statechart";
  }

  @(SCTest.java):JavaSourceFile{
    simpleName = "SCTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/statechart/SCTest.java";
  }

  @(symboltable!2):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable";
  }

  @(AutomatonWithSTInfo1Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo1Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo1Test.java";
  }

  @(AutomatonWithSTInfo2Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo2Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo2Test.java";
  }

  @(AutomatonWithSTInfo3Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo3Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo3Test.java";
  }

  @(AutomatonWithSTInfo4Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo4Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo4Test.java";
  }

  @(AutomatonWithSTInfo5Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo5Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo5Test.java";
  }

  @(AutomatonWithSTInfo6Test.java):JavaSourceFile{
    simpleName = "AutomatonWithSTInfo6Test";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/symboltable/AutomatonWithSTInfo6Test.java";
  }

  @(visitor!3):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor";
  }

  @(inheritance!2):Directory{
    simpleName = "inheritance";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance";
  }

  @(delegator):Directory{
    simpleName = "delegator";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator";
  }

  @(CommonVisitorTest.java):JavaSourceFile{
    simpleName = "CommonVisitorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/CommonVisitorTest.java";
  }

  @(ComposeSimpleAndInheritanceTest.java):JavaSourceFile{
    simpleName = "ComposeSimpleAndInheritanceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/ComposeSimpleAndInheritanceTest.java";
  }

  @(ComposeSimpleTest.java):JavaSourceFile{
    simpleName = "ComposeSimpleTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/ComposeSimpleTest.java";
  }

  @(InheritanceBVisitor.java):JavaSourceFile{
    simpleName = "InheritanceBVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/InheritanceBVisitor.java";
  }

  @(InheritanceCVisitor.java):JavaSourceFile{
    simpleName = "InheritanceCVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/InheritanceCVisitor.java";
  }

  @(MissingRealThisAVisitor.java):JavaSourceFile{
    simpleName = "MissingRealThisAVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/MissingRealThisAVisitor.java";
  }

  @(SimpleAVisitor.java):JavaSourceFile{
    simpleName = "SimpleAVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/SimpleAVisitor.java";
  }

  @(SimpleBVisitor.java):JavaSourceFile{
    simpleName = "SimpleBVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/SimpleBVisitor.java";
  }

  @(SimpleCVisitor.java):JavaSourceFile{
    simpleName = "SimpleCVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/delegator/SimpleCVisitor.java";
  }

  @(VisitorTest.java):JavaSourceFile{
    simpleName = "VisitorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/inheritance/VisitorTest.java";
  }

  @(VisitorTest.java!2):JavaSourceFile{
    simpleName = "VisitorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/visitor/VisitorTest.java";
  }

  @(wiki!2):Directory{
    simpleName = "wiki";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/wiki";
  }

  @(WikiTest.java):JavaSourceFile{
    simpleName = "WikiTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/feature/wiki/WikiTest.java";
  }

  @(GeneratorIntegrationsTest.java):JavaSourceFile{
    simpleName = "GeneratorIntegrationsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/GeneratorIntegrationsTest.java";
  }

  @(grammar!2):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/mc/grammar";
  }

  @(MCParserTest.java):JavaSourceFile{
    simpleName = "MCParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/mc/grammar/MCParserTest.java";
  }

  @(testinputs):Directory{
    simpleName = "testinputs";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/java/testinputs";
  }

  @(GrammarsForTestsProvider.java):JavaSourceFile{
    simpleName = "GrammarsForTestsProvider";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test/java/testinputs/GrammarsForTestsProvider.java";
  }

  @(resources!7):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources";
  }

  @(examples!4):Directory{
    simpleName = "examples";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples";
  }

  @(automaton!11):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/automaton";
  }

  @(coord!3):Directory{
    simpleName = "coord";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/coord";
  }

  @(embedding!8):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/embedding";
  }

  @(fautomaton!2):Directory{
    simpleName = "fautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/fautomaton";
  }

  @(fautomatondoc):Directory{
    simpleName = "fautomatondoc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/fautomatondoc";
  }

  @(lwc!3):Directory{
    simpleName = "lwc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/lwc";
  }

  @(edl!2):Directory{
    simpleName = "edl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/lwc/edl";
  }

  @(odl!2):Directory{
    simpleName = "odl";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/lwc/odl";
  }

  @(msc!2):Directory{
    simpleName = "msc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/msc";
  }

  @(composition):Directory{
    simpleName = "composition";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/msc/composition";
  }

  @(petrinet!2):Directory{
    simpleName = "petrinet";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/petrinet";
  }

  @(robot!2):Directory{
    simpleName = "robot";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/robot";
  }

  @(basicmoves):Directory{
    simpleName = "basicmoves";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/robot/basicmoves";
  }

  @(statechart!2):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/examples/statechart";
  }

  @(mc!4):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc";
  }

  @(embedding!9):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc/embedding";
  }

  @(transitive!4):Directory{
    simpleName = "transitive";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc/embedding/transitive";
  }

  @(emf!4):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc/emf";
  }

  @(diff):Directory{
    simpleName = "diff";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc/emf/diff";
  }

  @(grammar!3):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test/resources/mc/grammar";
  }

  @(test_ast):Directory{
    simpleName = "test_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast";
  }

  @(java!10):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast/java";
  }

  @(mc!5):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc";
  }

  @(feature!4):Directory{
    simpleName = "feature";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc/feature";
  }

  @(ast!3):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc/feature/ast";
  }

  @(ASTTest.java):JavaSourceFile{
    simpleName = "ASTTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc/feature/ast/ASTTest.java";
  }

  @(astlist!2):Directory{
    simpleName = "astlist";
    nameExtension = "";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc/feature/astlist";
  }

  @(CollectionTest.java):JavaSourceFile{
    simpleName = "CollectionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/it/src/test_ast/java/mc/feature/astlist/CollectionTest.java";
  }

  @(src!7):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-generator/src";
  }

  @(main!7):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main";
  }

  @(grammars!3):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars";
  }

  @(de!12):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars/de";
  }

  @(monticore!12):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars/de/monticore";
  }

  @(grammar!4):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars/de/monticore/grammar";
  }

  @(concepts!2):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars/de/monticore/grammar/concepts";
  }

  @(antlr!3):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/grammars/de/monticore/grammar/concepts/antlr";
  }

  @(java!11):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java";
  }

  @(de!13):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de";
  }

  @(monticore!13):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore";
  }

  @(codegen):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen";
  }

  @(cd2java):Directory{
    simpleName = "cd2java";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java";
  }

  @(ast!4):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast";
  }

  @(AstAdditionalAttributes.java):JavaSourceFile{
    simpleName = "AstAdditionalAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/AstAdditionalAttributes.java";
  }

  @(AstAdditionalMethods.java):JavaSourceFile{
    simpleName = "AstAdditionalMethods";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/AstAdditionalMethods.java";
  }

  @(AstGenerator.java):JavaSourceFile{
    simpleName = "AstGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/AstGenerator.java";
  }

  @(AstGeneratorHelper.java):JavaSourceFile{
    simpleName = "AstGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/AstGeneratorHelper.java";
  }

  @(AstListMethods.java):JavaSourceFile{
    simpleName = "AstListMethods";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/AstListMethods.java";
  }

  @(CdDecorator.java):JavaSourceFile{
    simpleName = "CdDecorator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast/CdDecorator.java";
  }

  @(ast_emf):Directory{
    simpleName = "ast_emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast_emf";
  }

  @(AstEmfGeneratorHelper.java):JavaSourceFile{
    simpleName = "AstEmfGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast_emf/AstEmfGeneratorHelper.java";
  }

  @(CdEmfDecorator.java):JavaSourceFile{
    simpleName = "CdEmfDecorator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast_emf/CdEmfDecorator.java";
  }

  @(EmfAttribute.java):JavaSourceFile{
    simpleName = "EmfAttribute";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/ast_emf/EmfAttribute.java";
  }

  @(cocos):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/cocos";
  }

  @(CoCoGenerator.java):JavaSourceFile{
    simpleName = "CoCoGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/cocos/CoCoGenerator.java";
  }

  @(CoCoGeneratorHelper.java):JavaSourceFile{
    simpleName = "CoCoGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/cocos/CoCoGeneratorHelper.java";
  }

  @(od):Directory{
    simpleName = "od";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/od";
  }

  @(ODGenerator.java):JavaSourceFile{
    simpleName = "ODGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/od/ODGenerator.java";
  }

  @(types!2):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/types";
  }

  @(TypeResolverGenerator.java):JavaSourceFile{
    simpleName = "TypeResolverGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/types/TypeResolverGenerator.java";
  }

  @(TypeResolverGeneratorHelper.java):JavaSourceFile{
    simpleName = "TypeResolverGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/types/TypeResolverGeneratorHelper.java";
  }

  @(visitor!4):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/visitor";
  }

  @(VisitorGenerator.java):JavaSourceFile{
    simpleName = "VisitorGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/visitor/VisitorGenerator.java";
  }

  @(VisitorGeneratorHelper.java):JavaSourceFile{
    simpleName = "VisitorGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/cd2java/visitor/VisitorGeneratorHelper.java";
  }

  @(GeneratorHelper.java):JavaSourceFile{
    simpleName = "GeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/GeneratorHelper.java";
  }

  @(mc2cd):Directory{
    simpleName = "mc2cd";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd";
  }

  @(AttributeCategory.java):JavaSourceFile{
    simpleName = "AttributeCategory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/AttributeCategory.java";
  }

  @(manipul):Directory{
    simpleName = "manipul";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul";
  }

  @(AddAttributesOfExtendedInterfacesManipulation.java):JavaSourceFile{
    simpleName = "AddAttributesOfExtendedInterfacesManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/AddAttributesOfExtendedInterfacesManipulation.java";
  }

  @(BaseInterfaceAddingManipulation.java):JavaSourceFile{
    simpleName = "BaseInterfaceAddingManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/BaseInterfaceAddingManipulation.java";
  }

  @(CDManipulation.java):JavaSourceFile{
    simpleName = "CDManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/CDManipulation.java";
  }

  @(JavaAndCdConformNameManipulation.java):JavaSourceFile{
    simpleName = "JavaAndCdConformNameManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/JavaAndCdConformNameManipulation.java";
  }

  @(ListInitializingManipulation.java):JavaSourceFile{
    simpleName = "ListInitializingManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/ListInitializingManipulation.java";
  }

  @(RemoveRedundantAttributesManipulation.java):JavaSourceFile{
    simpleName = "RemoveRedundantAttributesManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/RemoveRedundantAttributesManipulation.java";
  }

  @(RemoveRedundantSupertypesManipulation.java):JavaSourceFile{
    simpleName = "RemoveRedundantSupertypesManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/RemoveRedundantSupertypesManipulation.java";
  }

  @(VisibilityManipulation.java):JavaSourceFile{
    simpleName = "VisibilityManipulation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/manipul/VisibilityManipulation.java";
  }

  @(MC2CDStereotypes.java):JavaSourceFile{
    simpleName = "MC2CDStereotypes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/MC2CDStereotypes.java";
  }

  @(MC2CDTransformation.java):JavaSourceFile{
    simpleName = "MC2CDTransformation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/MC2CDTransformation.java";
  }

  @(MCGrammarSymbolTableHelper.java):JavaSourceFile{
    simpleName = "MCGrammarSymbolTableHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/MCGrammarSymbolTableHelper.java";
  }

  @(TransformationHelper.java):JavaSourceFile{
    simpleName = "TransformationHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/TransformationHelper.java";
  }

  @(transl):Directory{
    simpleName = "transl";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl";
  }

  @(AbstractProdModifierTranslation.java):JavaSourceFile{
    simpleName = "AbstractProdModifierTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/AbstractProdModifierTranslation.java";
  }

  @(ASTRuleInheritanceTranslation.java):JavaSourceFile{
    simpleName = "ASTRuleInheritanceTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ASTRuleInheritanceTranslation.java";
  }

  @(ConstantsTranslation.java):JavaSourceFile{
    simpleName = "ConstantsTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ConstantsTranslation.java";
  }

  @(ConstantTypeTranslation.java):JavaSourceFile{
    simpleName = "ConstantTypeTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ConstantTypeTranslation.java";
  }

  @(CreateConstantAttributeTranslation.java):JavaSourceFile{
    simpleName = "CreateConstantAttributeTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/CreateConstantAttributeTranslation.java";
  }

  @(creation):Directory{
    simpleName = "creation";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation";
  }

  @(AbstractProdsToCDClasses.java):JavaSourceFile{
    simpleName = "AbstractProdsToCDClasses";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/AbstractProdsToCDClasses.java";
  }

  @(ASTRulesToCDClassesAndCDInterfaces.java):JavaSourceFile{
    simpleName = "ASTRulesToCDClassesAndCDInterfaces";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/ASTRulesToCDClassesAndCDInterfaces.java";
  }

  @(AttributeInASTsToCDAttributes.java):JavaSourceFile{
    simpleName = "AttributeInASTsToCDAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/AttributeInASTsToCDAttributes.java";
  }

  @(CDASTCreator.java):JavaSourceFile{
    simpleName = "CDASTCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/CDASTCreator.java";
  }

  @(ClassProdsToCDClasses.java):JavaSourceFile{
    simpleName = "ClassProdsToCDClasses";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/ClassProdsToCDClasses.java";
  }

  @(EnumProdsToCDEnums.java):JavaSourceFile{
    simpleName = "EnumProdsToCDEnums";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/EnumProdsToCDEnums.java";
  }

  @(ExternalProdsToCDInterfaces.java):JavaSourceFile{
    simpleName = "ExternalProdsToCDInterfaces";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/ExternalProdsToCDInterfaces.java";
  }

  @(GrammarToCDDefinition.java):JavaSourceFile{
    simpleName = "GrammarToCDDefinition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/GrammarToCDDefinition.java";
  }

  @(InterfaceProdsToCDInterfaces.java):JavaSourceFile{
    simpleName = "InterfaceProdsToCDInterfaces";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/InterfaceProdsToCDInterfaces.java";
  }

  @(NonTerminalsToCDAttributes.java):JavaSourceFile{
    simpleName = "NonTerminalsToCDAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/NonTerminalsToCDAttributes.java";
  }

  @(TerminalsToCDAttributes.java):JavaSourceFile{
    simpleName = "TerminalsToCDAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/creation/TerminalsToCDAttributes.java";
  }

  @(EnumTranslation.java):JavaSourceFile{
    simpleName = "EnumTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/EnumTranslation.java";
  }

  @(ExtendsTranslation.java):JavaSourceFile{
    simpleName = "ExtendsTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ExtendsTranslation.java";
  }

  @(ExternalImplementationTranslation.java):JavaSourceFile{
    simpleName = "ExternalImplementationTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ExternalImplementationTranslation.java";
  }

  @(ImplementsTranslation.java):JavaSourceFile{
    simpleName = "ImplementsTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ImplementsTranslation.java";
  }

  @(InheritedAttributesTranslation.java):JavaSourceFile{
    simpleName = "InheritedAttributesTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/InheritedAttributesTranslation.java";
  }

  @(MC2CDTranslation.java):JavaSourceFile{
    simpleName = "MC2CDTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/MC2CDTranslation.java";
  }

  @(MethodTranslation.java):JavaSourceFile{
    simpleName = "MethodTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/MethodTranslation.java";
  }

  @(MultiplicityTranslation.java):JavaSourceFile{
    simpleName = "MultiplicityTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/MultiplicityTranslation.java";
  }

  @(NameTranslation.java):JavaSourceFile{
    simpleName = "NameTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/NameTranslation.java";
  }

  @(NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.java):JavaSourceFile{
    simpleName = "NonTerminalsWithSymbolReferenceToCDAttributeStereotypes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.java";
  }

  @(OverridingClassProdTranslation.java):JavaSourceFile{
    simpleName = "OverridingClassProdTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/OverridingClassProdTranslation.java";
  }

  @(PackageTranslation.java):JavaSourceFile{
    simpleName = "PackageTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/PackageTranslation.java";
  }

  @(ReferenceTypeTranslation.java):JavaSourceFile{
    simpleName = "ReferenceTypeTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/ReferenceTypeTranslation.java";
  }

  @(RemoveOverriddenAttributesTranslation.java):JavaSourceFile{
    simpleName = "RemoveOverriddenAttributesTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/RemoveOverriddenAttributesTranslation.java";
  }

  @(StarImportSuperGrammarTranslation.java):JavaSourceFile{
    simpleName = "StarImportSuperGrammarTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/mc2cd/transl/StarImportSuperGrammarTranslation.java";
  }

  @(parser):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser";
  }

  @(antlr!4):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr";
  }

  @(AntlrTool.java):JavaSourceFile{
    simpleName = "AntlrTool";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr/AntlrTool.java";
  }

  @(ASTConstructionActions.java):JavaSourceFile{
    simpleName = "ASTConstructionActions";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr/ASTConstructionActions.java";
  }

  @(AttributeCardinalityConstraint.java):JavaSourceFile{
    simpleName = "AttributeCardinalityConstraint";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr/AttributeCardinalityConstraint.java";
  }

  @(Grammar2Antlr.java):JavaSourceFile{
    simpleName = "Grammar2Antlr";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr/Grammar2Antlr.java";
  }

  @(SourcePositionActions.java):JavaSourceFile{
    simpleName = "SourcePositionActions";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/antlr/SourcePositionActions.java";
  }

  @(Languages.java):JavaSourceFile{
    simpleName = "Languages";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/Languages.java";
  }

  @(ParserGenerator.java):JavaSourceFile{
    simpleName = "ParserGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/ParserGenerator.java";
  }

  @(ParserGeneratorHelper.java):JavaSourceFile{
    simpleName = "ParserGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/parser/ParserGeneratorHelper.java";
  }

  @(symboltable!3):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable";
  }

  @(CommonModelingLanguageGenerator.java):JavaSourceFile{
    simpleName = "CommonModelingLanguageGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonModelingLanguageGenerator.java";
  }

  @(CommonModelLoaderGenerator.java):JavaSourceFile{
    simpleName = "CommonModelLoaderGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonModelLoaderGenerator.java";
  }

  @(CommonModelNameCalculatorGenerator.java):JavaSourceFile{
    simpleName = "CommonModelNameCalculatorGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonModelNameCalculatorGenerator.java";
  }

  @(CommonResolvingFilterGenerator.java):JavaSourceFile{
    simpleName = "CommonResolvingFilterGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonResolvingFilterGenerator.java";
  }

  @(CommonScopeSpanningSymbolGenerator.java):JavaSourceFile{
    simpleName = "CommonScopeSpanningSymbolGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonScopeSpanningSymbolGenerator.java";
  }

  @(CommonSymbolGenerator.java):JavaSourceFile{
    simpleName = "CommonSymbolGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonSymbolGenerator.java";
  }

  @(CommonSymbolKindGenerator.java):JavaSourceFile{
    simpleName = "CommonSymbolKindGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonSymbolKindGenerator.java";
  }

  @(CommonSymbolMillGenerator.java):JavaSourceFile{
    simpleName = "CommonSymbolMillGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonSymbolMillGenerator.java";
  }

  @(CommonSymbolReferenceGenerator.java):JavaSourceFile{
    simpleName = "CommonSymbolReferenceGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonSymbolReferenceGenerator.java";
  }

  @(CommonSymbolTableCreatorGenerator.java):JavaSourceFile{
    simpleName = "CommonSymbolTableCreatorGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/CommonSymbolTableCreatorGenerator.java";
  }

  @(ModelingLanguageGenerator.java):JavaSourceFile{
    simpleName = "ModelingLanguageGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/ModelingLanguageGenerator.java";
  }

  @(ModelLoaderGenerator.java):JavaSourceFile{
    simpleName = "ModelLoaderGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/ModelLoaderGenerator.java";
  }

  @(ModelNameCalculatorGenerator.java):JavaSourceFile{
    simpleName = "ModelNameCalculatorGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/ModelNameCalculatorGenerator.java";
  }

  @(ResolvingFilterGenerator.java):JavaSourceFile{
    simpleName = "ResolvingFilterGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/ResolvingFilterGenerator.java";
  }

  @(ScopeSpanningSymbolGenerator.java):JavaSourceFile{
    simpleName = "ScopeSpanningSymbolGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/ScopeSpanningSymbolGenerator.java";
  }

  @(SymbolGenerator.java):JavaSourceFile{
    simpleName = "SymbolGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolGenerator.java";
  }

  @(SymbolKindGenerator.java):JavaSourceFile{
    simpleName = "SymbolKindGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolKindGenerator.java";
  }

  @(SymbolMillGenerator.java):JavaSourceFile{
    simpleName = "SymbolMillGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolMillGenerator.java";
  }

  @(SymbolReferenceGenerator.java):JavaSourceFile{
    simpleName = "SymbolReferenceGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolReferenceGenerator.java";
  }

  @(SymbolTableCreatorGenerator.java):JavaSourceFile{
    simpleName = "SymbolTableCreatorGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolTableCreatorGenerator.java";
  }

  @(SymbolTableGenerator.java):JavaSourceFile{
    simpleName = "SymbolTableGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolTableGenerator.java";
  }

  @(SymbolTableGeneratorBuilder.java):JavaSourceFile{
    simpleName = "SymbolTableGeneratorBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolTableGeneratorBuilder.java";
  }

  @(SymbolTableGeneratorHelper.java):JavaSourceFile{
    simpleName = "SymbolTableGeneratorHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/codegen/symboltable/SymbolTableGeneratorHelper.java";
  }

  @(grammar!5):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar";
  }

  @(cocos!2):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos";
  }

  @(AbstractNTNotExtendInterfaceOrExternalNTs.java):JavaSourceFile{
    simpleName = "AbstractNTNotExtendInterfaceOrExternalNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AbstractNTNotExtendInterfaceOrExternalNTs.java";
  }

  @(AbstractNTOnlyExtendOrAstextendNTOrClass.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyExtendOrAstextendNTOrClass";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AbstractNTOnlyExtendOrAstextendNTOrClass.java";
  }

  @(AbstractNTOnlyExtendsOneNTOrClass.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyExtendsOneNTOrClass";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOneNTOrClass.java";
  }

  @(AbstractNTOnlyImplementInterfaceNTs.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyImplementInterfaceNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AbstractNTOnlyImplementInterfaceNTs.java";
  }

  @(AbstractNTWithoutExtensionOnlyInComponentGrammar.java):JavaSourceFile{
    simpleName = "AbstractNTWithoutExtensionOnlyInComponentGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AbstractNTWithoutExtensionOnlyInComponentGrammar.java";
  }

  @(ASTRuleAndNTUseSameAttrNameForDiffNTs.java):JavaSourceFile{
    simpleName = "ASTRuleAndNTUseSameAttrNameForDiffNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ASTRuleAndNTUseSameAttrNameForDiffNTs.java";
  }

  @(AttributeNameLowerCase.java):JavaSourceFile{
    simpleName = "AttributeNameLowerCase";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/AttributeNameLowerCase.java";
  }

  @(DuplicatedEnumConstant.java):JavaSourceFile{
    simpleName = "DuplicatedEnumConstant";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/DuplicatedEnumConstant.java";
  }

  @(DuplicatedSymbolDefinitionInProd.java):JavaSourceFile{
    simpleName = "DuplicatedSymbolDefinitionInProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/DuplicatedSymbolDefinitionInProd.java";
  }

  @(ExternalNTOnlyInComponentGrammar.java):JavaSourceFile{
    simpleName = "ExternalNTOnlyInComponentGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ExternalNTOnlyInComponentGrammar.java";
  }

  @(GrammarCoCos.java):JavaSourceFile{
    simpleName = "GrammarCoCos";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/GrammarCoCos.java";
  }

  @(GrammarInheritanceCycle.java):JavaSourceFile{
    simpleName = "GrammarInheritanceCycle";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/GrammarInheritanceCycle.java";
  }

  @(GrammarNameUpperCase.java):JavaSourceFile{
    simpleName = "GrammarNameUpperCase";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/GrammarNameUpperCase.java";
  }

  @(InterfaceNTOnlyExtendInterfaceNTs.java):JavaSourceFile{
    simpleName = "InterfaceNTOnlyExtendInterfaceNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/InterfaceNTOnlyExtendInterfaceNTs.java";
  }

  @(InterfaceNTWithoutImplementationOnlyInComponentGrammar.java):JavaSourceFile{
    simpleName = "InterfaceNTWithoutImplementationOnlyInComponentGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/InterfaceNTWithoutImplementationOnlyInComponentGrammar.java";
  }

  @(KeywordAlternativeName.java):JavaSourceFile{
    simpleName = "KeywordAlternativeName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/KeywordAlternativeName.java";
  }

  @(KeywordInvalidName.java):JavaSourceFile{
    simpleName = "KeywordInvalidName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/KeywordInvalidName.java";
  }

  @(LeftRecursiveRulesInBlock.java):JavaSourceFile{
    simpleName = "LeftRecursiveRulesInBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/LeftRecursiveRulesInBlock.java";
  }

  @(LexNTsNotEmpty.java):JavaSourceFile{
    simpleName = "LexNTsNotEmpty";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/LexNTsNotEmpty.java";
  }

  @(LexNTsOnlyUseLexNTs.java):JavaSourceFile{
    simpleName = "LexNTsOnlyUseLexNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/LexNTsOnlyUseLexNTs.java";
  }

  @(MultipleASTRules.java):JavaSourceFile{
    simpleName = "MultipleASTRules";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/MultipleASTRules.java";
  }

  @(NoASTExtendsForClasses.java):JavaSourceFile{
    simpleName = "NoASTExtendsForClasses";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NoASTExtendsForClasses.java";
  }

  @(NoASTRuleForEnumNTs.java):JavaSourceFile{
    simpleName = "NoASTRuleForEnumNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NoASTRuleForEnumNTs.java";
  }

  @(NoNTInheritanceCycle.java):JavaSourceFile{
    simpleName = "NoNTInheritanceCycle";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NoNTInheritanceCycle.java";
  }

  @(NTAndASTRuleExtendType.java):JavaSourceFile{
    simpleName = "NTAndASTRuleExtendType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTAndASTRuleExtendType.java";
  }

  @(NTDefinedByAtmostOneProduction.java):JavaSourceFile{
    simpleName = "NTDefinedByAtmostOneProduction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTDefinedByAtmostOneProduction.java";
  }

  @(NTForASTRuleExists.java):JavaSourceFile{
    simpleName = "NTForASTRuleExists";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTForASTRuleExists.java";
  }

  @(NTNotExtendInterfaceOrExternalNTs.java):JavaSourceFile{
    simpleName = "NTNotExtendInterfaceOrExternalNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTNotExtendInterfaceOrExternalNTs.java";
  }

  @(NTOnlyExtendOrAstextendNTOrClass.java):JavaSourceFile{
    simpleName = "NTOnlyExtendOrAstextendNTOrClass";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTOnlyExtendOrAstextendNTOrClass.java";
  }

  @(NTOnlyExtendsOneNTOrClass.java):JavaSourceFile{
    simpleName = "NTOnlyExtendsOneNTOrClass";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTOnlyExtendsOneNTOrClass.java";
  }

  @(NTOnlyImplementInterfaceNTs.java):JavaSourceFile{
    simpleName = "NTOnlyImplementInterfaceNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTOnlyImplementInterfaceNTs.java";
  }

  @(NTUniqueIgnoreCase.java):JavaSourceFile{
    simpleName = "NTUniqueIgnoreCase";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/NTUniqueIgnoreCase.java";
  }

  @(OverridingAbstractNTs.java):JavaSourceFile{
    simpleName = "OverridingAbstractNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingAbstractNTs.java";
  }

  @(OverridingAbstractNTsHaveNoSuperRules.java):JavaSourceFile{
    simpleName = "OverridingAbstractNTsHaveNoSuperRules";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingAbstractNTsHaveNoSuperRules.java";
  }

  @(OverridingEnumNTs.java):JavaSourceFile{
    simpleName = "OverridingEnumNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingEnumNTs.java";
  }

  @(OverridingInterfaceNTs.java):JavaSourceFile{
    simpleName = "OverridingInterfaceNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingInterfaceNTs.java";
  }

  @(OverridingLexNTs.java):JavaSourceFile{
    simpleName = "OverridingLexNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingLexNTs.java";
  }

  @(OverridingNTs.java):JavaSourceFile{
    simpleName = "OverridingNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingNTs.java";
  }

  @(OverridingNTsHaveNoSuperRules.java):JavaSourceFile{
    simpleName = "OverridingNTsHaveNoSuperRules";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/OverridingNTsHaveNoSuperRules.java";
  }

  @(ProdAndExtendedProdUseSameAttrNameForDiffNTs.java):JavaSourceFile{
    simpleName = "ProdAndExtendedProdUseSameAttrNameForDiffNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ProdAndExtendedProdUseSameAttrNameForDiffNTs.java";
  }

  @(ProdAndOverriddenProdUseSameAttrNameForDiffNTs.java):JavaSourceFile{
    simpleName = "ProdAndOverriddenProdUseSameAttrNameForDiffNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ProdAndOverriddenProdUseSameAttrNameForDiffNTs.java";
  }

  @(ProdStartsWithCapital.java):JavaSourceFile{
    simpleName = "ProdStartsWithCapital";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ProdStartsWithCapital.java";
  }

  @(ProdWithExtensionMustNotBeOverridden.java):JavaSourceFile{
    simpleName = "ProdWithExtensionMustNotBeOverridden";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ProdWithExtensionMustNotBeOverridden.java";
  }

  @(ReferencedNTNotDefined.java):JavaSourceFile{
    simpleName = "ReferencedNTNotDefined";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/ReferencedNTNotDefined.java";
  }

  @(SubrulesUseInterfaceNTs.java):JavaSourceFile{
    simpleName = "SubrulesUseInterfaceNTs";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/SubrulesUseInterfaceNTs.java";
  }

  @(SymbolWithoutName.java):JavaSourceFile{
    simpleName = "SymbolWithoutName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/SymbolWithoutName.java";
  }

  @(TerminalEmptyString.java):JavaSourceFile{
    simpleName = "TerminalEmptyString";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/TerminalEmptyString.java";
  }

  @(UsedLexNTNotDefined.java):JavaSourceFile{
    simpleName = "UsedLexNTNotDefined";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/UsedLexNTNotDefined.java";
  }

  @(UsedNTNotDefined.java):JavaSourceFile{
    simpleName = "UsedNTNotDefined";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/cocos/UsedNTNotDefined.java";
  }

  @(DirectLeftRecursionDetector.java):JavaSourceFile{
    simpleName = "DirectLeftRecursionDetector";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/DirectLeftRecursionDetector.java";
  }

  @(grammar!6):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/grammar";
  }

  @(_ast!8):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/grammar/_ast";
  }

  @(ASTGenericType.java):JavaSourceFile{
    simpleName = "ASTGenericType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/grammar/_ast/ASTGenericType.java";
  }

  @(ASTProd.java):JavaSourceFile{
    simpleName = "ASTProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/grammar/_ast/ASTProd.java";
  }

  @(HelperGrammar.java):JavaSourceFile{
    simpleName = "HelperGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/HelperGrammar.java";
  }

  @(LexNamer.java):JavaSourceFile{
    simpleName = "LexNamer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/LexNamer.java";
  }

  @(MCGrammarInfo.java):JavaSourceFile{
    simpleName = "MCGrammarInfo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/MCGrammarInfo.java";
  }

  @(Multiplicity.java):JavaSourceFile{
    simpleName = "Multiplicity";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/Multiplicity.java";
  }

  @(PredicatePair.java):JavaSourceFile{
    simpleName = "PredicatePair";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/PredicatePair.java";
  }

  @(prettyprint!3):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/prettyprint";
  }

  @(AntlrPrettyPrinter.java):JavaSourceFile{
    simpleName = "AntlrPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/prettyprint/AntlrPrettyPrinter.java";
  }

  @(GrammarPrettyPrinter.java):JavaSourceFile{
    simpleName = "GrammarPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/prettyprint/GrammarPrettyPrinter.java";
  }

  @(Grammar_WithConceptsPrettyPrinter.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/prettyprint/Grammar_WithConceptsPrettyPrinter.java";
  }

  @(RegExpBuilder.java):JavaSourceFile{
    simpleName = "RegExpBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/RegExpBuilder.java";
  }

  @(symboltable!4):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable";
  }

  @(MCGrammarScope.java):JavaSourceFile{
    simpleName = "MCGrammarScope";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCGrammarScope.java";
  }

  @(MCGrammarSymbol.java):JavaSourceFile{
    simpleName = "MCGrammarSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCGrammarSymbol.java";
  }

  @(MCGrammarSymbolReference.java):JavaSourceFile{
    simpleName = "MCGrammarSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCGrammarSymbolReference.java";
  }

  @(MCProdAttributeSymbol.java):JavaSourceFile{
    simpleName = "MCProdAttributeSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCProdAttributeSymbol.java";
  }

  @(MCProdComponentSymbol.java):JavaSourceFile{
    simpleName = "MCProdComponentSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCProdComponentSymbol.java";
  }

  @(MCProdOrTypeReference.java):JavaSourceFile{
    simpleName = "MCProdOrTypeReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCProdOrTypeReference.java";
  }

  @(MCProdSymbol.java):JavaSourceFile{
    simpleName = "MCProdSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCProdSymbol.java";
  }

  @(MCProdSymbolReference.java):JavaSourceFile{
    simpleName = "MCProdSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MCProdSymbolReference.java";
  }

  @(MontiCoreGrammarLanguage.java):JavaSourceFile{
    simpleName = "MontiCoreGrammarLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MontiCoreGrammarLanguage.java";
  }

  @(MontiCoreGrammarModelLoader.java):JavaSourceFile{
    simpleName = "MontiCoreGrammarModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MontiCoreGrammarModelLoader.java";
  }

  @(MontiCoreGrammarSymbolTableCreator.java):JavaSourceFile{
    simpleName = "MontiCoreGrammarSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/symboltable/MontiCoreGrammarSymbolTableCreator.java";
  }

  @(transformation):Directory{
    simpleName = "transformation";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/transformation";
  }

  @(GrammarTransformer.java):JavaSourceFile{
    simpleName = "GrammarTransformer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/transformation/GrammarTransformer.java";
  }

  @(RuleComponentListFinder.java):JavaSourceFile{
    simpleName = "RuleComponentListFinder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/grammar/transformation/RuleComponentListFinder.java";
  }

  @(GrammarWithConcepts2OD.java):JavaSourceFile{
    simpleName = "GrammarWithConcepts2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/GrammarWithConcepts2OD.java";
  }

  @(MontiCoreConfiguration.java):JavaSourceFile{
    simpleName = "MontiCoreConfiguration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/MontiCoreConfiguration.java";
  }

  @(MontiCoreGrammarLanguageFamily.java):JavaSourceFile{
    simpleName = "MontiCoreGrammarLanguageFamily";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/MontiCoreGrammarLanguageFamily.java";
  }

  @(MontiCoreNodeIdentifierHelper.java):JavaSourceFile{
    simpleName = "MontiCoreNodeIdentifierHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/MontiCoreNodeIdentifierHelper.java";
  }

  @(MontiCoreReports.java):JavaSourceFile{
    simpleName = "MontiCoreReports";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/MontiCoreReports.java";
  }

  @(MontiCoreScript.java):JavaSourceFile{
    simpleName = "MontiCoreScript";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/MontiCoreScript.java";
  }

  @(ODReporter.java):JavaSourceFile{
    simpleName = "ODReporter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/de/monticore/ODReporter.java";
  }

  @(parser!2):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/java/parser";
  }

  @(MCGrammarParser.java):JavaSourceFile{
    simpleName = "MCGrammarParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/main/java/parser/MCGrammarParser.java";
  }

  @(resources!8):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources";
  }

  @(ast!5):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast";
  }

  @(additionalmethods):Directory{
    simpleName = "additionalmethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods";
  }

  @(Accept.ftl):FreeMarkerTemplate{
    simpleName = "Accept";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/Accept.ftl";
  }

  @(AcceptSuper.ftl):FreeMarkerTemplate{
    simpleName = "AcceptSuper";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/AcceptSuper.ftl";
  }

  @(DeepCloneWithParameters.ftl):FreeMarkerTemplate{
    simpleName = "DeepCloneWithParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/DeepCloneWithParameters.ftl";
  }

  @(DeepEqualsWithComments.ftl):FreeMarkerTemplate{
    simpleName = "DeepEqualsWithComments";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/DeepEqualsWithComments.ftl";
  }

  @(DeepEqualsWithOrder.ftl):FreeMarkerTemplate{
    simpleName = "DeepEqualsWithOrder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/DeepEqualsWithOrder.ftl";
  }

  @(EqualAttributes.ftl):FreeMarkerTemplate{
    simpleName = "EqualAttributes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/EqualAttributes.ftl";
  }

  @(EqualsWithComments.ftl):FreeMarkerTemplate{
    simpleName = "EqualsWithComments";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/EqualsWithComments.ftl";
  }

  @(Get.ftl):FreeMarkerTemplate{
    simpleName = "Get";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/Get.ftl";
  }

  @(GetChildren.ftl):FreeMarkerTemplate{
    simpleName = "GetChildren";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/GetChildren.ftl";
  }

  @(GetOpt.ftl):FreeMarkerTemplate{
    simpleName = "GetOpt";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/GetOpt.ftl";
  }

  @(GetReferencedNode.ftl):FreeMarkerTemplate{
    simpleName = "GetReferencedNode";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/GetReferencedNode.ftl";
  }

  @(GetReferencedSymbol.ftl):FreeMarkerTemplate{
    simpleName = "GetReferencedSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/GetReferencedSymbol.ftl";
  }

  @(IsPresent.ftl):FreeMarkerTemplate{
    simpleName = "IsPresent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/IsPresent.ftl";
  }

  @(ListAttributeMethod.ftl):FreeMarkerTemplate{
    simpleName = "ListAttributeMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/ListAttributeMethod.ftl";
  }

  @(RemoveChild.ftl):FreeMarkerTemplate{
    simpleName = "RemoveChild";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/RemoveChild.ftl";
  }

  @(Set.ftl):FreeMarkerTemplate{
    simpleName = "Set";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/Set.ftl";
  }

  @(SetAbsent.ftl):FreeMarkerTemplate{
    simpleName = "SetAbsent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/SetAbsent.ftl";
  }

  @(SetOpt.ftl):FreeMarkerTemplate{
    simpleName = "SetOpt";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/additionalmethods/SetOpt.ftl";
  }

  @(AstBuilder.ftl):FreeMarkerTemplate{
    simpleName = "AstBuilder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstBuilder.ftl";
  }

  @(AstBuilderAttributeSetter.ftl):FreeMarkerTemplate{
    simpleName = "AstBuilderAttributeSetter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstBuilderAttributeSetter.ftl";
  }

  @(AstClass.ftl):FreeMarkerTemplate{
    simpleName = "AstClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstClass.ftl";
  }

  @(ASTConstantsClass.ftl):FreeMarkerTemplate{
    simpleName = "ASTConstantsClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ASTConstantsClass.ftl";
  }

  @(AstEnum.ftl):FreeMarkerTemplate{
    simpleName = "AstEnum";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstEnum.ftl";
  }

  @(AstExtendedInterfaces.ftl):FreeMarkerTemplate{
    simpleName = "AstExtendedInterfaces";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstExtendedInterfaces.ftl";
  }

  @(AstImports.ftl):FreeMarkerTemplate{
    simpleName = "AstImports";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstImports.ftl";
  }

  @(AstInterface.ftl):FreeMarkerTemplate{
    simpleName = "AstInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstInterface.ftl";
  }

  @(AstInterfaceContent.ftl):FreeMarkerTemplate{
    simpleName = "AstInterfaceContent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstInterfaceContent.ftl";
  }

  @(AstMill.ftl):FreeMarkerTemplate{
    simpleName = "AstMill";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstMill.ftl";
  }

  @(AstMillBuilderMethod.ftl):FreeMarkerTemplate{
    simpleName = "AstMillBuilderMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstMillBuilderMethod.ftl";
  }

  @(ASTMillDelegateMethod.ftl):FreeMarkerTemplate{
    simpleName = "ASTMillDelegateMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ASTMillDelegateMethod.ftl";
  }

  @(AstMillForSuper.ftl):FreeMarkerTemplate{
    simpleName = "AstMillForSuper";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstMillForSuper.ftl";
  }

  @(ASTMillInitMethod.ftl):FreeMarkerTemplate{
    simpleName = "ASTMillInitMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ASTMillInitMethod.ftl";
  }

  @(ASTNodeBase.ftl):FreeMarkerTemplate{
    simpleName = "ASTNodeBase";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ASTNodeBase.ftl";
  }

  @(AstNodeFactory.ftl):FreeMarkerTemplate{
    simpleName = "AstNodeFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstNodeFactory.ftl";
  }

  @(AstSuperInterfaces.ftl):FreeMarkerTemplate{
    simpleName = "AstSuperInterfaces";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstSuperInterfaces.ftl";
  }

  @(AstSuperTypes.ftl):FreeMarkerTemplate{
    simpleName = "AstSuperTypes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/AstSuperTypes.ftl";
  }

  @(Attribute.ftl):FreeMarkerTemplate{
    simpleName = "Attribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/Attribute.ftl";
  }

  @(BuilderAttribute.ftl):FreeMarkerTemplate{
    simpleName = "BuilderAttribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/BuilderAttribute.ftl";
  }

  @(BuilderConstructorParametersDeclaration.ftl):FreeMarkerTemplate{
    simpleName = "BuilderConstructorParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/BuilderConstructorParametersDeclaration.ftl";
  }

  @(Class.ftl):FreeMarkerTemplate{
    simpleName = "Class";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/Class.ftl";
  }

  @(ClassContent.ftl):FreeMarkerTemplate{
    simpleName = "ClassContent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ClassContent.ftl";
  }

  @(ClassMethod.ftl):FreeMarkerTemplate{
    simpleName = "ClassMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ClassMethod.ftl";
  }

  @(Constant.ftl):FreeMarkerTemplate{
    simpleName = "Constant";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/Constant.ftl";
  }

  @(Constructor.ftl):FreeMarkerTemplate{
    simpleName = "Constructor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/Constructor.ftl";
  }

  @(ConstructorAttributesSetter.ftl):FreeMarkerTemplate{
    simpleName = "ConstructorAttributesSetter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ConstructorAttributesSetter.ftl";
  }

  @(ConstructorParametersDeclaration.ftl):FreeMarkerTemplate{
    simpleName = "ConstructorParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ConstructorParametersDeclaration.ftl";
  }

  @(ConstructorParametersDeclaration2.ftl):FreeMarkerTemplate{
    simpleName = "ConstructorParametersDeclaration2";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ConstructorParametersDeclaration2.ftl";
  }

  @(EmptyMethodBody.ftl):FreeMarkerTemplate{
    simpleName = "EmptyMethodBody";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/EmptyMethodBody.ftl";
  }

  @(ErrorIfNull.ftl):FreeMarkerTemplate{
    simpleName = "ErrorIfNull";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ErrorIfNull.ftl";
  }

  @(factorymethods):Directory{
    simpleName = "factorymethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods";
  }

  @(Create.ftl):FreeMarkerTemplate{
    simpleName = "Create";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/Create.ftl";
  }

  @(CreateDelegate.ftl):FreeMarkerTemplate{
    simpleName = "CreateDelegate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/CreateDelegate.ftl";
  }

  @(CreateWithParams.ftl):FreeMarkerTemplate{
    simpleName = "CreateWithParams";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/CreateWithParams.ftl";
  }

  @(CreateWithParamsDelegate.ftl):FreeMarkerTemplate{
    simpleName = "CreateWithParamsDelegate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/CreateWithParamsDelegate.ftl";
  }

  @(DoCreate.ftl):FreeMarkerTemplate{
    simpleName = "DoCreate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/DoCreate.ftl";
  }

  @(DoCreateWithParams.ftl):FreeMarkerTemplate{
    simpleName = "DoCreateWithParams";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/DoCreateWithParams.ftl";
  }

  @(ErrorIfNull.ftl!2):FreeMarkerTemplate{
    simpleName = "ErrorIfNull";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/factorymethods/ErrorIfNull.ftl";
  }

  @(Interface.ftl):FreeMarkerTemplate{
    simpleName = "Interface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/Interface.ftl";
  }

  @(ParametersDeclaration.ftl):FreeMarkerTemplate{
    simpleName = "ParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast/ParametersDeclaration.ftl";
  }

  @(ast_emf!2):Directory{
    simpleName = "ast_emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf";
  }

  @(additionalmethods!2):Directory{
    simpleName = "additionalmethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods";
  }

  @(EGet.ftl):FreeMarkerTemplate{
    simpleName = "EGet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/EGet.ftl";
  }

  @(EIsSet.ftl):FreeMarkerTemplate{
    simpleName = "EIsSet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/EIsSet.ftl";
  }

  @(ESet.ftl):FreeMarkerTemplate{
    simpleName = "ESet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/ESet.ftl";
  }

  @(EStructuralFeature.ftl):FreeMarkerTemplate{
    simpleName = "EStructuralFeature";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/EStructuralFeature.ftl";
  }

  @(EToString.ftl):FreeMarkerTemplate{
    simpleName = "EToString";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/EToString.ftl";
  }

  @(EUnset.ftl):FreeMarkerTemplate{
    simpleName = "EUnset";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/EUnset.ftl";
  }

  @(Set.ftl!2):FreeMarkerTemplate{
    simpleName = "Set";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/additionalmethods/Set.ftl";
  }

  @(AstEImports.ftl):FreeMarkerTemplate{
    simpleName = "AstEImports";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/AstEImports.ftl";
  }

  @(AstNodeFactory.ftl!2):FreeMarkerTemplate{
    simpleName = "AstNodeFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/AstNodeFactory.ftl";
  }

  @(EConstantsEnum.ftl):FreeMarkerTemplate{
    simpleName = "EConstantsEnum";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/EConstantsEnum.ftl";
  }

  @(EFactory.ftl):FreeMarkerTemplate{
    simpleName = "EFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/EFactory.ftl";
  }

  @(EPackage.ftl):FreeMarkerTemplate{
    simpleName = "EPackage";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/EPackage.ftl";
  }

  @(EPackageImpl.ftl):FreeMarkerTemplate{
    simpleName = "EPackageImpl";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/EPackageImpl.ftl";
  }

  @(epackagemethods):Directory{
    simpleName = "epackagemethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/epackagemethods";
  }

  @(CreatePackageContents.ftl):FreeMarkerTemplate{
    simpleName = "CreatePackageContents";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/epackagemethods/CreatePackageContents.ftl";
  }

  @(InitializePackageContents.ftl):FreeMarkerTemplate{
    simpleName = "InitializePackageContents";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/ast_emf/epackagemethods/InitializePackageContents.ftl";
  }

  @(cocos!3):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/cocos";
  }

  @(CoCoChecker.ftl):FreeMarkerTemplate{
    simpleName = "CoCoChecker";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/cocos/CoCoChecker.ftl";
  }

  @(CoCoInterface.ftl):FreeMarkerTemplate{
    simpleName = "CoCoInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/cocos/CoCoInterface.ftl";
  }

  @(de!14):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/de";
  }

  @(monticore!14):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/de/monticore";
  }

  @(od!2):Pkg{
    simpleName = "mc.examples.lwc.odl";
    nameExtension = " ";
    fullName = "mc.examples.lwc.odl.odl";
  }

  @(DiagramVisitor.ftl):FreeMarkerTemplate{
    simpleName = "DiagramVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/od/DiagramVisitor.ftl";
  }

  @(parser!3):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/parser";
  }

  @(LexerMember.ftl):FreeMarkerTemplate{
    simpleName = "LexerMember";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/parser/LexerMember.ftl";
  }

  @(MCParser.ftl):FreeMarkerTemplate{
    simpleName = "MCParser";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/parser/MCParser.ftl";
  }

  @(MCParserMethods.ftl):FreeMarkerTemplate{
    simpleName = "MCParserMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/parser/MCParserMethods.ftl";
  }

  @(Parser.ftl):FreeMarkerTemplate{
    simpleName = "Parser";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/parser/Parser.ftl";
  }

  @(ParserHeader.ftl):FreeMarkerTemplate{
    simpleName = "ParserHeader";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/parser/ParserHeader.ftl";
  }

  @(symboltable!5):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/symboltable";
  }

  @(mill):Directory{
    simpleName = "mill";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/mill";
  }

  @(Attribute.ftl!2):FreeMarkerTemplate{
    simpleName = "Attribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/mill/Attribute.ftl";
  }

  @(Method.ftl):FreeMarkerTemplate{
    simpleName = "Method";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/mill/Method.ftl";
  }

  @(ModelingLanguage.ftl):FreeMarkerTemplate{
    simpleName = "ModelingLanguage";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/ModelingLanguage.ftl";
  }

  @(ModelLoader.ftl):FreeMarkerTemplate{
    simpleName = "ModelLoader";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/ModelLoader.ftl";
  }

  @(ModelNameCalculator.ftl):FreeMarkerTemplate{
    simpleName = "ModelNameCalculator";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/ModelNameCalculator.ftl";
  }

  @(ResolvingFilter.ftl):FreeMarkerTemplate{
    simpleName = "ResolvingFilter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/ResolvingFilter.ftl";
  }

  @(Scope.ftl):FreeMarkerTemplate{
    simpleName = "Scope";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/Scope.ftl";
  }

  @(ScopeSpanningSymbol.ftl):FreeMarkerTemplate{
    simpleName = "ScopeSpanningSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/ScopeSpanningSymbol.ftl";
  }

  @(Symbol.ftl):FreeMarkerTemplate{
    simpleName = "Symbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/Symbol.ftl";
  }

  @(SymbolBuilder.ftl):FreeMarkerTemplate{
    simpleName = "SymbolBuilder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolBuilder.ftl";
  }

  @(SymbolInterface.ftl):FreeMarkerTemplate{
    simpleName = "SymbolInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolInterface.ftl";
  }

  @(SymbolKind.ftl):FreeMarkerTemplate{
    simpleName = "SymbolKind";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolKind.ftl";
  }

  @(SymbolMill.ftl):FreeMarkerTemplate{
    simpleName = "SymbolMill";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolMill.ftl";
  }

  @(SymbolReference.ftl):FreeMarkerTemplate{
    simpleName = "SymbolReference";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolReference.ftl";
  }

  @(symbols):Directory{
    simpleName = "symbols";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symbols";
  }

  @(GetAstNodeMethod.ftl):FreeMarkerTemplate{
    simpleName = "GetAstNodeMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symbols/GetAstNodeMethod.ftl";
  }

  @(KindConstantDeclaration.ftl):FreeMarkerTemplate{
    simpleName = "KindConstantDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symbols/KindConstantDeclaration.ftl";
  }

  @(SymbolTableCreator.ftl):FreeMarkerTemplate{
    simpleName = "SymbolTableCreator";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/SymbolTableCreator.ftl";
  }

  @(symboltablecreators):Directory{
    simpleName = "symboltablecreators";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators";
  }

  @(EndVisitMethod.ftl):FreeMarkerTemplate{
    simpleName = "EndVisitMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/EndVisitMethod.ftl";
  }

  @(InitializeSymbol.ftl):FreeMarkerTemplate{
    simpleName = "InitializeSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/InitializeSymbol.ftl";
  }

  @(ScopeMethods.ftl):FreeMarkerTemplate{
    simpleName = "ScopeMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/ScopeMethods.ftl";
  }

  @(ScopeSpanningSymbolMethods.ftl):FreeMarkerTemplate{
    simpleName = "ScopeSpanningSymbolMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/ScopeSpanningSymbolMethods.ftl";
  }

  @(SetEnclosingScopeOfNodes.ftl):FreeMarkerTemplate{
    simpleName = "SetEnclosingScopeOfNodes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/SetEnclosingScopeOfNodes.ftl";
  }

  @(SymbolMethods.ftl):FreeMarkerTemplate{
    simpleName = "SymbolMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/symboltable/symboltablecreators/SymbolMethods.ftl";
  }

  @(types!3):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/types";
  }

  @(TypeResolver.ftl):FreeMarkerTemplate{
    simpleName = "TypeResolver";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/types/TypeResolver.ftl";
  }

  @(visitor!5):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/main/resources/visitor";
  }

  @(DelegatorVisitor.ftl):FreeMarkerTemplate{
    simpleName = "DelegatorVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/visitor/DelegatorVisitor.ftl";
  }

  @(InheritanceVisitor.ftl):FreeMarkerTemplate{
    simpleName = "InheritanceVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/visitor/InheritanceVisitor.ftl";
  }

  @(ParentAwareVisitor.ftl):FreeMarkerTemplate{
    simpleName = "ParentAwareVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/visitor/ParentAwareVisitor.ftl";
  }

  @(SimpleVisitor.ftl):FreeMarkerTemplate{
    simpleName = "SimpleVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/src/main/resources/visitor/SimpleVisitor.ftl";
  }

  @(test!3):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test";
  }

  @(java!12):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java";
  }

  @(de!15):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de";
  }

  @(monticore!15):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore";
  }

  @(codegen!2):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen";
  }

  @(AstDependentGeneratorTest.java):JavaSourceFile{
    simpleName = "AstDependentGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/AstDependentGeneratorTest.java";
  }

  @(cd2java!2):Directory{
    simpleName = "cd2java";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java";
  }

  @(ast!6):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java/ast";
  }

  @(AstGeneratorTest.java):JavaSourceFile{
    simpleName = "AstGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java/ast/AstGeneratorTest.java";
  }

  @(CdDecoratorTest.java):JavaSourceFile{
    simpleName = "CdDecoratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java/ast/CdDecoratorTest.java";
  }

  @(cocos!4):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java/cocos";
  }

  @(CoCoGeneratorTest.java):JavaSourceFile{
    simpleName = "CoCoGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/cd2java/cocos/CoCoGeneratorTest.java";
  }

  @(emf!5):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/emf";
  }

  @(ASTNodeTest.java):JavaSourceFile{
    simpleName = "ASTNodeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/emf/ASTNodeTest.java";
  }

  @(GrammarDiffsTest.java):JavaSourceFile{
    simpleName = "GrammarDiffsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/emf/GrammarDiffsTest.java";
  }

  @(GrammarSerDeserTest.java):JavaSourceFile{
    simpleName = "GrammarSerDeserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/emf/GrammarSerDeserTest.java";
  }

  @(GeneratorTest.java):JavaSourceFile{
    simpleName = "GeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/GeneratorTest.java";
  }

  @(mc2cd!2):Directory{
    simpleName = "mc2cd";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd";
  }

  @(manipul!2):Directory{
    simpleName = "manipul";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/manipul";
  }

  @(RemoveRedundantReferencesManipulationTest.java):JavaSourceFile{
    simpleName = "RemoveRedundantReferencesManipulationTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/manipul/RemoveRedundantReferencesManipulationTest.java";
  }

  @(PrettyPrintingTranslation.java):JavaSourceFile{
    simpleName = "PrettyPrintingTranslation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/PrettyPrintingTranslation.java";
  }

  @(TestHelper.java):JavaSourceFile{
    simpleName = "TestHelper";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/TestHelper.java";
  }

  @(transl!2):Directory{
    simpleName = "transl";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl";
  }

  @(AbstractProdTest.java!2):JavaSourceFile{
    simpleName = "AbstractProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AbstractProdTest.java";
  }

  @(AstRuleInheritanceTest.java):JavaSourceFile{
    simpleName = "AstRuleInheritanceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AstRuleInheritanceTest.java";
  }

  @(AstRuleTest.java):JavaSourceFile{
    simpleName = "AstRuleTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AstRuleTest.java";
  }

  @(AttributeInASTMultiplicityTest.java):JavaSourceFile{
    simpleName = "AttributeInASTMultiplicityTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AttributeInASTMultiplicityTest.java";
  }

  @(AttributeInASTOverridingTest.java):JavaSourceFile{
    simpleName = "AttributeInASTOverridingTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AttributeInASTOverridingTest.java";
  }

  @(AttributeInASTTypeTest.java):JavaSourceFile{
    simpleName = "AttributeInASTTypeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/AttributeInASTTypeTest.java";
  }

  @(ConstantTest.java):JavaSourceFile{
    simpleName = "ConstantTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/ConstantTest.java";
  }

  @(DirectLeftRecursionDetectorTest.java):JavaSourceFile{
    simpleName = "DirectLeftRecursionDetectorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/DirectLeftRecursionDetectorTest.java";
  }

  @(EnumProdTest.java):JavaSourceFile{
    simpleName = "EnumProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/EnumProdTest.java";
  }

  @(ExternalImplementationTest.java):JavaSourceFile{
    simpleName = "ExternalImplementationTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/ExternalImplementationTest.java";
  }

  @(InheritanceTest.java):JavaSourceFile{
    simpleName = "InheritanceTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/InheritanceTest.java";
  }

  @(InheritedNonTerminalsTest.java):JavaSourceFile{
    simpleName = "InheritedNonTerminalsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/InheritedNonTerminalsTest.java";
  }

  @(InterfaceProdTest.java):JavaSourceFile{
    simpleName = "InterfaceProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/InterfaceProdTest.java";
  }

  @(NonTerminalMultiplicityTest.java):JavaSourceFile{
    simpleName = "NonTerminalMultiplicityTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/NonTerminalMultiplicityTest.java";
  }

  @(OverridingClassProdTest.java):JavaSourceFile{
    simpleName = "OverridingClassProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/OverridingClassProdTest.java";
  }

  @(StarImportSuperGrammarTest.java):JavaSourceFile{
    simpleName = "StarImportSuperGrammarTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/StarImportSuperGrammarTest.java";
  }

  @(TerminalWithUsageNameTest.java):JavaSourceFile{
    simpleName = "TerminalWithUsageNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/TerminalWithUsageNameTest.java";
  }

  @(TokenMultiplicityTest.java):JavaSourceFile{
    simpleName = "TokenMultiplicityTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/TokenMultiplicityTest.java";
  }

  @(TokenTypeTest.java):JavaSourceFile{
    simpleName = "TokenTypeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/TokenTypeTest.java";
  }

  @(UsageNameTest.java):JavaSourceFile{
    simpleName = "UsageNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/mc2cd/transl/UsageNameTest.java";
  }

  @(parser!4):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/parser";
  }

  @(MCGrammarParserTest.java):JavaSourceFile{
    simpleName = "MCGrammarParserTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/parser/MCGrammarParserTest.java";
  }

  @(ParserGeneratorTest.java):JavaSourceFile{
    simpleName = "ParserGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/parser/ParserGeneratorTest.java";
  }

  @(prettyprint!4):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/prettyprint";
  }

  @(MCGrammarPrettyPrinterTest.java):JavaSourceFile{
    simpleName = "MCGrammarPrettyPrinterTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/prettyprint/MCGrammarPrettyPrinterTest.java";
  }

  @(symboltable!6):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/symboltable";
  }

  @(SymbolTableGeneratorTest.java):JavaSourceFile{
    simpleName = "SymbolTableGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/symboltable/SymbolTableGeneratorTest.java";
  }

  @(types!4):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/types";
  }

  @(TypeResolverGeneratorTest.java):JavaSourceFile{
    simpleName = "TypeResolverGeneratorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/codegen/types/TypeResolverGeneratorTest.java";
  }

  @(grammar!7):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar";
  }

  @(cocos!5):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos";
  }

  @(AbstractNTNotExtendInterfaceOrExternalNTsTest.java):JavaSourceFile{
    simpleName = "AbstractNTNotExtendInterfaceOrExternalNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AbstractNTNotExtendInterfaceOrExternalNTsTest.java";
  }

  @(AbstractNTOnlyExtendsOneNTOrClassTest.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyExtendsOneNTOrClassTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOneNTOrClassTest.java";
  }

  @(AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyExtendsOrAstextendsNTOrClassTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.java";
  }

  @(AbstractNTOnlyImplementInterfaceNTsTest.java):JavaSourceFile{
    simpleName = "AbstractNTOnlyImplementInterfaceNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AbstractNTOnlyImplementInterfaceNTsTest.java";
  }

  @(AbstractNTWithoutExtensionOnlyInComponentGrammarTest.java):JavaSourceFile{
    simpleName = "AbstractNTWithoutExtensionOnlyInComponentGrammarTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AbstractNTWithoutExtensionOnlyInComponentGrammarTest.java";
  }

  @(ASTRuleAndNTUseSameAttrNameForDiffNTsTest.java):JavaSourceFile{
    simpleName = "ASTRuleAndNTUseSameAttrNameForDiffNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ASTRuleAndNTUseSameAttrNameForDiffNTsTest.java";
  }

  @(AttributeNameForNTDuplicatedTest.java):JavaSourceFile{
    simpleName = "AttributeNameForNTDuplicatedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AttributeNameForNTDuplicatedTest.java";
  }

  @(AttributeNameLowerCaseTest.java):JavaSourceFile{
    simpleName = "AttributeNameLowerCaseTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/AttributeNameLowerCaseTest.java";
  }

  @(CocoTest.java):JavaSourceFile{
    simpleName = "CocoTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/CocoTest.java";
  }

  @(DuplicatedEnumConstantTest.java):JavaSourceFile{
    simpleName = "DuplicatedEnumConstantTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/DuplicatedEnumConstantTest.java";
  }

  @(DuplicatedSymbolDefinitionInProdTest.java):JavaSourceFile{
    simpleName = "DuplicatedSymbolDefinitionInProdTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/DuplicatedSymbolDefinitionInProdTest.java";
  }

  @(ExternalNTOnlyInComponentGrammarTest.java):JavaSourceFile{
    simpleName = "ExternalNTOnlyInComponentGrammarTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ExternalNTOnlyInComponentGrammarTest.java";
  }

  @(GrammarInheritanceCycleTest.java):JavaSourceFile{
    simpleName = "GrammarInheritanceCycleTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/GrammarInheritanceCycleTest.java";
  }

  @(GrammarNameEqualsFileNameTest.java):JavaSourceFile{
    simpleName = "GrammarNameEqualsFileNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/GrammarNameEqualsFileNameTest.java";
  }

  @(GrammarNameUpperCaseTest.java):JavaSourceFile{
    simpleName = "GrammarNameUpperCaseTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/GrammarNameUpperCaseTest.java";
  }

  @(InterfaceNTOnlyExtendInterfaceNTsTest.java):JavaSourceFile{
    simpleName = "InterfaceNTOnlyExtendInterfaceNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/InterfaceNTOnlyExtendInterfaceNTsTest.java";
  }

  @(InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.java):JavaSourceFile{
    simpleName = "InterfaceNTWithoutImplementationOnlyInComponentGrammarTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.java";
  }

  @(KeywordAlternativeNameTest.java):JavaSourceFile{
    simpleName = "KeywordAlternativeNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/KeywordAlternativeNameTest.java";
  }

  @(KeywordInvalidNameTest.java):JavaSourceFile{
    simpleName = "KeywordInvalidNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/KeywordInvalidNameTest.java";
  }

  @(LeftRecursiveRulesInBlockTest.java):JavaSourceFile{
    simpleName = "LeftRecursiveRulesInBlockTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/LeftRecursiveRulesInBlockTest.java";
  }

  @(LexNTsNotEmptyTest.java):JavaSourceFile{
    simpleName = "LexNTsNotEmptyTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/LexNTsNotEmptyTest.java";
  }

  @(LexNTsOnlyUseLexNTsTest.java):JavaSourceFile{
    simpleName = "LexNTsOnlyUseLexNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/LexNTsOnlyUseLexNTsTest.java";
  }

  @(MultipleASTRulesTest.java):JavaSourceFile{
    simpleName = "MultipleASTRulesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/MultipleASTRulesTest.java";
  }

  @(NoASTExtendsForClassesTest.java):JavaSourceFile{
    simpleName = "NoASTExtendsForClassesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NoASTExtendsForClassesTest.java";
  }

  @(NoASTRuleForEnumNTsTest.java):JavaSourceFile{
    simpleName = "NoASTRuleForEnumNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NoASTRuleForEnumNTsTest.java";
  }

  @(NoNTInheritanceCycleTest.java):JavaSourceFile{
    simpleName = "NoNTInheritanceCycleTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NoNTInheritanceCycleTest.java";
  }

  @(NTAndASTRuleExtendTypeTest.java):JavaSourceFile{
    simpleName = "NTAndASTRuleExtendTypeTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTAndASTRuleExtendTypeTest.java";
  }

  @(NTDefinedByAtmostOneProductionTest.java):JavaSourceFile{
    simpleName = "NTDefinedByAtmostOneProductionTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTDefinedByAtmostOneProductionTest.java";
  }

  @(NTForASTRuleExistsTest.java):JavaSourceFile{
    simpleName = "NTForASTRuleExistsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTForASTRuleExistsTest.java";
  }

  @(NTNotExtendInterfaceOrExternalNTsTest.java):JavaSourceFile{
    simpleName = "NTNotExtendInterfaceOrExternalNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTNotExtendInterfaceOrExternalNTsTest.java";
  }

  @(NTOnlyExtendsOneNTOrClassTest.java):JavaSourceFile{
    simpleName = "NTOnlyExtendsOneNTOrClassTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTOnlyExtendsOneNTOrClassTest.java";
  }

  @(NTOnlyExtendsOrAstextendsNTOrClassTest.java):JavaSourceFile{
    simpleName = "NTOnlyExtendsOrAstextendsNTOrClassTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTOnlyExtendsOrAstextendsNTOrClassTest.java";
  }

  @(NTOnlyImplementInterfaceNTsTest.java):JavaSourceFile{
    simpleName = "NTOnlyImplementInterfaceNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTOnlyImplementInterfaceNTsTest.java";
  }

  @(NTUniqueIgnoreCaseTest.java):JavaSourceFile{
    simpleName = "NTUniqueIgnoreCaseTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/NTUniqueIgnoreCaseTest.java";
  }

  @(OverridingAbstractNTsHaveNoSuperRulesTest.java):JavaSourceFile{
    simpleName = "OverridingAbstractNTsHaveNoSuperRulesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingAbstractNTsHaveNoSuperRulesTest.java";
  }

  @(OverridingAbstractNTsTest.java):JavaSourceFile{
    simpleName = "OverridingAbstractNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingAbstractNTsTest.java";
  }

  @(OverridingEnumNTsTest.java):JavaSourceFile{
    simpleName = "OverridingEnumNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingEnumNTsTest.java";
  }

  @(OverridingInterfaceNTsTest.java):JavaSourceFile{
    simpleName = "OverridingInterfaceNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingInterfaceNTsTest.java";
  }

  @(OverridingLexNTsTest.java):JavaSourceFile{
    simpleName = "OverridingLexNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingLexNTsTest.java";
  }

  @(OverridingNTsHaveNoSuperRulesTest.java):JavaSourceFile{
    simpleName = "OverridingNTsHaveNoSuperRulesTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingNTsHaveNoSuperRulesTest.java";
  }

  @(OverridingNTsTest.java):JavaSourceFile{
    simpleName = "OverridingNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/OverridingNTsTest.java";
  }

  @(ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.java):JavaSourceFile{
    simpleName = "ProdAndExtendedProdUseSameAttrNameForDiffNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.java";
  }

  @(ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.java):JavaSourceFile{
    simpleName = "ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.java";
  }

  @(ProdStartsWithCapitalTest.java):JavaSourceFile{
    simpleName = "ProdStartsWithCapitalTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ProdStartsWithCapitalTest.java";
  }

  @(ProdWithExtensionMustNotBeOverriddenTest.java):JavaSourceFile{
    simpleName = "ProdWithExtensionMustNotBeOverriddenTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ProdWithExtensionMustNotBeOverriddenTest.java";
  }

  @(ReferencedNTNotDefinedTest.java):JavaSourceFile{
    simpleName = "ReferencedNTNotDefinedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/ReferencedNTNotDefinedTest.java";
  }

  @(SubrulesUseInterfaceNTsTest.java):JavaSourceFile{
    simpleName = "SubrulesUseInterfaceNTsTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/SubrulesUseInterfaceNTsTest.java";
  }

  @(SymbolWithoutNameTest.java):JavaSourceFile{
    simpleName = "SymbolWithoutNameTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/SymbolWithoutNameTest.java";
  }

  @(TerminalEmptyStringTest.java):JavaSourceFile{
    simpleName = "TerminalEmptyStringTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/TerminalEmptyStringTest.java";
  }

  @(UsedLexNTNotDefinedTest.java):JavaSourceFile{
    simpleName = "UsedLexNTNotDefinedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/UsedLexNTNotDefinedTest.java";
  }

  @(UsedNTNotDefinedTest.java):JavaSourceFile{
    simpleName = "UsedNTNotDefinedTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/cocos/UsedNTNotDefinedTest.java";
  }

  @(symboltable!7):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/symboltable";
  }

  @(MontiCoreGrammarSymbolTableCreatorTest.java):JavaSourceFile{
    simpleName = "MontiCoreGrammarSymbolTableCreatorTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/grammar/symboltable/MontiCoreGrammarSymbolTableCreatorTest.java";
  }

  @(GrammarGlobalScopeTestFactory.java):JavaSourceFile{
    simpleName = "GrammarGlobalScopeTestFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/GrammarGlobalScopeTestFactory.java";
  }

  @(MCGrammarLanguageFamilySymbolTableTest.java):JavaSourceFile{
    simpleName = "MCGrammarLanguageFamilySymbolTableTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/MCGrammarLanguageFamilySymbolTableTest.java";
  }

  @(MontiCoreScriptTest.java):JavaSourceFile{
    simpleName = "MontiCoreScriptTest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/src/test/java/de/monticore/MontiCoreScriptTest.java";
  }

  @(resources!9):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources";
  }

  @(cocos!6):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos";
  }

  @(invalid):Directory{
    simpleName = "invalid";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid";
  }

  @(A0276):Directory{
    simpleName = "A0276";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A0276";
  }

  @(A0277):Directory{
    simpleName = "A0277";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A0277";
  }

  @(A0278):Directory{
    simpleName = "A0278";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A0278";
  }

  @(A2025):Directory{
    simpleName = "A2025";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2025";
  }

  @(A2026):Directory{
    simpleName = "A2026";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2026";
  }

  @(A2030):Directory{
    simpleName = "A2030";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2030";
  }

  @(A2031):Directory{
    simpleName = "A2031";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2031";
  }

  @(A2102):Directory{
    simpleName = "A2102";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2102";
  }

  @(A2103):Directory{
    simpleName = "A2103";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2103";
  }

  @(A2106):Directory{
    simpleName = "A2106";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2106";
  }

  @(A2107):Directory{
    simpleName = "A2107";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2107";
  }

  @(A2116):Directory{
    simpleName = "A2116";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A2116";
  }

  @(A4001):Directory{
    simpleName = "A4001";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4001";
  }

  @(A4002):Directory{
    simpleName = "A4002";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4002";
  }

  @(A4003):Directory{
    simpleName = "A4003";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4003";
  }

  @(A4004):Directory{
    simpleName = "A4004";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4004";
  }

  @(A4005):Directory{
    simpleName = "A4005";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4005";
  }

  @(A4006):Directory{
    simpleName = "A4006";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4006";
  }

  @(A4007):Directory{
    simpleName = "A4007";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4007";
  }

  @(A4008):Directory{
    simpleName = "A4008";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4008";
  }

  @(A4009):Directory{
    simpleName = "A4009";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4009";
  }

  @(A4010):Directory{
    simpleName = "A4010";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4010";
  }

  @(A4011):Directory{
    simpleName = "A4011";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4011";
  }

  @(A4012):Directory{
    simpleName = "A4012";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4012";
  }

  @(A4013):Directory{
    simpleName = "A4013";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4013";
  }

  @(A4014):Directory{
    simpleName = "A4014";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4014";
  }

  @(A4015):Directory{
    simpleName = "A4015";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4015";
  }

  @(A4016):Directory{
    simpleName = "A4016";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4016";
  }

  @(A4017):Directory{
    simpleName = "A4017";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4017";
  }

  @(A4018):Directory{
    simpleName = "A4018";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4018";
  }

  @(A4019):Directory{
    simpleName = "A4019";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4019";
  }

  @(A4020):Directory{
    simpleName = "A4020";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4020";
  }

  @(A4021):Directory{
    simpleName = "A4021";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4021";
  }

  @(A4022):Directory{
    simpleName = "A4022";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4022";
  }

  @(A4023):Directory{
    simpleName = "A4023";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4023";
  }

  @(A4024):Directory{
    simpleName = "A4024";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4024";
  }

  @(A4025):Directory{
    simpleName = "A4025";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4025";
  }

  @(A4026):Directory{
    simpleName = "A4026";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4026";
  }

  @(A4027):Directory{
    simpleName = "A4027";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4027";
  }

  @(A4028):Directory{
    simpleName = "A4028";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4028";
  }

  @(A4029):Directory{
    simpleName = "A4029";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4029";
  }

  @(A4030):Directory{
    simpleName = "A4030";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4030";
  }

  @(A4031):Directory{
    simpleName = "A4031";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4031";
  }

  @(A4032):Directory{
    simpleName = "A4032";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4032";
  }

  @(A4033):Directory{
    simpleName = "A4033";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4033";
  }

  @(A4041):Directory{
    simpleName = "A4041";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4041";
  }

  @(A4047):Directory{
    simpleName = "A4047";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4047";
  }

  @(A4054):Directory{
    simpleName = "A4054";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4054";
  }

  @(A4056):Directory{
    simpleName = "A4056";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4056";
  }

  @(A4058):Directory{
    simpleName = "A4058";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4058";
  }

  @(A4097):Directory{
    simpleName = "A4097";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/invalid/A4097";
  }

  @(valid):Directory{
    simpleName = "valid";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/valid";
  }

  @(enum):Directory{
    simpleName = "enum";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/cocos/valid/enum";
  }

  @(de!16):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de";
  }

  @(monticore!16):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore";
  }

  @(emf!6):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/emf";
  }

  @(expression!3):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/expression";
  }

  @(fautomaton!3):Directory{
    simpleName = "fautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/fautomaton";
  }

  @(action!2):Directory{
    simpleName = "action";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/fautomaton/action";
  }

  @(automaton!12):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/fautomaton/automaton";
  }

  @(automatonwithaction!2):Directory{
    simpleName = "automatonwithaction";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/fautomaton/automatonwithaction";
  }

  @(groovy):Directory{
    simpleName = "groovy";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/groovy";
  }

  @(inherited):Directory{
    simpleName = "inherited";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/inherited";
  }

  @(sub!2):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/inherited/sub";
  }

  @(subsub):Directory{
    simpleName = "subsub";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/inherited/subsub";
  }

  @(interfaces!3):Directory{
    simpleName = "interfaces";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/interfaces";
  }

  @(script):Directory{
    simpleName = "script";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/script";
  }

  @(statechart!3):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/statechart";
  }

  @(sub!3):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/statechart/sub";
  }

  @(symboltable!8):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/symboltable";
  }

  @(visitors):Directory{
    simpleName = "visitors";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/de/monticore/visitors";
  }

  @(mc!6):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc";
  }

  @(grammars!4):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars";
  }

  @(common!2):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/common";
  }

  @(concepts!3):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts";
  }

  @(antlr!5):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts/antlr";
  }

  @(attributes!2):Directory{
    simpleName = "attributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts/attributes";
  }

  @(texteditor!3):Directory{
    simpleName = "texteditor";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts/texteditor";
  }

  @(texteditoringrammar!2):Directory{
    simpleName = "texteditoringrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts/texteditoringrammar";
  }

  @(visualoutline!2):Directory{
    simpleName = "visualoutline";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/concepts/visualoutline";
  }

  @(lexicals!2):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/lexicals";
  }

  @(literals!2):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/literals";
  }

  @(types!5):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/grammars/types";
  }

  @(robot!3):Directory{
    simpleName = "robot";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc/robot";
  }

  @(mc2cdtransformation):Directory{
    simpleName = "mc2cdtransformation";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc2cdtransformation";
  }

  @(super):Directory{
    simpleName = "super";
    nameExtension = "";
    fullName = "sources/monticore-generator/src/test/resources/mc2cdtransformation/super";
  }

  @(target!3):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-generator/target";
  }

  @(classes!3):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes";
  }

  @(ast!7):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast";
  }

  @(additionalmethods!3):Directory{
    simpleName = "additionalmethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods";
  }

  @(Accept.ftl!2):FreeMarkerTemplate{
    simpleName = "Accept";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/Accept.ftl";
  }

  @(AcceptSuper.ftl!2):FreeMarkerTemplate{
    simpleName = "AcceptSuper";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/AcceptSuper.ftl";
  }

  @(DeepCloneWithParameters.ftl!2):FreeMarkerTemplate{
    simpleName = "DeepCloneWithParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/DeepCloneWithParameters.ftl";
  }

  @(DeepEqualsWithComments.ftl!2):FreeMarkerTemplate{
    simpleName = "DeepEqualsWithComments";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/DeepEqualsWithComments.ftl";
  }

  @(DeepEqualsWithOrder.ftl!2):FreeMarkerTemplate{
    simpleName = "DeepEqualsWithOrder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/DeepEqualsWithOrder.ftl";
  }

  @(EqualAttributes.ftl!2):FreeMarkerTemplate{
    simpleName = "EqualAttributes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/EqualAttributes.ftl";
  }

  @(EqualsWithComments.ftl!2):FreeMarkerTemplate{
    simpleName = "EqualsWithComments";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/EqualsWithComments.ftl";
  }

  @(Get.ftl!2):FreeMarkerTemplate{
    simpleName = "Get";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/Get.ftl";
  }

  @(GetChildren.ftl!2):FreeMarkerTemplate{
    simpleName = "GetChildren";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/GetChildren.ftl";
  }

  @(GetOpt.ftl!2):FreeMarkerTemplate{
    simpleName = "GetOpt";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/GetOpt.ftl";
  }

  @(GetReferencedNode.ftl!2):FreeMarkerTemplate{
    simpleName = "GetReferencedNode";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/GetReferencedNode.ftl";
  }

  @(GetReferencedSymbol.ftl!2):FreeMarkerTemplate{
    simpleName = "GetReferencedSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/GetReferencedSymbol.ftl";
  }

  @(IsPresent.ftl!2):FreeMarkerTemplate{
    simpleName = "IsPresent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/IsPresent.ftl";
  }

  @(ListAttributeMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "ListAttributeMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/ListAttributeMethod.ftl";
  }

  @(RemoveChild.ftl!2):FreeMarkerTemplate{
    simpleName = "RemoveChild";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/RemoveChild.ftl";
  }

  @(Set.ftl!3):FreeMarkerTemplate{
    simpleName = "Set";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/Set.ftl";
  }

  @(SetAbsent.ftl!2):FreeMarkerTemplate{
    simpleName = "SetAbsent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/SetAbsent.ftl";
  }

  @(SetOpt.ftl!2):FreeMarkerTemplate{
    simpleName = "SetOpt";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/additionalmethods/SetOpt.ftl";
  }

  @(AstBuilder.ftl!2):FreeMarkerTemplate{
    simpleName = "AstBuilder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstBuilder.ftl";
  }

  @(AstBuilderAttributeSetter.ftl!2):FreeMarkerTemplate{
    simpleName = "AstBuilderAttributeSetter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstBuilderAttributeSetter.ftl";
  }

  @(AstClass.ftl!2):FreeMarkerTemplate{
    simpleName = "AstClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstClass.ftl";
  }

  @(ASTConstantsClass.ftl!2):FreeMarkerTemplate{
    simpleName = "ASTConstantsClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ASTConstantsClass.ftl";
  }

  @(AstEnum.ftl!2):FreeMarkerTemplate{
    simpleName = "AstEnum";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstEnum.ftl";
  }

  @(AstExtendedInterfaces.ftl!2):FreeMarkerTemplate{
    simpleName = "AstExtendedInterfaces";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstExtendedInterfaces.ftl";
  }

  @(AstImports.ftl!2):FreeMarkerTemplate{
    simpleName = "AstImports";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstImports.ftl";
  }

  @(AstInterface.ftl!2):FreeMarkerTemplate{
    simpleName = "AstInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstInterface.ftl";
  }

  @(AstInterfaceContent.ftl!2):FreeMarkerTemplate{
    simpleName = "AstInterfaceContent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstInterfaceContent.ftl";
  }

  @(AstMill.ftl!2):FreeMarkerTemplate{
    simpleName = "AstMill";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstMill.ftl";
  }

  @(AstMillBuilderMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "AstMillBuilderMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstMillBuilderMethod.ftl";
  }

  @(ASTMillDelegateMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "ASTMillDelegateMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ASTMillDelegateMethod.ftl";
  }

  @(AstMillForSuper.ftl!2):FreeMarkerTemplate{
    simpleName = "AstMillForSuper";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstMillForSuper.ftl";
  }

  @(ASTMillInitMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "ASTMillInitMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ASTMillInitMethod.ftl";
  }

  @(ASTNodeBase.ftl!2):FreeMarkerTemplate{
    simpleName = "ASTNodeBase";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ASTNodeBase.ftl";
  }

  @(AstNodeFactory.ftl!3):FreeMarkerTemplate{
    simpleName = "AstNodeFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstNodeFactory.ftl";
  }

  @(AstSuperInterfaces.ftl!2):FreeMarkerTemplate{
    simpleName = "AstSuperInterfaces";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstSuperInterfaces.ftl";
  }

  @(AstSuperTypes.ftl!2):FreeMarkerTemplate{
    simpleName = "AstSuperTypes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/AstSuperTypes.ftl";
  }

  @(Attribute.ftl!3):FreeMarkerTemplate{
    simpleName = "Attribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/Attribute.ftl";
  }

  @(BuilderAttribute.ftl!2):FreeMarkerTemplate{
    simpleName = "BuilderAttribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/BuilderAttribute.ftl";
  }

  @(BuilderConstructorParametersDeclaration.ftl!2):FreeMarkerTemplate{
    simpleName = "BuilderConstructorParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/BuilderConstructorParametersDeclaration.ftl";
  }

  @(Class.ftl!2):FreeMarkerTemplate{
    simpleName = "Class";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/Class.ftl";
  }

  @(ClassContent.ftl!2):FreeMarkerTemplate{
    simpleName = "ClassContent";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ClassContent.ftl";
  }

  @(ClassMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "ClassMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ClassMethod.ftl";
  }

  @(Constant.ftl!2):FreeMarkerTemplate{
    simpleName = "Constant";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/Constant.ftl";
  }

  @(Constructor.ftl!2):FreeMarkerTemplate{
    simpleName = "Constructor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/Constructor.ftl";
  }

  @(ConstructorAttributesSetter.ftl!2):FreeMarkerTemplate{
    simpleName = "ConstructorAttributesSetter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ConstructorAttributesSetter.ftl";
  }

  @(ConstructorParametersDeclaration.ftl!2):FreeMarkerTemplate{
    simpleName = "ConstructorParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ConstructorParametersDeclaration.ftl";
  }

  @(ConstructorParametersDeclaration2.ftl!2):FreeMarkerTemplate{
    simpleName = "ConstructorParametersDeclaration2";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ConstructorParametersDeclaration2.ftl";
  }

  @(EmptyMethodBody.ftl!2):FreeMarkerTemplate{
    simpleName = "EmptyMethodBody";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/EmptyMethodBody.ftl";
  }

  @(ErrorIfNull.ftl!3):FreeMarkerTemplate{
    simpleName = "ErrorIfNull";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ErrorIfNull.ftl";
  }

  @(factorymethods!2):Directory{
    simpleName = "factorymethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods";
  }

  @(Create.ftl!2):FreeMarkerTemplate{
    simpleName = "Create";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/Create.ftl";
  }

  @(CreateDelegate.ftl!2):FreeMarkerTemplate{
    simpleName = "CreateDelegate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/CreateDelegate.ftl";
  }

  @(CreateWithParams.ftl!2):FreeMarkerTemplate{
    simpleName = "CreateWithParams";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/CreateWithParams.ftl";
  }

  @(CreateWithParamsDelegate.ftl!2):FreeMarkerTemplate{
    simpleName = "CreateWithParamsDelegate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/CreateWithParamsDelegate.ftl";
  }

  @(DoCreate.ftl!2):FreeMarkerTemplate{
    simpleName = "DoCreate";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/DoCreate.ftl";
  }

  @(DoCreateWithParams.ftl!2):FreeMarkerTemplate{
    simpleName = "DoCreateWithParams";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/DoCreateWithParams.ftl";
  }

  @(ErrorIfNull.ftl!4):FreeMarkerTemplate{
    simpleName = "ErrorIfNull";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/factorymethods/ErrorIfNull.ftl";
  }

  @(Interface.ftl!2):FreeMarkerTemplate{
    simpleName = "Interface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/Interface.ftl";
  }

  @(ParametersDeclaration.ftl!2):FreeMarkerTemplate{
    simpleName = "ParametersDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast/ParametersDeclaration.ftl";
  }

  @(ast_emf!3):Directory{
    simpleName = "ast_emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast_emf";
  }

  @(additionalmethods!4):Directory{
    simpleName = "additionalmethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods";
  }

  @(EGet.ftl!2):FreeMarkerTemplate{
    simpleName = "EGet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/EGet.ftl";
  }

  @(EIsSet.ftl!2):FreeMarkerTemplate{
    simpleName = "EIsSet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/EIsSet.ftl";
  }

  @(ESet.ftl!2):FreeMarkerTemplate{
    simpleName = "ESet";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/ESet.ftl";
  }

  @(EStructuralFeature.ftl!2):FreeMarkerTemplate{
    simpleName = "EStructuralFeature";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/EStructuralFeature.ftl";
  }

  @(EToString.ftl!2):FreeMarkerTemplate{
    simpleName = "EToString";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/EToString.ftl";
  }

  @(EUnset.ftl!2):FreeMarkerTemplate{
    simpleName = "EUnset";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/EUnset.ftl";
  }

  @(Set.ftl!4):FreeMarkerTemplate{
    simpleName = "Set";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/additionalmethods/Set.ftl";
  }

  @(AstEImports.ftl!2):FreeMarkerTemplate{
    simpleName = "AstEImports";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/AstEImports.ftl";
  }

  @(AstNodeFactory.ftl!4):FreeMarkerTemplate{
    simpleName = "AstNodeFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/AstNodeFactory.ftl";
  }

  @(EConstantsEnum.ftl!2):FreeMarkerTemplate{
    simpleName = "EConstantsEnum";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/EConstantsEnum.ftl";
  }

  @(EFactory.ftl!2):FreeMarkerTemplate{
    simpleName = "EFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/EFactory.ftl";
  }

  @(EPackage.ftl!2):FreeMarkerTemplate{
    simpleName = "EPackage";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/EPackage.ftl";
  }

  @(EPackageImpl.ftl!2):FreeMarkerTemplate{
    simpleName = "EPackageImpl";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/EPackageImpl.ftl";
  }

  @(epackagemethods!2):Directory{
    simpleName = "epackagemethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/ast_emf/epackagemethods";
  }

  @(CreatePackageContents.ftl!2):FreeMarkerTemplate{
    simpleName = "CreatePackageContents";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/epackagemethods/CreatePackageContents.ftl";
  }

  @(InitializePackageContents.ftl!2):FreeMarkerTemplate{
    simpleName = "InitializePackageContents";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/ast_emf/epackagemethods/InitializePackageContents.ftl";
  }

  @(cocos!7):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/cocos";
  }

  @(CoCoChecker.ftl!2):FreeMarkerTemplate{
    simpleName = "CoCoChecker";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/cocos/CoCoChecker.ftl";
  }

  @(CoCoInterface.ftl!2):FreeMarkerTemplate{
    simpleName = "CoCoInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/cocos/CoCoInterface.ftl";
  }

  @(de!17):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de";
  }

  @(monticore!17):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore";
  }

  @(codegen!3):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen";
  }

  @(cd2java!3):Directory{
    simpleName = "cd2java";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java";
  }

  @(ast!8):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast";
  }

  @(AstAdditionalAttributes.class):JavaClassFile{
    simpleName = "AstAdditionalAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstAdditionalAttributes.class";
  }

  @(AstAdditionalMethods.class):JavaClassFile{
    simpleName = "AstAdditionalMethods";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstAdditionalMethods.class";
  }

  @(AstGenerator.class):JavaClassFile{
    simpleName = "AstGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstGenerator.class";
  }

  @(AstGeneratorHelper$1.class):JavaClassFile{
    simpleName = "AstGeneratorHelper$1";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstGeneratorHelper$1.class";
  }

  @(AstGeneratorHelper$2.class):JavaClassFile{
    simpleName = "AstGeneratorHelper$2";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstGeneratorHelper$2.class";
  }

  @(AstGeneratorHelper$Cd2JavaTypeConverter.class):JavaClassFile{
    simpleName = "AstGeneratorHelper$Cd2JavaTypeConverter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstGeneratorHelper$Cd2JavaTypeConverter.class";
  }

  @(AstGeneratorHelper.class):JavaClassFile{
    simpleName = "AstGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstGeneratorHelper.class";
  }

  @(AstListMethods.class):JavaClassFile{
    simpleName = "AstListMethods";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/AstListMethods.class";
  }

  @(CdDecorator.class):JavaClassFile{
    simpleName = "CdDecorator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast/CdDecorator.class";
  }

  @(ast_emf!4):Directory{
    simpleName = "ast_emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf";
  }

  @(AstEmfGeneratorHelper$1.class):JavaClassFile{
    simpleName = "AstEmfGeneratorHelper$1";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/AstEmfGeneratorHelper$1.class";
  }

  @(AstEmfGeneratorHelper$2.class):JavaClassFile{
    simpleName = "AstEmfGeneratorHelper$2";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/AstEmfGeneratorHelper$2.class";
  }

  @(AstEmfGeneratorHelper.class):JavaClassFile{
    simpleName = "AstEmfGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/AstEmfGeneratorHelper.class";
  }

  @(CdEmfDecorator$ETypeCollector.class):JavaClassFile{
    simpleName = "CdEmfDecorator$ETypeCollector";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/CdEmfDecorator$ETypeCollector.class";
  }

  @(CdEmfDecorator.class):JavaClassFile{
    simpleName = "CdEmfDecorator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/CdEmfDecorator.class";
  }

  @(EmfAttribute.class):JavaClassFile{
    simpleName = "EmfAttribute";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/ast_emf/EmfAttribute.class";
  }

  @(cocos!8):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/cocos";
  }

  @(CoCoGenerator.class):JavaClassFile{
    simpleName = "CoCoGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/cocos/CoCoGenerator.class";
  }

  @(CoCoGeneratorHelper.class):JavaClassFile{
    simpleName = "CoCoGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/cocos/CoCoGeneratorHelper.class";
  }

  @(od!3):Directory{
    simpleName = "od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/od";
  }

  @(ODGenerator.class):JavaClassFile{
    simpleName = "ODGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/od/ODGenerator.class";
  }

  @(types!6):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/types";
  }

  @(TypeResolverGenerator.class):JavaClassFile{
    simpleName = "TypeResolverGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/types/TypeResolverGenerator.class";
  }

  @(TypeResolverGeneratorHelper.class):JavaClassFile{
    simpleName = "TypeResolverGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/types/TypeResolverGeneratorHelper.class";
  }

  @(visitor!6):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/visitor";
  }

  @(VisitorGenerator.class):JavaClassFile{
    simpleName = "VisitorGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/visitor/VisitorGenerator.class";
  }

  @(VisitorGeneratorHelper.class):JavaClassFile{
    simpleName = "VisitorGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/cd2java/visitor/VisitorGeneratorHelper.class";
  }

  @(GeneratorHelper.class):JavaClassFile{
    simpleName = "GeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/GeneratorHelper.class";
  }

  @(mc2cd!3):Directory{
    simpleName = "mc2cd";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd";
  }

  @(AttributeCategory.class):JavaClassFile{
    simpleName = "AttributeCategory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/AttributeCategory.class";
  }

  @(manipul!3):Directory{
    simpleName = "manipul";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul";
  }

  @(AddAttributesOfExtendedInterfacesManipulation.class):JavaClassFile{
    simpleName = "AddAttributesOfExtendedInterfacesManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/AddAttributesOfExtendedInterfacesManipulation.class";
  }

  @(BaseInterfaceAddingManipulation.class):JavaClassFile{
    simpleName = "BaseInterfaceAddingManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/BaseInterfaceAddingManipulation.class";
  }

  @(CDManipulation.class):JavaClassFile{
    simpleName = "CDManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/CDManipulation.class";
  }

  @(JavaAndCdConformNameManipulation.class):JavaClassFile{
    simpleName = "JavaAndCdConformNameManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/JavaAndCdConformNameManipulation.class";
  }

  @(ListInitializingManipulation.class):JavaClassFile{
    simpleName = "ListInitializingManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/ListInitializingManipulation.class";
  }

  @(RemoveRedundantAttributesManipulation.class):JavaClassFile{
    simpleName = "RemoveRedundantAttributesManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/RemoveRedundantAttributesManipulation.class";
  }

  @(RemoveRedundantSupertypesManipulation.class):JavaClassFile{
    simpleName = "RemoveRedundantSupertypesManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/RemoveRedundantSupertypesManipulation.class";
  }

  @(VisibilityManipulation.class):JavaClassFile{
    simpleName = "VisibilityManipulation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/manipul/VisibilityManipulation.class";
  }

  @(MC2CDStereotypes.class):JavaClassFile{
    simpleName = "MC2CDStereotypes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/MC2CDStereotypes.class";
  }

  @(MC2CDTransformation.class):JavaClassFile{
    simpleName = "MC2CDTransformation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/MC2CDTransformation.class";
  }

  @(MCGrammarSymbolTableHelper.class):JavaClassFile{
    simpleName = "MCGrammarSymbolTableHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/MCGrammarSymbolTableHelper.class";
  }

  @(TransformationHelper.class):JavaClassFile{
    simpleName = "TransformationHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/TransformationHelper.class";
  }

  @(transl!3):Directory{
    simpleName = "transl";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl";
  }

  @(AbstractProdModifierTranslation.class):JavaClassFile{
    simpleName = "AbstractProdModifierTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/AbstractProdModifierTranslation.class";
  }

  @(ASTRuleInheritanceTranslation.class):JavaClassFile{
    simpleName = "ASTRuleInheritanceTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ASTRuleInheritanceTranslation.class";
  }

  @(ConstantsTranslation.class):JavaClassFile{
    simpleName = "ConstantsTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ConstantsTranslation.class";
  }

  @(ConstantTypeTranslation.class):JavaClassFile{
    simpleName = "ConstantTypeTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ConstantTypeTranslation.class";
  }

  @(CreateConstantAttributeTranslation.class):JavaClassFile{
    simpleName = "CreateConstantAttributeTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/CreateConstantAttributeTranslation.class";
  }

  @(creation!2):Directory{
    simpleName = "creation";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation";
  }

  @(AbstractProdsToCDClasses.class):JavaClassFile{
    simpleName = "AbstractProdsToCDClasses";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/AbstractProdsToCDClasses.class";
  }

  @(ASTRulesToCDClassesAndCDInterfaces.class):JavaClassFile{
    simpleName = "ASTRulesToCDClassesAndCDInterfaces";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/ASTRulesToCDClassesAndCDInterfaces.class";
  }

  @(AttributeInASTsToCDAttributes.class):JavaClassFile{
    simpleName = "AttributeInASTsToCDAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/AttributeInASTsToCDAttributes.class";
  }

  @(CDASTCreator.class):JavaClassFile{
    simpleName = "CDASTCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/CDASTCreator.class";
  }

  @(ClassProdsToCDClasses.class):JavaClassFile{
    simpleName = "ClassProdsToCDClasses";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/ClassProdsToCDClasses.class";
  }

  @(EnumProdsToCDEnums.class):JavaClassFile{
    simpleName = "EnumProdsToCDEnums";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/EnumProdsToCDEnums.class";
  }

  @(ExternalProdsToCDInterfaces.class):JavaClassFile{
    simpleName = "ExternalProdsToCDInterfaces";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/ExternalProdsToCDInterfaces.class";
  }

  @(GrammarToCDDefinition.class):JavaClassFile{
    simpleName = "GrammarToCDDefinition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/GrammarToCDDefinition.class";
  }

  @(InterfaceProdsToCDInterfaces.class):JavaClassFile{
    simpleName = "InterfaceProdsToCDInterfaces";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/InterfaceProdsToCDInterfaces.class";
  }

  @(NonTerminalsToCDAttributes.class):JavaClassFile{
    simpleName = "NonTerminalsToCDAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/NonTerminalsToCDAttributes.class";
  }

  @(TerminalsToCDAttributes.class):JavaClassFile{
    simpleName = "TerminalsToCDAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/creation/TerminalsToCDAttributes.class";
  }

  @(EnumTranslation.class):JavaClassFile{
    simpleName = "EnumTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/EnumTranslation.class";
  }

  @(ExtendsTranslation.class):JavaClassFile{
    simpleName = "ExtendsTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ExtendsTranslation.class";
  }

  @(ExternalImplementationTranslation.class):JavaClassFile{
    simpleName = "ExternalImplementationTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ExternalImplementationTranslation.class";
  }

  @(ImplementsTranslation.class):JavaClassFile{
    simpleName = "ImplementsTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ImplementsTranslation.class";
  }

  @(InheritedAttributesTranslation.class):JavaClassFile{
    simpleName = "InheritedAttributesTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/InheritedAttributesTranslation.class";
  }

  @(MC2CDTranslation.class):JavaClassFile{
    simpleName = "MC2CDTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/MC2CDTranslation.class";
  }

  @(MethodTranslation.class):JavaClassFile{
    simpleName = "MethodTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/MethodTranslation.class";
  }

  @(MultiplicityTranslation.class):JavaClassFile{
    simpleName = "MultiplicityTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/MultiplicityTranslation.class";
  }

  @(NameTranslation.class):JavaClassFile{
    simpleName = "NameTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/NameTranslation.class";
  }

  @(NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.class):JavaClassFile{
    simpleName = "NonTerminalsWithSymbolReferenceToCDAttributeStereotypes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.class";
  }

  @(OverridingClassProdTranslation.class):JavaClassFile{
    simpleName = "OverridingClassProdTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/OverridingClassProdTranslation.class";
  }

  @(PackageTranslation.class):JavaClassFile{
    simpleName = "PackageTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/PackageTranslation.class";
  }

  @(ReferenceTypeTranslation.class):JavaClassFile{
    simpleName = "ReferenceTypeTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/ReferenceTypeTranslation.class";
  }

  @(RemoveOverriddenAttributesTranslation.class):JavaClassFile{
    simpleName = "RemoveOverriddenAttributesTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/RemoveOverriddenAttributesTranslation.class";
  }

  @(StarImportSuperGrammarTranslation.class):JavaClassFile{
    simpleName = "StarImportSuperGrammarTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/mc2cd/transl/StarImportSuperGrammarTranslation.class";
  }

  @(parser!5):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser";
  }

  @(antlr!6):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr";
  }

  @(AntlrTool.class):JavaClassFile{
    simpleName = "AntlrTool";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/AntlrTool.class";
  }

  @(ASTConstructionActions.class):JavaClassFile{
    simpleName = "ASTConstructionActions";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/ASTConstructionActions.class";
  }

  @(AttributeCardinalityConstraint.class):JavaClassFile{
    simpleName = "AttributeCardinalityConstraint";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/AttributeCardinalityConstraint.class";
  }

  @(Grammar2Antlr$NodePair.class):JavaClassFile{
    simpleName = "Grammar2Antlr$NodePair";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/Grammar2Antlr$NodePair.class";
  }

  @(Grammar2Antlr.class):JavaClassFile{
    simpleName = "Grammar2Antlr";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/Grammar2Antlr.class";
  }

  @(SourcePositionActions.class):JavaClassFile{
    simpleName = "SourcePositionActions";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/antlr/SourcePositionActions.class";
  }

  @(Languages.class):JavaClassFile{
    simpleName = "Languages";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/Languages.class";
  }

  @(ParserGenerator.class):JavaClassFile{
    simpleName = "ParserGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/ParserGenerator.class";
  }

  @(ParserGeneratorHelper.class):JavaClassFile{
    simpleName = "ParserGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/parser/ParserGeneratorHelper.class";
  }

  @(symboltable!9):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable";
  }

  @(CommonModelingLanguageGenerator.class):JavaClassFile{
    simpleName = "CommonModelingLanguageGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonModelingLanguageGenerator.class";
  }

  @(CommonModelLoaderGenerator.class):JavaClassFile{
    simpleName = "CommonModelLoaderGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonModelLoaderGenerator.class";
  }

  @(CommonModelNameCalculatorGenerator.class):JavaClassFile{
    simpleName = "CommonModelNameCalculatorGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonModelNameCalculatorGenerator.class";
  }

  @(CommonResolvingFilterGenerator.class):JavaClassFile{
    simpleName = "CommonResolvingFilterGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonResolvingFilterGenerator.class";
  }

  @(CommonScopeSpanningSymbolGenerator.class):JavaClassFile{
    simpleName = "CommonScopeSpanningSymbolGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonScopeSpanningSymbolGenerator.class";
  }

  @(CommonSymbolGenerator.class):JavaClassFile{
    simpleName = "CommonSymbolGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonSymbolGenerator.class";
  }

  @(CommonSymbolKindGenerator.class):JavaClassFile{
    simpleName = "CommonSymbolKindGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonSymbolKindGenerator.class";
  }

  @(CommonSymbolMillGenerator.class):JavaClassFile{
    simpleName = "CommonSymbolMillGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonSymbolMillGenerator.class";
  }

  @(CommonSymbolReferenceGenerator.class):JavaClassFile{
    simpleName = "CommonSymbolReferenceGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonSymbolReferenceGenerator.class";
  }

  @(CommonSymbolTableCreatorGenerator.class):JavaClassFile{
    simpleName = "CommonSymbolTableCreatorGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/CommonSymbolTableCreatorGenerator.class";
  }

  @(ModelingLanguageGenerator.class):JavaClassFile{
    simpleName = "ModelingLanguageGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/ModelingLanguageGenerator.class";
  }

  @(ModelLoaderGenerator.class):JavaClassFile{
    simpleName = "ModelLoaderGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/ModelLoaderGenerator.class";
  }

  @(ModelNameCalculatorGenerator.class):JavaClassFile{
    simpleName = "ModelNameCalculatorGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/ModelNameCalculatorGenerator.class";
  }

  @(ResolvingFilterGenerator.class):JavaClassFile{
    simpleName = "ResolvingFilterGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/ResolvingFilterGenerator.class";
  }

  @(ScopeSpanningSymbolGenerator.class):JavaClassFile{
    simpleName = "ScopeSpanningSymbolGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/ScopeSpanningSymbolGenerator.class";
  }

  @(SymbolGenerator.class):JavaClassFile{
    simpleName = "SymbolGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolGenerator.class";
  }

  @(SymbolKindGenerator.class):JavaClassFile{
    simpleName = "SymbolKindGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolKindGenerator.class";
  }

  @(SymbolMillGenerator.class):JavaClassFile{
    simpleName = "SymbolMillGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolMillGenerator.class";
  }

  @(SymbolReferenceGenerator.class):JavaClassFile{
    simpleName = "SymbolReferenceGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolReferenceGenerator.class";
  }

  @(SymbolTableCreatorGenerator.class):JavaClassFile{
    simpleName = "SymbolTableCreatorGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolTableCreatorGenerator.class";
  }

  @(SymbolTableGenerator.class):JavaClassFile{
    simpleName = "SymbolTableGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolTableGenerator.class";
  }

  @(SymbolTableGeneratorBuilder.class):JavaClassFile{
    simpleName = "SymbolTableGeneratorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolTableGeneratorBuilder.class";
  }

  @(SymbolTableGeneratorHelper.class):JavaClassFile{
    simpleName = "SymbolTableGeneratorHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/codegen/symboltable/SymbolTableGeneratorHelper.class";
  }

  @(grammar!8):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar";
  }

  @(cocos!9):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos";
  }

  @(AbstractNTNotExtendInterfaceOrExternalNTs.class):JavaClassFile{
    simpleName = "AbstractNTNotExtendInterfaceOrExternalNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AbstractNTNotExtendInterfaceOrExternalNTs.class";
  }

  @(AbstractNTOnlyExtendOrAstextendNTOrClass.class):JavaClassFile{
    simpleName = "AbstractNTOnlyExtendOrAstextendNTOrClass";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AbstractNTOnlyExtendOrAstextendNTOrClass.class";
  }

  @(AbstractNTOnlyExtendsOneNTOrClass.class):JavaClassFile{
    simpleName = "AbstractNTOnlyExtendsOneNTOrClass";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOneNTOrClass.class";
  }

  @(AbstractNTOnlyImplementInterfaceNTs.class):JavaClassFile{
    simpleName = "AbstractNTOnlyImplementInterfaceNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AbstractNTOnlyImplementInterfaceNTs.class";
  }

  @(AbstractNTWithoutExtensionOnlyInComponentGrammar.class):JavaClassFile{
    simpleName = "AbstractNTWithoutExtensionOnlyInComponentGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AbstractNTWithoutExtensionOnlyInComponentGrammar.class";
  }

  @(ASTRuleAndNTUseSameAttrNameForDiffNTs.class):JavaClassFile{
    simpleName = "ASTRuleAndNTUseSameAttrNameForDiffNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ASTRuleAndNTUseSameAttrNameForDiffNTs.class";
  }

  @(AttributeNameLowerCase.class):JavaClassFile{
    simpleName = "AttributeNameLowerCase";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/AttributeNameLowerCase.class";
  }

  @(DuplicatedEnumConstant.class):JavaClassFile{
    simpleName = "DuplicatedEnumConstant";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/DuplicatedEnumConstant.class";
  }

  @(DuplicatedSymbolDefinitionInProd.class):JavaClassFile{
    simpleName = "DuplicatedSymbolDefinitionInProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/DuplicatedSymbolDefinitionInProd.class";
  }

  @(ExternalNTOnlyInComponentGrammar.class):JavaClassFile{
    simpleName = "ExternalNTOnlyInComponentGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ExternalNTOnlyInComponentGrammar.class";
  }

  @(GrammarCoCos.class):JavaClassFile{
    simpleName = "GrammarCoCos";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/GrammarCoCos.class";
  }

  @(GrammarInheritanceCycle.class):JavaClassFile{
    simpleName = "GrammarInheritanceCycle";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/GrammarInheritanceCycle.class";
  }

  @(GrammarNameUpperCase.class):JavaClassFile{
    simpleName = "GrammarNameUpperCase";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/GrammarNameUpperCase.class";
  }

  @(InterfaceNTOnlyExtendInterfaceNTs.class):JavaClassFile{
    simpleName = "InterfaceNTOnlyExtendInterfaceNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/InterfaceNTOnlyExtendInterfaceNTs.class";
  }

  @(InterfaceNTWithoutImplementationOnlyInComponentGrammar.class):JavaClassFile{
    simpleName = "InterfaceNTWithoutImplementationOnlyInComponentGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/InterfaceNTWithoutImplementationOnlyInComponentGrammar.class";
  }

  @(KeywordAlternativeName.class):JavaClassFile{
    simpleName = "KeywordAlternativeName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/KeywordAlternativeName.class";
  }

  @(KeywordInvalidName.class):JavaClassFile{
    simpleName = "KeywordInvalidName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/KeywordInvalidName.class";
  }

  @(LeftRecursiveRulesInBlock.class):JavaClassFile{
    simpleName = "LeftRecursiveRulesInBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/LeftRecursiveRulesInBlock.class";
  }

  @(LexNTsNotEmpty.class):JavaClassFile{
    simpleName = "LexNTsNotEmpty";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/LexNTsNotEmpty.class";
  }

  @(LexNTsOnlyUseLexNTs.class):JavaClassFile{
    simpleName = "LexNTsOnlyUseLexNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/LexNTsOnlyUseLexNTs.class";
  }

  @(MultipleASTRules.class):JavaClassFile{
    simpleName = "MultipleASTRules";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/MultipleASTRules.class";
  }

  @(NoASTExtendsForClasses.class):JavaClassFile{
    simpleName = "NoASTExtendsForClasses";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NoASTExtendsForClasses.class";
  }

  @(NoASTRuleForEnumNTs.class):JavaClassFile{
    simpleName = "NoASTRuleForEnumNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NoASTRuleForEnumNTs.class";
  }

  @(NoNTInheritanceCycle.class):JavaClassFile{
    simpleName = "NoNTInheritanceCycle";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NoNTInheritanceCycle.class";
  }

  @(NTAndASTRuleExtendType.class):JavaClassFile{
    simpleName = "NTAndASTRuleExtendType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTAndASTRuleExtendType.class";
  }

  @(NTDefinedByAtmostOneProduction.class):JavaClassFile{
    simpleName = "NTDefinedByAtmostOneProduction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTDefinedByAtmostOneProduction.class";
  }

  @(NTForASTRuleExists.class):JavaClassFile{
    simpleName = "NTForASTRuleExists";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTForASTRuleExists.class";
  }

  @(NTNotExtendInterfaceOrExternalNTs.class):JavaClassFile{
    simpleName = "NTNotExtendInterfaceOrExternalNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTNotExtendInterfaceOrExternalNTs.class";
  }

  @(NTOnlyExtendOrAstextendNTOrClass.class):JavaClassFile{
    simpleName = "NTOnlyExtendOrAstextendNTOrClass";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTOnlyExtendOrAstextendNTOrClass.class";
  }

  @(NTOnlyExtendsOneNTOrClass.class):JavaClassFile{
    simpleName = "NTOnlyExtendsOneNTOrClass";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTOnlyExtendsOneNTOrClass.class";
  }

  @(NTOnlyImplementInterfaceNTs.class):JavaClassFile{
    simpleName = "NTOnlyImplementInterfaceNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTOnlyImplementInterfaceNTs.class";
  }

  @(NTUniqueIgnoreCase.class):JavaClassFile{
    simpleName = "NTUniqueIgnoreCase";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/NTUniqueIgnoreCase.class";
  }

  @(OverridingAbstractNTs.class):JavaClassFile{
    simpleName = "OverridingAbstractNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingAbstractNTs.class";
  }

  @(OverridingAbstractNTsHaveNoSuperRules.class):JavaClassFile{
    simpleName = "OverridingAbstractNTsHaveNoSuperRules";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingAbstractNTsHaveNoSuperRules.class";
  }

  @(OverridingEnumNTs.class):JavaClassFile{
    simpleName = "OverridingEnumNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingEnumNTs.class";
  }

  @(OverridingInterfaceNTs.class):JavaClassFile{
    simpleName = "OverridingInterfaceNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingInterfaceNTs.class";
  }

  @(OverridingLexNTs.class):JavaClassFile{
    simpleName = "OverridingLexNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingLexNTs.class";
  }

  @(OverridingNTs.class):JavaClassFile{
    simpleName = "OverridingNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingNTs.class";
  }

  @(OverridingNTsHaveNoSuperRules.class):JavaClassFile{
    simpleName = "OverridingNTsHaveNoSuperRules";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/OverridingNTsHaveNoSuperRules.class";
  }

  @(ProdAndExtendedProdUseSameAttrNameForDiffNTs.class):JavaClassFile{
    simpleName = "ProdAndExtendedProdUseSameAttrNameForDiffNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ProdAndExtendedProdUseSameAttrNameForDiffNTs.class";
  }

  @(ProdAndOverriddenProdUseSameAttrNameForDiffNTs.class):JavaClassFile{
    simpleName = "ProdAndOverriddenProdUseSameAttrNameForDiffNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ProdAndOverriddenProdUseSameAttrNameForDiffNTs.class";
  }

  @(ProdStartsWithCapital.class):JavaClassFile{
    simpleName = "ProdStartsWithCapital";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ProdStartsWithCapital.class";
  }

  @(ProdWithExtensionMustNotBeOverridden.class):JavaClassFile{
    simpleName = "ProdWithExtensionMustNotBeOverridden";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ProdWithExtensionMustNotBeOverridden.class";
  }

  @(ReferencedNTNotDefined.class):JavaClassFile{
    simpleName = "ReferencedNTNotDefined";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/ReferencedNTNotDefined.class";
  }

  @(SubrulesUseInterfaceNTs.class):JavaClassFile{
    simpleName = "SubrulesUseInterfaceNTs";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/SubrulesUseInterfaceNTs.class";
  }

  @(SymbolWithoutName.class):JavaClassFile{
    simpleName = "SymbolWithoutName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/SymbolWithoutName.class";
  }

  @(TerminalEmptyString.class):JavaClassFile{
    simpleName = "TerminalEmptyString";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/TerminalEmptyString.class";
  }

  @(UsedLexNTNotDefined.class):JavaClassFile{
    simpleName = "UsedLexNTNotDefined";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/UsedLexNTNotDefined.class";
  }

  @(UsedNTNotDefined.class):JavaClassFile{
    simpleName = "UsedNTNotDefined";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/cocos/UsedNTNotDefined.class";
  }

  @(concepts!4):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts";
  }

  @(antlr!7):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr";
  }

  @(antlr!8):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr";
  }

  @(_ast!9):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast";
  }

  @(AntlrLiterals.class):JavaClassFile{
    simpleName = "AntlrLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrLiterals.class";
  }

  @(AntlrMill.class):JavaClassFile{
    simpleName = "AntlrMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrMill.class";
  }

  @(AntlrNodeFactory.class):JavaClassFile{
    simpleName = "AntlrNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrNodeFactory.class";
  }

  @(AntlrPackage$Literals.class):JavaClassFile{
    simpleName = "AntlrPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrPackage$Literals.class";
  }

  @(AntlrPackage.class):JavaClassFile{
    simpleName = "AntlrPackage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrPackage.class";
  }

  @(AntlrPackageImpl.class):JavaClassFile{
    simpleName = "AntlrPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrPackageImpl.class";
  }

  @(ASTAntlrLexerAction$AntlrLexerActionBuilder.class):JavaClassFile{
    simpleName = "ASTAntlrLexerAction$AntlrLexerActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrLexerAction$AntlrLexerActionBuilder.class";
  }

  @(ASTAntlrLexerAction.class):JavaClassFile{
    simpleName = "ASTAntlrLexerAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrLexerAction.class";
  }

  @(ASTAntlrNode.class):JavaClassFile{
    simpleName = "ASTAntlrNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrNode.class";
  }

  @(ASTAntlrParserAction$AntlrParserActionBuilder.class):JavaClassFile{
    simpleName = "ASTAntlrParserAction$AntlrParserActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrParserAction$AntlrParserActionBuilder.class";
  }

  @(ASTAntlrParserAction.class):JavaClassFile{
    simpleName = "ASTAntlrParserAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrParserAction.class";
  }

  @(ASTConceptAntlr$ConceptAntlrBuilder.class):JavaClassFile{
    simpleName = "ASTConceptAntlr$ConceptAntlrBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTConceptAntlr$ConceptAntlrBuilder.class";
  }

  @(ASTConceptAntlr.class):JavaClassFile{
    simpleName = "ASTConceptAntlr";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTConceptAntlr.class";
  }

  @(ASTConstantsAntlr.class):JavaClassFile{
    simpleName = "ASTConstantsAntlr";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTConstantsAntlr.class";
  }

  @(ASTJavaCodeExt.class):JavaClassFile{
    simpleName = "ASTJavaCodeExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTJavaCodeExt.class";
  }

  @(_cocos!3):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos";
  }

  @(AntlrAntlrPackageCoCo.class):JavaClassFile{
    simpleName = "AntlrAntlrPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrAntlrPackageCoCo.class";
  }

  @(AntlrASTAntlrLexerActionCoCo.class):JavaClassFile{
    simpleName = "AntlrASTAntlrLexerActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrLexerActionCoCo.class";
  }

  @(AntlrASTAntlrNodeCoCo.class):JavaClassFile{
    simpleName = "AntlrASTAntlrNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrNodeCoCo.class";
  }

  @(AntlrASTAntlrParserActionCoCo.class):JavaClassFile{
    simpleName = "AntlrASTAntlrParserActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrParserActionCoCo.class";
  }

  @(AntlrASTConceptAntlrCoCo.class):JavaClassFile{
    simpleName = "AntlrASTConceptAntlrCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTConceptAntlrCoCo.class";
  }

  @(AntlrASTJavaCodeExtCoCo.class):JavaClassFile{
    simpleName = "AntlrASTJavaCodeExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTJavaCodeExtCoCo.class";
  }

  @(AntlrCoCoChecker.class):JavaClassFile{
    simpleName = "AntlrCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrCoCoChecker.class";
  }

  @(_od!3):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_od";
  }

  @(Antlr2OD.class):JavaClassFile{
    simpleName = "Antlr2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_od/Antlr2OD.class";
  }

  @(_symboltable!12):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_symboltable";
  }

  @(AntlrLanguage.class):JavaClassFile{
    simpleName = "AntlrLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_symboltable/AntlrLanguage.class";
  }

  @(AntlrModelLoader.class):JavaClassFile{
    simpleName = "AntlrModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_symboltable/AntlrModelLoader.class";
  }

  @(_visitor!3):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_visitor";
  }

  @(AntlrDelegatorVisitor.class):JavaClassFile{
    simpleName = "AntlrDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrDelegatorVisitor.class";
  }

  @(AntlrInheritanceVisitor.class):JavaClassFile{
    simpleName = "AntlrInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrInheritanceVisitor.class";
  }

  @(AntlrParentAwareVisitor.class):JavaClassFile{
    simpleName = "AntlrParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrParentAwareVisitor.class";
  }

  @(AntlrVisitor.class):JavaClassFile{
    simpleName = "AntlrVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrVisitor.class";
  }

  @(DirectLeftRecursionDetector.class):JavaClassFile{
    simpleName = "DirectLeftRecursionDetector";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/DirectLeftRecursionDetector.class";
  }

  @(grammar!9):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar";
  }

  @(_ast!10):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast";
  }

  @(ASTAbstractProd$AbstractProdBuilder.class):JavaClassFile{
    simpleName = "ASTAbstractProd$AbstractProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAbstractProd$AbstractProdBuilder.class";
  }

  @(ASTAbstractProd.class):JavaClassFile{
    simpleName = "ASTAbstractProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAbstractProd.class";
  }

  @(ASTActionExt.class):JavaClassFile{
    simpleName = "ASTActionExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTActionExt.class";
  }

  @(ASTAlt$AltBuilder.class):JavaClassFile{
    simpleName = "ASTAlt$AltBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAlt$AltBuilder.class";
  }

  @(ASTAlt.class):JavaClassFile{
    simpleName = "ASTAlt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAlt.class";
  }

  @(ASTAntlrOption$AntlrOptionBuilder.class):JavaClassFile{
    simpleName = "ASTAntlrOption$AntlrOptionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAntlrOption$AntlrOptionBuilder.class";
  }

  @(ASTAntlrOption.class):JavaClassFile{
    simpleName = "ASTAntlrOption";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAntlrOption.class";
  }

  @(ASTAnything$AnythingBuilder.class):JavaClassFile{
    simpleName = "ASTAnything$AnythingBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAnything$AnythingBuilder.class";
  }

  @(ASTAnything.class):JavaClassFile{
    simpleName = "ASTAnything";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAnything.class";
  }

  @(ASTASTRule$ASTRuleBuilder.class):JavaClassFile{
    simpleName = "ASTASTRule$ASTRuleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTASTRule$ASTRuleBuilder.class";
  }

  @(ASTASTRule.class):JavaClassFile{
    simpleName = "ASTASTRule";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTASTRule.class";
  }

  @(ASTAttributeInAST$AttributeInASTBuilder.class):JavaClassFile{
    simpleName = "ASTAttributeInAST$AttributeInASTBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAttributeInAST$AttributeInASTBuilder.class";
  }

  @(ASTAttributeInAST.class):JavaClassFile{
    simpleName = "ASTAttributeInAST";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTAttributeInAST.class";
  }

  @(ASTBlock$BlockBuilder.class):JavaClassFile{
    simpleName = "ASTBlock$BlockBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTBlock$BlockBuilder.class";
  }

  @(ASTBlock.class):JavaClassFile{
    simpleName = "ASTBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTBlock.class";
  }

  @(ASTCard$CardBuilder.class):JavaClassFile{
    simpleName = "ASTCard$CardBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTCard$CardBuilder.class";
  }

  @(ASTCard.class):JavaClassFile{
    simpleName = "ASTCard";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTCard.class";
  }

  @(ASTClassProd$ClassProdBuilder.class):JavaClassFile{
    simpleName = "ASTClassProd$ClassProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTClassProd$ClassProdBuilder.class";
  }

  @(ASTClassProd.class):JavaClassFile{
    simpleName = "ASTClassProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTClassProd.class";
  }

  @(ASTConcept$ConceptBuilder.class):JavaClassFile{
    simpleName = "ASTConcept$ConceptBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConcept$ConceptBuilder.class";
  }

  @(ASTConcept.class):JavaClassFile{
    simpleName = "ASTConcept";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConcept.class";
  }

  @(ASTConstant$ConstantBuilder.class):JavaClassFile{
    simpleName = "ASTConstant$ConstantBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConstant$ConstantBuilder.class";
  }

  @(ASTConstant.class):JavaClassFile{
    simpleName = "ASTConstant";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConstant.class";
  }

  @(ASTConstantGroup$ConstantGroupBuilder.class):JavaClassFile{
    simpleName = "ASTConstantGroup$ConstantGroupBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConstantGroup$ConstantGroupBuilder.class";
  }

  @(ASTConstantGroup.class):JavaClassFile{
    simpleName = "ASTConstantGroup";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConstantGroup.class";
  }

  @(ASTConstantsGrammar.class):JavaClassFile{
    simpleName = "ASTConstantsGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTConstantsGrammar.class";
  }

  @(ASTEnumProd$EnumProdBuilder.class):JavaClassFile{
    simpleName = "ASTEnumProd$EnumProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTEnumProd$EnumProdBuilder.class";
  }

  @(ASTEnumProd.class):JavaClassFile{
    simpleName = "ASTEnumProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTEnumProd.class";
  }

  @(ASTEof$EofBuilder.class):JavaClassFile{
    simpleName = "ASTEof$EofBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTEof$EofBuilder.class";
  }

  @(ASTEof.class):JavaClassFile{
    simpleName = "ASTEof";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTEof.class";
  }

  @(ASTExpressionPredicateExt.class):JavaClassFile{
    simpleName = "ASTExpressionPredicateExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTExpressionPredicateExt.class";
  }

  @(ASTExternalProd$ExternalProdBuilder.class):JavaClassFile{
    simpleName = "ASTExternalProd$ExternalProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTExternalProd$ExternalProdBuilder.class";
  }

  @(ASTExternalProd.class):JavaClassFile{
    simpleName = "ASTExternalProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTExternalProd.class";
  }

  @(ASTFollowOption$FollowOptionBuilder.class):JavaClassFile{
    simpleName = "ASTFollowOption$FollowOptionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTFollowOption$FollowOptionBuilder.class";
  }

  @(ASTFollowOption.class):JavaClassFile{
    simpleName = "ASTFollowOption";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTFollowOption.class";
  }

  @(ASTGenericType.class):JavaClassFile{
    simpleName = "ASTGenericType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGenericType.class";
  }

  @(ASTGenericTypeTOP$GenericTypeBuilder.class):JavaClassFile{
    simpleName = "ASTGenericTypeTOP$GenericTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGenericTypeTOP$GenericTypeBuilder.class";
  }

  @(ASTGenericTypeTOP.class):JavaClassFile{
    simpleName = "ASTGenericTypeTOP";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGenericTypeTOP.class";
  }

  @(ASTGrammarNode.class):JavaClassFile{
    simpleName = "ASTGrammarNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGrammarNode.class";
  }

  @(ASTGrammarOption$GrammarOptionBuilder.class):JavaClassFile{
    simpleName = "ASTGrammarOption$GrammarOptionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGrammarOption$GrammarOptionBuilder.class";
  }

  @(ASTGrammarOption.class):JavaClassFile{
    simpleName = "ASTGrammarOption";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGrammarOption.class";
  }

  @(ASTGrammarReference$GrammarReferenceBuilder.class):JavaClassFile{
    simpleName = "ASTGrammarReference$GrammarReferenceBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGrammarReference$GrammarReferenceBuilder.class";
  }

  @(ASTGrammarReference.class):JavaClassFile{
    simpleName = "ASTGrammarReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTGrammarReference.class";
  }

  @(ASTInterfaceProd$InterfaceProdBuilder.class):JavaClassFile{
    simpleName = "ASTInterfaceProd$InterfaceProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTInterfaceProd$InterfaceProdBuilder.class";
  }

  @(ASTInterfaceProd.class):JavaClassFile{
    simpleName = "ASTInterfaceProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTInterfaceProd.class";
  }

  @(ASTITerminal.class):JavaClassFile{
    simpleName = "ASTITerminal";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTITerminal.class";
  }

  @(ASTLexActionOrPredicate$LexActionOrPredicateBuilder.class):JavaClassFile{
    simpleName = "ASTLexActionOrPredicate$LexActionOrPredicateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexActionOrPredicate$LexActionOrPredicateBuilder.class";
  }

  @(ASTLexActionOrPredicate.class):JavaClassFile{
    simpleName = "ASTLexActionOrPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexActionOrPredicate.class";
  }

  @(ASTLexAlt$LexAltBuilder.class):JavaClassFile{
    simpleName = "ASTLexAlt$LexAltBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexAlt$LexAltBuilder.class";
  }

  @(ASTLexAlt.class):JavaClassFile{
    simpleName = "ASTLexAlt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexAlt.class";
  }

  @(ASTLexAnyChar$LexAnyCharBuilder.class):JavaClassFile{
    simpleName = "ASTLexAnyChar$LexAnyCharBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexAnyChar$LexAnyCharBuilder.class";
  }

  @(ASTLexAnyChar.class):JavaClassFile{
    simpleName = "ASTLexAnyChar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexAnyChar.class";
  }

  @(ASTLexBlock$LexBlockBuilder.class):JavaClassFile{
    simpleName = "ASTLexBlock$LexBlockBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexBlock$LexBlockBuilder.class";
  }

  @(ASTLexBlock.class):JavaClassFile{
    simpleName = "ASTLexBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexBlock.class";
  }

  @(ASTLexChar$LexCharBuilder.class):JavaClassFile{
    simpleName = "ASTLexChar$LexCharBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexChar$LexCharBuilder.class";
  }

  @(ASTLexChar.class):JavaClassFile{
    simpleName = "ASTLexChar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexChar.class";
  }

  @(ASTLexCharRange$LexCharRangeBuilder.class):JavaClassFile{
    simpleName = "ASTLexCharRange$LexCharRangeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexCharRange$LexCharRangeBuilder.class";
  }

  @(ASTLexCharRange.class):JavaClassFile{
    simpleName = "ASTLexCharRange";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexCharRange.class";
  }

  @(ASTLexComponent.class):JavaClassFile{
    simpleName = "ASTLexComponent";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexComponent.class";
  }

  @(ASTLexNonTerminal$LexNonTerminalBuilder.class):JavaClassFile{
    simpleName = "ASTLexNonTerminal$LexNonTerminalBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexNonTerminal$LexNonTerminalBuilder.class";
  }

  @(ASTLexNonTerminal.class):JavaClassFile{
    simpleName = "ASTLexNonTerminal";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexNonTerminal.class";
  }

  @(ASTLexOption$LexOptionBuilder.class):JavaClassFile{
    simpleName = "ASTLexOption$LexOptionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexOption$LexOptionBuilder.class";
  }

  @(ASTLexOption.class):JavaClassFile{
    simpleName = "ASTLexOption";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexOption.class";
  }

  @(ASTLexProd$LexProdBuilder.class):JavaClassFile{
    simpleName = "ASTLexProd$LexProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexProd$LexProdBuilder.class";
  }

  @(ASTLexProd.class):JavaClassFile{
    simpleName = "ASTLexProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexProd.class";
  }

  @(ASTLexSimpleIteration$LexSimpleIterationBuilder.class):JavaClassFile{
    simpleName = "ASTLexSimpleIteration$LexSimpleIterationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexSimpleIteration$LexSimpleIterationBuilder.class";
  }

  @(ASTLexSimpleIteration.class):JavaClassFile{
    simpleName = "ASTLexSimpleIteration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexSimpleIteration.class";
  }

  @(ASTLexString$LexStringBuilder.class):JavaClassFile{
    simpleName = "ASTLexString$LexStringBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexString$LexStringBuilder.class";
  }

  @(ASTLexString.class):JavaClassFile{
    simpleName = "ASTLexString";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTLexString.class";
  }

  @(ASTMCAnything$MCAnythingBuilder.class):JavaClassFile{
    simpleName = "ASTMCAnything$MCAnythingBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCAnything$MCAnythingBuilder.class";
  }

  @(ASTMCAnything.class):JavaClassFile{
    simpleName = "ASTMCAnything";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCAnything.class";
  }

  @(ASTMCConceptExt.class):JavaClassFile{
    simpleName = "ASTMCConceptExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCConceptExt.class";
  }

  @(ASTMCGrammar$MCGrammarBuilder.class):JavaClassFile{
    simpleName = "ASTMCGrammar$MCGrammarBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCGrammar$MCGrammarBuilder.class";
  }

  @(ASTMCGrammar.class):JavaClassFile{
    simpleName = "ASTMCGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCGrammar.class";
  }

  @(ASTMCImportStatement$MCImportStatementBuilder.class):JavaClassFile{
    simpleName = "ASTMCImportStatement$MCImportStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCImportStatement$MCImportStatementBuilder.class";
  }

  @(ASTMCImportStatement.class):JavaClassFile{
    simpleName = "ASTMCImportStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMCImportStatement.class";
  }

  @(ASTMethod$MethodBuilder.class):JavaClassFile{
    simpleName = "ASTMethod$MethodBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMethod$MethodBuilder.class";
  }

  @(ASTMethod.class):JavaClassFile{
    simpleName = "ASTMethod";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMethod.class";
  }

  @(ASTMethodParameter$MethodParameterBuilder.class):JavaClassFile{
    simpleName = "ASTMethodParameter$MethodParameterBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMethodParameter$MethodParameterBuilder.class";
  }

  @(ASTMethodParameter.class):JavaClassFile{
    simpleName = "ASTMethodParameter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTMethodParameter.class";
  }

  @(ASTNonTerminal$NonTerminalBuilder.class):JavaClassFile{
    simpleName = "ASTNonTerminal$NonTerminalBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTNonTerminal$NonTerminalBuilder.class";
  }

  @(ASTNonTerminal.class):JavaClassFile{
    simpleName = "ASTNonTerminal";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTNonTerminal.class";
  }

  @(ASTNonTerminalSeparator$NonTerminalSeparatorBuilder.class):JavaClassFile{
    simpleName = "ASTNonTerminalSeparator$NonTerminalSeparatorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTNonTerminalSeparator$NonTerminalSeparatorBuilder.class";
  }

  @(ASTNonTerminalSeparator.class):JavaClassFile{
    simpleName = "ASTNonTerminalSeparator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTNonTerminalSeparator.class";
  }

  @(ASTOption$OptionBuilder.class):JavaClassFile{
    simpleName = "ASTOption$OptionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTOption$OptionBuilder.class";
  }

  @(ASTOption.class):JavaClassFile{
    simpleName = "ASTOption";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTOption.class";
  }

  @(ASTOptionValue$OptionValueBuilder.class):JavaClassFile{
    simpleName = "ASTOptionValue$OptionValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTOptionValue$OptionValueBuilder.class";
  }

  @(ASTOptionValue.class):JavaClassFile{
    simpleName = "ASTOptionValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTOptionValue.class";
  }

  @(ASTParserProd.class):JavaClassFile{
    simpleName = "ASTParserProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTParserProd.class";
  }

  @(ASTProd.class):JavaClassFile{
    simpleName = "ASTProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTProd.class";
  }

  @(ASTProdTOP.class):JavaClassFile{
    simpleName = "ASTProdTOP";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTProdTOP.class";
  }

  @(ASTRuleComponent.class):JavaClassFile{
    simpleName = "ASTRuleComponent";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTRuleComponent.class";
  }

  @(ASTRuleReference$RuleReferenceBuilder.class):JavaClassFile{
    simpleName = "ASTRuleReference$RuleReferenceBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTRuleReference$RuleReferenceBuilder.class";
  }

  @(ASTRuleReference.class):JavaClassFile{
    simpleName = "ASTRuleReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTRuleReference.class";
  }

  @(ASTSemanticpredicateOrAction$SemanticpredicateOrActionBuilder.class):JavaClassFile{
    simpleName = "ASTSemanticpredicateOrAction$SemanticpredicateOrActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTSemanticpredicateOrAction$SemanticpredicateOrActionBuilder.class";
  }

  @(ASTSemanticpredicateOrAction.class):JavaClassFile{
    simpleName = "ASTSemanticpredicateOrAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTSemanticpredicateOrAction.class";
  }

  @(ASTStartRule$StartRuleBuilder.class):JavaClassFile{
    simpleName = "ASTStartRule$StartRuleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTStartRule$StartRuleBuilder.class";
  }

  @(ASTStartRule.class):JavaClassFile{
    simpleName = "ASTStartRule";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTStartRule.class";
  }

  @(ASTSymbolDefinition$SymbolDefinitionBuilder.class):JavaClassFile{
    simpleName = "ASTSymbolDefinition$SymbolDefinitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTSymbolDefinition$SymbolDefinitionBuilder.class";
  }

  @(ASTSymbolDefinition.class):JavaClassFile{
    simpleName = "ASTSymbolDefinition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTSymbolDefinition.class";
  }

  @(ASTTerminal$TerminalBuilder.class):JavaClassFile{
    simpleName = "ASTTerminal$TerminalBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTTerminal$TerminalBuilder.class";
  }

  @(ASTTerminal.class):JavaClassFile{
    simpleName = "ASTTerminal";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/ASTTerminal.class";
  }

  @(GrammarLiterals.class):JavaClassFile{
    simpleName = "GrammarLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarLiterals.class";
  }

  @(GrammarMill.class):JavaClassFile{
    simpleName = "GrammarMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarMill.class";
  }

  @(GrammarNodeFactory.class):JavaClassFile{
    simpleName = "GrammarNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarNodeFactory.class";
  }

  @(GrammarPackage$Literals.class):JavaClassFile{
    simpleName = "GrammarPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarPackage$Literals.class";
  }

  @(GrammarPackage.class):JavaClassFile{
    simpleName = "GrammarPackage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarPackage.class";
  }

  @(GrammarPackageImpl.class):JavaClassFile{
    simpleName = "GrammarPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_ast/GrammarPackageImpl.class";
  }

  @(_cocos!4):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos";
  }

  @(GrammarASTAbstractProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTAbstractProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTAbstractProdCoCo.class";
  }

  @(GrammarASTActionExtCoCo.class):JavaClassFile{
    simpleName = "GrammarASTActionExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTActionExtCoCo.class";
  }

  @(GrammarASTAltCoCo.class):JavaClassFile{
    simpleName = "GrammarASTAltCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTAltCoCo.class";
  }

  @(GrammarASTAntlrOptionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTAntlrOptionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTAntlrOptionCoCo.class";
  }

  @(GrammarASTAnythingCoCo.class):JavaClassFile{
    simpleName = "GrammarASTAnythingCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTAnythingCoCo.class";
  }

  @(GrammarASTASTRuleCoCo.class):JavaClassFile{
    simpleName = "GrammarASTASTRuleCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTASTRuleCoCo.class";
  }

  @(GrammarASTAttributeInASTCoCo.class):JavaClassFile{
    simpleName = "GrammarASTAttributeInASTCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTAttributeInASTCoCo.class";
  }

  @(GrammarASTBlockCoCo.class):JavaClassFile{
    simpleName = "GrammarASTBlockCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTBlockCoCo.class";
  }

  @(GrammarASTCardCoCo.class):JavaClassFile{
    simpleName = "GrammarASTCardCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTCardCoCo.class";
  }

  @(GrammarASTClassProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTClassProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTClassProdCoCo.class";
  }

  @(GrammarASTConceptCoCo.class):JavaClassFile{
    simpleName = "GrammarASTConceptCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTConceptCoCo.class";
  }

  @(GrammarASTConstantCoCo.class):JavaClassFile{
    simpleName = "GrammarASTConstantCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTConstantCoCo.class";
  }

  @(GrammarASTConstantGroupCoCo.class):JavaClassFile{
    simpleName = "GrammarASTConstantGroupCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTConstantGroupCoCo.class";
  }

  @(GrammarASTEnumProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTEnumProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTEnumProdCoCo.class";
  }

  @(GrammarASTEofCoCo.class):JavaClassFile{
    simpleName = "GrammarASTEofCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTEofCoCo.class";
  }

  @(GrammarASTExpressionPredicateExtCoCo.class):JavaClassFile{
    simpleName = "GrammarASTExpressionPredicateExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTExpressionPredicateExtCoCo.class";
  }

  @(GrammarASTExternalProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTExternalProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTExternalProdCoCo.class";
  }

  @(GrammarASTFollowOptionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTFollowOptionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTFollowOptionCoCo.class";
  }

  @(GrammarASTGenericTypeCoCo.class):JavaClassFile{
    simpleName = "GrammarASTGenericTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTGenericTypeCoCo.class";
  }

  @(GrammarASTGrammarNodeCoCo.class):JavaClassFile{
    simpleName = "GrammarASTGrammarNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarNodeCoCo.class";
  }

  @(GrammarASTGrammarOptionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTGrammarOptionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarOptionCoCo.class";
  }

  @(GrammarASTGrammarReferenceCoCo.class):JavaClassFile{
    simpleName = "GrammarASTGrammarReferenceCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarReferenceCoCo.class";
  }

  @(GrammarASTInterfaceProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTInterfaceProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTInterfaceProdCoCo.class";
  }

  @(GrammarASTITerminalCoCo.class):JavaClassFile{
    simpleName = "GrammarASTITerminalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTITerminalCoCo.class";
  }

  @(GrammarASTLexActionOrPredicateCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexActionOrPredicateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexActionOrPredicateCoCo.class";
  }

  @(GrammarASTLexAltCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexAltCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexAltCoCo.class";
  }

  @(GrammarASTLexAnyCharCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexAnyCharCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexAnyCharCoCo.class";
  }

  @(GrammarASTLexBlockCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexBlockCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexBlockCoCo.class";
  }

  @(GrammarASTLexCharCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexCharCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexCharCoCo.class";
  }

  @(GrammarASTLexCharRangeCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexCharRangeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexCharRangeCoCo.class";
  }

  @(GrammarASTLexComponentCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexComponentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexComponentCoCo.class";
  }

  @(GrammarASTLexNonTerminalCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexNonTerminalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexNonTerminalCoCo.class";
  }

  @(GrammarASTLexOptionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexOptionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexOptionCoCo.class";
  }

  @(GrammarASTLexProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexProdCoCo.class";
  }

  @(GrammarASTLexSimpleIterationCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexSimpleIterationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexSimpleIterationCoCo.class";
  }

  @(GrammarASTLexStringCoCo.class):JavaClassFile{
    simpleName = "GrammarASTLexStringCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTLexStringCoCo.class";
  }

  @(GrammarASTMCAnythingCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMCAnythingCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMCAnythingCoCo.class";
  }

  @(GrammarASTMCConceptExtCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMCConceptExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMCConceptExtCoCo.class";
  }

  @(GrammarASTMCGrammarCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMCGrammarCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMCGrammarCoCo.class";
  }

  @(GrammarASTMCImportStatementCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMCImportStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMCImportStatementCoCo.class";
  }

  @(GrammarASTMethodCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMethodCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMethodCoCo.class";
  }

  @(GrammarASTMethodParameterCoCo.class):JavaClassFile{
    simpleName = "GrammarASTMethodParameterCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTMethodParameterCoCo.class";
  }

  @(GrammarASTNonTerminalCoCo.class):JavaClassFile{
    simpleName = "GrammarASTNonTerminalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTNonTerminalCoCo.class";
  }

  @(GrammarASTNonTerminalSeparatorCoCo.class):JavaClassFile{
    simpleName = "GrammarASTNonTerminalSeparatorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTNonTerminalSeparatorCoCo.class";
  }

  @(GrammarASTOptionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTOptionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTOptionCoCo.class";
  }

  @(GrammarASTOptionValueCoCo.class):JavaClassFile{
    simpleName = "GrammarASTOptionValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTOptionValueCoCo.class";
  }

  @(GrammarASTParserProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTParserProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTParserProdCoCo.class";
  }

  @(GrammarASTProdCoCo.class):JavaClassFile{
    simpleName = "GrammarASTProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTProdCoCo.class";
  }

  @(GrammarASTRuleComponentCoCo.class):JavaClassFile{
    simpleName = "GrammarASTRuleComponentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTRuleComponentCoCo.class";
  }

  @(GrammarASTRuleReferenceCoCo.class):JavaClassFile{
    simpleName = "GrammarASTRuleReferenceCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTRuleReferenceCoCo.class";
  }

  @(GrammarASTSemanticpredicateOrActionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTSemanticpredicateOrActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTSemanticpredicateOrActionCoCo.class";
  }

  @(GrammarASTStartRuleCoCo.class):JavaClassFile{
    simpleName = "GrammarASTStartRuleCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTStartRuleCoCo.class";
  }

  @(GrammarASTSymbolDefinitionCoCo.class):JavaClassFile{
    simpleName = "GrammarASTSymbolDefinitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTSymbolDefinitionCoCo.class";
  }

  @(GrammarASTTerminalCoCo.class):JavaClassFile{
    simpleName = "GrammarASTTerminalCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarASTTerminalCoCo.class";
  }

  @(GrammarCoCoChecker.class):JavaClassFile{
    simpleName = "GrammarCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarCoCoChecker.class";
  }

  @(GrammarGrammarPackageCoCo.class):JavaClassFile{
    simpleName = "GrammarGrammarPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_cocos/GrammarGrammarPackageCoCo.class";
  }

  @(_od!4):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_od";
  }

  @(Grammar2OD.class):JavaClassFile{
    simpleName = "Grammar2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_od/Grammar2OD.class";
  }

  @(_symboltable!13):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_symboltable";
  }

  @(GrammarLanguage.class):JavaClassFile{
    simpleName = "GrammarLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_symboltable/GrammarLanguage.class";
  }

  @(GrammarModelLoader.class):JavaClassFile{
    simpleName = "GrammarModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_symboltable/GrammarModelLoader.class";
  }

  @(_visitor!4):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_visitor";
  }

  @(GrammarDelegatorVisitor.class):JavaClassFile{
    simpleName = "GrammarDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_visitor/GrammarDelegatorVisitor.class";
  }

  @(GrammarInheritanceVisitor.class):JavaClassFile{
    simpleName = "GrammarInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_visitor/GrammarInheritanceVisitor.class";
  }

  @(GrammarParentAwareVisitor.class):JavaClassFile{
    simpleName = "GrammarParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_visitor/GrammarParentAwareVisitor.class";
  }

  @(GrammarVisitor.class):JavaClassFile{
    simpleName = "GrammarVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar/_visitor/GrammarVisitor.class";
  }

  @(grammar_withconcepts):Directory{
    simpleName = "grammar_withconcepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts";
  }

  @(_ast!11):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast";
  }

  @(ASTAction$ActionBuilder.class):JavaClassFile{
    simpleName = "ASTAction$ActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTAction$ActionBuilder.class";
  }

  @(ASTAction.class):JavaClassFile{
    simpleName = "ASTAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTAction.class";
  }

  @(ASTConstantsGrammar_WithConcepts.class):JavaClassFile{
    simpleName = "ASTConstantsGrammar_WithConcepts";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTConstantsGrammar_WithConcepts.class";
  }

  @(ASTExpressionPredicate$ExpressionPredicateBuilder.class):JavaClassFile{
    simpleName = "ASTExpressionPredicate$ExpressionPredicateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTExpressionPredicate$ExpressionPredicateBuilder.class";
  }

  @(ASTExpressionPredicate.class):JavaClassFile{
    simpleName = "ASTExpressionPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTExpressionPredicate.class";
  }

  @(ASTGrammar_WithConceptsNode.class):JavaClassFile{
    simpleName = "ASTGrammar_WithConceptsNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTGrammar_WithConceptsNode.class";
  }

  @(ASTJavaCode$JavaCodeBuilder.class):JavaClassFile{
    simpleName = "ASTJavaCode$JavaCodeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTJavaCode$JavaCodeBuilder.class";
  }

  @(ASTJavaCode.class):JavaClassFile{
    simpleName = "ASTJavaCode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTJavaCode.class";
  }

  @(ASTMCConcept$MCConceptBuilder.class):JavaClassFile{
    simpleName = "ASTMCConcept$MCConceptBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTMCConcept$MCConceptBuilder.class";
  }

  @(ASTMCConcept.class):JavaClassFile{
    simpleName = "ASTMCConcept";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/ASTMCConcept.class";
  }

  @(Grammar_WithConceptsLiterals.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsLiterals.class";
  }

  @(Grammar_WithConceptsMill.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsMill.class";
  }

  @(Grammar_WithConceptsNodeFactory.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsNodeFactory.class";
  }

  @(Grammar_WithConceptsPackage$Literals.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsPackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsPackage$Literals.class";
  }

  @(Grammar_WithConceptsPackage.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsPackage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsPackage.class";
  }

  @(Grammar_WithConceptsPackageImpl.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsPackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsPackageImpl.class";
  }

  @(_cocos!5):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos";
  }

  @(Grammar_WithConceptsASTActionCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsASTActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTActionCoCo.class";
  }

  @(Grammar_WithConceptsASTExpressionPredicateCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsASTExpressionPredicateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTExpressionPredicateCoCo.class";
  }

  @(Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.class";
  }

  @(Grammar_WithConceptsASTJavaCodeCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsASTJavaCodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTJavaCodeCoCo.class";
  }

  @(Grammar_WithConceptsASTMCConceptCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsASTMCConceptCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTMCConceptCoCo.class";
  }

  @(Grammar_WithConceptsCoCoChecker.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsCoCoChecker.class";
  }

  @(Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsGrammar_WithConceptsPackageCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.class";
  }

  @(_od!5):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_od";
  }

  @(Grammar_WithConcepts2OD.class):JavaClassFile{
    simpleName = "Grammar_WithConcepts2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_od/Grammar_WithConcepts2OD.class";
  }

  @(_parser!3):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser";
  }

  @(Grammar_WithConceptsAntlrBaseListener.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrBaseListener.class";
  }

  @(Grammar_WithConceptsAntlrLexer.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrLexer.class";
  }

  @(Grammar_WithConceptsAntlrListener.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrListener.class";
  }

  @(Grammar_WithConceptsAntlrParser$AbstractProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AbstractProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AbstractProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AbstractProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AbstractProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AbstractProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ActionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ActionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ActionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Action_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Action_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Action_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AltContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AltContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AltContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Alt_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Alt_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Alt_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationArgumentsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationArgumentsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationArguments_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationArguments_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationConstantContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationConstantContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationConstantContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationConstant_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationConstant_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationConstant_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationMethodContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationMethodContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationMethodContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationMethod_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationMethod_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationMethod_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationPairArgumentsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationPairArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationPairArgumentsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationPairArguments_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationPairArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationPairArguments_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Annotation_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Annotation_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Annotation_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnonymousClassContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnonymousClassContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnonymousClassContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnonymousClass_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnonymousClass_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnonymousClass_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrLexerActionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrLexerActionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrLexerActionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrLexerAction_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrLexerAction_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrLexerAction_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrOptionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrOptionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrOptionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrOption_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrOption_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrOption_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrParserActionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrParserActionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrParserActionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AntlrParserAction_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AntlrParserAction_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AntlrParserAction_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AnythingContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AnythingContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AnythingContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Anything_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Anything_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Anything_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArgumentsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArgumentsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Arguments_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Arguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Arguments_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayCreatorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayCreatorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayCreatorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayCreator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayCreator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayCreator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionByExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionByExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionByExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionByExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionByExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionByExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializer_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializer_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifierContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifierContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifier_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifier_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayInitializerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayInitializerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayInitializerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayInitializer_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayInitializer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayInitializer_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ArrayType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ArrayType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AssertStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AssertStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AssertStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AssertStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AssertStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AssertStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ASTRuleContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ASTRuleContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ASTRuleContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ASTRule_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ASTRule_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ASTRule_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ASTStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ASTStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ASTStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ASTStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ASTStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ASTStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AttributeInASTContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AttributeInASTContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AttributeInASTContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$AttributeInAST_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$AttributeInAST_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$AttributeInAST_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BlockContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BlockContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BlockContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BlockStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BlockStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BlockStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BlockStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BlockStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BlockStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Block_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Block_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Block_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BooleanLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BooleanLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BooleanLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BooleanLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BooleanLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BooleanLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BooleanNotExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BooleanNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BooleanNotExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BooleanNotExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BooleanNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BooleanNotExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BracketExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BracketExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BracketExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BracketExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BracketExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BracketExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BreakStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BreakStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BreakStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$BreakStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$BreakStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$BreakStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CardContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CardContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CardContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Card_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Card_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Card_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchClauseContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchClauseContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchClauseContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchClause_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchClause_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchClause_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchExceptionsHandlerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchExceptionsHandlerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchExceptionsHandlerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchExceptionsHandler_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchExceptionsHandler_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchExceptionsHandler_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CatchType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CatchType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CatchType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CharLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CharLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CharLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CharLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CharLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CharLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBlockContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBlockContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBlockContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBlock_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBlock_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBlock_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBodyDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBodyDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBodyDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBodyDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBodyDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBodyDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassCreatorRestContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassCreatorRestContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassCreatorRestContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassCreatorRest_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassCreatorRest_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassCreatorRest_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassMemberDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassMemberDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassMemberDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassMemberDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassMemberDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassMemberDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ClassProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ClassProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ClassProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CommonForControlContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CommonForControlContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CommonForControlContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CommonForControl_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CommonForControl_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CommonForControl_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CompilationUnitContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CompilationUnitContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CompilationUnitContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CompilationUnit_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CompilationUnit_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CompilationUnit_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ComplexArrayTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ComplexArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ComplexArrayTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ComplexArrayType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ComplexArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ComplexArrayType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ComplexReferenceTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ComplexReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ComplexReferenceTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ComplexReferenceType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ComplexReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ComplexReferenceType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConceptAntlrContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConceptAntlrContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConceptAntlrContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConceptAntlr_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConceptAntlr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConceptAntlr_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConceptContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConceptContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConceptContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Concept_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Concept_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Concept_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantDeclaratorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantDeclaratorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantDeclaratorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantDeclarator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantDeclarator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantDeclarator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabelContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabelContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabelContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabel_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabel_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabel_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantGroupContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantGroupContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantGroupContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstantGroup_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstantGroup_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstantGroup_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Constant_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Constant_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Constant_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstructorBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstructorBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstructorBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstructorBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstructorBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstructorBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstructorDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstructorDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstructorDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ConstructorDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ConstructorDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ConstructorDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ContinueStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ContinueStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ContinueStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ContinueStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ContinueStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ContinueStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CreatedNameContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CreatedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CreatedNameContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CreatedName_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CreatedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CreatedName_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CreatorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CreatorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CreatorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CreatorExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CreatorExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CreatorExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$CreatorExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$CreatorExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$CreatorExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Creator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Creator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Creator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DeclaratorIdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DeclaratorIdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DeclaratorIdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DeclaratorId_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DeclaratorId_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DeclaratorId_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DefaultSwitchLabelContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DefaultSwitchLabelContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DefaultSwitchLabelContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DefaultSwitchLabel_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DefaultSwitchLabel_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DefaultSwitchLabel_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DefaultValueContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DefaultValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DefaultValueContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DefaultValue_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DefaultValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DefaultValue_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DoubleLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DoubleLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DoubleLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DoWhileStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DoWhileStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DoWhileStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$DoWhileStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$DoWhileStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$DoWhileStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValueArrayInitializerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValueArrayInitializerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValueArrayInitializerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValueArrayInitializer_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValueArrayInitializer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValueArrayInitializer_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValueContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValueContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValueOrExprContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValueOrExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValueOrExprContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValueOrExpr_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValueOrExpr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValueOrExpr_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValuePairContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValuePairContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValuePairContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValuePair_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValuePair_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValuePair_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ElementValue_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ElementValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ElementValue_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EmptyDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EmptyDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EmptyDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EmptyDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EmptyDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EmptyDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EmptyStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EmptyStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EmptyStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EmptyStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EmptyStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EmptyStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnhancedForControlContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnhancedForControlContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnhancedForControlContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnhancedForControl_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnhancedForControl_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnhancedForControl_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumConstantDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumConstantDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumConstantDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumConstantDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumConstantDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumConstantDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabelContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabelContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabelContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabel_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabel_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabel_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EnumProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EnumProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EnumProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$EofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$EofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$EofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Eof_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Eof_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Eof_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExceptionHandlerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExceptionHandlerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExceptionHandlerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExceptionHandler_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExceptionHandler_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExceptionHandler_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExpressionPredicateContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExpressionPredicateContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExpressionPredicateContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExpressionPredicate_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExpressionPredicate_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExpressionPredicate_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExpressionStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExpressionStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExpressionStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExpressionStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExpressionStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExpressionStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Expression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Expression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Expression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExternalProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExternalProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExternalProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ExternalProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ExternalProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ExternalProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FieldDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FieldDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FieldDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FieldDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FieldDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FieldDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FinallyBlockContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FinallyBlockContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FinallyBlockContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandlerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandlerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandlerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandler_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandler_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandler_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FinallyBlock_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FinallyBlock_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FinallyBlock_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FloatLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FloatLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FloatLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FollowOptionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FollowOptionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FollowOptionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FollowOption_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FollowOption_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FollowOption_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForControlContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForControlContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForControlContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForControl_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForControl_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForControl_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForInitByExpressionsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForInitByExpressionsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForInitByExpressionsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForInitByExpressions_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForInitByExpressions_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForInitByExpressions_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForInitContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForInitContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForInitContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForInit_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForInit_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForInit_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParameterContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParameterContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParameterContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParameterListingContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParameterListingContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParameterListingContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParameterListing_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParameterListing_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParameterListing_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParametersContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParametersContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParametersContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParameters_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParameters_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParameters_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$FormalParameter_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$FormalParameter_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$FormalParameter_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ForStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ForStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ForStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GenericInvocationSuffixContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GenericInvocationSuffixContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GenericInvocationSuffixContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GenericInvocationSuffix_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GenericInvocationSuffix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GenericInvocationSuffix_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GenericTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GenericTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GenericTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GenericType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GenericType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GenericType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GrammarOptionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GrammarOptionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GrammarOptionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GrammarOption_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GrammarOption_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GrammarOption_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GrammarReferenceContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GrammarReferenceContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GrammarReferenceContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$GrammarReference_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$GrammarReference_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$GrammarReference_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgumentContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgumentContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgumentContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgument_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgument_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgument_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IfStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IfStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IfStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IfStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IfStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IfStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ImportDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ImportDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ImportDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ImportDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ImportDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ImportDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ImportStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ImportStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ImportStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ImportStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InnerCreatorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InnerCreatorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InnerCreatorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InnerCreator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InnerCreator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InnerCreator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceBodyDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceBodyDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceBodyDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceBodyDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceBodyDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceBodyDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceMemberDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceMemberDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceMemberDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceMemberDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceMemberDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceMemberDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceMethodDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceMethodDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceMethodDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceMethodDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceMethodDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceMethodDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$InterfaceProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$InterfaceProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$InterfaceProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IntLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IntLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$IntLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$IntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$IntLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ITerminalContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ITerminalContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ITerminalContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ITerminal_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ITerminal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ITerminal_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$JavaBlockContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$JavaBlockContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$JavaBlockContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$JavaBlock_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$JavaBlock_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$JavaBlock_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$JavaCodeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$JavaCodeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$JavaCodeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$JavaCode_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$JavaCode_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$JavaCode_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LabeledStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LabeledStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LabeledStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LabeledStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LabeledStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LabeledStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LastFormalParameterContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LastFormalParameterContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LastFormalParameterContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LastFormalParameter_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LastFormalParameter_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LastFormalParameter_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexActionOrPredicateContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexActionOrPredicateContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexActionOrPredicateContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexActionOrPredicate_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexActionOrPredicate_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexActionOrPredicate_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexAltContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexAltContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexAltContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexAlt_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexAlt_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexAlt_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexAnyCharContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexAnyCharContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexAnyCharContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexAnyChar_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexAnyChar_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexAnyChar_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexBlockContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexBlockContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexBlockContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexBlock_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexBlock_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexBlock_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexCharContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexCharContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexCharContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexCharRangeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexCharRangeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexCharRangeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexCharRange_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexCharRange_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexCharRange_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexChar_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexChar_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexChar_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexComponentContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexComponentContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexComponentContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexComponent_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexComponent_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexComponent_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexNonTerminalContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexNonTerminalContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexNonTerminalContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexNonTerminal_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexNonTerminal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexNonTerminal_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexOptionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexOptionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexOptionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexOption_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexOption_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexOption_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexSimpleIterationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexSimpleIterationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexSimpleIterationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexSimpleIteration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexSimpleIteration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexSimpleIteration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexStringContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexStringContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexStringContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LexString_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LexString_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LexString_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LiteralExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LiteralExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LiteralExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LiteralExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LiteralExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LiteralExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Literal_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Literal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Literal_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LocalVariableDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LocalVariableDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LocalVariableDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LocalVariableDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LocalVariableDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LogicalNotExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LogicalNotExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LogicalNotExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LogicalNotExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LogicalNotExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LogicalNotExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LongLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LongLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$LongLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$LongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$LongLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCAnythingContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCAnythingContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCAnythingContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCAnything_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCAnything_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCAnything_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCConceptContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCConceptContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCConceptContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCConcept_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCConcept_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCConcept_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCGrammarContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCGrammarContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCGrammarContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCGrammar_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCGrammar_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCGrammar_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCImportStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCImportStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCImportStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MCImportStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MCImportStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MCImportStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodBodyContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodBodyContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodBodyContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodBody_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodBody_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodBody_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodParameterContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodParameterContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodParameterContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodParameter_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodParameter_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodParameter_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodSignatureContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodSignatureContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodSignatureContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$MethodSignature_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$MethodSignature_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$MethodSignature_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Method_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Method_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Method_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ModifierContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ModifierContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Modifier_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Modifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Modifier_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NameExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NameExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NameExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NameExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NameExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NameExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NonTerminalContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NonTerminalContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NonTerminalContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NonTerminalSeparatorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NonTerminalSeparatorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NonTerminalSeparatorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NonTerminalSeparator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NonTerminalSeparator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NonTerminalSeparator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NonTerminal_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NonTerminal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NonTerminal_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NullLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NullLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NullLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NullLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NullLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NullLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NumericLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NumericLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$NumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$NumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$NumericLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$OptionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$OptionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$OptionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$OptionValueContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$OptionValueContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$OptionValueContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$OptionValue_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$OptionValue_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$OptionValue_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Option_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Option_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Option_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PackageDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PackageDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PackageDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PackageDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PackageDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PackageDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ParserProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ParserProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ParserProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ParserProd_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ParserProd_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ParserProd_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrefixExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrefixExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrefixExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrefixExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrefixExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrefixExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimarySuperExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimarySuperExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimarySuperExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimarySuperExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimarySuperExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimarySuperExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimaryThisExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimaryThisExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimaryThisExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimaryThisExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimaryThisExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimaryThisExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveArrayTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveArrayTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveArrayTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveArrayType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveArrayType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveArrayType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveModifierContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveModifierContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveModifierContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveModifier_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveModifier_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveModifier_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$PrimitiveType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$PrimitiveType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$PrimitiveType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ProdContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ProdContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ProdContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Prod_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Prod_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Prod_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$QualifiedNameContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$QualifiedNameContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$QualifiedNameContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$QualifiedName_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$QualifiedName_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$QualifiedName_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReferenceTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReferenceTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReferenceType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReferenceType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ResourceContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ResourceContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ResourceContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Resource_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Resource_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Resource_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReturnStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReturnStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReturnStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReturnStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReturnStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReturnStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReturnTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReturnTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReturnTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ReturnType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ReturnType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ReturnType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$RuleComponentContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$RuleComponentContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$RuleComponentContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$RuleComponent_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$RuleComponent_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$RuleComponent_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$RuleReferenceContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$RuleReferenceContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$RuleReferenceContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$RuleReference_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$RuleReference_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$RuleReference_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$R__throwsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$R__throwsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$R__throwsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$R__throws_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$R__throws_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$R__throws_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SemanticpredicateOrActionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SemanticpredicateOrActionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SemanticpredicateOrActionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SemanticpredicateOrAction_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SemanticpredicateOrAction_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SemanticpredicateOrAction_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedDoubleLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedDoubleLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedDoubleLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedDoubleLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedDoubleLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedDoubleLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedFloatLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedFloatLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedFloatLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedFloatLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedFloatLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedFloatLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedIntLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedIntLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedIntLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedIntLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedIntLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedIntLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedLongLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedLongLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedLongLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedLongLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedLongLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedLongLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedNumericLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedNumericLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedNumericLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SignedNumericLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SignedNumericLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SignedNumericLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SimpleReferenceTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SimpleReferenceTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SimpleReferenceTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SimpleReferenceType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SimpleReferenceType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SimpleReferenceType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$StartRuleContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$StartRuleContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$StartRuleContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$StartRule_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$StartRule_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$StartRule_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$StatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$StatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$StatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Statement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Statement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Statement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$StringLiteralContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$StringLiteralContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$StringLiteralContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$StringLiteral_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$StringLiteral_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$StringLiteral_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SuperSuffixContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SuperSuffixContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SuperSuffixContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SuperSuffix_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SuperSuffix_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SuperSuffix_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroupContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroupContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroupContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroup_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroup_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroup_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchLabelContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchLabelContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchLabelContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchLabel_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchLabel_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchLabel_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SwitchStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SwitchStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SwitchStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SymbolDefinitionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SymbolDefinitionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SymbolDefinitionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SymbolDefinition_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SymbolDefinition_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SymbolDefinition_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SynchronizedStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SynchronizedStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SynchronizedStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$SynchronizedStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$SynchronizedStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$SynchronizedStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TerminalContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TerminalContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TerminalContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Terminal_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Terminal_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Terminal_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ThrowStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ThrowStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ThrowStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$ThrowStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$ThrowStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$ThrowStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TryStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TryStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TryStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TryStatementWithResourcesContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TryStatementWithResourcesContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TryStatementWithResourcesContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TryStatementWithResources_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TryStatementWithResources_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TryStatementWithResources_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TryStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TryStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TryStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeArgumentContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeArgumentContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeArgumentContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeArgumentsContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeArgumentsContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeArgumentsContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeArguments_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeArguments_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeArguments_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeArgument_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeArgument_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeArgument_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeCastExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeCastExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeCastExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeCastExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeCastExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeCastExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeParametersContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeParametersContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeParametersContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeParameters_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeParameters_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeParameters_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeVariableDeclarationContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeVariableDeclarationContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeVariableDeclarationContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$TypeVariableDeclaration_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$TypeVariableDeclaration_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$TypeVariableDeclaration_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$Type_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$Type_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$Type_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableDeclaratorContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableDeclaratorContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableDeclaratorContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableDeclarator_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableDeclarator_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableDeclarator_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableInitializerContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableInitializerContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableInitializerContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableInitializer_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableInitializer_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableInitializer_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableInititializerOrExpressionContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableInititializerOrExpressionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableInititializerOrExpressionContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VariableInititializerOrExpression_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VariableInititializerOrExpression_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VariableInititializerOrExpression_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VoidTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VoidTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VoidTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$VoidType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$VoidType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$VoidType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$WhileStatementContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$WhileStatementContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$WhileStatementContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$WhileStatement_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$WhileStatement_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$WhileStatement_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$WildcardTypeContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$WildcardTypeContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$WildcardTypeContext.class";
  }

  @(Grammar_WithConceptsAntlrParser$WildcardType_eofContext.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser$WildcardType_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser$WildcardType_eofContext.class";
  }

  @(Grammar_WithConceptsAntlrParser.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser.class";
  }

  @(Grammar_WithConceptsParser.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsParser.class";
  }

  @(_symboltable!14):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_symboltable";
  }

  @(Grammar_WithConceptsLanguage.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_symboltable/Grammar_WithConceptsLanguage.class";
  }

  @(Grammar_WithConceptsModelLoader.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_symboltable/Grammar_WithConceptsModelLoader.class";
  }

  @(_visitor!5):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_visitor";
  }

  @(Grammar_WithConceptsDelegatorVisitor.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsDelegatorVisitor.class";
  }

  @(Grammar_WithConceptsInheritanceVisitor.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsInheritanceVisitor.class";
  }

  @(Grammar_WithConceptsParentAwareVisitor.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsParentAwareVisitor.class";
  }

  @(Grammar_WithConceptsVisitor.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsVisitor.class";
  }

  @(HelperGrammar.class):JavaClassFile{
    simpleName = "HelperGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/HelperGrammar.class";
  }

  @(LexNamer.class):JavaClassFile{
    simpleName = "LexNamer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/LexNamer.class";
  }

  @(MCGrammarInfo.class):JavaClassFile{
    simpleName = "MCGrammarInfo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/MCGrammarInfo.class";
  }

  @(Multiplicity.class):JavaClassFile{
    simpleName = "Multiplicity";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/Multiplicity.class";
  }

  @(PredicatePair.class):JavaClassFile{
    simpleName = "PredicatePair";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/PredicatePair.class";
  }

  @(prettyprint!5):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/prettyprint";
  }

  @(AntlrPrettyPrinter.class):JavaClassFile{
    simpleName = "AntlrPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/prettyprint/AntlrPrettyPrinter.class";
  }

  @(GrammarPrettyPrinter.class):JavaClassFile{
    simpleName = "GrammarPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/prettyprint/GrammarPrettyPrinter.class";
  }

  @(Grammar_WithConceptsPrettyPrinter.class):JavaClassFile{
    simpleName = "Grammar_WithConceptsPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/prettyprint/Grammar_WithConceptsPrettyPrinter.class";
  }

  @(RegExpBuilder.class):JavaClassFile{
    simpleName = "RegExpBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/RegExpBuilder.class";
  }

  @(symboltable!10):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable";
  }

  @(MCGrammarScope.class):JavaClassFile{
    simpleName = "MCGrammarScope";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCGrammarScope.class";
  }

  @(MCGrammarSymbol$EssentialMCGrammarKind.class):JavaClassFile{
    simpleName = "MCGrammarSymbol$EssentialMCGrammarKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCGrammarSymbol$EssentialMCGrammarKind.class";
  }

  @(MCGrammarSymbol.class):JavaClassFile{
    simpleName = "MCGrammarSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCGrammarSymbol.class";
  }

  @(MCGrammarSymbolReference.class):JavaClassFile{
    simpleName = "MCGrammarSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCGrammarSymbolReference.class";
  }

  @(MCProdAttributeSymbol$MCProdAttributeKind.class):JavaClassFile{
    simpleName = "MCProdAttributeSymbol$MCProdAttributeKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdAttributeSymbol$MCProdAttributeKind.class";
  }

  @(MCProdAttributeSymbol.class):JavaClassFile{
    simpleName = "MCProdAttributeSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdAttributeSymbol.class";
  }

  @(MCProdComponentSymbol$MCProdComponentKind.class):JavaClassFile{
    simpleName = "MCProdComponentSymbol$MCProdComponentKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdComponentSymbol$MCProdComponentKind.class";
  }

  @(MCProdComponentSymbol.class):JavaClassFile{
    simpleName = "MCProdComponentSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdComponentSymbol.class";
  }

  @(MCProdOrTypeReference.class):JavaClassFile{
    simpleName = "MCProdOrTypeReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdOrTypeReference.class";
  }

  @(MCProdSymbol$MCProdKind.class):JavaClassFile{
    simpleName = "MCProdSymbol$MCProdKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdSymbol$MCProdKind.class";
  }

  @(MCProdSymbol.class):JavaClassFile{
    simpleName = "MCProdSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdSymbol.class";
  }

  @(MCProdSymbolReference.class):JavaClassFile{
    simpleName = "MCProdSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MCProdSymbolReference.class";
  }

  @(MontiCoreGrammarLanguage.class):JavaClassFile{
    simpleName = "MontiCoreGrammarLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MontiCoreGrammarLanguage.class";
  }

  @(MontiCoreGrammarModelLoader.class):JavaClassFile{
    simpleName = "MontiCoreGrammarModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MontiCoreGrammarModelLoader.class";
  }

  @(MontiCoreGrammarSymbolTableCreator.class):JavaClassFile{
    simpleName = "MontiCoreGrammarSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/symboltable/MontiCoreGrammarSymbolTableCreator.class";
  }

  @(transformation!2):Directory{
    simpleName = "transformation";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/transformation";
  }

  @(GrammarTransformer.class):JavaClassFile{
    simpleName = "GrammarTransformer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/transformation/GrammarTransformer.class";
  }

  @(RuleComponentListFinder.class):JavaClassFile{
    simpleName = "RuleComponentListFinder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/grammar/transformation/RuleComponentListFinder.class";
  }

  @(GrammarWithConcepts2OD.class):JavaClassFile{
    simpleName = "GrammarWithConcepts2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/GrammarWithConcepts2OD.class";
  }

  @(MontiCoreConfiguration$Options.class):JavaClassFile{
    simpleName = "MontiCoreConfiguration$Options";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreConfiguration$Options.class";
  }

  @(MontiCoreConfiguration.class):JavaClassFile{
    simpleName = "MontiCoreConfiguration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreConfiguration.class";
  }

  @(MontiCoreGrammarLanguageFamily.class):JavaClassFile{
    simpleName = "MontiCoreGrammarLanguageFamily";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreGrammarLanguageFamily.class";
  }

  @(MontiCoreNodeIdentifierHelper.class):JavaClassFile{
    simpleName = "MontiCoreNodeIdentifierHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreNodeIdentifierHelper.class";
  }

  @(MontiCoreReports.class):JavaClassFile{
    simpleName = "MontiCoreReports";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreReports.class";
  }

  @(MontiCoreScript$Runner.class):JavaClassFile{
    simpleName = "MontiCoreScript$Runner";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreScript$Runner.class";
  }

  @(MontiCoreScript.class):JavaClassFile{
    simpleName = "MontiCoreScript";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/MontiCoreScript.class";
  }

  @(ODReporter.class):JavaClassFile{
    simpleName = "ODReporter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/de/monticore/ODReporter.class";
  }

  @(od!4):Directory{
    simpleName = "od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/od";
  }

  @(DiagramVisitor.ftl!2):FreeMarkerTemplate{
    simpleName = "DiagramVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/od/DiagramVisitor.ftl";
  }

  @(parser!6):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/parser";
  }

  @(LexerMember.ftl!2):FreeMarkerTemplate{
    simpleName = "LexerMember";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/parser/LexerMember.ftl";
  }

  @(MCGrammarParser.class):JavaClassFile{
    simpleName = "MCGrammarParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/classes/parser/MCGrammarParser.class";
  }

  @(MCParser.ftl!2):FreeMarkerTemplate{
    simpleName = "MCParser";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/parser/MCParser.ftl";
  }

  @(MCParserMethods.ftl!2):FreeMarkerTemplate{
    simpleName = "MCParserMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/parser/MCParserMethods.ftl";
  }

  @(Parser.ftl!2):FreeMarkerTemplate{
    simpleName = "Parser";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/parser/Parser.ftl";
  }

  @(ParserHeader.ftl!2):FreeMarkerTemplate{
    simpleName = "ParserHeader";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/parser/ParserHeader.ftl";
  }

  @(symboltable!11):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/symboltable";
  }

  @(mill!2):Directory{
    simpleName = "mill";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/symboltable/mill";
  }

  @(Attribute.ftl!4):FreeMarkerTemplate{
    simpleName = "Attribute";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/mill/Attribute.ftl";
  }

  @(Method.ftl!2):FreeMarkerTemplate{
    simpleName = "Method";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/mill/Method.ftl";
  }

  @(ModelingLanguage.ftl!2):FreeMarkerTemplate{
    simpleName = "ModelingLanguage";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/ModelingLanguage.ftl";
  }

  @(ModelLoader.ftl!2):FreeMarkerTemplate{
    simpleName = "ModelLoader";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/ModelLoader.ftl";
  }

  @(ModelNameCalculator.ftl!2):FreeMarkerTemplate{
    simpleName = "ModelNameCalculator";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/ModelNameCalculator.ftl";
  }

  @(ResolvingFilter.ftl!2):FreeMarkerTemplate{
    simpleName = "ResolvingFilter";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/ResolvingFilter.ftl";
  }

  @(Scope.ftl!2):FreeMarkerTemplate{
    simpleName = "Scope";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/Scope.ftl";
  }

  @(ScopeSpanningSymbol.ftl!2):FreeMarkerTemplate{
    simpleName = "ScopeSpanningSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/ScopeSpanningSymbol.ftl";
  }

  @(Symbol.ftl!2):FreeMarkerTemplate{
    simpleName = "Symbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/Symbol.ftl";
  }

  @(SymbolBuilder.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolBuilder";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolBuilder.ftl";
  }

  @(SymbolInterface.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolInterface";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolInterface.ftl";
  }

  @(SymbolKind.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolKind";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolKind.ftl";
  }

  @(SymbolMill.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolMill";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolMill.ftl";
  }

  @(SymbolReference.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolReference";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolReference.ftl";
  }

  @(symbols!2):Directory{
    simpleName = "symbols";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/symboltable/symbols";
  }

  @(GetAstNodeMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "GetAstNodeMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symbols/GetAstNodeMethod.ftl";
  }

  @(KindConstantDeclaration.ftl!2):FreeMarkerTemplate{
    simpleName = "KindConstantDeclaration";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symbols/KindConstantDeclaration.ftl";
  }

  @(SymbolTableCreator.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolTableCreator";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/SymbolTableCreator.ftl";
  }

  @(symboltablecreators!2):Directory{
    simpleName = "symboltablecreators";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators";
  }

  @(EndVisitMethod.ftl!2):FreeMarkerTemplate{
    simpleName = "EndVisitMethod";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/EndVisitMethod.ftl";
  }

  @(InitializeSymbol.ftl!2):FreeMarkerTemplate{
    simpleName = "InitializeSymbol";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/InitializeSymbol.ftl";
  }

  @(ScopeMethods.ftl!2):FreeMarkerTemplate{
    simpleName = "ScopeMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/ScopeMethods.ftl";
  }

  @(ScopeSpanningSymbolMethods.ftl!2):FreeMarkerTemplate{
    simpleName = "ScopeSpanningSymbolMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/ScopeSpanningSymbolMethods.ftl";
  }

  @(SetEnclosingScopeOfNodes.ftl!2):FreeMarkerTemplate{
    simpleName = "SetEnclosingScopeOfNodes";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/SetEnclosingScopeOfNodes.ftl";
  }

  @(SymbolMethods.ftl!2):FreeMarkerTemplate{
    simpleName = "SymbolMethods";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/symboltable/symboltablecreators/SymbolMethods.ftl";
  }

  @(types!7):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/types";
  }

  @(TypeResolver.ftl!2):FreeMarkerTemplate{
    simpleName = "TypeResolver";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/types/TypeResolver.ftl";
  }

  @(visitor!7):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/classes/visitor";
  }

  @(DelegatorVisitor.ftl!2):FreeMarkerTemplate{
    simpleName = "DelegatorVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/visitor/DelegatorVisitor.ftl";
  }

  @(InheritanceVisitor.ftl!2):FreeMarkerTemplate{
    simpleName = "InheritanceVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/visitor/InheritanceVisitor.ftl";
  }

  @(ParentAwareVisitor.ftl!2):FreeMarkerTemplate{
    simpleName = "ParentAwareVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/visitor/ParentAwareVisitor.ftl";
  }

  @(SimpleVisitor.ftl!2):FreeMarkerTemplate{
    simpleName = "SimpleVisitor";
    nameExtension = "ftl";
    fullName = "sources/monticore-generator/target/classes/visitor/SimpleVisitor.ftl";
  }

  @(generated-sources!3):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources";
  }

  @(annotations!3):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/annotations";
  }

  @(monticore!18):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore";
  }

  @(codetocompile):Directory{
    simpleName = "codetocompile";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile";
  }

  @(automaton!13):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton";
  }

  @(_ast!12):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast";
  }

  @(ASTAutomaton.class):JavaClassFile{
    simpleName = "ASTAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomaton.class";
  }

  @(ASTAutomaton.java!3):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.class):JavaClassFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomatonBuilder.class";
  }

  @(ASTAutomatonBuilder.java!3):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTAutomatonNode.class):JavaClassFile{
    simpleName = "ASTAutomatonNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomatonNode.class";
  }

  @(ASTAutomatonNode.java!2):JavaSourceFile{
    simpleName = "ASTAutomatonNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTAutomatonNode.java";
  }

  @(ASTConstantsAutomaton.class):JavaClassFile{
    simpleName = "ASTConstantsAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTConstantsAutomaton.class";
  }

  @(ASTConstantsAutomaton.java!2):JavaSourceFile{
    simpleName = "ASTConstantsAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTConstantsAutomaton.java";
  }

  @(ASTState.class):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTState.class";
  }

  @(ASTState.java!4):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!4):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.class):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!3):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!3):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/ASTTransitionBuilder.java";
  }

  @(AutomatonLiterals.class):JavaClassFile{
    simpleName = "AutomatonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonLiterals.class";
  }

  @(AutomatonLiterals.java!2):JavaSourceFile{
    simpleName = "AutomatonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonLiterals.java";
  }

  @(AutomatonMill.class):JavaClassFile{
    simpleName = "AutomatonMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonMill.class";
  }

  @(AutomatonMill.java!2):JavaSourceFile{
    simpleName = "AutomatonMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonMill.java";
  }

  @(AutomatonNodeFactory.class):JavaClassFile{
    simpleName = "AutomatonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonNodeFactory.class";
  }

  @(AutomatonNodeFactory.java!2):JavaSourceFile{
    simpleName = "AutomatonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_ast/AutomatonNodeFactory.java";
  }

  @(_cocos!6):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos";
  }

  @(AutomatonASTAutomatonCoCo.class):JavaClassFile{
    simpleName = "AutomatonASTAutomatonCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTAutomatonCoCo.class";
  }

  @(AutomatonASTAutomatonCoCo.java!2):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTAutomatonCoCo.java";
  }

  @(AutomatonASTAutomatonNodeCoCo.class):JavaClassFile{
    simpleName = "AutomatonASTAutomatonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTAutomatonNodeCoCo.class";
  }

  @(AutomatonASTAutomatonNodeCoCo.java!2):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTAutomatonNodeCoCo.java";
  }

  @(AutomatonASTStateCoCo.class):JavaClassFile{
    simpleName = "AutomatonASTStateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTStateCoCo.class";
  }

  @(AutomatonASTStateCoCo.java!2):JavaSourceFile{
    simpleName = "AutomatonASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTStateCoCo.java";
  }

  @(AutomatonASTTransitionCoCo.class):JavaClassFile{
    simpleName = "AutomatonASTTransitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTTransitionCoCo.class";
  }

  @(AutomatonASTTransitionCoCo.java!2):JavaSourceFile{
    simpleName = "AutomatonASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonASTTransitionCoCo.java";
  }

  @(AutomatonCoCoChecker.class):JavaClassFile{
    simpleName = "AutomatonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonCoCoChecker.class";
  }

  @(AutomatonCoCoChecker.java!2):JavaSourceFile{
    simpleName = "AutomatonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_cocos/AutomatonCoCoChecker.java";
  }

  @(_od!6):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_od";
  }

  @(Automaton2OD.class):JavaClassFile{
    simpleName = "Automaton2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_od/Automaton2OD.class";
  }

  @(Automaton2OD.java!2):JavaSourceFile{
    simpleName = "Automaton2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_od/Automaton2OD.java";
  }

  @(_parser!4):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser";
  }

  @(AutomatonAntlrBaseListener.class):JavaClassFile{
    simpleName = "AutomatonAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrBaseListener.class";
  }

  @(AutomatonAntlrBaseListener.java!2):JavaSourceFile{
    simpleName = "AutomatonAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrBaseListener.java";
  }

  @(AutomatonAntlrLexer.class):JavaClassFile{
    simpleName = "AutomatonAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrLexer.class";
  }

  @(AutomatonAntlrLexer.java!2):JavaSourceFile{
    simpleName = "AutomatonAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrLexer.java";
  }

  @(AutomatonAntlrListener.class):JavaClassFile{
    simpleName = "AutomatonAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrListener.class";
  }

  @(AutomatonAntlrListener.java!2):JavaSourceFile{
    simpleName = "AutomatonAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrListener.java";
  }

  @(AutomatonAntlrParser$AutomatonContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$AutomatonContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$AutomatonContext.class";
  }

  @(AutomatonAntlrParser$Automaton_eofContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$Automaton_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$Automaton_eofContext.class";
  }

  @(AutomatonAntlrParser$StateContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$StateContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$StateContext.class";
  }

  @(AutomatonAntlrParser$State_eofContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$State_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$State_eofContext.class";
  }

  @(AutomatonAntlrParser$TransitionContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$TransitionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$TransitionContext.class";
  }

  @(AutomatonAntlrParser$Transition_eofContext.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser$Transition_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser$Transition_eofContext.class";
  }

  @(AutomatonAntlrParser.class):JavaClassFile{
    simpleName = "AutomatonAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser.class";
  }

  @(AutomatonAntlrParser.java!2):JavaSourceFile{
    simpleName = "AutomatonAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonAntlrParser.java";
  }

  @(AutomatonParser.class):JavaClassFile{
    simpleName = "AutomatonParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonParser.class";
  }

  @(AutomatonParser.java!2):JavaSourceFile{
    simpleName = "AutomatonParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_parser/AutomatonParser.java";
  }

  @(_visitor!6):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor";
  }

  @(AutomatonDelegatorVisitor.class):JavaClassFile{
    simpleName = "AutomatonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonDelegatorVisitor.class";
  }

  @(AutomatonDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "AutomatonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonDelegatorVisitor.java";
  }

  @(AutomatonInheritanceVisitor.class):JavaClassFile{
    simpleName = "AutomatonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonInheritanceVisitor.class";
  }

  @(AutomatonInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "AutomatonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonInheritanceVisitor.java";
  }

  @(AutomatonParentAwareVisitor.class):JavaClassFile{
    simpleName = "AutomatonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonParentAwareVisitor.class";
  }

  @(AutomatonParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "AutomatonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonParentAwareVisitor.java";
  }

  @(AutomatonVisitor.class):JavaClassFile{
    simpleName = "AutomatonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonVisitor.class";
  }

  @(AutomatonVisitor.java!2):JavaSourceFile{
    simpleName = "AutomatonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/automaton/_visitor/AutomatonVisitor.java";
  }

  @(de!18):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de";
  }

  @(monticore!19):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore";
  }

  @(action!3):Directory{
    simpleName = "action";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action";
  }

  @(_ast!13):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast";
  }

  @(ActionLiterals.class):JavaClassFile{
    simpleName = "ActionLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionLiterals.class";
  }

  @(ActionLiterals.java):JavaSourceFile{
    simpleName = "ActionLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionLiterals.java";
  }

  @(ActionMill.class):JavaClassFile{
    simpleName = "ActionMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionMill.class";
  }

  @(ActionMill.java):JavaSourceFile{
    simpleName = "ActionMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionMill.java";
  }

  @(ActionNodeFactory.class):JavaClassFile{
    simpleName = "ActionNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionNodeFactory.class";
  }

  @(ActionNodeFactory.java):JavaSourceFile{
    simpleName = "ActionNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ActionNodeFactory.java";
  }

  @(ASTA.class):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTA.class";
  }

  @(ASTA.java):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTA.java";
  }

  @(ASTABuilder.class):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTABuilder.java";
  }

  @(ASTActionNode.class):JavaClassFile{
    simpleName = "ASTActionNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTActionNode.class";
  }

  @(ASTActionNode.java):JavaSourceFile{
    simpleName = "ASTActionNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTActionNode.java";
  }

  @(ASTConstantsAction.class):JavaClassFile{
    simpleName = "ASTConstantsAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTConstantsAction.class";
  }

  @(ASTConstantsAction.java):JavaSourceFile{
    simpleName = "ASTConstantsAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_ast/ASTConstantsAction.java";
  }

  @(_cocos!7):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos";
  }

  @(ActionASTACoCo.class):JavaClassFile{
    simpleName = "ActionASTACoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionASTACoCo.class";
  }

  @(ActionASTACoCo.java):JavaSourceFile{
    simpleName = "ActionASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionASTACoCo.java";
  }

  @(ActionASTActionNodeCoCo.class):JavaClassFile{
    simpleName = "ActionASTActionNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionASTActionNodeCoCo.class";
  }

  @(ActionASTActionNodeCoCo.java):JavaSourceFile{
    simpleName = "ActionASTActionNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionASTActionNodeCoCo.java";
  }

  @(ActionCoCoChecker.class):JavaClassFile{
    simpleName = "ActionCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionCoCoChecker.class";
  }

  @(ActionCoCoChecker.java):JavaSourceFile{
    simpleName = "ActionCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_cocos/ActionCoCoChecker.java";
  }

  @(_od!7):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_od";
  }

  @(Action2OD.class):JavaClassFile{
    simpleName = "Action2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_od/Action2OD.class";
  }

  @(Action2OD.java):JavaSourceFile{
    simpleName = "Action2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_od/Action2OD.java";
  }

  @(_parser!5):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser";
  }

  @(ActionAntlrBaseListener.class):JavaClassFile{
    simpleName = "ActionAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrBaseListener.class";
  }

  @(ActionAntlrBaseListener.java):JavaSourceFile{
    simpleName = "ActionAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrBaseListener.java";
  }

  @(ActionAntlrLexer.class):JavaClassFile{
    simpleName = "ActionAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrLexer.class";
  }

  @(ActionAntlrLexer.java):JavaSourceFile{
    simpleName = "ActionAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrLexer.java";
  }

  @(ActionAntlrListener.class):JavaClassFile{
    simpleName = "ActionAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrListener.class";
  }

  @(ActionAntlrListener.java):JavaSourceFile{
    simpleName = "ActionAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrListener.java";
  }

  @(ActionAntlrParser$AContext.class):JavaClassFile{
    simpleName = "ActionAntlrParser$AContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser$AContext.class";
  }

  @(ActionAntlrParser$A_eofContext.class):JavaClassFile{
    simpleName = "ActionAntlrParser$A_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser$A_eofContext.class";
  }

  @(ActionAntlrParser$Name2Context.class):JavaClassFile{
    simpleName = "ActionAntlrParser$Name2Context";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser$Name2Context.class";
  }

  @(ActionAntlrParser$NameContext.class):JavaClassFile{
    simpleName = "ActionAntlrParser$NameContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser$NameContext.class";
  }

  @(ActionAntlrParser.class):JavaClassFile{
    simpleName = "ActionAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser.class";
  }

  @(ActionAntlrParser.java):JavaSourceFile{
    simpleName = "ActionAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionAntlrParser.java";
  }

  @(ActionParser.class):JavaClassFile{
    simpleName = "ActionParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionParser.class";
  }

  @(ActionParser.java):JavaSourceFile{
    simpleName = "ActionParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_parser/ActionParser.java";
  }

  @(_visitor!7):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor";
  }

  @(ActionDelegatorVisitor.class):JavaClassFile{
    simpleName = "ActionDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionDelegatorVisitor.class";
  }

  @(ActionDelegatorVisitor.java):JavaSourceFile{
    simpleName = "ActionDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionDelegatorVisitor.java";
  }

  @(ActionInheritanceVisitor.class):JavaClassFile{
    simpleName = "ActionInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionInheritanceVisitor.class";
  }

  @(ActionInheritanceVisitor.java):JavaSourceFile{
    simpleName = "ActionInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionInheritanceVisitor.java";
  }

  @(ActionParentAwareVisitor.class):JavaClassFile{
    simpleName = "ActionParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionParentAwareVisitor.class";
  }

  @(ActionParentAwareVisitor.java):JavaSourceFile{
    simpleName = "ActionParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionParentAwareVisitor.java";
  }

  @(ActionVisitor.class):JavaClassFile{
    simpleName = "ActionVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionVisitor.class";
  }

  @(ActionVisitor.java):JavaSourceFile{
    simpleName = "ActionVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/action/_visitor/ActionVisitor.java";
  }

  @(astattributes):Directory{
    simpleName = "astattributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes";
  }

  @(_ast!14):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast";
  }

  @(ASTA.class!2):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTA.class";
  }

  @(ASTA.java!2):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTA.java";
  }

  @(ASTABuilder.class!2):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!2):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTABuilder.java";
  }

  @(ASTAstAttributesNode.class):JavaClassFile{
    simpleName = "ASTAstAttributesNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTAstAttributesNode.class";
  }

  @(ASTAstAttributesNode.java):JavaSourceFile{
    simpleName = "ASTAstAttributesNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTAstAttributesNode.java";
  }

  @(AstAttributesLiterals.class):JavaClassFile{
    simpleName = "AstAttributesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesLiterals.class";
  }

  @(AstAttributesLiterals.java):JavaSourceFile{
    simpleName = "AstAttributesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesLiterals.java";
  }

  @(AstAttributesMill.class):JavaClassFile{
    simpleName = "AstAttributesMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesMill.class";
  }

  @(AstAttributesMill.java):JavaSourceFile{
    simpleName = "AstAttributesMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesMill.java";
  }

  @(AstAttributesNodeFactory.class):JavaClassFile{
    simpleName = "AstAttributesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesNodeFactory.class";
  }

  @(AstAttributesNodeFactory.java):JavaSourceFile{
    simpleName = "AstAttributesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/AstAttributesNodeFactory.java";
  }

  @(ASTB.class):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTB.class";
  }

  @(ASTB.java):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTB.java";
  }

  @(ASTBBuilder.class):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTBBuilder.java";
  }

  @(ASTConstantsAstAttributes.class):JavaClassFile{
    simpleName = "ASTConstantsAstAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTConstantsAstAttributes.class";
  }

  @(ASTConstantsAstAttributes.java):JavaSourceFile{
    simpleName = "ASTConstantsAstAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTConstantsAstAttributes.java";
  }

  @(ASTTransformationStructure.class):JavaClassFile{
    simpleName = "ASTTransformationStructure";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTTransformationStructure.class";
  }

  @(ASTTransformationStructure.java):JavaSourceFile{
    simpleName = "ASTTransformationStructure";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTTransformationStructure.java";
  }

  @(ASTTransformationStructureBuilder.class):JavaClassFile{
    simpleName = "ASTTransformationStructureBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTTransformationStructureBuilder.class";
  }

  @(ASTTransformationStructureBuilder.java):JavaSourceFile{
    simpleName = "ASTTransformationStructureBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_ast/ASTTransformationStructureBuilder.java";
  }

  @(_cocos!8):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos";
  }

  @(AstAttributesASTACoCo.java):JavaSourceFile{
    simpleName = "AstAttributesASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos/AstAttributesASTACoCo.java";
  }

  @(AstAttributesASTAstAttributesNodeCoCo.java):JavaSourceFile{
    simpleName = "AstAttributesASTAstAttributesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos/AstAttributesASTAstAttributesNodeCoCo.java";
  }

  @(AstAttributesASTBCoCo.java):JavaSourceFile{
    simpleName = "AstAttributesASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos/AstAttributesASTBCoCo.java";
  }

  @(AstAttributesASTTransformationStructureCoCo.java):JavaSourceFile{
    simpleName = "AstAttributesASTTransformationStructureCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos/AstAttributesASTTransformationStructureCoCo.java";
  }

  @(AstAttributesCoCoChecker.java):JavaSourceFile{
    simpleName = "AstAttributesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_cocos/AstAttributesCoCoChecker.java";
  }

  @(_od!8):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_od";
  }

  @(AstAttributes2OD.java):JavaSourceFile{
    simpleName = "AstAttributes2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_od/AstAttributes2OD.java";
  }

  @(_visitor!8):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor";
  }

  @(AstAttributesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AstAttributesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor/AstAttributesDelegatorVisitor.java";
  }

  @(AstAttributesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AstAttributesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor/AstAttributesInheritanceVisitor.java";
  }

  @(AstAttributesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AstAttributesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor/AstAttributesParentAwareVisitor.java";
  }

  @(AstAttributesVisitor.class):JavaClassFile{
    simpleName = "AstAttributesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor/AstAttributesVisitor.class";
  }

  @(AstAttributesVisitor.java):JavaSourceFile{
    simpleName = "AstAttributesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astattributes/_visitor/AstAttributesVisitor.java";
  }

  @(astmethods):Directory{
    simpleName = "astmethods";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods";
  }

  @(_ast!15):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast";
  }

  @(ASTA.class!3):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTA.class";
  }

  @(ASTA.java!3):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTA.java";
  }

  @(ASTABuilder.class!3):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!3):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTABuilder.java";
  }

  @(ASTAstMethodsNode.class):JavaClassFile{
    simpleName = "ASTAstMethodsNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTAstMethodsNode.class";
  }

  @(ASTAstMethodsNode.java):JavaSourceFile{
    simpleName = "ASTAstMethodsNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTAstMethodsNode.java";
  }

  @(ASTB.class!2):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTB.class";
  }

  @(ASTB.java!2):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTB.java";
  }

  @(ASTBBuilder.class!2):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java!2):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTBBuilder.java";
  }

  @(ASTC.class):JavaClassFile{
    simpleName = "ASTC";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTC.class";
  }

  @(ASTC.java):JavaSourceFile{
    simpleName = "ASTC";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTC.java";
  }

  @(ASTCBuilder.class):JavaClassFile{
    simpleName = "ASTCBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTCBuilder.class";
  }

  @(ASTCBuilder.java):JavaSourceFile{
    simpleName = "ASTCBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTCBuilder.java";
  }

  @(ASTConstantsAstMethods.class):JavaClassFile{
    simpleName = "ASTConstantsAstMethods";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTConstantsAstMethods.class";
  }

  @(ASTConstantsAstMethods.java):JavaSourceFile{
    simpleName = "ASTConstantsAstMethods";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/ASTConstantsAstMethods.java";
  }

  @(AstMethodsLiterals.class):JavaClassFile{
    simpleName = "AstMethodsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsLiterals.class";
  }

  @(AstMethodsLiterals.java):JavaSourceFile{
    simpleName = "AstMethodsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsLiterals.java";
  }

  @(AstMethodsMill.class):JavaClassFile{
    simpleName = "AstMethodsMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsMill.class";
  }

  @(AstMethodsMill.java):JavaSourceFile{
    simpleName = "AstMethodsMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsMill.java";
  }

  @(AstMethodsNodeFactory.class):JavaClassFile{
    simpleName = "AstMethodsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsNodeFactory.class";
  }

  @(AstMethodsNodeFactory.java):JavaSourceFile{
    simpleName = "AstMethodsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_ast/AstMethodsNodeFactory.java";
  }

  @(_cocos!9):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos";
  }

  @(AstMethodsASTACoCo.java):JavaSourceFile{
    simpleName = "AstMethodsASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos/AstMethodsASTACoCo.java";
  }

  @(AstMethodsASTAstMethodsNodeCoCo.java):JavaSourceFile{
    simpleName = "AstMethodsASTAstMethodsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos/AstMethodsASTAstMethodsNodeCoCo.java";
  }

  @(AstMethodsASTBCoCo.java):JavaSourceFile{
    simpleName = "AstMethodsASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos/AstMethodsASTBCoCo.java";
  }

  @(AstMethodsASTCCoCo.java):JavaSourceFile{
    simpleName = "AstMethodsASTCCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos/AstMethodsASTCCoCo.java";
  }

  @(AstMethodsCoCoChecker.java):JavaSourceFile{
    simpleName = "AstMethodsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_cocos/AstMethodsCoCoChecker.java";
  }

  @(_od!9):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_od";
  }

  @(AstMethods2OD.java):JavaSourceFile{
    simpleName = "AstMethods2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_od/AstMethods2OD.java";
  }

  @(_visitor!9):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor";
  }

  @(AstMethodsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AstMethodsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor/AstMethodsDelegatorVisitor.java";
  }

  @(AstMethodsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AstMethodsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor/AstMethodsInheritanceVisitor.java";
  }

  @(AstMethodsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AstMethodsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor/AstMethodsParentAwareVisitor.java";
  }

  @(AstMethodsVisitor.class):JavaClassFile{
    simpleName = "AstMethodsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor/AstMethodsVisitor.class";
  }

  @(AstMethodsVisitor.java):JavaSourceFile{
    simpleName = "AstMethodsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/astmethods/_visitor/AstMethodsVisitor.java";
  }

  @(cdattributes):Directory{
    simpleName = "cdattributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes";
  }

  @(_ast!16):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast";
  }

  @(ASTA.class!4):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTA.class";
  }

  @(ASTA.java!4):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTA.java";
  }

  @(ASTABuilder.class!4):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!4):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTABuilder.java";
  }

  @(ASTB.class!3):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTB.class";
  }

  @(ASTB.java!3):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTB.java";
  }

  @(ASTBBuilder.class!3):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java!3):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTBBuilder.java";
  }

  @(ASTC.class!2):JavaClassFile{
    simpleName = "ASTC";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTC.class";
  }

  @(ASTC.java!2):JavaSourceFile{
    simpleName = "ASTC";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTC.java";
  }

  @(ASTCBuilder.class!2):JavaClassFile{
    simpleName = "ASTCBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCBuilder.class";
  }

  @(ASTCBuilder.java!2):JavaSourceFile{
    simpleName = "ASTCBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCBuilder.java";
  }

  @(ASTCD.class):JavaClassFile{
    simpleName = "ASTCD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCD.class";
  }

  @(ASTCD.java):JavaSourceFile{
    simpleName = "ASTCD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCD.java";
  }

  @(ASTCdAttributesNode.class):JavaClassFile{
    simpleName = "ASTCdAttributesNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCdAttributesNode.class";
  }

  @(ASTCdAttributesNode.java):JavaSourceFile{
    simpleName = "ASTCdAttributesNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCdAttributesNode.java";
  }

  @(ASTCDBuilder.class):JavaClassFile{
    simpleName = "ASTCDBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCDBuilder.class";
  }

  @(ASTCDBuilder.java):JavaSourceFile{
    simpleName = "ASTCDBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTCDBuilder.java";
  }

  @(ASTConstantsCdAttributes.class):JavaClassFile{
    simpleName = "ASTConstantsCdAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTConstantsCdAttributes.class";
  }

  @(ASTConstantsCdAttributes.java):JavaSourceFile{
    simpleName = "ASTConstantsCdAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTConstantsCdAttributes.java";
  }

  @(ASTD.class):JavaClassFile{
    simpleName = "ASTD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTD.class";
  }

  @(ASTD.java):JavaSourceFile{
    simpleName = "ASTD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTD.java";
  }

  @(ASTDBuilder.class):JavaClassFile{
    simpleName = "ASTDBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTDBuilder.class";
  }

  @(ASTDBuilder.java):JavaSourceFile{
    simpleName = "ASTDBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/ASTDBuilder.java";
  }

  @(CdAttributesLiterals.class):JavaClassFile{
    simpleName = "CdAttributesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesLiterals.class";
  }

  @(CdAttributesLiterals.java):JavaSourceFile{
    simpleName = "CdAttributesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesLiterals.java";
  }

  @(CdAttributesMill.class):JavaClassFile{
    simpleName = "CdAttributesMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesMill.class";
  }

  @(CdAttributesMill.java):JavaSourceFile{
    simpleName = "CdAttributesMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesMill.java";
  }

  @(CdAttributesNodeFactory.class):JavaClassFile{
    simpleName = "CdAttributesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesNodeFactory.class";
  }

  @(CdAttributesNodeFactory.java):JavaSourceFile{
    simpleName = "CdAttributesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_ast/CdAttributesNodeFactory.java";
  }

  @(_cocos!10):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos";
  }

  @(CdAttributesASTACoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTACoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTACoCo.class";
  }

  @(CdAttributesASTACoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTACoCo.java";
  }

  @(CdAttributesASTBCoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTBCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTBCoCo.class";
  }

  @(CdAttributesASTBCoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTBCoCo.java";
  }

  @(CdAttributesASTCCoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTCCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCCoCo.class";
  }

  @(CdAttributesASTCCoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTCCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCCoCo.java";
  }

  @(CdAttributesASTCdAttributesNodeCoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTCdAttributesNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCdAttributesNodeCoCo.class";
  }

  @(CdAttributesASTCdAttributesNodeCoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTCdAttributesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCdAttributesNodeCoCo.java";
  }

  @(CdAttributesASTCDCoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTCDCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCDCoCo.class";
  }

  @(CdAttributesASTCDCoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTCDCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTCDCoCo.java";
  }

  @(CdAttributesASTDCoCo.class):JavaClassFile{
    simpleName = "CdAttributesASTDCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTDCoCo.class";
  }

  @(CdAttributesASTDCoCo.java):JavaSourceFile{
    simpleName = "CdAttributesASTDCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesASTDCoCo.java";
  }

  @(CdAttributesCoCoChecker.class):JavaClassFile{
    simpleName = "CdAttributesCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesCoCoChecker.class";
  }

  @(CdAttributesCoCoChecker.java):JavaSourceFile{
    simpleName = "CdAttributesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_cocos/CdAttributesCoCoChecker.java";
  }

  @(_od!10):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_od";
  }

  @(CdAttributes2OD.class):JavaClassFile{
    simpleName = "CdAttributes2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_od/CdAttributes2OD.class";
  }

  @(CdAttributes2OD.java):JavaSourceFile{
    simpleName = "CdAttributes2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_od/CdAttributes2OD.java";
  }

  @(_parser!6):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser";
  }

  @(CdAttributesAntlrBaseListener.class):JavaClassFile{
    simpleName = "CdAttributesAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrBaseListener.class";
  }

  @(CdAttributesAntlrBaseListener.java):JavaSourceFile{
    simpleName = "CdAttributesAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrBaseListener.java";
  }

  @(CdAttributesAntlrLexer.class):JavaClassFile{
    simpleName = "CdAttributesAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrLexer.class";
  }

  @(CdAttributesAntlrLexer.java):JavaSourceFile{
    simpleName = "CdAttributesAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrLexer.java";
  }

  @(CdAttributesAntlrListener.class):JavaClassFile{
    simpleName = "CdAttributesAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrListener.class";
  }

  @(CdAttributesAntlrListener.java):JavaSourceFile{
    simpleName = "CdAttributesAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrListener.java";
  }

  @(CdAttributesAntlrParser$AContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$AContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$AContext.class";
  }

  @(CdAttributesAntlrParser$A_eofContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$A_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$A_eofContext.class";
  }

  @(CdAttributesAntlrParser$BContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$BContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$BContext.class";
  }

  @(CdAttributesAntlrParser$B_eofContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$B_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$B_eofContext.class";
  }

  @(CdAttributesAntlrParser$CContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$CContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$CContext.class";
  }

  @(CdAttributesAntlrParser$CDContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$CDContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$CDContext.class";
  }

  @(CdAttributesAntlrParser$CD_eofContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$CD_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$CD_eofContext.class";
  }

  @(CdAttributesAntlrParser$C_eofContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$C_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$C_eofContext.class";
  }

  @(CdAttributesAntlrParser$DContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$DContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$DContext.class";
  }

  @(CdAttributesAntlrParser$D_eofContext.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser$D_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser$D_eofContext.class";
  }

  @(CdAttributesAntlrParser.class):JavaClassFile{
    simpleName = "CdAttributesAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser.class";
  }

  @(CdAttributesAntlrParser.java):JavaSourceFile{
    simpleName = "CdAttributesAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesAntlrParser.java";
  }

  @(CdAttributesParser.class):JavaClassFile{
    simpleName = "CdAttributesParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesParser.class";
  }

  @(CdAttributesParser.java):JavaSourceFile{
    simpleName = "CdAttributesParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_parser/CdAttributesParser.java";
  }

  @(_visitor!10):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor";
  }

  @(CdAttributesDelegatorVisitor.class):JavaClassFile{
    simpleName = "CdAttributesDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesDelegatorVisitor.class";
  }

  @(CdAttributesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CdAttributesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesDelegatorVisitor.java";
  }

  @(CdAttributesInheritanceVisitor.class):JavaClassFile{
    simpleName = "CdAttributesInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesInheritanceVisitor.class";
  }

  @(CdAttributesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CdAttributesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesInheritanceVisitor.java";
  }

  @(CdAttributesParentAwareVisitor.class):JavaClassFile{
    simpleName = "CdAttributesParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesParentAwareVisitor.class";
  }

  @(CdAttributesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CdAttributesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesParentAwareVisitor.java";
  }

  @(CdAttributesVisitor.class):JavaClassFile{
    simpleName = "CdAttributesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesVisitor.class";
  }

  @(CdAttributesVisitor.java):JavaSourceFile{
    simpleName = "CdAttributesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/cdattributes/_visitor/CdAttributesVisitor.java";
  }

  @(emf!7):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf";
  }

  @(automaton!14):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton";
  }

  @(_ast!17):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast";
  }

  @(ASTAutomaton.class!2):JavaClassFile{
    simpleName = "ASTAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomaton.class";
  }

  @(ASTAutomaton.java!4):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.class!2):JavaClassFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomatonBuilder.class";
  }

  @(ASTAutomatonBuilder.java!4):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTAutomatonNode.class!2):JavaClassFile{
    simpleName = "ASTAutomatonNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomatonNode.class";
  }

  @(ASTAutomatonNode.java!3):JavaSourceFile{
    simpleName = "ASTAutomatonNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTAutomatonNode.java";
  }

  @(ASTConstantsAutomaton.class!2):JavaClassFile{
    simpleName = "ASTConstantsAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTConstantsAutomaton.class";
  }

  @(ASTConstantsAutomaton.java!3):JavaSourceFile{
    simpleName = "ASTConstantsAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTConstantsAutomaton.java";
  }

  @(ASTState.class!2):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTState.class";
  }

  @(ASTState.java!5):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class!2):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!5):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.class!2):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!4):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class!2):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!4):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/ASTTransitionBuilder.java";
  }

  @(AutomatonLiterals.class!2):JavaClassFile{
    simpleName = "AutomatonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonLiterals.class";
  }

  @(AutomatonLiterals.java!3):JavaSourceFile{
    simpleName = "AutomatonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonLiterals.java";
  }

  @(AutomatonMill.class!2):JavaClassFile{
    simpleName = "AutomatonMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonMill.class";
  }

  @(AutomatonMill.java!3):JavaSourceFile{
    simpleName = "AutomatonMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonMill.java";
  }

  @(AutomatonNodeFactory.class!2):JavaClassFile{
    simpleName = "AutomatonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonNodeFactory.class";
  }

  @(AutomatonNodeFactory.java!3):JavaSourceFile{
    simpleName = "AutomatonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_ast/AutomatonNodeFactory.java";
  }

  @(_cocos!11):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos";
  }

  @(AutomatonASTAutomatonCoCo.class!2):JavaClassFile{
    simpleName = "AutomatonASTAutomatonCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTAutomatonCoCo.class";
  }

  @(AutomatonASTAutomatonCoCo.java!3):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTAutomatonCoCo.java";
  }

  @(AutomatonASTAutomatonNodeCoCo.class!2):JavaClassFile{
    simpleName = "AutomatonASTAutomatonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTAutomatonNodeCoCo.class";
  }

  @(AutomatonASTAutomatonNodeCoCo.java!3):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTAutomatonNodeCoCo.java";
  }

  @(AutomatonASTStateCoCo.class!2):JavaClassFile{
    simpleName = "AutomatonASTStateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTStateCoCo.class";
  }

  @(AutomatonASTStateCoCo.java!3):JavaSourceFile{
    simpleName = "AutomatonASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTStateCoCo.java";
  }

  @(AutomatonASTTransitionCoCo.class!2):JavaClassFile{
    simpleName = "AutomatonASTTransitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTTransitionCoCo.class";
  }

  @(AutomatonASTTransitionCoCo.java!3):JavaSourceFile{
    simpleName = "AutomatonASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonASTTransitionCoCo.java";
  }

  @(AutomatonCoCoChecker.class!2):JavaClassFile{
    simpleName = "AutomatonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonCoCoChecker.class";
  }

  @(AutomatonCoCoChecker.java!3):JavaSourceFile{
    simpleName = "AutomatonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_cocos/AutomatonCoCoChecker.java";
  }

  @(_od!11):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_od";
  }

  @(Automaton2OD.class!2):JavaClassFile{
    simpleName = "Automaton2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_od/Automaton2OD.class";
  }

  @(Automaton2OD.java!3):JavaSourceFile{
    simpleName = "Automaton2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_od/Automaton2OD.java";
  }

  @(_visitor!11):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor";
  }

  @(AutomatonDelegatorVisitor.class!2):JavaClassFile{
    simpleName = "AutomatonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonDelegatorVisitor.class";
  }

  @(AutomatonDelegatorVisitor.java!3):JavaSourceFile{
    simpleName = "AutomatonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonDelegatorVisitor.java";
  }

  @(AutomatonInheritanceVisitor.class!2):JavaClassFile{
    simpleName = "AutomatonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonInheritanceVisitor.class";
  }

  @(AutomatonInheritanceVisitor.java!3):JavaSourceFile{
    simpleName = "AutomatonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonInheritanceVisitor.java";
  }

  @(AutomatonParentAwareVisitor.class!2):JavaClassFile{
    simpleName = "AutomatonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonParentAwareVisitor.class";
  }

  @(AutomatonParentAwareVisitor.java!3):JavaSourceFile{
    simpleName = "AutomatonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonParentAwareVisitor.java";
  }

  @(AutomatonVisitor.class!2):JavaClassFile{
    simpleName = "AutomatonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonVisitor.class";
  }

  @(AutomatonVisitor.java!3):JavaSourceFile{
    simpleName = "AutomatonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton/_visitor/AutomatonVisitor.java";
  }

  @(automaton2):Directory{
    simpleName = "automaton2";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2";
  }

  @(_ast!18):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast";
  }

  @(ASTAction.class!2):JavaClassFile{
    simpleName = "ASTAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAction.class";
  }

  @(ASTAction.java):JavaSourceFile{
    simpleName = "ASTAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAction.java";
  }

  @(ASTActionBuilder.class):JavaClassFile{
    simpleName = "ASTActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTActionBuilder.class";
  }

  @(ASTActionBuilder.java):JavaSourceFile{
    simpleName = "ASTActionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTActionBuilder.java";
  }

  @(ASTAutomaton.class!3):JavaClassFile{
    simpleName = "ASTAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomaton.class";
  }

  @(ASTAutomaton.java!5):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomaton.java";
  }

  @(ASTAutomaton2Node.class):JavaClassFile{
    simpleName = "ASTAutomaton2Node";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomaton2Node.class";
  }

  @(ASTAutomaton2Node.java):JavaSourceFile{
    simpleName = "ASTAutomaton2Node";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomaton2Node.java";
  }

  @(ASTAutomatonBuilder.class!3):JavaClassFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomatonBuilder.class";
  }

  @(ASTAutomatonBuilder.java!5):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTConstantsAutomaton2.class):JavaClassFile{
    simpleName = "ASTConstantsAutomaton2";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTConstantsAutomaton2.class";
  }

  @(ASTConstantsAutomaton2.java):JavaSourceFile{
    simpleName = "ASTConstantsAutomaton2";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTConstantsAutomaton2.java";
  }

  @(ASTState.class!3):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTState.class";
  }

  @(ASTState.java!6):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class!3):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!6):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.class!3):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!5):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class!3):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!5):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/ASTTransitionBuilder.java";
  }

  @(Automaton2Literals.class):JavaClassFile{
    simpleName = "Automaton2Literals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2Literals.class";
  }

  @(Automaton2Literals.java):JavaSourceFile{
    simpleName = "Automaton2Literals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2Literals.java";
  }

  @(Automaton2Mill.class):JavaClassFile{
    simpleName = "Automaton2Mill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2Mill.class";
  }

  @(Automaton2Mill.java):JavaSourceFile{
    simpleName = "Automaton2Mill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2Mill.java";
  }

  @(Automaton2NodeFactory.class):JavaClassFile{
    simpleName = "Automaton2NodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2NodeFactory.class";
  }

  @(Automaton2NodeFactory.java):JavaSourceFile{
    simpleName = "Automaton2NodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_ast/Automaton2NodeFactory.java";
  }

  @(_cocos!12):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos";
  }

  @(Automaton2ASTActionCoCo.class):JavaClassFile{
    simpleName = "Automaton2ASTActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTActionCoCo.class";
  }

  @(Automaton2ASTActionCoCo.java):JavaSourceFile{
    simpleName = "Automaton2ASTActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTActionCoCo.java";
  }

  @(Automaton2ASTAutomaton2NodeCoCo.class):JavaClassFile{
    simpleName = "Automaton2ASTAutomaton2NodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTAutomaton2NodeCoCo.class";
  }

  @(Automaton2ASTAutomaton2NodeCoCo.java):JavaSourceFile{
    simpleName = "Automaton2ASTAutomaton2NodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTAutomaton2NodeCoCo.java";
  }

  @(Automaton2ASTAutomatonCoCo.class):JavaClassFile{
    simpleName = "Automaton2ASTAutomatonCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTAutomatonCoCo.class";
  }

  @(Automaton2ASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "Automaton2ASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTAutomatonCoCo.java";
  }

  @(Automaton2ASTStateCoCo.class):JavaClassFile{
    simpleName = "Automaton2ASTStateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTStateCoCo.class";
  }

  @(Automaton2ASTStateCoCo.java):JavaSourceFile{
    simpleName = "Automaton2ASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTStateCoCo.java";
  }

  @(Automaton2ASTTransitionCoCo.class):JavaClassFile{
    simpleName = "Automaton2ASTTransitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTTransitionCoCo.class";
  }

  @(Automaton2ASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "Automaton2ASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2ASTTransitionCoCo.java";
  }

  @(Automaton2CoCoChecker.class):JavaClassFile{
    simpleName = "Automaton2CoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2CoCoChecker.class";
  }

  @(Automaton2CoCoChecker.java):JavaSourceFile{
    simpleName = "Automaton2CoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_cocos/Automaton2CoCoChecker.java";
  }

  @(_od!12):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_od";
  }

  @(Automaton22OD.class):JavaClassFile{
    simpleName = "Automaton22OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_od/Automaton22OD.class";
  }

  @(Automaton22OD.java):JavaSourceFile{
    simpleName = "Automaton22OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_od/Automaton22OD.java";
  }

  @(_visitor!12):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor";
  }

  @(Automaton2DelegatorVisitor.class):JavaClassFile{
    simpleName = "Automaton2DelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2DelegatorVisitor.class";
  }

  @(Automaton2DelegatorVisitor.java):JavaSourceFile{
    simpleName = "Automaton2DelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2DelegatorVisitor.java";
  }

  @(Automaton2InheritanceVisitor.class):JavaClassFile{
    simpleName = "Automaton2InheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2InheritanceVisitor.class";
  }

  @(Automaton2InheritanceVisitor.java):JavaSourceFile{
    simpleName = "Automaton2InheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2InheritanceVisitor.java";
  }

  @(Automaton2ParentAwareVisitor.class):JavaClassFile{
    simpleName = "Automaton2ParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2ParentAwareVisitor.class";
  }

  @(Automaton2ParentAwareVisitor.java):JavaSourceFile{
    simpleName = "Automaton2ParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2ParentAwareVisitor.java";
  }

  @(Automaton2Visitor.class):JavaClassFile{
    simpleName = "Automaton2Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2Visitor.class";
  }

  @(Automaton2Visitor.java):JavaSourceFile{
    simpleName = "Automaton2Visitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/emf/automaton2/_visitor/Automaton2Visitor.java";
  }

  @(expression!4):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression";
  }

  @(expression!5):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression";
  }

  @(_ast!19):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast";
  }

  @(ASTConstantsExpression.class):JavaClassFile{
    simpleName = "ASTConstantsExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTConstantsExpression.class";
  }

  @(ASTConstantsExpression.java):JavaSourceFile{
    simpleName = "ASTConstantsExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTConstantsExpression.java";
  }

  @(ASTExpr.class):JavaClassFile{
    simpleName = "ASTExpr";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExpr.class";
  }

  @(ASTExpr.java):JavaSourceFile{
    simpleName = "ASTExpr";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExpr.java";
  }

  @(ASTExprBuilder.class):JavaClassFile{
    simpleName = "ASTExprBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExprBuilder.class";
  }

  @(ASTExprBuilder.java):JavaSourceFile{
    simpleName = "ASTExprBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExprBuilder.java";
  }

  @(ASTExpressionNode.class):JavaClassFile{
    simpleName = "ASTExpressionNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExpressionNode.class";
  }

  @(ASTExpressionNode.java):JavaSourceFile{
    simpleName = "ASTExpressionNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ASTExpressionNode.java";
  }

  @(ExpressionLiterals.class):JavaClassFile{
    simpleName = "ExpressionLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionLiterals.class";
  }

  @(ExpressionLiterals.java):JavaSourceFile{
    simpleName = "ExpressionLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionLiterals.java";
  }

  @(ExpressionMill.class):JavaClassFile{
    simpleName = "ExpressionMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionMill.class";
  }

  @(ExpressionMill.java):JavaSourceFile{
    simpleName = "ExpressionMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionMill.java";
  }

  @(ExpressionNodeFactory.class):JavaClassFile{
    simpleName = "ExpressionNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionNodeFactory.class";
  }

  @(ExpressionNodeFactory.java):JavaSourceFile{
    simpleName = "ExpressionNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_ast/ExpressionNodeFactory.java";
  }

  @(_cocos!13):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos";
  }

  @(ExpressionASTExprCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTExprCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionASTExprCoCo.class";
  }

  @(ExpressionASTExprCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTExprCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionASTExprCoCo.java";
  }

  @(ExpressionASTExpressionNodeCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTExpressionNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionASTExpressionNodeCoCo.class";
  }

  @(ExpressionASTExpressionNodeCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTExpressionNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionASTExpressionNodeCoCo.java";
  }

  @(ExpressionCoCoChecker.class):JavaClassFile{
    simpleName = "ExpressionCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionCoCoChecker.class";
  }

  @(ExpressionCoCoChecker.java):JavaSourceFile{
    simpleName = "ExpressionCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_cocos/ExpressionCoCoChecker.java";
  }

  @(_od!13):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_od";
  }

  @(Expression2OD.class):JavaClassFile{
    simpleName = "Expression2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_od/Expression2OD.class";
  }

  @(Expression2OD.java):JavaSourceFile{
    simpleName = "Expression2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_od/Expression2OD.java";
  }

  @(_parser!7):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser";
  }

  @(ExpressionAntlrBaseListener.class):JavaClassFile{
    simpleName = "ExpressionAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrBaseListener.class";
  }

  @(ExpressionAntlrBaseListener.java):JavaSourceFile{
    simpleName = "ExpressionAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrBaseListener.java";
  }

  @(ExpressionAntlrLexer.class):JavaClassFile{
    simpleName = "ExpressionAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrLexer.class";
  }

  @(ExpressionAntlrLexer.java):JavaSourceFile{
    simpleName = "ExpressionAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrLexer.java";
  }

  @(ExpressionAntlrListener.class):JavaClassFile{
    simpleName = "ExpressionAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrListener.class";
  }

  @(ExpressionAntlrListener.java):JavaSourceFile{
    simpleName = "ExpressionAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrListener.java";
  }

  @(ExpressionAntlrParser$ExprContext.class):JavaClassFile{
    simpleName = "ExpressionAntlrParser$ExprContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrParser$ExprContext.class";
  }

  @(ExpressionAntlrParser$Expr_eofContext.class):JavaClassFile{
    simpleName = "ExpressionAntlrParser$Expr_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrParser$Expr_eofContext.class";
  }

  @(ExpressionAntlrParser.class):JavaClassFile{
    simpleName = "ExpressionAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrParser.class";
  }

  @(ExpressionAntlrParser.java):JavaSourceFile{
    simpleName = "ExpressionAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionAntlrParser.java";
  }

  @(ExpressionParser.class):JavaClassFile{
    simpleName = "ExpressionParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionParser.class";
  }

  @(ExpressionParser.java):JavaSourceFile{
    simpleName = "ExpressionParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_parser/ExpressionParser.java";
  }

  @(_visitor!13):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor";
  }

  @(ExpressionDelegatorVisitor.class):JavaClassFile{
    simpleName = "ExpressionDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionDelegatorVisitor.class";
  }

  @(ExpressionDelegatorVisitor.java):JavaSourceFile{
    simpleName = "ExpressionDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionDelegatorVisitor.java";
  }

  @(ExpressionInheritanceVisitor.class):JavaClassFile{
    simpleName = "ExpressionInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionInheritanceVisitor.class";
  }

  @(ExpressionInheritanceVisitor.java):JavaSourceFile{
    simpleName = "ExpressionInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionInheritanceVisitor.java";
  }

  @(ExpressionParentAwareVisitor.class):JavaClassFile{
    simpleName = "ExpressionParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionParentAwareVisitor.class";
  }

  @(ExpressionParentAwareVisitor.java):JavaSourceFile{
    simpleName = "ExpressionParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionParentAwareVisitor.java";
  }

  @(ExpressionVisitor.class):JavaClassFile{
    simpleName = "ExpressionVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionVisitor.class";
  }

  @(ExpressionVisitor.java):JavaSourceFile{
    simpleName = "ExpressionVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/expression/expression/_visitor/ExpressionVisitor.java";
  }

  @(fautomaton!4):Directory{
    simpleName = "fautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton";
  }

  @(action!4):Directory{
    simpleName = "action";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action";
  }

  @(expression!6):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression";
  }

  @(_ast!20):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast";
  }

  @(ASTAssignment.class):JavaClassFile{
    simpleName = "ASTAssignment";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTAssignment.class";
  }

  @(ASTAssignment.java):JavaSourceFile{
    simpleName = "ASTAssignment";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTAssignment.java";
  }

  @(ASTAssignmentBuilder.class):JavaClassFile{
    simpleName = "ASTAssignmentBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTAssignmentBuilder.class";
  }

  @(ASTAssignmentBuilder.java):JavaSourceFile{
    simpleName = "ASTAssignmentBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTAssignmentBuilder.java";
  }

  @(ASTComplexAssigment.class):JavaClassFile{
    simpleName = "ASTComplexAssigment";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTComplexAssigment.class";
  }

  @(ASTComplexAssigment.java):JavaSourceFile{
    simpleName = "ASTComplexAssigment";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTComplexAssigment.java";
  }

  @(ASTComplexAssigmentBuilder.class):JavaClassFile{
    simpleName = "ASTComplexAssigmentBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTComplexAssigmentBuilder.class";
  }

  @(ASTComplexAssigmentBuilder.java):JavaSourceFile{
    simpleName = "ASTComplexAssigmentBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTComplexAssigmentBuilder.java";
  }

  @(ASTConstantsExpression.class!2):JavaClassFile{
    simpleName = "ASTConstantsExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTConstantsExpression.class";
  }

  @(ASTConstantsExpression.java!2):JavaSourceFile{
    simpleName = "ASTConstantsExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTConstantsExpression.java";
  }

  @(ASTDecreaseExpression.class):JavaClassFile{
    simpleName = "ASTDecreaseExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTDecreaseExpression.class";
  }

  @(ASTDecreaseExpression.java):JavaSourceFile{
    simpleName = "ASTDecreaseExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTDecreaseExpression.java";
  }

  @(ASTDecreaseExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTDecreaseExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTDecreaseExpressionBuilder.class";
  }

  @(ASTDecreaseExpressionBuilder.java):JavaSourceFile{
    simpleName = "ASTDecreaseExpressionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTDecreaseExpressionBuilder.java";
  }

  @(ASTExpression.class):JavaClassFile{
    simpleName = "ASTExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTExpression.class";
  }

  @(ASTExpression.java):JavaSourceFile{
    simpleName = "ASTExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTExpression.java";
  }

  @(ASTExpressionNode.class!2):JavaClassFile{
    simpleName = "ASTExpressionNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTExpressionNode.class";
  }

  @(ASTExpressionNode.java!2):JavaSourceFile{
    simpleName = "ASTExpressionNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTExpressionNode.java";
  }

  @(ASTIncreaseExpression.class):JavaClassFile{
    simpleName = "ASTIncreaseExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTIncreaseExpression.class";
  }

  @(ASTIncreaseExpression.java):JavaSourceFile{
    simpleName = "ASTIncreaseExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTIncreaseExpression.java";
  }

  @(ASTIncreaseExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTIncreaseExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTIncreaseExpressionBuilder.class";
  }

  @(ASTIncreaseExpressionBuilder.java):JavaSourceFile{
    simpleName = "ASTIncreaseExpressionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTIncreaseExpressionBuilder.java";
  }

  @(ASTValue.class):JavaClassFile{
    simpleName = "ASTValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTValue.class";
  }

  @(ASTValue.java):JavaSourceFile{
    simpleName = "ASTValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ASTValue.java";
  }

  @(ExpressionLiterals.class!2):JavaClassFile{
    simpleName = "ExpressionLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionLiterals.class";
  }

  @(ExpressionLiterals.java!2):JavaSourceFile{
    simpleName = "ExpressionLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionLiterals.java";
  }

  @(ExpressionMill.class!2):JavaClassFile{
    simpleName = "ExpressionMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionMill.class";
  }

  @(ExpressionMill.java!2):JavaSourceFile{
    simpleName = "ExpressionMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionMill.java";
  }

  @(ExpressionNodeFactory.class!2):JavaClassFile{
    simpleName = "ExpressionNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionNodeFactory.class";
  }

  @(ExpressionNodeFactory.java!2):JavaSourceFile{
    simpleName = "ExpressionNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_ast/ExpressionNodeFactory.java";
  }

  @(_cocos!14):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos";
  }

  @(ExpressionASTAssignmentCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTAssignmentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTAssignmentCoCo.class";
  }

  @(ExpressionASTAssignmentCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTAssignmentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTAssignmentCoCo.java";
  }

  @(ExpressionASTComplexAssigmentCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTComplexAssigmentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTComplexAssigmentCoCo.class";
  }

  @(ExpressionASTComplexAssigmentCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTComplexAssigmentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTComplexAssigmentCoCo.java";
  }

  @(ExpressionASTDecreaseExpressionCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTDecreaseExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTDecreaseExpressionCoCo.class";
  }

  @(ExpressionASTDecreaseExpressionCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTDecreaseExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTDecreaseExpressionCoCo.java";
  }

  @(ExpressionASTExpressionCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTExpressionCoCo.class";
  }

  @(ExpressionASTExpressionCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTExpressionCoCo.java";
  }

  @(ExpressionASTExpressionNodeCoCo.class!2):JavaClassFile{
    simpleName = "ExpressionASTExpressionNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTExpressionNodeCoCo.class";
  }

  @(ExpressionASTExpressionNodeCoCo.java!2):JavaSourceFile{
    simpleName = "ExpressionASTExpressionNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTExpressionNodeCoCo.java";
  }

  @(ExpressionASTIncreaseExpressionCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTIncreaseExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTIncreaseExpressionCoCo.class";
  }

  @(ExpressionASTIncreaseExpressionCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTIncreaseExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTIncreaseExpressionCoCo.java";
  }

  @(ExpressionASTValueCoCo.class):JavaClassFile{
    simpleName = "ExpressionASTValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTValueCoCo.class";
  }

  @(ExpressionASTValueCoCo.java):JavaSourceFile{
    simpleName = "ExpressionASTValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionASTValueCoCo.java";
  }

  @(ExpressionCoCoChecker.class!2):JavaClassFile{
    simpleName = "ExpressionCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionCoCoChecker.class";
  }

  @(ExpressionCoCoChecker.java!2):JavaSourceFile{
    simpleName = "ExpressionCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_cocos/ExpressionCoCoChecker.java";
  }

  @(_od!14):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_od";
  }

  @(Expression2OD.class!2):JavaClassFile{
    simpleName = "Expression2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_od/Expression2OD.class";
  }

  @(Expression2OD.java!2):JavaSourceFile{
    simpleName = "Expression2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_od/Expression2OD.java";
  }

  @(_visitor!14):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor";
  }

  @(ExpressionDelegatorVisitor.class!2):JavaClassFile{
    simpleName = "ExpressionDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionDelegatorVisitor.class";
  }

  @(ExpressionDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "ExpressionDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionDelegatorVisitor.java";
  }

  @(ExpressionInheritanceVisitor.class!2):JavaClassFile{
    simpleName = "ExpressionInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionInheritanceVisitor.class";
  }

  @(ExpressionInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "ExpressionInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionInheritanceVisitor.java";
  }

  @(ExpressionParentAwareVisitor.class!2):JavaClassFile{
    simpleName = "ExpressionParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionParentAwareVisitor.class";
  }

  @(ExpressionParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "ExpressionParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionParentAwareVisitor.java";
  }

  @(ExpressionVisitor.class!2):JavaClassFile{
    simpleName = "ExpressionVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionVisitor.class";
  }

  @(ExpressionVisitor.java!2):JavaSourceFile{
    simpleName = "ExpressionVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/action/expression/_visitor/ExpressionVisitor.java";
  }

  @(automaton!15):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton";
  }

  @(flatautomaton):Directory{
    simpleName = "flatautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton";
  }

  @(_ast!21):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast";
  }

  @(ASTA0.java):JavaSourceFile{
    simpleName = "ASTA0";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTA0.java";
  }

  @(ASTA1.java):JavaSourceFile{
    simpleName = "ASTA1";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTA1.java";
  }

  @(ASTAutomaton.java!6):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.java!6):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTB0.java):JavaSourceFile{
    simpleName = "ASTB0";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTB0.java";
  }

  @(ASTB1.java):JavaSourceFile{
    simpleName = "ASTB1";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTB1.java";
  }

  @(ASTC0.java):JavaSourceFile{
    simpleName = "ASTC0";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTC0.java";
  }

  @(ASTC1.java):JavaSourceFile{
    simpleName = "ASTC1";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTC1.java";
  }

  @(ASTConstantsFlatAutomaton.java):JavaSourceFile{
    simpleName = "ASTConstantsFlatAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTConstantsFlatAutomaton.java";
  }

  @(ASTFlatAutomatonNode.java):JavaSourceFile{
    simpleName = "ASTFlatAutomatonNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTFlatAutomatonNode.java";
  }

  @(ASTM.java):JavaSourceFile{
    simpleName = "ASTM";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTM.java";
  }

  @(ASTMBuilder.java):JavaSourceFile{
    simpleName = "ASTMBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTMBuilder.java";
  }

  @(ASTP.java):JavaSourceFile{
    simpleName = "ASTP";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTP.java";
  }

  @(ASTP1.java):JavaSourceFile{
    simpleName = "ASTP1";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTP1.java";
  }

  @(ASTP1Builder.java):JavaSourceFile{
    simpleName = "ASTP1Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTP1Builder.java";
  }

  @(ASTPBuilder.java):JavaSourceFile{
    simpleName = "ASTPBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTPBuilder.java";
  }

  @(ASTState.java!7):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTState.java";
  }

  @(ASTStateBuilder.java!7):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.java!6):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.java!6):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/ASTTransitionBuilder.java";
  }

  @(FlatAutomatonLiterals.java):JavaSourceFile{
    simpleName = "FlatAutomatonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/FlatAutomatonLiterals.java";
  }

  @(FlatAutomatonMill.java):JavaSourceFile{
    simpleName = "FlatAutomatonMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/FlatAutomatonMill.java";
  }

  @(FlatAutomatonNodeFactory.java):JavaSourceFile{
    simpleName = "FlatAutomatonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_ast/FlatAutomatonNodeFactory.java";
  }

  @(_cocos!15):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos";
  }

  @(FlatAutomatonASTA0CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTA0CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTA0CoCo.java";
  }

  @(FlatAutomatonASTA1CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTA1CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTA1CoCo.java";
  }

  @(FlatAutomatonASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTAutomatonCoCo.java";
  }

  @(FlatAutomatonASTB0CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTB0CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTB0CoCo.java";
  }

  @(FlatAutomatonASTB1CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTB1CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTB1CoCo.java";
  }

  @(FlatAutomatonASTC0CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTC0CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTC0CoCo.java";
  }

  @(FlatAutomatonASTC1CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTC1CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTC1CoCo.java";
  }

  @(FlatAutomatonASTFlatAutomatonNodeCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTFlatAutomatonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTFlatAutomatonNodeCoCo.java";
  }

  @(FlatAutomatonASTMCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTMCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTMCoCo.java";
  }

  @(FlatAutomatonASTP1CoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTP1CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTP1CoCo.java";
  }

  @(FlatAutomatonASTPCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTPCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTPCoCo.java";
  }

  @(FlatAutomatonASTStateCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTStateCoCo.java";
  }

  @(FlatAutomatonASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "FlatAutomatonASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonASTTransitionCoCo.java";
  }

  @(FlatAutomatonCoCoChecker.java):JavaSourceFile{
    simpleName = "FlatAutomatonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_cocos/FlatAutomatonCoCoChecker.java";
  }

  @(_od!15):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_od";
  }

  @(FlatAutomaton2OD.java):JavaSourceFile{
    simpleName = "FlatAutomaton2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_od/FlatAutomaton2OD.java";
  }

  @(_visitor!15):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_visitor";
  }

  @(FlatAutomatonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "FlatAutomatonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_visitor/FlatAutomatonDelegatorVisitor.java";
  }

  @(FlatAutomatonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "FlatAutomatonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_visitor/FlatAutomatonInheritanceVisitor.java";
  }

  @(FlatAutomatonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "FlatAutomatonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_visitor/FlatAutomatonParentAwareVisitor.java";
  }

  @(FlatAutomatonVisitor.java):JavaSourceFile{
    simpleName = "FlatAutomatonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automaton/flatautomaton/_visitor/FlatAutomatonVisitor.java";
  }

  @(automatonwithaction!3):Directory{
    simpleName = "automatonwithaction";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction";
  }

  @(actionautomaton):Directory{
    simpleName = "actionautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton";
  }

  @(_ast!22):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast";
  }

  @(ActionAutomatonLiterals.java):JavaSourceFile{
    simpleName = "ActionAutomatonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ActionAutomatonLiterals.java";
  }

  @(ActionAutomatonMill.java):JavaSourceFile{
    simpleName = "ActionAutomatonMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ActionAutomatonMill.java";
  }

  @(ActionAutomatonNodeFactory.java):JavaSourceFile{
    simpleName = "ActionAutomatonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ActionAutomatonNodeFactory.java";
  }

  @(ASTA2.java):JavaSourceFile{
    simpleName = "ASTA2";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTA2.java";
  }

  @(ASTA2Builder.java):JavaSourceFile{
    simpleName = "ASTA2Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTA2Builder.java";
  }

  @(ASTActionAutomatonNode.java):JavaSourceFile{
    simpleName = "ASTActionAutomatonNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTActionAutomatonNode.java";
  }

  @(ASTActionExt.java):JavaSourceFile{
    simpleName = "ASTActionExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTActionExt.java";
  }

  @(ASTAutomaton.java!7):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.java!7):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTConstantsActionAutomaton.java):JavaSourceFile{
    simpleName = "ASTConstantsActionAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTConstantsActionAutomaton.java";
  }

  @(ASTCounter.java):JavaSourceFile{
    simpleName = "ASTCounter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTCounter.java";
  }

  @(ASTCounterBuilder.java):JavaSourceFile{
    simpleName = "ASTCounterBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/ASTCounterBuilder.java";
  }

  @(FlatAutomatonMillForActionAutomaton.java):JavaSourceFile{
    simpleName = "FlatAutomatonMillForActionAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_ast/FlatAutomatonMillForActionAutomaton.java";
  }

  @(_cocos!16):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos";
  }

  @(ActionAutomatonASTA2CoCo.java):JavaSourceFile{
    simpleName = "ActionAutomatonASTA2CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonASTA2CoCo.java";
  }

  @(ActionAutomatonASTActionAutomatonNodeCoCo.java):JavaSourceFile{
    simpleName = "ActionAutomatonASTActionAutomatonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonASTActionAutomatonNodeCoCo.java";
  }

  @(ActionAutomatonASTActionExtCoCo.java):JavaSourceFile{
    simpleName = "ActionAutomatonASTActionExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonASTActionExtCoCo.java";
  }

  @(ActionAutomatonASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "ActionAutomatonASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonASTAutomatonCoCo.java";
  }

  @(ActionAutomatonASTCounterCoCo.java):JavaSourceFile{
    simpleName = "ActionAutomatonASTCounterCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonASTCounterCoCo.java";
  }

  @(ActionAutomatonCoCoChecker.java):JavaSourceFile{
    simpleName = "ActionAutomatonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_cocos/ActionAutomatonCoCoChecker.java";
  }

  @(_od!16):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_od";
  }

  @(ActionAutomaton2OD.java):JavaSourceFile{
    simpleName = "ActionAutomaton2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_od/ActionAutomaton2OD.java";
  }

  @(_visitor!16):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_visitor";
  }

  @(ActionAutomatonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "ActionAutomatonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_visitor/ActionAutomatonDelegatorVisitor.java";
  }

  @(ActionAutomatonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "ActionAutomatonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_visitor/ActionAutomatonInheritanceVisitor.java";
  }

  @(ActionAutomatonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "ActionAutomatonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_visitor/ActionAutomatonParentAwareVisitor.java";
  }

  @(ActionAutomatonVisitor.java):JavaSourceFile{
    simpleName = "ActionAutomatonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/fautomaton/automatonwithaction/actionautomaton/_visitor/ActionAutomatonVisitor.java";
  }

  @(featuredsl):Directory{
    simpleName = "featuredsl";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl";
  }

  @(_ast!23):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast";
  }

  @(ASTA.class!5):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTA.class";
  }

  @(ASTA.java!5):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTA.java";
  }

  @(ASTABuilder.class!5):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!5):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTABuilder.java";
  }

  @(ASTAutomaton.class!4):JavaClassFile{
    simpleName = "ASTAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTAutomaton.class";
  }

  @(ASTAutomaton.java!8):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.class!4):JavaClassFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTAutomatonBuilder.class";
  }

  @(ASTAutomatonBuilder.java!8):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTB.class!4):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTB.class";
  }

  @(ASTB.java!4):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTB.java";
  }

  @(ASTBBuilder.class!4):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java!4):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTBBuilder.java";
  }

  @(ASTC.class!3):JavaClassFile{
    simpleName = "ASTC";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTC.class";
  }

  @(ASTC.java!3):JavaSourceFile{
    simpleName = "ASTC";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTC.java";
  }

  @(ASTCBuilder.class!3):JavaClassFile{
    simpleName = "ASTCBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTCBuilder.class";
  }

  @(ASTCBuilder.java!3):JavaSourceFile{
    simpleName = "ASTCBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTCBuilder.java";
  }

  @(ASTClassProd.class!2):JavaClassFile{
    simpleName = "ASTClassProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassProd.class";
  }

  @(ASTClassProd.java):JavaSourceFile{
    simpleName = "ASTClassProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassProd.java";
  }

  @(ASTClassProdBuilder.class):JavaClassFile{
    simpleName = "ASTClassProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassProdBuilder.class";
  }

  @(ASTClassProdBuilder.java):JavaSourceFile{
    simpleName = "ASTClassProdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassProdBuilder.java";
  }

  @(ASTClassRule.class):JavaClassFile{
    simpleName = "ASTClassRule";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassRule.class";
  }

  @(ASTClassRule.java):JavaSourceFile{
    simpleName = "ASTClassRule";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassRule.java";
  }

  @(ASTClassRuleBuilder.class):JavaClassFile{
    simpleName = "ASTClassRuleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassRuleBuilder.class";
  }

  @(ASTClassRuleBuilder.java):JavaSourceFile{
    simpleName = "ASTClassRuleBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTClassRuleBuilder.java";
  }

  @(ASTComplexname.class):JavaClassFile{
    simpleName = "ASTComplexname";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTComplexname.class";
  }

  @(ASTComplexname.java):JavaSourceFile{
    simpleName = "ASTComplexname";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTComplexname.java";
  }

  @(ASTComplexnameBuilder.class):JavaClassFile{
    simpleName = "ASTComplexnameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTComplexnameBuilder.class";
  }

  @(ASTComplexnameBuilder.java):JavaSourceFile{
    simpleName = "ASTComplexnameBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTComplexnameBuilder.java";
  }

  @(ASTConstants.class):JavaClassFile{
    simpleName = "ASTConstants";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstants.class";
  }

  @(ASTConstants.java):JavaSourceFile{
    simpleName = "ASTConstants";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstants.java";
  }

  @(ASTConstantsBuilder.class):JavaClassFile{
    simpleName = "ASTConstantsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstantsBuilder.class";
  }

  @(ASTConstantsBuilder.java):JavaSourceFile{
    simpleName = "ASTConstantsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstantsBuilder.java";
  }

  @(ASTConstantsFeatureDSL.class):JavaClassFile{
    simpleName = "ASTConstantsFeatureDSL";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstantsFeatureDSL.class";
  }

  @(ASTConstantsFeatureDSL.java):JavaSourceFile{
    simpleName = "ASTConstantsFeatureDSL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTConstantsFeatureDSL.java";
  }

  @(ASTExtraComponent.class):JavaClassFile{
    simpleName = "ASTExtraComponent";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTExtraComponent.class";
  }

  @(ASTExtraComponent.java):JavaSourceFile{
    simpleName = "ASTExtraComponent";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTExtraComponent.java";
  }

  @(ASTFeatureDSLNode.class):JavaClassFile{
    simpleName = "ASTFeatureDSLNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFeatureDSLNode.class";
  }

  @(ASTFeatureDSLNode.java):JavaSourceFile{
    simpleName = "ASTFeatureDSLNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFeatureDSLNode.java";
  }

  @(ASTFile.class):JavaClassFile{
    simpleName = "ASTFile";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFile.class";
  }

  @(ASTFile.java):JavaSourceFile{
    simpleName = "ASTFile";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFile.java";
  }

  @(ASTFileBuilder.class):JavaClassFile{
    simpleName = "ASTFileBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFileBuilder.class";
  }

  @(ASTFileBuilder.java):JavaSourceFile{
    simpleName = "ASTFileBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTFileBuilder.java";
  }

  @(ASTInterfaceRule.class):JavaClassFile{
    simpleName = "ASTInterfaceRule";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTInterfaceRule.class";
  }

  @(ASTInterfaceRule.java):JavaSourceFile{
    simpleName = "ASTInterfaceRule";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTInterfaceRule.java";
  }

  @(ASTInterfacewithspicelevel.class):JavaClassFile{
    simpleName = "ASTInterfacewithspicelevel";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTInterfacewithspicelevel.class";
  }

  @(ASTInterfacewithspicelevel.java):JavaSourceFile{
    simpleName = "ASTInterfacewithspicelevel";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTInterfacewithspicelevel.java";
  }

  @(ASTSpices1.class):JavaClassFile{
    simpleName = "ASTSpices1";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices1.class";
  }

  @(ASTSpices1.java):JavaSourceFile{
    simpleName = "ASTSpices1";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices1.java";
  }

  @(ASTSpices1Builder.class):JavaClassFile{
    simpleName = "ASTSpices1Builder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices1Builder.class";
  }

  @(ASTSpices1Builder.java):JavaSourceFile{
    simpleName = "ASTSpices1Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices1Builder.java";
  }

  @(ASTSpices2.class):JavaClassFile{
    simpleName = "ASTSpices2";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices2.class";
  }

  @(ASTSpices2.java):JavaSourceFile{
    simpleName = "ASTSpices2";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices2.java";
  }

  @(ASTSpices2Builder.class):JavaClassFile{
    simpleName = "ASTSpices2Builder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices2Builder.class";
  }

  @(ASTSpices2Builder.java):JavaSourceFile{
    simpleName = "ASTSpices2Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices2Builder.java";
  }

  @(ASTSpices3.class):JavaClassFile{
    simpleName = "ASTSpices3";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices3.class";
  }

  @(ASTSpices3.java):JavaSourceFile{
    simpleName = "ASTSpices3";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices3.java";
  }

  @(ASTSpices3Builder.class):JavaClassFile{
    simpleName = "ASTSpices3Builder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices3Builder.class";
  }

  @(ASTSpices3Builder.java):JavaSourceFile{
    simpleName = "ASTSpices3Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices3Builder.java";
  }

  @(ASTSpices4.class):JavaClassFile{
    simpleName = "ASTSpices4";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices4.class";
  }

  @(ASTSpices4.java):JavaSourceFile{
    simpleName = "ASTSpices4";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices4.java";
  }

  @(ASTSpices4Builder.class):JavaClassFile{
    simpleName = "ASTSpices4Builder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices4Builder.class";
  }

  @(ASTSpices4Builder.java):JavaSourceFile{
    simpleName = "ASTSpices4Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices4Builder.java";
  }

  @(ASTSpices5.class):JavaClassFile{
    simpleName = "ASTSpices5";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices5.class";
  }

  @(ASTSpices5.java):JavaSourceFile{
    simpleName = "ASTSpices5";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices5.java";
  }

  @(ASTSpices5Builder.class):JavaClassFile{
    simpleName = "ASTSpices5Builder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices5Builder.class";
  }

  @(ASTSpices5Builder.java):JavaSourceFile{
    simpleName = "ASTSpices5Builder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSpices5Builder.java";
  }

  @(ASTState.class!4):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTState.class";
  }

  @(ASTState.java!8):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class!4):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!8):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStateBuilder.java";
  }

  @(ASTStereotype.class):JavaClassFile{
    simpleName = "ASTStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStereotype.class";
  }

  @(ASTStereotype.java):JavaSourceFile{
    simpleName = "ASTStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStereotype.java";
  }

  @(ASTStereotypeBuilder.class):JavaClassFile{
    simpleName = "ASTStereotypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStereotypeBuilder.class";
  }

  @(ASTStereotypeBuilder.java):JavaSourceFile{
    simpleName = "ASTStereotypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTStereotypeBuilder.java";
  }

  @(ASTSubClassRule.class):JavaClassFile{
    simpleName = "ASTSubClassRule";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSubClassRule.class";
  }

  @(ASTSubClassRule.java):JavaSourceFile{
    simpleName = "ASTSubClassRule";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSubClassRule.java";
  }

  @(ASTSubClassRuleBuilder.class):JavaClassFile{
    simpleName = "ASTSubClassRuleBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSubClassRuleBuilder.class";
  }

  @(ASTSubClassRuleBuilder.java):JavaSourceFile{
    simpleName = "ASTSubClassRuleBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTSubClassRuleBuilder.java";
  }

  @(ASTTestOptions.class):JavaClassFile{
    simpleName = "ASTTestOptions";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTestOptions.class";
  }

  @(ASTTestOptions.java):JavaSourceFile{
    simpleName = "ASTTestOptions";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTestOptions.java";
  }

  @(ASTTestOptionsBuilder.class):JavaClassFile{
    simpleName = "ASTTestOptionsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTestOptionsBuilder.class";
  }

  @(ASTTestOptionsBuilder.java):JavaSourceFile{
    simpleName = "ASTTestOptionsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTestOptionsBuilder.java";
  }

  @(ASTTransition.class!4):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!7):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class!4):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!7):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTTransitionBuilder.java";
  }

  @(ASTX.class):JavaClassFile{
    simpleName = "ASTX";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTX.class";
  }

  @(ASTX.java):JavaSourceFile{
    simpleName = "ASTX";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTX.java";
  }

  @(ASTXBuilder.class):JavaClassFile{
    simpleName = "ASTXBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTXBuilder.class";
  }

  @(ASTXBuilder.java):JavaSourceFile{
    simpleName = "ASTXBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/ASTXBuilder.java";
  }

  @(FeatureDSLLiterals.class):JavaClassFile{
    simpleName = "FeatureDSLLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLLiterals.class";
  }

  @(FeatureDSLLiterals.java):JavaSourceFile{
    simpleName = "FeatureDSLLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLLiterals.java";
  }

  @(FeatureDSLMill.class):JavaClassFile{
    simpleName = "FeatureDSLMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLMill.class";
  }

  @(FeatureDSLMill.java):JavaSourceFile{
    simpleName = "FeatureDSLMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLMill.java";
  }

  @(FeatureDSLNodeFactory.class):JavaClassFile{
    simpleName = "FeatureDSLNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLNodeFactory.class";
  }

  @(FeatureDSLNodeFactory.java):JavaSourceFile{
    simpleName = "FeatureDSLNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_ast/FeatureDSLNodeFactory.java";
  }

  @(_cocos!17):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos";
  }

  @(FeatureDSLASTACoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTACoCo.java";
  }

  @(FeatureDSLASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTAutomatonCoCo.java";
  }

  @(FeatureDSLASTBCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTBCoCo.java";
  }

  @(FeatureDSLASTCCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTCCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTCCoCo.java";
  }

  @(FeatureDSLASTClassProdCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTClassProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTClassProdCoCo.java";
  }

  @(FeatureDSLASTClassRuleCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTClassRuleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTClassRuleCoCo.java";
  }

  @(FeatureDSLASTComplexnameCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTComplexnameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTComplexnameCoCo.java";
  }

  @(FeatureDSLASTConstantsCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTConstantsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTConstantsCoCo.java";
  }

  @(FeatureDSLASTExtraComponentCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTExtraComponentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTExtraComponentCoCo.java";
  }

  @(FeatureDSLASTFeatureDSLNodeCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTFeatureDSLNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTFeatureDSLNodeCoCo.java";
  }

  @(FeatureDSLASTFileCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTFileCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTFileCoCo.java";
  }

  @(FeatureDSLASTInterfaceRuleCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTInterfaceRuleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTInterfaceRuleCoCo.java";
  }

  @(FeatureDSLASTInterfacewithspicelevelCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTInterfacewithspicelevelCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTInterfacewithspicelevelCoCo.java";
  }

  @(FeatureDSLASTSpices1CoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSpices1CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSpices1CoCo.java";
  }

  @(FeatureDSLASTSpices2CoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSpices2CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSpices2CoCo.java";
  }

  @(FeatureDSLASTSpices3CoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSpices3CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSpices3CoCo.java";
  }

  @(FeatureDSLASTSpices4CoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSpices4CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSpices4CoCo.java";
  }

  @(FeatureDSLASTSpices5CoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSpices5CoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSpices5CoCo.java";
  }

  @(FeatureDSLASTStateCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTStateCoCo.java";
  }

  @(FeatureDSLASTStereotypeCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTStereotypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTStereotypeCoCo.java";
  }

  @(FeatureDSLASTSubClassRuleCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTSubClassRuleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTSubClassRuleCoCo.java";
  }

  @(FeatureDSLASTTestOptionsCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTTestOptionsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTTestOptionsCoCo.java";
  }

  @(FeatureDSLASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTTransitionCoCo.java";
  }

  @(FeatureDSLASTXCoCo.java):JavaSourceFile{
    simpleName = "FeatureDSLASTXCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLASTXCoCo.java";
  }

  @(FeatureDSLCoCoChecker.java):JavaSourceFile{
    simpleName = "FeatureDSLCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_cocos/FeatureDSLCoCoChecker.java";
  }

  @(_od!17):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_od";
  }

  @(FeatureDSL2OD.java):JavaSourceFile{
    simpleName = "FeatureDSL2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_od/FeatureDSL2OD.java";
  }

  @(_visitor!17):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor";
  }

  @(FeatureDSLDelegatorVisitor.java):JavaSourceFile{
    simpleName = "FeatureDSLDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor/FeatureDSLDelegatorVisitor.java";
  }

  @(FeatureDSLInheritanceVisitor.java):JavaSourceFile{
    simpleName = "FeatureDSLInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor/FeatureDSLInheritanceVisitor.java";
  }

  @(FeatureDSLParentAwareVisitor.java):JavaSourceFile{
    simpleName = "FeatureDSLParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor/FeatureDSLParentAwareVisitor.java";
  }

  @(FeatureDSLVisitor.class):JavaClassFile{
    simpleName = "FeatureDSLVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor/FeatureDSLVisitor.class";
  }

  @(FeatureDSLVisitor.java):JavaSourceFile{
    simpleName = "FeatureDSLVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/featuredsl/_visitor/FeatureDSLVisitor.java";
  }

  @(helloworld):Directory{
    simpleName = "helloworld";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld";
  }

  @(_ast!24):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast";
  }

  @(ASTConstantsHelloWorld.class):JavaClassFile{
    simpleName = "ASTConstantsHelloWorld";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTConstantsHelloWorld.class";
  }

  @(ASTConstantsHelloWorld.java):JavaSourceFile{
    simpleName = "ASTConstantsHelloWorld";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTConstantsHelloWorld.java";
  }

  @(ASTHelloWorld.class):JavaClassFile{
    simpleName = "ASTHelloWorld";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorld.class";
  }

  @(ASTHelloWorld.java):JavaSourceFile{
    simpleName = "ASTHelloWorld";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorld.java";
  }

  @(ASTHelloWorldBuilder.class):JavaClassFile{
    simpleName = "ASTHelloWorldBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorldBuilder.class";
  }

  @(ASTHelloWorldBuilder.java):JavaSourceFile{
    simpleName = "ASTHelloWorldBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorldBuilder.java";
  }

  @(ASTHelloWorldNode.class):JavaClassFile{
    simpleName = "ASTHelloWorldNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorldNode.class";
  }

  @(ASTHelloWorldNode.java):JavaSourceFile{
    simpleName = "ASTHelloWorldNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/ASTHelloWorldNode.java";
  }

  @(HelloWorldLiterals.class):JavaClassFile{
    simpleName = "HelloWorldLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldLiterals.class";
  }

  @(HelloWorldLiterals.java):JavaSourceFile{
    simpleName = "HelloWorldLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldLiterals.java";
  }

  @(HelloWorldMill.class):JavaClassFile{
    simpleName = "HelloWorldMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldMill.class";
  }

  @(HelloWorldMill.java):JavaSourceFile{
    simpleName = "HelloWorldMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldMill.java";
  }

  @(HelloWorldNodeFactory.class):JavaClassFile{
    simpleName = "HelloWorldNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldNodeFactory.class";
  }

  @(HelloWorldNodeFactory.java):JavaSourceFile{
    simpleName = "HelloWorldNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_ast/HelloWorldNodeFactory.java";
  }

  @(_cocos!18):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos";
  }

  @(HelloWorldASTHelloWorldCoCo.class):JavaClassFile{
    simpleName = "HelloWorldASTHelloWorldCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldASTHelloWorldCoCo.class";
  }

  @(HelloWorldASTHelloWorldCoCo.java):JavaSourceFile{
    simpleName = "HelloWorldASTHelloWorldCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldASTHelloWorldCoCo.java";
  }

  @(HelloWorldASTHelloWorldNodeCoCo.class):JavaClassFile{
    simpleName = "HelloWorldASTHelloWorldNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldASTHelloWorldNodeCoCo.class";
  }

  @(HelloWorldASTHelloWorldNodeCoCo.java):JavaSourceFile{
    simpleName = "HelloWorldASTHelloWorldNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldASTHelloWorldNodeCoCo.java";
  }

  @(HelloWorldCoCoChecker.class):JavaClassFile{
    simpleName = "HelloWorldCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldCoCoChecker.class";
  }

  @(HelloWorldCoCoChecker.java):JavaSourceFile{
    simpleName = "HelloWorldCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_cocos/HelloWorldCoCoChecker.java";
  }

  @(_od!18):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_od";
  }

  @(HelloWorld2OD.class):JavaClassFile{
    simpleName = "HelloWorld2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_od/HelloWorld2OD.class";
  }

  @(HelloWorld2OD.java):JavaSourceFile{
    simpleName = "HelloWorld2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_od/HelloWorld2OD.java";
  }

  @(_parser!8):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser";
  }

  @(HelloWorldAntlrBaseListener.class):JavaClassFile{
    simpleName = "HelloWorldAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrBaseListener.class";
  }

  @(HelloWorldAntlrBaseListener.java):JavaSourceFile{
    simpleName = "HelloWorldAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrBaseListener.java";
  }

  @(HelloWorldAntlrLexer.class):JavaClassFile{
    simpleName = "HelloWorldAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrLexer.class";
  }

  @(HelloWorldAntlrLexer.java):JavaSourceFile{
    simpleName = "HelloWorldAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrLexer.java";
  }

  @(HelloWorldAntlrListener.class):JavaClassFile{
    simpleName = "HelloWorldAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrListener.class";
  }

  @(HelloWorldAntlrListener.java):JavaSourceFile{
    simpleName = "HelloWorldAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrListener.java";
  }

  @(HelloWorldAntlrParser$HelloWorldContext.class):JavaClassFile{
    simpleName = "HelloWorldAntlrParser$HelloWorldContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrParser$HelloWorldContext.class";
  }

  @(HelloWorldAntlrParser$HelloWorld_eofContext.class):JavaClassFile{
    simpleName = "HelloWorldAntlrParser$HelloWorld_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrParser$HelloWorld_eofContext.class";
  }

  @(HelloWorldAntlrParser.class):JavaClassFile{
    simpleName = "HelloWorldAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrParser.class";
  }

  @(HelloWorldAntlrParser.java):JavaSourceFile{
    simpleName = "HelloWorldAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldAntlrParser.java";
  }

  @(HelloWorldParser.class):JavaClassFile{
    simpleName = "HelloWorldParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldParser.class";
  }

  @(HelloWorldParser.java):JavaSourceFile{
    simpleName = "HelloWorldParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_parser/HelloWorldParser.java";
  }

  @(_visitor!18):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor";
  }

  @(HelloWorldDelegatorVisitor.class):JavaClassFile{
    simpleName = "HelloWorldDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldDelegatorVisitor.class";
  }

  @(HelloWorldDelegatorVisitor.java):JavaSourceFile{
    simpleName = "HelloWorldDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldDelegatorVisitor.java";
  }

  @(HelloWorldInheritanceVisitor.class):JavaClassFile{
    simpleName = "HelloWorldInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldInheritanceVisitor.class";
  }

  @(HelloWorldInheritanceVisitor.java):JavaSourceFile{
    simpleName = "HelloWorldInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldInheritanceVisitor.java";
  }

  @(HelloWorldParentAwareVisitor.class):JavaClassFile{
    simpleName = "HelloWorldParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldParentAwareVisitor.class";
  }

  @(HelloWorldParentAwareVisitor.java):JavaSourceFile{
    simpleName = "HelloWorldParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldParentAwareVisitor.java";
  }

  @(HelloWorldVisitor.class):JavaClassFile{
    simpleName = "HelloWorldVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldVisitor.class";
  }

  @(HelloWorldVisitor.java):JavaSourceFile{
    simpleName = "HelloWorldVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/helloworld/_visitor/HelloWorldVisitor.java";
  }

  @(inherited!2):Directory{
    simpleName = "inherited";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited";
  }

  @(sub!4):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub";
  }

  @(subgrammar):Directory{
    simpleName = "subgrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar";
  }

  @(_ast!25):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast";
  }

  @(ASTA.class!6):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTA.class";
  }

  @(ASTA.java!6):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTA.java";
  }

  @(ASTABuilder.class!6):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!6):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTABuilder.java";
  }

  @(ASTB.class!5):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTB.class";
  }

  @(ASTB.java!5):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTB.java";
  }

  @(ASTBBuilder.class!5):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java!5):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTBBuilder.java";
  }

  @(ASTConstantsSubgrammar.class):JavaClassFile{
    simpleName = "ASTConstantsSubgrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTConstantsSubgrammar.class";
  }

  @(ASTConstantsSubgrammar.java):JavaSourceFile{
    simpleName = "ASTConstantsSubgrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTConstantsSubgrammar.java";
  }

  @(ASTD.class!2):JavaClassFile{
    simpleName = "ASTD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTD.class";
  }

  @(ASTD.java!2):JavaSourceFile{
    simpleName = "ASTD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTD.java";
  }

  @(ASTDBuilder.class!2):JavaClassFile{
    simpleName = "ASTDBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTDBuilder.class";
  }

  @(ASTDBuilder.java!2):JavaSourceFile{
    simpleName = "ASTDBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTDBuilder.java";
  }

  @(ASTL.class):JavaClassFile{
    simpleName = "ASTL";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTL.class";
  }

  @(ASTL.java):JavaSourceFile{
    simpleName = "ASTL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTL.java";
  }

  @(ASTLBuilder.class):JavaClassFile{
    simpleName = "ASTLBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTLBuilder.class";
  }

  @(ASTLBuilder.java):JavaSourceFile{
    simpleName = "ASTLBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTLBuilder.java";
  }

  @(ASTM.class):JavaClassFile{
    simpleName = "ASTM";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTM.class";
  }

  @(ASTM.java!2):JavaSourceFile{
    simpleName = "ASTM";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTM.java";
  }

  @(ASTMBuilder.class):JavaClassFile{
    simpleName = "ASTMBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTMBuilder.class";
  }

  @(ASTMBuilder.java!2):JavaSourceFile{
    simpleName = "ASTMBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTMBuilder.java";
  }

  @(ASTN.class):JavaClassFile{
    simpleName = "ASTN";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTN.class";
  }

  @(ASTN.java):JavaSourceFile{
    simpleName = "ASTN";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTN.java";
  }

  @(ASTNBuilder.class):JavaClassFile{
    simpleName = "ASTNBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTNBuilder.class";
  }

  @(ASTNBuilder.java):JavaSourceFile{
    simpleName = "ASTNBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTNBuilder.java";
  }

  @(ASTO.class):JavaClassFile{
    simpleName = "ASTO";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTO.class";
  }

  @(ASTO.java):JavaSourceFile{
    simpleName = "ASTO";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTO.java";
  }

  @(ASTOBuilder.class):JavaClassFile{
    simpleName = "ASTOBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTOBuilder.class";
  }

  @(ASTOBuilder.java):JavaSourceFile{
    simpleName = "ASTOBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTOBuilder.java";
  }

  @(ASTSubgrammarNode.class):JavaClassFile{
    simpleName = "ASTSubgrammarNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTSubgrammarNode.class";
  }

  @(ASTSubgrammarNode.java):JavaSourceFile{
    simpleName = "ASTSubgrammarNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/ASTSubgrammarNode.java";
  }

  @(SubgrammarLiterals.class):JavaClassFile{
    simpleName = "SubgrammarLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarLiterals.class";
  }

  @(SubgrammarLiterals.java):JavaSourceFile{
    simpleName = "SubgrammarLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarLiterals.java";
  }

  @(SubgrammarMill.class):JavaClassFile{
    simpleName = "SubgrammarMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarMill.class";
  }

  @(SubgrammarMill.java):JavaSourceFile{
    simpleName = "SubgrammarMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarMill.java";
  }

  @(SubgrammarNodeFactory.class):JavaClassFile{
    simpleName = "SubgrammarNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarNodeFactory.class";
  }

  @(SubgrammarNodeFactory.java):JavaSourceFile{
    simpleName = "SubgrammarNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SubgrammarNodeFactory.java";
  }

  @(SupergrammarMillForSubgrammar.class):JavaClassFile{
    simpleName = "SupergrammarMillForSubgrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SupergrammarMillForSubgrammar.class";
  }

  @(SupergrammarMillForSubgrammar.java):JavaSourceFile{
    simpleName = "SupergrammarMillForSubgrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_ast/SupergrammarMillForSubgrammar.java";
  }

  @(_cocos!19):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos";
  }

  @(SubgrammarASTACoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTACoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTACoCo.class";
  }

  @(SubgrammarASTACoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTACoCo.java";
  }

  @(SubgrammarASTBCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTBCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTBCoCo.class";
  }

  @(SubgrammarASTBCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTBCoCo.java";
  }

  @(SubgrammarASTDCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTDCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTDCoCo.class";
  }

  @(SubgrammarASTDCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTDCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTDCoCo.java";
  }

  @(SubgrammarASTLCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTLCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTLCoCo.class";
  }

  @(SubgrammarASTLCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTLCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTLCoCo.java";
  }

  @(SubgrammarASTMCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTMCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTMCoCo.class";
  }

  @(SubgrammarASTMCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTMCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTMCoCo.java";
  }

  @(SubgrammarASTNCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTNCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTNCoCo.class";
  }

  @(SubgrammarASTNCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTNCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTNCoCo.java";
  }

  @(SubgrammarASTOCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTOCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTOCoCo.class";
  }

  @(SubgrammarASTOCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTOCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTOCoCo.java";
  }

  @(SubgrammarASTSubgrammarNodeCoCo.class):JavaClassFile{
    simpleName = "SubgrammarASTSubgrammarNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTSubgrammarNodeCoCo.class";
  }

  @(SubgrammarASTSubgrammarNodeCoCo.java):JavaSourceFile{
    simpleName = "SubgrammarASTSubgrammarNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarASTSubgrammarNodeCoCo.java";
  }

  @(SubgrammarCoCoChecker.class):JavaClassFile{
    simpleName = "SubgrammarCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarCoCoChecker.class";
  }

  @(SubgrammarCoCoChecker.java):JavaSourceFile{
    simpleName = "SubgrammarCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_cocos/SubgrammarCoCoChecker.java";
  }

  @(_od!19):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_od";
  }

  @(Subgrammar2OD.class):JavaClassFile{
    simpleName = "Subgrammar2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_od/Subgrammar2OD.class";
  }

  @(Subgrammar2OD.java):JavaSourceFile{
    simpleName = "Subgrammar2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_od/Subgrammar2OD.java";
  }

  @(_parser!9):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser";
  }

  @(SubgrammarAntlrBaseListener.class):JavaClassFile{
    simpleName = "SubgrammarAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrBaseListener.class";
  }

  @(SubgrammarAntlrBaseListener.java):JavaSourceFile{
    simpleName = "SubgrammarAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrBaseListener.java";
  }

  @(SubgrammarAntlrLexer.class):JavaClassFile{
    simpleName = "SubgrammarAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrLexer.class";
  }

  @(SubgrammarAntlrLexer.java):JavaSourceFile{
    simpleName = "SubgrammarAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrLexer.java";
  }

  @(SubgrammarAntlrListener.class):JavaClassFile{
    simpleName = "SubgrammarAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrListener.class";
  }

  @(SubgrammarAntlrListener.java):JavaSourceFile{
    simpleName = "SubgrammarAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrListener.java";
  }

  @(SubgrammarAntlrParser$AContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$AContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$AContext.class";
  }

  @(SubgrammarAntlrParser$A_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$A_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$A_eofContext.class";
  }

  @(SubgrammarAntlrParser$BContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$BContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$BContext.class";
  }

  @(SubgrammarAntlrParser$B_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$B_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$B_eofContext.class";
  }

  @(SubgrammarAntlrParser$DContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$DContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$DContext.class";
  }

  @(SubgrammarAntlrParser$D_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$D_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$D_eofContext.class";
  }

  @(SubgrammarAntlrParser$GContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$GContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$GContext.class";
  }

  @(SubgrammarAntlrParser$G_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$G_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$G_eofContext.class";
  }

  @(SubgrammarAntlrParser$JContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$JContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$JContext.class";
  }

  @(SubgrammarAntlrParser$J_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$J_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$J_eofContext.class";
  }

  @(SubgrammarAntlrParser$KContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$KContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$KContext.class";
  }

  @(SubgrammarAntlrParser$K_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$K_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$K_eofContext.class";
  }

  @(SubgrammarAntlrParser$LContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$LContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$LContext.class";
  }

  @(SubgrammarAntlrParser$L_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$L_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$L_eofContext.class";
  }

  @(SubgrammarAntlrParser$MContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$MContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$MContext.class";
  }

  @(SubgrammarAntlrParser$M_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$M_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$M_eofContext.class";
  }

  @(SubgrammarAntlrParser$NContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$NContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$NContext.class";
  }

  @(SubgrammarAntlrParser$N_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$N_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$N_eofContext.class";
  }

  @(SubgrammarAntlrParser$OContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$OContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$OContext.class";
  }

  @(SubgrammarAntlrParser$O_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$O_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$O_eofContext.class";
  }

  @(SubgrammarAntlrParser$XContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$XContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$XContext.class";
  }

  @(SubgrammarAntlrParser$X_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$X_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$X_eofContext.class";
  }

  @(SubgrammarAntlrParser$YContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$YContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$YContext.class";
  }

  @(SubgrammarAntlrParser$Y_eofContext.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser$Y_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser$Y_eofContext.class";
  }

  @(SubgrammarAntlrParser.class):JavaClassFile{
    simpleName = "SubgrammarAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser.class";
  }

  @(SubgrammarAntlrParser.java):JavaSourceFile{
    simpleName = "SubgrammarAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarAntlrParser.java";
  }

  @(SubgrammarParser.class):JavaClassFile{
    simpleName = "SubgrammarParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarParser.class";
  }

  @(SubgrammarParser.java):JavaSourceFile{
    simpleName = "SubgrammarParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_parser/SubgrammarParser.java";
  }

  @(_visitor!19):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor";
  }

  @(SubgrammarDelegatorVisitor.class):JavaClassFile{
    simpleName = "SubgrammarDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarDelegatorVisitor.class";
  }

  @(SubgrammarDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SubgrammarDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarDelegatorVisitor.java";
  }

  @(SubgrammarInheritanceVisitor.class):JavaClassFile{
    simpleName = "SubgrammarInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarInheritanceVisitor.class";
  }

  @(SubgrammarInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SubgrammarInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarInheritanceVisitor.java";
  }

  @(SubgrammarParentAwareVisitor.class):JavaClassFile{
    simpleName = "SubgrammarParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarParentAwareVisitor.class";
  }

  @(SubgrammarParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SubgrammarParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarParentAwareVisitor.java";
  }

  @(SubgrammarVisitor.class):JavaClassFile{
    simpleName = "SubgrammarVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarVisitor.class";
  }

  @(SubgrammarVisitor.java):JavaSourceFile{
    simpleName = "SubgrammarVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/sub/subgrammar/_visitor/SubgrammarVisitor.java";
  }

  @(supergrammar):Directory{
    simpleName = "supergrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar";
  }

  @(_ast!26):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast";
  }

  @(ASTConstantsSupergrammar.class):JavaClassFile{
    simpleName = "ASTConstantsSupergrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTConstantsSupergrammar.class";
  }

  @(ASTConstantsSupergrammar.java):JavaSourceFile{
    simpleName = "ASTConstantsSupergrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTConstantsSupergrammar.java";
  }

  @(ASTG.class):JavaClassFile{
    simpleName = "ASTG";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTG.class";
  }

  @(ASTG.java):JavaSourceFile{
    simpleName = "ASTG";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTG.java";
  }

  @(ASTJ.class):JavaClassFile{
    simpleName = "ASTJ";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTJ.class";
  }

  @(ASTJ.java):JavaSourceFile{
    simpleName = "ASTJ";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTJ.java";
  }

  @(ASTJBuilder.class):JavaClassFile{
    simpleName = "ASTJBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTJBuilder.class";
  }

  @(ASTJBuilder.java):JavaSourceFile{
    simpleName = "ASTJBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTJBuilder.java";
  }

  @(ASTK.class):JavaClassFile{
    simpleName = "ASTK";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTK.class";
  }

  @(ASTK.java):JavaSourceFile{
    simpleName = "ASTK";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTK.java";
  }

  @(ASTKBuilder.class):JavaClassFile{
    simpleName = "ASTKBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTKBuilder.class";
  }

  @(ASTKBuilder.java):JavaSourceFile{
    simpleName = "ASTKBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTKBuilder.java";
  }

  @(ASTN.class!2):JavaClassFile{
    simpleName = "ASTN";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTN.class";
  }

  @(ASTN.java!2):JavaSourceFile{
    simpleName = "ASTN";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTN.java";
  }

  @(ASTNBuilder.class!2):JavaClassFile{
    simpleName = "ASTNBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTNBuilder.class";
  }

  @(ASTNBuilder.java!2):JavaSourceFile{
    simpleName = "ASTNBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTNBuilder.java";
  }

  @(ASTSupergrammarNode.class):JavaClassFile{
    simpleName = "ASTSupergrammarNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTSupergrammarNode.class";
  }

  @(ASTSupergrammarNode.java):JavaSourceFile{
    simpleName = "ASTSupergrammarNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTSupergrammarNode.java";
  }

  @(ASTX.class!2):JavaClassFile{
    simpleName = "ASTX";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTX.class";
  }

  @(ASTX.java!2):JavaSourceFile{
    simpleName = "ASTX";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTX.java";
  }

  @(ASTXBuilder.class!2):JavaClassFile{
    simpleName = "ASTXBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTXBuilder.class";
  }

  @(ASTXBuilder.java!2):JavaSourceFile{
    simpleName = "ASTXBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTXBuilder.java";
  }

  @(ASTY.class):JavaClassFile{
    simpleName = "ASTY";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTY.class";
  }

  @(ASTY.java):JavaSourceFile{
    simpleName = "ASTY";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTY.java";
  }

  @(ASTYBuilder.class):JavaClassFile{
    simpleName = "ASTYBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTYBuilder.class";
  }

  @(ASTYBuilder.java):JavaSourceFile{
    simpleName = "ASTYBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/ASTYBuilder.java";
  }

  @(SupergrammarLiterals.class):JavaClassFile{
    simpleName = "SupergrammarLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarLiterals.class";
  }

  @(SupergrammarLiterals.java):JavaSourceFile{
    simpleName = "SupergrammarLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarLiterals.java";
  }

  @(SupergrammarMill.class):JavaClassFile{
    simpleName = "SupergrammarMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarMill.class";
  }

  @(SupergrammarMill.java):JavaSourceFile{
    simpleName = "SupergrammarMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarMill.java";
  }

  @(SupergrammarNodeFactory.class):JavaClassFile{
    simpleName = "SupergrammarNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarNodeFactory.class";
  }

  @(SupergrammarNodeFactory.java):JavaSourceFile{
    simpleName = "SupergrammarNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_ast/SupergrammarNodeFactory.java";
  }

  @(_cocos!20):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos";
  }

  @(SupergrammarASTGCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTGCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTGCoCo.class";
  }

  @(SupergrammarASTGCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTGCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTGCoCo.java";
  }

  @(SupergrammarASTJCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTJCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTJCoCo.class";
  }

  @(SupergrammarASTJCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTJCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTJCoCo.java";
  }

  @(SupergrammarASTKCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTKCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTKCoCo.class";
  }

  @(SupergrammarASTKCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTKCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTKCoCo.java";
  }

  @(SupergrammarASTNCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTNCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTNCoCo.class";
  }

  @(SupergrammarASTNCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTNCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTNCoCo.java";
  }

  @(SupergrammarASTSupergrammarNodeCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTSupergrammarNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTSupergrammarNodeCoCo.class";
  }

  @(SupergrammarASTSupergrammarNodeCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTSupergrammarNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTSupergrammarNodeCoCo.java";
  }

  @(SupergrammarASTXCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTXCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTXCoCo.class";
  }

  @(SupergrammarASTXCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTXCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTXCoCo.java";
  }

  @(SupergrammarASTYCoCo.class):JavaClassFile{
    simpleName = "SupergrammarASTYCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTYCoCo.class";
  }

  @(SupergrammarASTYCoCo.java):JavaSourceFile{
    simpleName = "SupergrammarASTYCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarASTYCoCo.java";
  }

  @(SupergrammarCoCoChecker.class):JavaClassFile{
    simpleName = "SupergrammarCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarCoCoChecker.class";
  }

  @(SupergrammarCoCoChecker.java):JavaSourceFile{
    simpleName = "SupergrammarCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_cocos/SupergrammarCoCoChecker.java";
  }

  @(_od!20):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_od";
  }

  @(Supergrammar2OD.class):JavaClassFile{
    simpleName = "Supergrammar2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_od/Supergrammar2OD.class";
  }

  @(Supergrammar2OD.java):JavaSourceFile{
    simpleName = "Supergrammar2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_od/Supergrammar2OD.java";
  }

  @(_visitor!20):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor";
  }

  @(SupergrammarDelegatorVisitor.class):JavaClassFile{
    simpleName = "SupergrammarDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarDelegatorVisitor.class";
  }

  @(SupergrammarDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SupergrammarDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarDelegatorVisitor.java";
  }

  @(SupergrammarInheritanceVisitor.class):JavaClassFile{
    simpleName = "SupergrammarInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarInheritanceVisitor.class";
  }

  @(SupergrammarInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SupergrammarInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarInheritanceVisitor.java";
  }

  @(SupergrammarParentAwareVisitor.class):JavaClassFile{
    simpleName = "SupergrammarParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarParentAwareVisitor.class";
  }

  @(SupergrammarParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SupergrammarParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarParentAwareVisitor.java";
  }

  @(SupergrammarVisitor.class):JavaClassFile{
    simpleName = "SupergrammarVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarVisitor.class";
  }

  @(SupergrammarVisitor.java):JavaSourceFile{
    simpleName = "SupergrammarVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/inherited/supergrammar/_visitor/SupergrammarVisitor.java";
  }

  @(interfaceattributes):Directory{
    simpleName = "interfaceattributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes";
  }

  @(_ast!27):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast";
  }

  @(ASTActionExt.class!2):JavaClassFile{
    simpleName = "ASTActionExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTActionExt.class";
  }

  @(ASTActionExt.java!2):JavaSourceFile{
    simpleName = "ASTActionExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTActionExt.java";
  }

  @(ASTClassProd.class!3):JavaClassFile{
    simpleName = "ASTClassProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTClassProd.class";
  }

  @(ASTClassProd.java!2):JavaSourceFile{
    simpleName = "ASTClassProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTClassProd.java";
  }

  @(ASTClassProdBuilder.class!2):JavaClassFile{
    simpleName = "ASTClassProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTClassProdBuilder.class";
  }

  @(ASTClassProdBuilder.java!2):JavaSourceFile{
    simpleName = "ASTClassProdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTClassProdBuilder.java";
  }

  @(ASTConstantsInterfaceAttributes.class):JavaClassFile{
    simpleName = "ASTConstantsInterfaceAttributes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTConstantsInterfaceAttributes.class";
  }

  @(ASTConstantsInterfaceAttributes.java):JavaSourceFile{
    simpleName = "ASTConstantsInterfaceAttributes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTConstantsInterfaceAttributes.java";
  }

  @(ASTInterfaceAttributesNode.class):JavaClassFile{
    simpleName = "ASTInterfaceAttributesNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTInterfaceAttributesNode.class";
  }

  @(ASTInterfaceAttributesNode.java):JavaSourceFile{
    simpleName = "ASTInterfaceAttributesNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTInterfaceAttributesNode.java";
  }

  @(ASTLexProd.class!2):JavaClassFile{
    simpleName = "ASTLexProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTLexProd.class";
  }

  @(ASTLexProd.java):JavaSourceFile{
    simpleName = "ASTLexProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTLexProd.java";
  }

  @(ASTLexProdBuilder.class):JavaClassFile{
    simpleName = "ASTLexProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTLexProdBuilder.class";
  }

  @(ASTLexProdBuilder.java):JavaSourceFile{
    simpleName = "ASTLexProdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTLexProdBuilder.java";
  }

  @(ASTMCGrammar.class!2):JavaClassFile{
    simpleName = "ASTMCGrammar";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTMCGrammar.class";
  }

  @(ASTMCGrammar.java):JavaSourceFile{
    simpleName = "ASTMCGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTMCGrammar.java";
  }

  @(ASTMCGrammarBuilder.class):JavaClassFile{
    simpleName = "ASTMCGrammarBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTMCGrammarBuilder.class";
  }

  @(ASTMCGrammarBuilder.java):JavaSourceFile{
    simpleName = "ASTMCGrammarBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTMCGrammarBuilder.java";
  }

  @(ASTParserProd.class!2):JavaClassFile{
    simpleName = "ASTParserProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTParserProd.class";
  }

  @(ASTParserProd.java):JavaSourceFile{
    simpleName = "ASTParserProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTParserProd.java";
  }

  @(ASTProd.class!2):JavaClassFile{
    simpleName = "ASTProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTProd.class";
  }

  @(ASTProd.java!2):JavaSourceFile{
    simpleName = "ASTProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/ASTProd.java";
  }

  @(InterfaceAttributesLiterals.class):JavaClassFile{
    simpleName = "InterfaceAttributesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesLiterals.class";
  }

  @(InterfaceAttributesLiterals.java):JavaSourceFile{
    simpleName = "InterfaceAttributesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesLiterals.java";
  }

  @(InterfaceAttributesMill.class):JavaClassFile{
    simpleName = "InterfaceAttributesMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesMill.class";
  }

  @(InterfaceAttributesMill.java):JavaSourceFile{
    simpleName = "InterfaceAttributesMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesMill.java";
  }

  @(InterfaceAttributesNodeFactory.class):JavaClassFile{
    simpleName = "InterfaceAttributesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesNodeFactory.class";
  }

  @(InterfaceAttributesNodeFactory.java):JavaSourceFile{
    simpleName = "InterfaceAttributesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_ast/InterfaceAttributesNodeFactory.java";
  }

  @(_cocos!21):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos";
  }

  @(InterfaceAttributesASTActionExtCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTActionExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTActionExtCoCo.class";
  }

  @(InterfaceAttributesASTActionExtCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTActionExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTActionExtCoCo.java";
  }

  @(InterfaceAttributesASTClassProdCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTClassProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTClassProdCoCo.class";
  }

  @(InterfaceAttributesASTClassProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTClassProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTClassProdCoCo.java";
  }

  @(InterfaceAttributesASTInterfaceAttributesNodeCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTInterfaceAttributesNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTInterfaceAttributesNodeCoCo.class";
  }

  @(InterfaceAttributesASTInterfaceAttributesNodeCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTInterfaceAttributesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTInterfaceAttributesNodeCoCo.java";
  }

  @(InterfaceAttributesASTLexProdCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTLexProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTLexProdCoCo.class";
  }

  @(InterfaceAttributesASTLexProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTLexProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTLexProdCoCo.java";
  }

  @(InterfaceAttributesASTMCGrammarCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTMCGrammarCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTMCGrammarCoCo.class";
  }

  @(InterfaceAttributesASTMCGrammarCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTMCGrammarCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTMCGrammarCoCo.java";
  }

  @(InterfaceAttributesASTParserProdCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTParserProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTParserProdCoCo.class";
  }

  @(InterfaceAttributesASTParserProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTParserProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTParserProdCoCo.java";
  }

  @(InterfaceAttributesASTProdCoCo.class):JavaClassFile{
    simpleName = "InterfaceAttributesASTProdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTProdCoCo.class";
  }

  @(InterfaceAttributesASTProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceAttributesASTProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesASTProdCoCo.java";
  }

  @(InterfaceAttributesCoCoChecker.class):JavaClassFile{
    simpleName = "InterfaceAttributesCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesCoCoChecker.class";
  }

  @(InterfaceAttributesCoCoChecker.java):JavaSourceFile{
    simpleName = "InterfaceAttributesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_cocos/InterfaceAttributesCoCoChecker.java";
  }

  @(_od!21):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_od";
  }

  @(InterfaceAttributes2OD.class):JavaClassFile{
    simpleName = "InterfaceAttributes2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_od/InterfaceAttributes2OD.class";
  }

  @(InterfaceAttributes2OD.java):JavaSourceFile{
    simpleName = "InterfaceAttributes2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_od/InterfaceAttributes2OD.java";
  }

  @(_visitor!21):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor";
  }

  @(InterfaceAttributesDelegatorVisitor.class):JavaClassFile{
    simpleName = "InterfaceAttributesDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesDelegatorVisitor.class";
  }

  @(InterfaceAttributesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "InterfaceAttributesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesDelegatorVisitor.java";
  }

  @(InterfaceAttributesInheritanceVisitor.class):JavaClassFile{
    simpleName = "InterfaceAttributesInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesInheritanceVisitor.class";
  }

  @(InterfaceAttributesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "InterfaceAttributesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesInheritanceVisitor.java";
  }

  @(InterfaceAttributesParentAwareVisitor.class):JavaClassFile{
    simpleName = "InterfaceAttributesParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesParentAwareVisitor.class";
  }

  @(InterfaceAttributesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "InterfaceAttributesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesParentAwareVisitor.java";
  }

  @(InterfaceAttributesVisitor.class):JavaClassFile{
    simpleName = "InterfaceAttributesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesVisitor.class";
  }

  @(InterfaceAttributesVisitor.java):JavaSourceFile{
    simpleName = "InterfaceAttributesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaceattributes/_visitor/InterfaceAttributesVisitor.java";
  }

  @(interfacerules):Directory{
    simpleName = "interfacerules";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules";
  }

  @(_ast!28):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast";
  }

  @(ASTAProd.class):JavaClassFile{
    simpleName = "ASTAProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTAProd.class";
  }

  @(ASTAProd.java):JavaSourceFile{
    simpleName = "ASTAProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTAProd.java";
  }

  @(ASTAProdBuilder.class):JavaClassFile{
    simpleName = "ASTAProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTAProdBuilder.class";
  }

  @(ASTAProdBuilder.java):JavaSourceFile{
    simpleName = "ASTAProdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTAProdBuilder.java";
  }

  @(ASTConstantsInterfaceRules.class):JavaClassFile{
    simpleName = "ASTConstantsInterfaceRules";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTConstantsInterfaceRules.class";
  }

  @(ASTConstantsInterfaceRules.java):JavaSourceFile{
    simpleName = "ASTConstantsInterfaceRules";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTConstantsInterfaceRules.java";
  }

  @(ASTInterfaceRulesNode.class):JavaClassFile{
    simpleName = "ASTInterfaceRulesNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTInterfaceRulesNode.class";
  }

  @(ASTInterfaceRulesNode.java):JavaSourceFile{
    simpleName = "ASTInterfaceRulesNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTInterfaceRulesNode.java";
  }

  @(ASTIProd.class):JavaClassFile{
    simpleName = "ASTIProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTIProd.class";
  }

  @(ASTIProd.java):JavaSourceFile{
    simpleName = "ASTIProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTIProd.java";
  }

  @(ASTProd.class!3):JavaClassFile{
    simpleName = "ASTProd";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTProd.class";
  }

  @(ASTProd.java!3):JavaSourceFile{
    simpleName = "ASTProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTProd.java";
  }

  @(ASTProdBuilder.class):JavaClassFile{
    simpleName = "ASTProdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTProdBuilder.class";
  }

  @(ASTProdBuilder.java):JavaSourceFile{
    simpleName = "ASTProdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/ASTProdBuilder.java";
  }

  @(InterfaceRulesLiterals.class):JavaClassFile{
    simpleName = "InterfaceRulesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesLiterals.class";
  }

  @(InterfaceRulesLiterals.java):JavaSourceFile{
    simpleName = "InterfaceRulesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesLiterals.java";
  }

  @(InterfaceRulesMill.class):JavaClassFile{
    simpleName = "InterfaceRulesMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesMill.class";
  }

  @(InterfaceRulesMill.java):JavaSourceFile{
    simpleName = "InterfaceRulesMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesMill.java";
  }

  @(InterfaceRulesNodeFactory.class):JavaClassFile{
    simpleName = "InterfaceRulesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesNodeFactory.class";
  }

  @(InterfaceRulesNodeFactory.java):JavaSourceFile{
    simpleName = "InterfaceRulesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_ast/InterfaceRulesNodeFactory.java";
  }

  @(_cocos!22):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos";
  }

  @(InterfaceRulesASTAProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceRulesASTAProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos/InterfaceRulesASTAProdCoCo.java";
  }

  @(InterfaceRulesASTInterfaceRulesNodeCoCo.java):JavaSourceFile{
    simpleName = "InterfaceRulesASTInterfaceRulesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos/InterfaceRulesASTInterfaceRulesNodeCoCo.java";
  }

  @(InterfaceRulesASTIProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceRulesASTIProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos/InterfaceRulesASTIProdCoCo.java";
  }

  @(InterfaceRulesASTProdCoCo.java):JavaSourceFile{
    simpleName = "InterfaceRulesASTProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos/InterfaceRulesASTProdCoCo.java";
  }

  @(InterfaceRulesCoCoChecker.java):JavaSourceFile{
    simpleName = "InterfaceRulesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_cocos/InterfaceRulesCoCoChecker.java";
  }

  @(_od!22):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_od";
  }

  @(InterfaceRules2OD.java):JavaSourceFile{
    simpleName = "InterfaceRules2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_od/InterfaceRules2OD.java";
  }

  @(_visitor!22):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor";
  }

  @(InterfaceRulesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "InterfaceRulesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor/InterfaceRulesDelegatorVisitor.java";
  }

  @(InterfaceRulesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "InterfaceRulesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor/InterfaceRulesInheritanceVisitor.java";
  }

  @(InterfaceRulesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "InterfaceRulesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor/InterfaceRulesParentAwareVisitor.java";
  }

  @(InterfaceRulesVisitor.class):JavaClassFile{
    simpleName = "InterfaceRulesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor/InterfaceRulesVisitor.class";
  }

  @(InterfaceRulesVisitor.java):JavaSourceFile{
    simpleName = "InterfaceRulesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfacerules/_visitor/InterfaceRulesVisitor.java";
  }

  @(interfaces!4):Directory{
    simpleName = "interfaces";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces";
  }

  @(sub!5):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub";
  }

  @(_ast!29):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast";
  }

  @(ASTA.class!7):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTA.class";
  }

  @(ASTA.java!7):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTA.java";
  }

  @(ASTABuilder.class!7):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!7):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTABuilder.java";
  }

  @(ASTConstantsSub.class):JavaClassFile{
    simpleName = "ASTConstantsSub";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTConstantsSub.class";
  }

  @(ASTConstantsSub.java):JavaSourceFile{
    simpleName = "ASTConstantsSub";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTConstantsSub.java";
  }

  @(ASTI.class):JavaClassFile{
    simpleName = "ASTI";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTI.class";
  }

  @(ASTI.java):JavaSourceFile{
    simpleName = "ASTI";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTI.java";
  }

  @(ASTSubNode.class):JavaClassFile{
    simpleName = "ASTSubNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTSubNode.class";
  }

  @(ASTSubNode.java):JavaSourceFile{
    simpleName = "ASTSubNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/ASTSubNode.java";
  }

  @(SubLiterals.class):JavaClassFile{
    simpleName = "SubLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubLiterals.class";
  }

  @(SubLiterals.java):JavaSourceFile{
    simpleName = "SubLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubLiterals.java";
  }

  @(SubMill.class):JavaClassFile{
    simpleName = "SubMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubMill.class";
  }

  @(SubMill.java):JavaSourceFile{
    simpleName = "SubMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubMill.java";
  }

  @(SubNodeFactory.class):JavaClassFile{
    simpleName = "SubNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubNodeFactory.class";
  }

  @(SubNodeFactory.java):JavaSourceFile{
    simpleName = "SubNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SubNodeFactory.java";
  }

  @(SupMillForSub.class):JavaClassFile{
    simpleName = "SupMillForSub";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SupMillForSub.class";
  }

  @(SupMillForSub.java):JavaSourceFile{
    simpleName = "SupMillForSub";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_ast/SupMillForSub.java";
  }

  @(_cocos!23):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_cocos";
  }

  @(SubASTACoCo.java):JavaSourceFile{
    simpleName = "SubASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_cocos/SubASTACoCo.java";
  }

  @(SubASTICoCo.java):JavaSourceFile{
    simpleName = "SubASTICoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_cocos/SubASTICoCo.java";
  }

  @(SubASTSubNodeCoCo.java):JavaSourceFile{
    simpleName = "SubASTSubNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_cocos/SubASTSubNodeCoCo.java";
  }

  @(SubCoCoChecker.java):JavaSourceFile{
    simpleName = "SubCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_cocos/SubCoCoChecker.java";
  }

  @(_od!23):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_od";
  }

  @(Sub2OD.java):JavaSourceFile{
    simpleName = "Sub2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_od/Sub2OD.java";
  }

  @(_parser!10):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser";
  }

  @(SubAntlrBaseListener.java):JavaSourceFile{
    simpleName = "SubAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser/SubAntlrBaseListener.java";
  }

  @(SubAntlrLexer.java):JavaSourceFile{
    simpleName = "SubAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser/SubAntlrLexer.java";
  }

  @(SubAntlrListener.java):JavaSourceFile{
    simpleName = "SubAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser/SubAntlrListener.java";
  }

  @(SubAntlrParser.java):JavaSourceFile{
    simpleName = "SubAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser/SubAntlrParser.java";
  }

  @(SubParser.java):JavaSourceFile{
    simpleName = "SubParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_parser/SubParser.java";
  }

  @(_visitor!23):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor";
  }

  @(SubDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SubDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor/SubDelegatorVisitor.java";
  }

  @(SubInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SubInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor/SubInheritanceVisitor.java";
  }

  @(SubParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SubParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor/SubParentAwareVisitor.java";
  }

  @(SubVisitor.class):JavaClassFile{
    simpleName = "SubVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor/SubVisitor.class";
  }

  @(SubVisitor.java):JavaSourceFile{
    simpleName = "SubVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sub/_visitor/SubVisitor.java";
  }

  @(sup!2):Directory{
    simpleName = "sup";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup";
  }

  @(_ast!30):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast";
  }

  @(ASTA.class!8):JavaClassFile{
    simpleName = "ASTA";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTA.class";
  }

  @(ASTA.java!8):JavaSourceFile{
    simpleName = "ASTA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTA.java";
  }

  @(ASTABuilder.class!8):JavaClassFile{
    simpleName = "ASTABuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTABuilder.class";
  }

  @(ASTABuilder.java!8):JavaSourceFile{
    simpleName = "ASTABuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTABuilder.java";
  }

  @(ASTB.class!6):JavaClassFile{
    simpleName = "ASTB";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTB.class";
  }

  @(ASTB.java!6):JavaSourceFile{
    simpleName = "ASTB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTB.java";
  }

  @(ASTBBuilder.class!6):JavaClassFile{
    simpleName = "ASTBBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTBBuilder.class";
  }

  @(ASTBBuilder.java!6):JavaSourceFile{
    simpleName = "ASTBBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTBBuilder.java";
  }

  @(ASTConstantsSup.class):JavaClassFile{
    simpleName = "ASTConstantsSup";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTConstantsSup.class";
  }

  @(ASTConstantsSup.java):JavaSourceFile{
    simpleName = "ASTConstantsSup";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTConstantsSup.java";
  }

  @(ASTSupNode.class):JavaClassFile{
    simpleName = "ASTSupNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTSupNode.class";
  }

  @(ASTSupNode.java):JavaSourceFile{
    simpleName = "ASTSupNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/ASTSupNode.java";
  }

  @(SupLiterals.class):JavaClassFile{
    simpleName = "SupLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupLiterals.class";
  }

  @(SupLiterals.java):JavaSourceFile{
    simpleName = "SupLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupLiterals.java";
  }

  @(SupMill.class):JavaClassFile{
    simpleName = "SupMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupMill.class";
  }

  @(SupMill.java):JavaSourceFile{
    simpleName = "SupMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupMill.java";
  }

  @(SupNodeFactory.class):JavaClassFile{
    simpleName = "SupNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupNodeFactory.class";
  }

  @(SupNodeFactory.java):JavaSourceFile{
    simpleName = "SupNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_ast/SupNodeFactory.java";
  }

  @(_cocos!24):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_cocos";
  }

  @(SupASTACoCo.java):JavaSourceFile{
    simpleName = "SupASTACoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_cocos/SupASTACoCo.java";
  }

  @(SupASTBCoCo.java):JavaSourceFile{
    simpleName = "SupASTBCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_cocos/SupASTBCoCo.java";
  }

  @(SupASTSupNodeCoCo.java):JavaSourceFile{
    simpleName = "SupASTSupNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_cocos/SupASTSupNodeCoCo.java";
  }

  @(SupCoCoChecker.java):JavaSourceFile{
    simpleName = "SupCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_cocos/SupCoCoChecker.java";
  }

  @(_od!24):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_od";
  }

  @(Sup2OD.java):JavaSourceFile{
    simpleName = "Sup2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_od/Sup2OD.java";
  }

  @(_parser!11):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser";
  }

  @(SupAntlrBaseListener.java):JavaSourceFile{
    simpleName = "SupAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser/SupAntlrBaseListener.java";
  }

  @(SupAntlrLexer.java):JavaSourceFile{
    simpleName = "SupAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser/SupAntlrLexer.java";
  }

  @(SupAntlrListener.java):JavaSourceFile{
    simpleName = "SupAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser/SupAntlrListener.java";
  }

  @(SupAntlrParser.java):JavaSourceFile{
    simpleName = "SupAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser/SupAntlrParser.java";
  }

  @(SupParser.java):JavaSourceFile{
    simpleName = "SupParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_parser/SupParser.java";
  }

  @(_visitor!24):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor";
  }

  @(SupDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SupDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor/SupDelegatorVisitor.java";
  }

  @(SupInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SupInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor/SupInheritanceVisitor.java";
  }

  @(SupParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SupParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor/SupParentAwareVisitor.java";
  }

  @(SupVisitor.class):JavaClassFile{
    simpleName = "SupVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor/SupVisitor.class";
  }

  @(SupVisitor.java):JavaSourceFile{
    simpleName = "SupVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/interfaces/sup/_visitor/SupVisitor.java";
  }

  @(statechart!4):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart";
  }

  @(statechart!5):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart";
  }

  @(_ast!31):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast";
  }

  @(ASTAbstractAnything.class):JavaClassFile{
    simpleName = "ASTAbstractAnything";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTAbstractAnything.class";
  }

  @(ASTAbstractAnything.java):JavaSourceFile{
    simpleName = "ASTAbstractAnything";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTAbstractAnything.java";
  }

  @(ASTAbstractAnythingBuilder.class):JavaClassFile{
    simpleName = "ASTAbstractAnythingBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTAbstractAnythingBuilder.class";
  }

  @(ASTAbstractAnythingBuilder.java):JavaSourceFile{
    simpleName = "ASTAbstractAnythingBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTAbstractAnythingBuilder.java";
  }

  @(ASTArgument.class):JavaClassFile{
    simpleName = "ASTArgument";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTArgument.class";
  }

  @(ASTArgument.java):JavaSourceFile{
    simpleName = "ASTArgument";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTArgument.java";
  }

  @(ASTArgumentBuilder.class):JavaClassFile{
    simpleName = "ASTArgumentBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTArgumentBuilder.class";
  }

  @(ASTArgumentBuilder.java):JavaSourceFile{
    simpleName = "ASTArgumentBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTArgumentBuilder.java";
  }

  @(ASTBlockStatementExt.class):JavaClassFile{
    simpleName = "ASTBlockStatementExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTBlockStatementExt.class";
  }

  @(ASTBlockStatementExt.java):JavaSourceFile{
    simpleName = "ASTBlockStatementExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTBlockStatementExt.java";
  }

  @(ASTClassbodyExt.class):JavaClassFile{
    simpleName = "ASTClassbodyExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTClassbodyExt.class";
  }

  @(ASTClassbodyExt.java):JavaSourceFile{
    simpleName = "ASTClassbodyExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTClassbodyExt.java";
  }

  @(ASTCode.class):JavaClassFile{
    simpleName = "ASTCode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTCode.class";
  }

  @(ASTCode.java):JavaSourceFile{
    simpleName = "ASTCode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTCode.java";
  }

  @(ASTCodeBuilder.class):JavaClassFile{
    simpleName = "ASTCodeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTCodeBuilder.class";
  }

  @(ASTCodeBuilder.java):JavaSourceFile{
    simpleName = "ASTCodeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTCodeBuilder.java";
  }

  @(ASTConstantsStatechart.class):JavaClassFile{
    simpleName = "ASTConstantsStatechart";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTConstantsStatechart.class";
  }

  @(ASTConstantsStatechart.java):JavaSourceFile{
    simpleName = "ASTConstantsStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTConstantsStatechart.java";
  }

  @(ASTEntryAction.class):JavaClassFile{
    simpleName = "ASTEntryAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTEntryAction.class";
  }

  @(ASTEntryAction.java):JavaSourceFile{
    simpleName = "ASTEntryAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTEntryAction.java";
  }

  @(ASTEntryActionBuilder.class):JavaClassFile{
    simpleName = "ASTEntryActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTEntryActionBuilder.class";
  }

  @(ASTEntryActionBuilder.java):JavaSourceFile{
    simpleName = "ASTEntryActionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTEntryActionBuilder.java";
  }

  @(ASTExitAction.class):JavaClassFile{
    simpleName = "ASTExitAction";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExitAction.class";
  }

  @(ASTExitAction.java):JavaSourceFile{
    simpleName = "ASTExitAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExitAction.java";
  }

  @(ASTExitActionBuilder.class):JavaClassFile{
    simpleName = "ASTExitActionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExitActionBuilder.class";
  }

  @(ASTExitActionBuilder.java):JavaSourceFile{
    simpleName = "ASTExitActionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExitActionBuilder.java";
  }

  @(ASTExpressionExt.class):JavaClassFile{
    simpleName = "ASTExpressionExt";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExpressionExt.class";
  }

  @(ASTExpressionExt.java):JavaSourceFile{
    simpleName = "ASTExpressionExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTExpressionExt.java";
  }

  @(ASTSCStructure.class):JavaClassFile{
    simpleName = "ASTSCStructure";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTSCStructure.class";
  }

  @(ASTSCStructure.java):JavaSourceFile{
    simpleName = "ASTSCStructure";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTSCStructure.java";
  }

  @(ASTState.class!5):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTState.class";
  }

  @(ASTState.java!9):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class!5):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!9):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStateBuilder.java";
  }

  @(ASTStatechart.class):JavaClassFile{
    simpleName = "ASTStatechart";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechart.class";
  }

  @(ASTStatechart.java!2):JavaSourceFile{
    simpleName = "ASTStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechart.java";
  }

  @(ASTStatechartBuilder.class):JavaClassFile{
    simpleName = "ASTStatechartBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechartBuilder.class";
  }

  @(ASTStatechartBuilder.java):JavaSourceFile{
    simpleName = "ASTStatechartBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechartBuilder.java";
  }

  @(ASTStatechartNode.class):JavaClassFile{
    simpleName = "ASTStatechartNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechartNode.class";
  }

  @(ASTStatechartNode.java):JavaSourceFile{
    simpleName = "ASTStatechartNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTStatechartNode.java";
  }

  @(ASTTransition.class!5):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!8):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class!5):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!8):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/ASTTransitionBuilder.java";
  }

  @(StatechartLiterals.class):JavaClassFile{
    simpleName = "StatechartLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartLiterals.class";
  }

  @(StatechartLiterals.java):JavaSourceFile{
    simpleName = "StatechartLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartLiterals.java";
  }

  @(StatechartMill.class):JavaClassFile{
    simpleName = "StatechartMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartMill.class";
  }

  @(StatechartMill.java):JavaSourceFile{
    simpleName = "StatechartMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartMill.java";
  }

  @(StatechartNodeFactory.class):JavaClassFile{
    simpleName = "StatechartNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartNodeFactory.class";
  }

  @(StatechartNodeFactory.java):JavaSourceFile{
    simpleName = "StatechartNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_ast/StatechartNodeFactory.java";
  }

  @(_cocos!25):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos";
  }

  @(StatechartASTAbstractAnythingCoCo.class):JavaClassFile{
    simpleName = "StatechartASTAbstractAnythingCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTAbstractAnythingCoCo.class";
  }

  @(StatechartASTAbstractAnythingCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTAbstractAnythingCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTAbstractAnythingCoCo.java";
  }

  @(StatechartASTArgumentCoCo.class):JavaClassFile{
    simpleName = "StatechartASTArgumentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTArgumentCoCo.class";
  }

  @(StatechartASTArgumentCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTArgumentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTArgumentCoCo.java";
  }

  @(StatechartASTBlockStatementExtCoCo.class):JavaClassFile{
    simpleName = "StatechartASTBlockStatementExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTBlockStatementExtCoCo.class";
  }

  @(StatechartASTBlockStatementExtCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTBlockStatementExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTBlockStatementExtCoCo.java";
  }

  @(StatechartASTClassbodyExtCoCo.class):JavaClassFile{
    simpleName = "StatechartASTClassbodyExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTClassbodyExtCoCo.class";
  }

  @(StatechartASTClassbodyExtCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTClassbodyExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTClassbodyExtCoCo.java";
  }

  @(StatechartASTCodeCoCo.class):JavaClassFile{
    simpleName = "StatechartASTCodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTCodeCoCo.class";
  }

  @(StatechartASTCodeCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTCodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTCodeCoCo.java";
  }

  @(StatechartASTEntryActionCoCo.class):JavaClassFile{
    simpleName = "StatechartASTEntryActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTEntryActionCoCo.class";
  }

  @(StatechartASTEntryActionCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTEntryActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTEntryActionCoCo.java";
  }

  @(StatechartASTExitActionCoCo.class):JavaClassFile{
    simpleName = "StatechartASTExitActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTExitActionCoCo.class";
  }

  @(StatechartASTExitActionCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTExitActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTExitActionCoCo.java";
  }

  @(StatechartASTExpressionExtCoCo.class):JavaClassFile{
    simpleName = "StatechartASTExpressionExtCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTExpressionExtCoCo.class";
  }

  @(StatechartASTExpressionExtCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTExpressionExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTExpressionExtCoCo.java";
  }

  @(StatechartASTSCStructureCoCo.class):JavaClassFile{
    simpleName = "StatechartASTSCStructureCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTSCStructureCoCo.class";
  }

  @(StatechartASTSCStructureCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTSCStructureCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTSCStructureCoCo.java";
  }

  @(StatechartASTStatechartCoCo.class):JavaClassFile{
    simpleName = "StatechartASTStatechartCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartCoCo.class";
  }

  @(StatechartASTStatechartCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTStatechartCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartCoCo.java";
  }

  @(StatechartASTStatechartNodeCoCo.class):JavaClassFile{
    simpleName = "StatechartASTStatechartNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartNodeCoCo.class";
  }

  @(StatechartASTStatechartNodeCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTStatechartNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartNodeCoCo.java";
  }

  @(StatechartASTStateCoCo.class):JavaClassFile{
    simpleName = "StatechartASTStateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStateCoCo.class";
  }

  @(StatechartASTStateCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTStateCoCo.java";
  }

  @(StatechartASTTransitionCoCo.class):JavaClassFile{
    simpleName = "StatechartASTTransitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTTransitionCoCo.class";
  }

  @(StatechartASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "StatechartASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartASTTransitionCoCo.java";
  }

  @(StatechartCoCoChecker.class):JavaClassFile{
    simpleName = "StatechartCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartCoCoChecker.class";
  }

  @(StatechartCoCoChecker.java):JavaSourceFile{
    simpleName = "StatechartCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_cocos/StatechartCoCoChecker.java";
  }

  @(_od!25):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_od";
  }

  @(Statechart2OD.class):JavaClassFile{
    simpleName = "Statechart2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_od/Statechart2OD.class";
  }

  @(Statechart2OD.java):JavaSourceFile{
    simpleName = "Statechart2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_od/Statechart2OD.java";
  }

  @(_visitor!25):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor";
  }

  @(StatechartDelegatorVisitor.class):JavaClassFile{
    simpleName = "StatechartDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartDelegatorVisitor.class";
  }

  @(StatechartDelegatorVisitor.java):JavaSourceFile{
    simpleName = "StatechartDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartDelegatorVisitor.java";
  }

  @(StatechartInheritanceVisitor.class):JavaClassFile{
    simpleName = "StatechartInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartInheritanceVisitor.class";
  }

  @(StatechartInheritanceVisitor.java):JavaSourceFile{
    simpleName = "StatechartInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartInheritanceVisitor.java";
  }

  @(StatechartParentAwareVisitor.class):JavaClassFile{
    simpleName = "StatechartParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartParentAwareVisitor.class";
  }

  @(StatechartParentAwareVisitor.java):JavaSourceFile{
    simpleName = "StatechartParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartParentAwareVisitor.java";
  }

  @(StatechartVisitor.class):JavaClassFile{
    simpleName = "StatechartVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartVisitor.class";
  }

  @(StatechartVisitor.java):JavaSourceFile{
    simpleName = "StatechartVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/statechart/_visitor/StatechartVisitor.java";
  }

  @(sub!6):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub";
  }

  @(substatechart):Directory{
    simpleName = "substatechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart";
  }

  @(_ast!32):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast";
  }

  @(ASTConstantsSubStatechart.class):JavaClassFile{
    simpleName = "ASTConstantsSubStatechart";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTConstantsSubStatechart.class";
  }

  @(ASTConstantsSubStatechart.java):JavaSourceFile{
    simpleName = "ASTConstantsSubStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTConstantsSubStatechart.java";
  }

  @(ASTFirst.class):JavaClassFile{
    simpleName = "ASTFirst";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTFirst.class";
  }

  @(ASTFirst.java):JavaSourceFile{
    simpleName = "ASTFirst";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTFirst.java";
  }

  @(ASTFirstBuilder.class):JavaClassFile{
    simpleName = "ASTFirstBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTFirstBuilder.class";
  }

  @(ASTFirstBuilder.java):JavaSourceFile{
    simpleName = "ASTFirstBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTFirstBuilder.java";
  }

  @(ASTSecond.class):JavaClassFile{
    simpleName = "ASTSecond";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSecond.class";
  }

  @(ASTSecond.java):JavaSourceFile{
    simpleName = "ASTSecond";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSecond.java";
  }

  @(ASTSecondBuilder.class):JavaClassFile{
    simpleName = "ASTSecondBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSecondBuilder.class";
  }

  @(ASTSecondBuilder.java):JavaSourceFile{
    simpleName = "ASTSecondBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSecondBuilder.java";
  }

  @(ASTSubStatechartNode.class):JavaClassFile{
    simpleName = "ASTSubStatechartNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSubStatechartNode.class";
  }

  @(ASTSubStatechartNode.java):JavaSourceFile{
    simpleName = "ASTSubStatechartNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/ASTSubStatechartNode.java";
  }

  @(SubStatechartLiterals.class):JavaClassFile{
    simpleName = "SubStatechartLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartLiterals.class";
  }

  @(SubStatechartLiterals.java):JavaSourceFile{
    simpleName = "SubStatechartLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartLiterals.java";
  }

  @(SubStatechartMill.class):JavaClassFile{
    simpleName = "SubStatechartMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartMill.class";
  }

  @(SubStatechartMill.java):JavaSourceFile{
    simpleName = "SubStatechartMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartMill.java";
  }

  @(SubStatechartNodeFactory.class):JavaClassFile{
    simpleName = "SubStatechartNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartNodeFactory.class";
  }

  @(SubStatechartNodeFactory.java):JavaSourceFile{
    simpleName = "SubStatechartNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_ast/SubStatechartNodeFactory.java";
  }

  @(_cocos!26):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos";
  }

  @(SubStatechartASTFirstCoCo.class):JavaClassFile{
    simpleName = "SubStatechartASTFirstCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTFirstCoCo.class";
  }

  @(SubStatechartASTFirstCoCo.java):JavaSourceFile{
    simpleName = "SubStatechartASTFirstCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTFirstCoCo.java";
  }

  @(SubStatechartASTSecondCoCo.class):JavaClassFile{
    simpleName = "SubStatechartASTSecondCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTSecondCoCo.class";
  }

  @(SubStatechartASTSecondCoCo.java):JavaSourceFile{
    simpleName = "SubStatechartASTSecondCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTSecondCoCo.java";
  }

  @(SubStatechartASTSubStatechartNodeCoCo.class):JavaClassFile{
    simpleName = "SubStatechartASTSubStatechartNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTSubStatechartNodeCoCo.class";
  }

  @(SubStatechartASTSubStatechartNodeCoCo.java):JavaSourceFile{
    simpleName = "SubStatechartASTSubStatechartNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartASTSubStatechartNodeCoCo.java";
  }

  @(SubStatechartCoCoChecker.class):JavaClassFile{
    simpleName = "SubStatechartCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartCoCoChecker.class";
  }

  @(SubStatechartCoCoChecker.java):JavaSourceFile{
    simpleName = "SubStatechartCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_cocos/SubStatechartCoCoChecker.java";
  }

  @(_od!26):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_od";
  }

  @(SubStatechart2OD.class):JavaClassFile{
    simpleName = "SubStatechart2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_od/SubStatechart2OD.class";
  }

  @(SubStatechart2OD.java):JavaSourceFile{
    simpleName = "SubStatechart2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_od/SubStatechart2OD.java";
  }

  @(_visitor!26):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor";
  }

  @(SubStatechartDelegatorVisitor.class):JavaClassFile{
    simpleName = "SubStatechartDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartDelegatorVisitor.class";
  }

  @(SubStatechartDelegatorVisitor.java):JavaSourceFile{
    simpleName = "SubStatechartDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartDelegatorVisitor.java";
  }

  @(SubStatechartInheritanceVisitor.class):JavaClassFile{
    simpleName = "SubStatechartInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartInheritanceVisitor.class";
  }

  @(SubStatechartInheritanceVisitor.java):JavaSourceFile{
    simpleName = "SubStatechartInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartInheritanceVisitor.java";
  }

  @(SubStatechartParentAwareVisitor.class):JavaClassFile{
    simpleName = "SubStatechartParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartParentAwareVisitor.class";
  }

  @(SubStatechartParentAwareVisitor.java):JavaSourceFile{
    simpleName = "SubStatechartParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartParentAwareVisitor.java";
  }

  @(SubStatechartVisitor.class):JavaClassFile{
    simpleName = "SubStatechartVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartVisitor.class";
  }

  @(SubStatechartVisitor.java):JavaSourceFile{
    simpleName = "SubStatechartVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/statechart/sub/substatechart/_visitor/SubStatechartVisitor.java";
  }

  @(symboltable!12):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable";
  }

  @(grammarwithsymboltableinfo):Directory{
    simpleName = "grammarwithsymboltableinfo";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo";
  }

  @(_ast!33):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast";
  }

  @(ASTAutomaton.class!5):JavaClassFile{
    simpleName = "ASTAutomaton";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTAutomaton.class";
  }

  @(ASTAutomaton.java!9):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.class!5):JavaClassFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTAutomatonBuilder.class";
  }

  @(ASTAutomatonBuilder.java!9):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTConstantsGrammarWithSymbolTableInfo.class):JavaClassFile{
    simpleName = "ASTConstantsGrammarWithSymbolTableInfo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTConstantsGrammarWithSymbolTableInfo.class";
  }

  @(ASTConstantsGrammarWithSymbolTableInfo.java):JavaSourceFile{
    simpleName = "ASTConstantsGrammarWithSymbolTableInfo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTConstantsGrammarWithSymbolTableInfo.java";
  }

  @(ASTGrammarWithSymbolTableInfoNode.class):JavaClassFile{
    simpleName = "ASTGrammarWithSymbolTableInfoNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTGrammarWithSymbolTableInfoNode.class";
  }

  @(ASTGrammarWithSymbolTableInfoNode.java):JavaSourceFile{
    simpleName = "ASTGrammarWithSymbolTableInfoNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTGrammarWithSymbolTableInfoNode.java";
  }

  @(ASTState.class!6):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTState.class";
  }

  @(ASTState.java!10):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTState.java";
  }

  @(ASTStateBuilder.class!6):JavaClassFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTStateBuilder.class";
  }

  @(ASTStateBuilder.java!10):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.class!6):JavaClassFile{
    simpleName = "ASTTransition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTTransition.class";
  }

  @(ASTTransition.java!9):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.class!6):JavaClassFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTTransitionBuilder.class";
  }

  @(ASTTransitionBuilder.java!9):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/ASTTransitionBuilder.java";
  }

  @(GrammarWithSymbolTableInfoLiterals.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoLiterals.class";
  }

  @(GrammarWithSymbolTableInfoLiterals.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoLiterals.java";
  }

  @(GrammarWithSymbolTableInfoMill.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoMill.class";
  }

  @(GrammarWithSymbolTableInfoMill.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoMill.java";
  }

  @(GrammarWithSymbolTableInfoNodeFactory.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoNodeFactory.class";
  }

  @(GrammarWithSymbolTableInfoNodeFactory.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_ast/GrammarWithSymbolTableInfoNodeFactory.java";
  }

  @(_cocos!27):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos";
  }

  @(GrammarWithSymbolTableInfoASTAutomatonCoCo.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoASTAutomatonCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTAutomatonCoCo.class";
  }

  @(GrammarWithSymbolTableInfoASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTAutomatonCoCo.java";
  }

  @(GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.class";
  }

  @(GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.java";
  }

  @(GrammarWithSymbolTableInfoASTStateCoCo.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoASTStateCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTStateCoCo.class";
  }

  @(GrammarWithSymbolTableInfoASTStateCoCo.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTStateCoCo.java";
  }

  @(GrammarWithSymbolTableInfoASTTransitionCoCo.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoASTTransitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTTransitionCoCo.class";
  }

  @(GrammarWithSymbolTableInfoASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoASTTransitionCoCo.java";
  }

  @(GrammarWithSymbolTableInfoCoCoChecker.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoCoCoChecker.class";
  }

  @(GrammarWithSymbolTableInfoCoCoChecker.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_cocos/GrammarWithSymbolTableInfoCoCoChecker.java";
  }

  @(_od!27):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_od";
  }

  @(GrammarWithSymbolTableInfo2OD.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfo2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_od/GrammarWithSymbolTableInfo2OD.class";
  }

  @(GrammarWithSymbolTableInfo2OD.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfo2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_od/GrammarWithSymbolTableInfo2OD.java";
  }

  @(_parser!12):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser";
  }

  @(GrammarWithSymbolTableInfoAntlrBaseListener.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrBaseListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrBaseListener.class";
  }

  @(GrammarWithSymbolTableInfoAntlrBaseListener.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrBaseListener.java";
  }

  @(GrammarWithSymbolTableInfoAntlrLexer.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrLexer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrLexer.class";
  }

  @(GrammarWithSymbolTableInfoAntlrLexer.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrLexer.java";
  }

  @(GrammarWithSymbolTableInfoAntlrListener.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrListener";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrListener.class";
  }

  @(GrammarWithSymbolTableInfoAntlrListener.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrListener.java";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$AutomatonContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$AutomatonContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$AutomatonContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$Automaton_eofContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$Automaton_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$Automaton_eofContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$StateContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$StateContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$StateContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$State_eofContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$State_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$State_eofContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$TransitionContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$TransitionContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$TransitionContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser$Transition_eofContext.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser$Transition_eofContext";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser$Transition_eofContext.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser.class";
  }

  @(GrammarWithSymbolTableInfoAntlrParser.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoAntlrParser.java";
  }

  @(GrammarWithSymbolTableInfoParser.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoParser";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoParser.class";
  }

  @(GrammarWithSymbolTableInfoParser.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_parser/GrammarWithSymbolTableInfoParser.java";
  }

  @(_symboltable!15):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable";
  }

  @(AutomatonKind.class):JavaClassFile{
    simpleName = "AutomatonKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonKind.class";
  }

  @(AutomatonKind.java):JavaSourceFile{
    simpleName = "AutomatonKind";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonKind.java";
  }

  @(AutomatonResolvingFilter.class):JavaClassFile{
    simpleName = "AutomatonResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonResolvingFilter.class";
  }

  @(AutomatonResolvingFilter.java):JavaSourceFile{
    simpleName = "AutomatonResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonResolvingFilter.java";
  }

  @(AutomatonScope.class):JavaClassFile{
    simpleName = "AutomatonScope";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonScope.class";
  }

  @(AutomatonScope.java):JavaSourceFile{
    simpleName = "AutomatonScope";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonScope.java";
  }

  @(AutomatonSymbol$AutomatonSymbolBuilder.class):JavaClassFile{
    simpleName = "AutomatonSymbol$AutomatonSymbolBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonSymbol$AutomatonSymbolBuilder.class";
  }

  @(AutomatonSymbol.class):JavaClassFile{
    simpleName = "AutomatonSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonSymbol.class";
  }

  @(AutomatonSymbol.java):JavaSourceFile{
    simpleName = "AutomatonSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonSymbol.java";
  }

  @(AutomatonSymbolReference.class):JavaClassFile{
    simpleName = "AutomatonSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonSymbolReference.class";
  }

  @(AutomatonSymbolReference.java):JavaSourceFile{
    simpleName = "AutomatonSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/AutomatonSymbolReference.java";
  }

  @(GrammarWithSymbolTableInfoLanguage.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoLanguage.class";
  }

  @(GrammarWithSymbolTableInfoLanguage.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoLanguage.java";
  }

  @(GrammarWithSymbolTableInfoModelLoader.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoModelLoader.class";
  }

  @(GrammarWithSymbolTableInfoModelLoader.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoModelLoader.java";
  }

  @(GrammarWithSymbolTableInfoModelNameCalculator.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoModelNameCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoModelNameCalculator.class";
  }

  @(GrammarWithSymbolTableInfoModelNameCalculator.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoModelNameCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoModelNameCalculator.java";
  }

  @(GrammarWithSymbolTableInfoSymbolMill.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoSymbolMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoSymbolMill.class";
  }

  @(GrammarWithSymbolTableInfoSymbolMill.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoSymbolMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoSymbolMill.java";
  }

  @(GrammarWithSymbolTableInfoSymbolTableCreator.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoSymbolTableCreator.class";
  }

  @(GrammarWithSymbolTableInfoSymbolTableCreator.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/GrammarWithSymbolTableInfoSymbolTableCreator.java";
  }

  @(StateKind.class):JavaClassFile{
    simpleName = "StateKind";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateKind.class";
  }

  @(StateKind.java):JavaSourceFile{
    simpleName = "StateKind";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateKind.java";
  }

  @(StateResolvingFilter.class):JavaClassFile{
    simpleName = "StateResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateResolvingFilter.class";
  }

  @(StateResolvingFilter.java):JavaSourceFile{
    simpleName = "StateResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateResolvingFilter.java";
  }

  @(StateSymbol$StateSymbolBuilder.class):JavaClassFile{
    simpleName = "StateSymbol$StateSymbolBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateSymbol$StateSymbolBuilder.class";
  }

  @(StateSymbol.class):JavaClassFile{
    simpleName = "StateSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateSymbol.class";
  }

  @(StateSymbol.java):JavaSourceFile{
    simpleName = "StateSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateSymbol.java";
  }

  @(StateSymbolReference.class):JavaClassFile{
    simpleName = "StateSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateSymbolReference.class";
  }

  @(StateSymbolReference.java):JavaSourceFile{
    simpleName = "StateSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_symboltable/StateSymbolReference.java";
  }

  @(_visitor!27):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor";
  }

  @(GrammarWithSymbolTableInfoDelegatorVisitor.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoDelegatorVisitor.class";
  }

  @(GrammarWithSymbolTableInfoDelegatorVisitor.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoDelegatorVisitor.java";
  }

  @(GrammarWithSymbolTableInfoInheritanceVisitor.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoInheritanceVisitor.class";
  }

  @(GrammarWithSymbolTableInfoInheritanceVisitor.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoInheritanceVisitor.java";
  }

  @(GrammarWithSymbolTableInfoParentAwareVisitor.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoParentAwareVisitor.class";
  }

  @(GrammarWithSymbolTableInfoParentAwareVisitor.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoParentAwareVisitor.java";
  }

  @(GrammarWithSymbolTableInfoVisitor.class):JavaClassFile{
    simpleName = "GrammarWithSymbolTableInfoVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoVisitor.class";
  }

  @(GrammarWithSymbolTableInfoVisitor.java):JavaSourceFile{
    simpleName = "GrammarWithSymbolTableInfoVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/symboltable/grammarwithsymboltableinfo/_visitor/GrammarWithSymbolTableInfoVisitor.java";
  }

  @(visitors!2):Directory{
    simpleName = "visitors";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors";
  }

  @(a):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a";
  }

  @(_ast!34):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast";
  }

  @(ALiterals.java):JavaSourceFile{
    simpleName = "ALiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ALiterals.java";
  }

  @(AMill.java):JavaSourceFile{
    simpleName = "AMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/AMill.java";
  }

  @(ANodeFactory.java):JavaSourceFile{
    simpleName = "ANodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ANodeFactory.java";
  }

  @(ASTANode.java):JavaSourceFile{
    simpleName = "ASTANode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTANode.java";
  }

  @(ASTConstantsA.java):JavaSourceFile{
    simpleName = "ASTConstantsA";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTConstantsA.java";
  }

  @(ASTI.java!2):JavaSourceFile{
    simpleName = "ASTI";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTI.java";
  }

  @(ASTJ.java!2):JavaSourceFile{
    simpleName = "ASTJ";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTJ.java";
  }

  @(ASTP.java!2):JavaSourceFile{
    simpleName = "ASTP";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTP.java";
  }

  @(ASTPBuilder.java!2):JavaSourceFile{
    simpleName = "ASTPBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTPBuilder.java";
  }

  @(ASTX.java!3):JavaSourceFile{
    simpleName = "ASTX";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTX.java";
  }

  @(ASTXBuilder.java!3):JavaSourceFile{
    simpleName = "ASTXBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_ast/ASTXBuilder.java";
  }

  @(_cocos!28):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos";
  }

  @(AASTANodeCoCo.java):JavaSourceFile{
    simpleName = "AASTANodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/AASTANodeCoCo.java";
  }

  @(AASTICoCo.java):JavaSourceFile{
    simpleName = "AASTICoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/AASTICoCo.java";
  }

  @(AASTJCoCo.java):JavaSourceFile{
    simpleName = "AASTJCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/AASTJCoCo.java";
  }

  @(AASTPCoCo.java):JavaSourceFile{
    simpleName = "AASTPCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/AASTPCoCo.java";
  }

  @(AASTXCoCo.java):JavaSourceFile{
    simpleName = "AASTXCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/AASTXCoCo.java";
  }

  @(ACoCoChecker.java):JavaSourceFile{
    simpleName = "ACoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_cocos/ACoCoChecker.java";
  }

  @(_od!28):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_od";
  }

  @(A2OD.java):JavaSourceFile{
    simpleName = "A2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_od/A2OD.java";
  }

  @(_visitor!28):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_visitor";
  }

  @(ADelegatorVisitor.java):JavaSourceFile{
    simpleName = "ADelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_visitor/ADelegatorVisitor.java";
  }

  @(AInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_visitor/AInheritanceVisitor.java";
  }

  @(AParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_visitor/AParentAwareVisitor.java";
  }

  @(AVisitor.java):JavaSourceFile{
    simpleName = "AVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/a/_visitor/AVisitor.java";
  }

  @(b):Directory{
    simpleName = "b";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b";
  }

  @(_ast!35):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast";
  }

  @(ASTBNode.java):JavaSourceFile{
    simpleName = "ASTBNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/ASTBNode.java";
  }

  @(ASTConstantsB.java):JavaSourceFile{
    simpleName = "ASTConstantsB";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/ASTConstantsB.java";
  }

  @(ASTY.java!2):JavaSourceFile{
    simpleName = "ASTY";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/ASTY.java";
  }

  @(ASTYBuilder.java!2):JavaSourceFile{
    simpleName = "ASTYBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/ASTYBuilder.java";
  }

  @(BLiterals.java):JavaSourceFile{
    simpleName = "BLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/BLiterals.java";
  }

  @(BMill.java):JavaSourceFile{
    simpleName = "BMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/BMill.java";
  }

  @(BNodeFactory.java):JavaSourceFile{
    simpleName = "BNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_ast/BNodeFactory.java";
  }

  @(_cocos!29):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_cocos";
  }

  @(BASTBNodeCoCo.java):JavaSourceFile{
    simpleName = "BASTBNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_cocos/BASTBNodeCoCo.java";
  }

  @(BASTYCoCo.java):JavaSourceFile{
    simpleName = "BASTYCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_cocos/BASTYCoCo.java";
  }

  @(BCoCoChecker.java):JavaSourceFile{
    simpleName = "BCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_cocos/BCoCoChecker.java";
  }

  @(_od!29):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_od";
  }

  @(B2OD.java):JavaSourceFile{
    simpleName = "B2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_od/B2OD.java";
  }

  @(_visitor!29):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_visitor";
  }

  @(BDelegatorVisitor.java):JavaSourceFile{
    simpleName = "BDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_visitor/BDelegatorVisitor.java";
  }

  @(BInheritanceVisitor.java):JavaSourceFile{
    simpleName = "BInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_visitor/BInheritanceVisitor.java";
  }

  @(BParentAwareVisitor.java):JavaSourceFile{
    simpleName = "BParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_visitor/BParentAwareVisitor.java";
  }

  @(BVisitor.java):JavaSourceFile{
    simpleName = "BVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/b/_visitor/BVisitor.java";
  }

  @(c):Directory{
    simpleName = "c";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c";
  }

  @(_ast!36):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast";
  }

  @(ASTCNode.java):JavaSourceFile{
    simpleName = "ASTCNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/ASTCNode.java";
  }

  @(ASTConstantsC.java):JavaSourceFile{
    simpleName = "ASTConstantsC";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/ASTConstantsC.java";
  }

  @(ASTZ.java):JavaSourceFile{
    simpleName = "ASTZ";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/ASTZ.java";
  }

  @(ASTZBuilder.java):JavaSourceFile{
    simpleName = "ASTZBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/ASTZBuilder.java";
  }

  @(CLiterals.java):JavaSourceFile{
    simpleName = "CLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/CLiterals.java";
  }

  @(CMill.java):JavaSourceFile{
    simpleName = "CMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/CMill.java";
  }

  @(CNodeFactory.java):JavaSourceFile{
    simpleName = "CNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_ast/CNodeFactory.java";
  }

  @(_cocos!30):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_cocos";
  }

  @(CASTCNodeCoCo.java):JavaSourceFile{
    simpleName = "CASTCNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_cocos/CASTCNodeCoCo.java";
  }

  @(CASTZCoCo.java):JavaSourceFile{
    simpleName = "CASTZCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_cocos/CASTZCoCo.java";
  }

  @(CCoCoChecker.java):JavaSourceFile{
    simpleName = "CCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_cocos/CCoCoChecker.java";
  }

  @(_od!30):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_od";
  }

  @(C2OD.java):JavaSourceFile{
    simpleName = "C2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_od/C2OD.java";
  }

  @(_visitor!30):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_visitor";
  }

  @(CDelegatorVisitor.java):JavaSourceFile{
    simpleName = "CDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_visitor/CDelegatorVisitor.java";
  }

  @(CInheritanceVisitor.java):JavaSourceFile{
    simpleName = "CInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_visitor/CInheritanceVisitor.java";
  }

  @(CParentAwareVisitor.java):JavaSourceFile{
    simpleName = "CParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_visitor/CParentAwareVisitor.java";
  }

  @(CVisitor.java):JavaSourceFile{
    simpleName = "CVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/de/monticore/visitors/c/_visitor/CVisitor.java";
  }

  @(mc!7):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc";
  }

  @(grammars!5):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars";
  }

  @(common!3):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common";
  }

  @(testcommon):Directory{
    simpleName = "testcommon";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon";
  }

  @(_ast!37):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast";
  }

  @(ASTCardinality.class):JavaClassFile{
    simpleName = "ASTCardinality";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCardinality.class";
  }

  @(ASTCardinality.java):JavaSourceFile{
    simpleName = "ASTCardinality";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCardinality.java";
  }

  @(ASTCardinalityBuilder.class):JavaClassFile{
    simpleName = "ASTCardinalityBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCardinalityBuilder.class";
  }

  @(ASTCardinalityBuilder.java):JavaSourceFile{
    simpleName = "ASTCardinalityBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCardinalityBuilder.java";
  }

  @(ASTCompleteness.class):JavaClassFile{
    simpleName = "ASTCompleteness";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCompleteness.class";
  }

  @(ASTCompleteness.java):JavaSourceFile{
    simpleName = "ASTCompleteness";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCompleteness.java";
  }

  @(ASTCompletenessBuilder.class):JavaClassFile{
    simpleName = "ASTCompletenessBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCompletenessBuilder.class";
  }

  @(ASTCompletenessBuilder.java):JavaSourceFile{
    simpleName = "ASTCompletenessBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTCompletenessBuilder.java";
  }

  @(ASTConstantsTestCommon.class):JavaClassFile{
    simpleName = "ASTConstantsTestCommon";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTConstantsTestCommon.class";
  }

  @(ASTConstantsTestCommon.java):JavaSourceFile{
    simpleName = "ASTConstantsTestCommon";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTConstantsTestCommon.java";
  }

  @(ASTModifier.class):JavaClassFile{
    simpleName = "ASTModifier";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTModifier.class";
  }

  @(ASTModifier.java):JavaSourceFile{
    simpleName = "ASTModifier";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTModifier.java";
  }

  @(ASTModifierBuilder.class):JavaClassFile{
    simpleName = "ASTModifierBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTModifierBuilder.class";
  }

  @(ASTModifierBuilder.java):JavaSourceFile{
    simpleName = "ASTModifierBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTModifierBuilder.java";
  }

  @(ASTStereotype.class!2):JavaClassFile{
    simpleName = "ASTStereotype";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereotype.class";
  }

  @(ASTStereotype.java!2):JavaSourceFile{
    simpleName = "ASTStereotype";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereotype.java";
  }

  @(ASTStereotypeBuilder.class!2):JavaClassFile{
    simpleName = "ASTStereotypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereotypeBuilder.class";
  }

  @(ASTStereotypeBuilder.java!2):JavaSourceFile{
    simpleName = "ASTStereotypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereotypeBuilder.java";
  }

  @(ASTStereoValue.class):JavaClassFile{
    simpleName = "ASTStereoValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereoValue.class";
  }

  @(ASTStereoValue.java):JavaSourceFile{
    simpleName = "ASTStereoValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereoValue.java";
  }

  @(ASTStereoValueBuilder.class):JavaClassFile{
    simpleName = "ASTStereoValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereoValueBuilder.class";
  }

  @(ASTStereoValueBuilder.java):JavaSourceFile{
    simpleName = "ASTStereoValueBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTStereoValueBuilder.java";
  }

  @(ASTTestCommonNode.class):JavaClassFile{
    simpleName = "ASTTestCommonNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTTestCommonNode.class";
  }

  @(ASTTestCommonNode.java):JavaSourceFile{
    simpleName = "ASTTestCommonNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/ASTTestCommonNode.java";
  }

  @(TestCommonLiterals.class):JavaClassFile{
    simpleName = "TestCommonLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonLiterals.class";
  }

  @(TestCommonLiterals.java):JavaSourceFile{
    simpleName = "TestCommonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonLiterals.java";
  }

  @(TestCommonMill.class):JavaClassFile{
    simpleName = "TestCommonMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonMill.class";
  }

  @(TestCommonMill.java):JavaSourceFile{
    simpleName = "TestCommonMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonMill.java";
  }

  @(TestCommonNodeFactory.class):JavaClassFile{
    simpleName = "TestCommonNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonNodeFactory.class";
  }

  @(TestCommonNodeFactory.java):JavaSourceFile{
    simpleName = "TestCommonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_ast/TestCommonNodeFactory.java";
  }

  @(_cocos!31):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos";
  }

  @(TestCommonASTCardinalityCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTCardinalityCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTCardinalityCoCo.class";
  }

  @(TestCommonASTCardinalityCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTCardinalityCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTCardinalityCoCo.java";
  }

  @(TestCommonASTCompletenessCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTCompletenessCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTCompletenessCoCo.class";
  }

  @(TestCommonASTCompletenessCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTCompletenessCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTCompletenessCoCo.java";
  }

  @(TestCommonASTModifierCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTModifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTModifierCoCo.class";
  }

  @(TestCommonASTModifierCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTModifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTModifierCoCo.java";
  }

  @(TestCommonASTStereotypeCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTStereotypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTStereotypeCoCo.class";
  }

  @(TestCommonASTStereotypeCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTStereotypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTStereotypeCoCo.java";
  }

  @(TestCommonASTStereoValueCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTStereoValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTStereoValueCoCo.class";
  }

  @(TestCommonASTStereoValueCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTStereoValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTStereoValueCoCo.java";
  }

  @(TestCommonASTTestCommonNodeCoCo.class):JavaClassFile{
    simpleName = "TestCommonASTTestCommonNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTTestCommonNodeCoCo.class";
  }

  @(TestCommonASTTestCommonNodeCoCo.java):JavaSourceFile{
    simpleName = "TestCommonASTTestCommonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonASTTestCommonNodeCoCo.java";
  }

  @(TestCommonCoCoChecker.class):JavaClassFile{
    simpleName = "TestCommonCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonCoCoChecker.class";
  }

  @(TestCommonCoCoChecker.java):JavaSourceFile{
    simpleName = "TestCommonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_cocos/TestCommonCoCoChecker.java";
  }

  @(_od!31):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_od";
  }

  @(TestCommon2OD.class):JavaClassFile{
    simpleName = "TestCommon2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_od/TestCommon2OD.class";
  }

  @(TestCommon2OD.java):JavaSourceFile{
    simpleName = "TestCommon2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_od/TestCommon2OD.java";
  }

  @(_visitor!31):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor";
  }

  @(TestCommonDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestCommonDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonDelegatorVisitor.class";
  }

  @(TestCommonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestCommonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonDelegatorVisitor.java";
  }

  @(TestCommonInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestCommonInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonInheritanceVisitor.class";
  }

  @(TestCommonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestCommonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonInheritanceVisitor.java";
  }

  @(TestCommonParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestCommonParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonParentAwareVisitor.class";
  }

  @(TestCommonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestCommonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonParentAwareVisitor.java";
  }

  @(TestCommonVisitor.class):JavaClassFile{
    simpleName = "TestCommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonVisitor.class";
  }

  @(TestCommonVisitor.java):JavaSourceFile{
    simpleName = "TestCommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/common/testcommon/_visitor/TestCommonVisitor.java";
  }

  @(lexicals!3):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals";
  }

  @(testlexicals):Directory{
    simpleName = "testlexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals";
  }

  @(_ast!38):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast";
  }

  @(ASTConstantsTestLexicals.class):JavaClassFile{
    simpleName = "ASTConstantsTestLexicals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/ASTConstantsTestLexicals.class";
  }

  @(ASTConstantsTestLexicals.java):JavaSourceFile{
    simpleName = "ASTConstantsTestLexicals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/ASTConstantsTestLexicals.java";
  }

  @(ASTTestLexicalsNode.class):JavaClassFile{
    simpleName = "ASTTestLexicalsNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/ASTTestLexicalsNode.class";
  }

  @(ASTTestLexicalsNode.java):JavaSourceFile{
    simpleName = "ASTTestLexicalsNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/ASTTestLexicalsNode.java";
  }

  @(TestLexicalsLiterals.class):JavaClassFile{
    simpleName = "TestLexicalsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsLiterals.class";
  }

  @(TestLexicalsLiterals.java):JavaSourceFile{
    simpleName = "TestLexicalsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsLiterals.java";
  }

  @(TestLexicalsMill.class):JavaClassFile{
    simpleName = "TestLexicalsMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsMill.class";
  }

  @(TestLexicalsMill.java):JavaSourceFile{
    simpleName = "TestLexicalsMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsMill.java";
  }

  @(TestLexicalsNodeFactory.class):JavaClassFile{
    simpleName = "TestLexicalsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsNodeFactory.class";
  }

  @(TestLexicalsNodeFactory.java):JavaSourceFile{
    simpleName = "TestLexicalsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsNodeFactory.java";
  }

  @(_cocos!32):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_cocos";
  }

  @(TestLexicalsASTTestLexicalsNodeCoCo.class):JavaClassFile{
    simpleName = "TestLexicalsASTTestLexicalsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsASTTestLexicalsNodeCoCo.class";
  }

  @(TestLexicalsASTTestLexicalsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestLexicalsASTTestLexicalsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsASTTestLexicalsNodeCoCo.java";
  }

  @(TestLexicalsCoCoChecker.class):JavaClassFile{
    simpleName = "TestLexicalsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsCoCoChecker.class";
  }

  @(TestLexicalsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestLexicalsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsCoCoChecker.java";
  }

  @(_od!32):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_od";
  }

  @(TestLexicals2OD.class):JavaClassFile{
    simpleName = "TestLexicals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_od/TestLexicals2OD.class";
  }

  @(TestLexicals2OD.java):JavaSourceFile{
    simpleName = "TestLexicals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_od/TestLexicals2OD.java";
  }

  @(_visitor!32):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor";
  }

  @(TestLexicalsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestLexicalsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsDelegatorVisitor.class";
  }

  @(TestLexicalsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestLexicalsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsDelegatorVisitor.java";
  }

  @(TestLexicalsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestLexicalsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsInheritanceVisitor.class";
  }

  @(TestLexicalsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestLexicalsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsInheritanceVisitor.java";
  }

  @(TestLexicalsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestLexicalsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsParentAwareVisitor.class";
  }

  @(TestLexicalsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestLexicalsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsParentAwareVisitor.java";
  }

  @(TestLexicalsVisitor.class):JavaClassFile{
    simpleName = "TestLexicalsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsVisitor.class";
  }

  @(TestLexicalsVisitor.java):JavaSourceFile{
    simpleName = "TestLexicalsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsVisitor.java";
  }

  @(literals!3):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals";
  }

  @(testliterals):Directory{
    simpleName = "testliterals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals";
  }

  @(_ast!39):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast";
  }

  @(ASTBooleanLiteral.class):JavaClassFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTBooleanLiteral.class";
  }

  @(ASTBooleanLiteral.java):JavaSourceFile{
    simpleName = "ASTBooleanLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTBooleanLiteral.java";
  }

  @(ASTBooleanLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTBooleanLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTBooleanLiteralBuilder.class";
  }

  @(ASTBooleanLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTBooleanLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTBooleanLiteralBuilder.java";
  }

  @(ASTCharLiteral.class):JavaClassFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTCharLiteral.class";
  }

  @(ASTCharLiteral.java):JavaSourceFile{
    simpleName = "ASTCharLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTCharLiteral.java";
  }

  @(ASTCharLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTCharLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTCharLiteralBuilder.class";
  }

  @(ASTCharLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTCharLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTCharLiteralBuilder.java";
  }

  @(ASTConstantsTestLiterals.class):JavaClassFile{
    simpleName = "ASTConstantsTestLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTConstantsTestLiterals.class";
  }

  @(ASTConstantsTestLiterals.java):JavaSourceFile{
    simpleName = "ASTConstantsTestLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTConstantsTestLiterals.java";
  }

  @(ASTDoubleLiteral.class):JavaClassFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTDoubleLiteral.class";
  }

  @(ASTDoubleLiteral.java):JavaSourceFile{
    simpleName = "ASTDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTDoubleLiteral.java";
  }

  @(ASTDoubleLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTDoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTDoubleLiteralBuilder.class";
  }

  @(ASTDoubleLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTDoubleLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTDoubleLiteralBuilder.java";
  }

  @(ASTFloatLiteral.class):JavaClassFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTFloatLiteral.class";
  }

  @(ASTFloatLiteral.java):JavaSourceFile{
    simpleName = "ASTFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTFloatLiteral.java";
  }

  @(ASTFloatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTFloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTFloatLiteralBuilder.class";
  }

  @(ASTFloatLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTFloatLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTFloatLiteralBuilder.java";
  }

  @(ASTIntLiteral.class):JavaClassFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTIntLiteral.class";
  }

  @(ASTIntLiteral.java):JavaSourceFile{
    simpleName = "ASTIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTIntLiteral.java";
  }

  @(ASTIntLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTIntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTIntLiteralBuilder.class";
  }

  @(ASTIntLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTIntLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTIntLiteralBuilder.java";
  }

  @(ASTLiteral.class):JavaClassFile{
    simpleName = "ASTLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLiteral.class";
  }

  @(ASTLiteral.java):JavaSourceFile{
    simpleName = "ASTLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLiteral.java";
  }

  @(ASTLongLiteral.class):JavaClassFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLongLiteral.class";
  }

  @(ASTLongLiteral.java):JavaSourceFile{
    simpleName = "ASTLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLongLiteral.java";
  }

  @(ASTLongLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTLongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLongLiteralBuilder.class";
  }

  @(ASTLongLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTLongLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTLongLiteralBuilder.java";
  }

  @(ASTNullLiteral.class):JavaClassFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNullLiteral.class";
  }

  @(ASTNullLiteral.java):JavaSourceFile{
    simpleName = "ASTNullLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNullLiteral.java";
  }

  @(ASTNullLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTNullLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNullLiteralBuilder.class";
  }

  @(ASTNullLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTNullLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNullLiteralBuilder.java";
  }

  @(ASTNumericLiteral.class):JavaClassFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNumericLiteral.class";
  }

  @(ASTNumericLiteral.java):JavaSourceFile{
    simpleName = "ASTNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTNumericLiteral.java";
  }

  @(ASTSignedDoubleLiteral.class):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedDoubleLiteral.class";
  }

  @(ASTSignedDoubleLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedDoubleLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedDoubleLiteral.java";
  }

  @(ASTSignedDoubleLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedDoubleLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedDoubleLiteralBuilder.class";
  }

  @(ASTSignedDoubleLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTSignedDoubleLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedDoubleLiteralBuilder.java";
  }

  @(ASTSignedFloatLiteral.class):JavaClassFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedFloatLiteral.class";
  }

  @(ASTSignedFloatLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedFloatLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedFloatLiteral.java";
  }

  @(ASTSignedFloatLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedFloatLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedFloatLiteralBuilder.class";
  }

  @(ASTSignedFloatLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTSignedFloatLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedFloatLiteralBuilder.java";
  }

  @(ASTSignedIntLiteral.class):JavaClassFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedIntLiteral.class";
  }

  @(ASTSignedIntLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedIntLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedIntLiteral.java";
  }

  @(ASTSignedIntLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedIntLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedIntLiteralBuilder.class";
  }

  @(ASTSignedIntLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTSignedIntLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedIntLiteralBuilder.java";
  }

  @(ASTSignedLiteral.class):JavaClassFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLiteral.class";
  }

  @(ASTSignedLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLiteral.java";
  }

  @(ASTSignedLongLiteral.class):JavaClassFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLongLiteral.class";
  }

  @(ASTSignedLongLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedLongLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLongLiteral.java";
  }

  @(ASTSignedLongLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTSignedLongLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLongLiteralBuilder.class";
  }

  @(ASTSignedLongLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTSignedLongLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedLongLiteralBuilder.java";
  }

  @(ASTSignedNumericLiteral.class):JavaClassFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedNumericLiteral.class";
  }

  @(ASTSignedNumericLiteral.java):JavaSourceFile{
    simpleName = "ASTSignedNumericLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTSignedNumericLiteral.java";
  }

  @(ASTStringLiteral.class):JavaClassFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTStringLiteral.class";
  }

  @(ASTStringLiteral.java):JavaSourceFile{
    simpleName = "ASTStringLiteral";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTStringLiteral.java";
  }

  @(ASTStringLiteralBuilder.class):JavaClassFile{
    simpleName = "ASTStringLiteralBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTStringLiteralBuilder.class";
  }

  @(ASTStringLiteralBuilder.java):JavaSourceFile{
    simpleName = "ASTStringLiteralBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTStringLiteralBuilder.java";
  }

  @(ASTTestLiteralsNode.class):JavaClassFile{
    simpleName = "ASTTestLiteralsNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTTestLiteralsNode.class";
  }

  @(ASTTestLiteralsNode.java):JavaSourceFile{
    simpleName = "ASTTestLiteralsNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/ASTTestLiteralsNode.java";
  }

  @(TestLiteralsLiterals.class):JavaClassFile{
    simpleName = "TestLiteralsLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsLiterals.class";
  }

  @(TestLiteralsLiterals.java):JavaSourceFile{
    simpleName = "TestLiteralsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsLiterals.java";
  }

  @(TestLiteralsMill.class):JavaClassFile{
    simpleName = "TestLiteralsMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsMill.class";
  }

  @(TestLiteralsMill.java):JavaSourceFile{
    simpleName = "TestLiteralsMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsMill.java";
  }

  @(TestLiteralsNodeFactory.class):JavaClassFile{
    simpleName = "TestLiteralsNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsNodeFactory.class";
  }

  @(TestLiteralsNodeFactory.java):JavaSourceFile{
    simpleName = "TestLiteralsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_ast/TestLiteralsNodeFactory.java";
  }

  @(_cocos!33):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos";
  }

  @(TestLiteralsASTBooleanLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTBooleanLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTBooleanLiteralCoCo.class";
  }

  @(TestLiteralsASTBooleanLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTBooleanLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTBooleanLiteralCoCo.java";
  }

  @(TestLiteralsASTCharLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTCharLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTCharLiteralCoCo.class";
  }

  @(TestLiteralsASTCharLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTCharLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTCharLiteralCoCo.java";
  }

  @(TestLiteralsASTDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTDoubleLiteralCoCo.class";
  }

  @(TestLiteralsASTDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTDoubleLiteralCoCo.java";
  }

  @(TestLiteralsASTFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTFloatLiteralCoCo.class";
  }

  @(TestLiteralsASTFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTFloatLiteralCoCo.java";
  }

  @(TestLiteralsASTIntLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTIntLiteralCoCo.class";
  }

  @(TestLiteralsASTIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTIntLiteralCoCo.java";
  }

  @(TestLiteralsASTLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTLiteralCoCo.class";
  }

  @(TestLiteralsASTLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTLiteralCoCo.java";
  }

  @(TestLiteralsASTLongLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTLongLiteralCoCo.class";
  }

  @(TestLiteralsASTLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTLongLiteralCoCo.java";
  }

  @(TestLiteralsASTNullLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTNullLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTNullLiteralCoCo.class";
  }

  @(TestLiteralsASTNullLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTNullLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTNullLiteralCoCo.java";
  }

  @(TestLiteralsASTNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTNumericLiteralCoCo.class";
  }

  @(TestLiteralsASTNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTNumericLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedDoubleLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedDoubleLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedDoubleLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedDoubleLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedDoubleLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedFloatLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedFloatLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedFloatLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedFloatLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedFloatLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedIntLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedIntLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedIntLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedIntLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedIntLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedIntLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedLongLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedLongLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedLongLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedLongLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedLongLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedLongLiteralCoCo.java";
  }

  @(TestLiteralsASTSignedNumericLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedNumericLiteralCoCo.class";
  }

  @(TestLiteralsASTSignedNumericLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTSignedNumericLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTSignedNumericLiteralCoCo.java";
  }

  @(TestLiteralsASTStringLiteralCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTStringLiteralCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTStringLiteralCoCo.class";
  }

  @(TestLiteralsASTStringLiteralCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTStringLiteralCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTStringLiteralCoCo.java";
  }

  @(TestLiteralsASTTestLiteralsNodeCoCo.class):JavaClassFile{
    simpleName = "TestLiteralsASTTestLiteralsNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTTestLiteralsNodeCoCo.class";
  }

  @(TestLiteralsASTTestLiteralsNodeCoCo.java):JavaSourceFile{
    simpleName = "TestLiteralsASTTestLiteralsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsASTTestLiteralsNodeCoCo.java";
  }

  @(TestLiteralsCoCoChecker.class):JavaClassFile{
    simpleName = "TestLiteralsCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsCoCoChecker.class";
  }

  @(TestLiteralsCoCoChecker.java):JavaSourceFile{
    simpleName = "TestLiteralsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_cocos/TestLiteralsCoCoChecker.java";
  }

  @(_od!33):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_od";
  }

  @(TestLiterals2OD.class):JavaClassFile{
    simpleName = "TestLiterals2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_od/TestLiterals2OD.class";
  }

  @(TestLiterals2OD.java):JavaSourceFile{
    simpleName = "TestLiterals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_od/TestLiterals2OD.java";
  }

  @(_visitor!33):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor";
  }

  @(TestLiteralsDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestLiteralsDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsDelegatorVisitor.class";
  }

  @(TestLiteralsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestLiteralsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsDelegatorVisitor.java";
  }

  @(TestLiteralsInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestLiteralsInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsInheritanceVisitor.class";
  }

  @(TestLiteralsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestLiteralsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsInheritanceVisitor.java";
  }

  @(TestLiteralsParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestLiteralsParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsParentAwareVisitor.class";
  }

  @(TestLiteralsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestLiteralsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsParentAwareVisitor.java";
  }

  @(TestLiteralsVisitor.class):JavaClassFile{
    simpleName = "TestLiteralsVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsVisitor.class";
  }

  @(TestLiteralsVisitor.java):JavaSourceFile{
    simpleName = "TestLiteralsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/literals/testliterals/_visitor/TestLiteralsVisitor.java";
  }

  @(testjavadsl):Directory{
    simpleName = "testjavadsl";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl";
  }

  @(_ast!40):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast";
  }

  @(ASTAnnotation.class):JavaClassFile{
    simpleName = "ASTAnnotation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotation.class";
  }

  @(ASTAnnotation.java):JavaSourceFile{
    simpleName = "ASTAnnotation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotation.java";
  }

  @(ASTAnnotationArguments.class):JavaClassFile{
    simpleName = "ASTAnnotationArguments";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationArguments.class";
  }

  @(ASTAnnotationArguments.java):JavaSourceFile{
    simpleName = "ASTAnnotationArguments";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationArguments.java";
  }

  @(ASTAnnotationBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationBuilder.class";
  }

  @(ASTAnnotationBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationBuilder.java";
  }

  @(ASTAnnotationConstant.class):JavaClassFile{
    simpleName = "ASTAnnotationConstant";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationConstant.class";
  }

  @(ASTAnnotationConstant.java):JavaSourceFile{
    simpleName = "ASTAnnotationConstant";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationConstant.java";
  }

  @(ASTAnnotationConstantBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationConstantBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationConstantBuilder.class";
  }

  @(ASTAnnotationConstantBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationConstantBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationConstantBuilder.java";
  }

  @(ASTAnnotationMethod.class):JavaClassFile{
    simpleName = "ASTAnnotationMethod";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationMethod.class";
  }

  @(ASTAnnotationMethod.java):JavaSourceFile{
    simpleName = "ASTAnnotationMethod";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationMethod.java";
  }

  @(ASTAnnotationMethodBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationMethodBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationMethodBuilder.class";
  }

  @(ASTAnnotationMethodBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationMethodBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationMethodBuilder.java";
  }

  @(ASTAnnotationPairArguments.class):JavaClassFile{
    simpleName = "ASTAnnotationPairArguments";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationPairArguments.class";
  }

  @(ASTAnnotationPairArguments.java):JavaSourceFile{
    simpleName = "ASTAnnotationPairArguments";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationPairArguments.java";
  }

  @(ASTAnnotationPairArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationPairArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationPairArgumentsBuilder.class";
  }

  @(ASTAnnotationPairArgumentsBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationPairArgumentsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationPairArgumentsBuilder.java";
  }

  @(ASTAnnotationTypeBody.class):JavaClassFile{
    simpleName = "ASTAnnotationTypeBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeBody.class";
  }

  @(ASTAnnotationTypeBody.java):JavaSourceFile{
    simpleName = "ASTAnnotationTypeBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeBody.java";
  }

  @(ASTAnnotationTypeBodyBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationTypeBodyBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeBodyBuilder.class";
  }

  @(ASTAnnotationTypeBodyBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationTypeBodyBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeBodyBuilder.java";
  }

  @(ASTAnnotationTypeDeclaration.class):JavaClassFile{
    simpleName = "ASTAnnotationTypeDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeDeclaration.class";
  }

  @(ASTAnnotationTypeDeclaration.java):JavaSourceFile{
    simpleName = "ASTAnnotationTypeDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeDeclaration.java";
  }

  @(ASTAnnotationTypeDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTAnnotationTypeDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeDeclarationBuilder.class";
  }

  @(ASTAnnotationTypeDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTAnnotationTypeDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeDeclarationBuilder.java";
  }

  @(ASTAnnotationTypeElementDeclaration.class):JavaClassFile{
    simpleName = "ASTAnnotationTypeElementDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeElementDeclaration.class";
  }

  @(ASTAnnotationTypeElementDeclaration.java):JavaSourceFile{
    simpleName = "ASTAnnotationTypeElementDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnnotationTypeElementDeclaration.java";
  }

  @(ASTAnonymousClass.class):JavaClassFile{
    simpleName = "ASTAnonymousClass";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnonymousClass.class";
  }

  @(ASTAnonymousClass.java):JavaSourceFile{
    simpleName = "ASTAnonymousClass";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnonymousClass.java";
  }

  @(ASTAnonymousClassBuilder.class):JavaClassFile{
    simpleName = "ASTAnonymousClassBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnonymousClassBuilder.class";
  }

  @(ASTAnonymousClassBuilder.java):JavaSourceFile{
    simpleName = "ASTAnonymousClassBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAnonymousClassBuilder.java";
  }

  @(ASTArguments.class):JavaClassFile{
    simpleName = "ASTArguments";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArguments.class";
  }

  @(ASTArguments.java):JavaSourceFile{
    simpleName = "ASTArguments";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArguments.java";
  }

  @(ASTArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArgumentsBuilder.class";
  }

  @(ASTArgumentsBuilder.java):JavaSourceFile{
    simpleName = "ASTArgumentsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArgumentsBuilder.java";
  }

  @(ASTArrayCreator.class):JavaClassFile{
    simpleName = "ASTArrayCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayCreator.class";
  }

  @(ASTArrayCreator.java):JavaSourceFile{
    simpleName = "ASTArrayCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayCreator.java";
  }

  @(ASTArrayCreatorBuilder.class):JavaClassFile{
    simpleName = "ASTArrayCreatorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayCreatorBuilder.class";
  }

  @(ASTArrayCreatorBuilder.java):JavaSourceFile{
    simpleName = "ASTArrayCreatorBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayCreatorBuilder.java";
  }

  @(ASTArrayDimensionByExpression.class):JavaClassFile{
    simpleName = "ASTArrayDimensionByExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByExpression.class";
  }

  @(ASTArrayDimensionByExpression.java):JavaSourceFile{
    simpleName = "ASTArrayDimensionByExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByExpression.java";
  }

  @(ASTArrayDimensionByExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTArrayDimensionByExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByExpressionBuilder.class";
  }

  @(ASTArrayDimensionByExpressionBuilder.java):JavaSourceFile{
    simpleName = "ASTArrayDimensionByExpressionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByExpressionBuilder.java";
  }

  @(ASTArrayDimensionByInitializer.class):JavaClassFile{
    simpleName = "ASTArrayDimensionByInitializer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByInitializer.class";
  }

  @(ASTArrayDimensionByInitializer.java):JavaSourceFile{
    simpleName = "ASTArrayDimensionByInitializer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByInitializer.java";
  }

  @(ASTArrayDimensionByInitializerBuilder.class):JavaClassFile{
    simpleName = "ASTArrayDimensionByInitializerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByInitializerBuilder.class";
  }

  @(ASTArrayDimensionByInitializerBuilder.java):JavaSourceFile{
    simpleName = "ASTArrayDimensionByInitializerBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionByInitializerBuilder.java";
  }

  @(ASTArrayDimensionSpecifier.class):JavaClassFile{
    simpleName = "ASTArrayDimensionSpecifier";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionSpecifier.class";
  }

  @(ASTArrayDimensionSpecifier.java):JavaSourceFile{
    simpleName = "ASTArrayDimensionSpecifier";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayDimensionSpecifier.java";
  }

  @(ASTArrayInitializer.class):JavaClassFile{
    simpleName = "ASTArrayInitializer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayInitializer.class";
  }

  @(ASTArrayInitializer.java):JavaSourceFile{
    simpleName = "ASTArrayInitializer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayInitializer.java";
  }

  @(ASTArrayInitializerBuilder.class):JavaClassFile{
    simpleName = "ASTArrayInitializerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayInitializerBuilder.class";
  }

  @(ASTArrayInitializerBuilder.java):JavaSourceFile{
    simpleName = "ASTArrayInitializerBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTArrayInitializerBuilder.java";
  }

  @(ASTAssertStatement.class):JavaClassFile{
    simpleName = "ASTAssertStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAssertStatement.class";
  }

  @(ASTAssertStatement.java):JavaSourceFile{
    simpleName = "ASTAssertStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAssertStatement.java";
  }

  @(ASTAssertStatementBuilder.class):JavaClassFile{
    simpleName = "ASTAssertStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAssertStatementBuilder.class";
  }

  @(ASTAssertStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTAssertStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTAssertStatementBuilder.java";
  }

  @(ASTBlockStatement.class):JavaClassFile{
    simpleName = "ASTBlockStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBlockStatement.class";
  }

  @(ASTBlockStatement.java):JavaSourceFile{
    simpleName = "ASTBlockStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBlockStatement.java";
  }

  @(ASTBreakStatement.class):JavaClassFile{
    simpleName = "ASTBreakStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBreakStatement.class";
  }

  @(ASTBreakStatement.java):JavaSourceFile{
    simpleName = "ASTBreakStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBreakStatement.java";
  }

  @(ASTBreakStatementBuilder.class):JavaClassFile{
    simpleName = "ASTBreakStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBreakStatementBuilder.class";
  }

  @(ASTBreakStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTBreakStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTBreakStatementBuilder.java";
  }

  @(ASTCatchClause.class):JavaClassFile{
    simpleName = "ASTCatchClause";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchClause.class";
  }

  @(ASTCatchClause.java):JavaSourceFile{
    simpleName = "ASTCatchClause";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchClause.java";
  }

  @(ASTCatchClauseBuilder.class):JavaClassFile{
    simpleName = "ASTCatchClauseBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchClauseBuilder.class";
  }

  @(ASTCatchClauseBuilder.java):JavaSourceFile{
    simpleName = "ASTCatchClauseBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchClauseBuilder.java";
  }

  @(ASTCatchExceptionsHandler.class):JavaClassFile{
    simpleName = "ASTCatchExceptionsHandler";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchExceptionsHandler.class";
  }

  @(ASTCatchExceptionsHandler.java):JavaSourceFile{
    simpleName = "ASTCatchExceptionsHandler";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchExceptionsHandler.java";
  }

  @(ASTCatchExceptionsHandlerBuilder.class):JavaClassFile{
    simpleName = "ASTCatchExceptionsHandlerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchExceptionsHandlerBuilder.class";
  }

  @(ASTCatchExceptionsHandlerBuilder.java):JavaSourceFile{
    simpleName = "ASTCatchExceptionsHandlerBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchExceptionsHandlerBuilder.java";
  }

  @(ASTCatchType.class):JavaClassFile{
    simpleName = "ASTCatchType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchType.class";
  }

  @(ASTCatchType.java):JavaSourceFile{
    simpleName = "ASTCatchType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchType.java";
  }

  @(ASTCatchTypeBuilder.class):JavaClassFile{
    simpleName = "ASTCatchTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchTypeBuilder.class";
  }

  @(ASTCatchTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTCatchTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCatchTypeBuilder.java";
  }

  @(ASTClassBlock.class):JavaClassFile{
    simpleName = "ASTClassBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBlock.class";
  }

  @(ASTClassBlock.java):JavaSourceFile{
    simpleName = "ASTClassBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBlock.java";
  }

  @(ASTClassBlockBuilder.class):JavaClassFile{
    simpleName = "ASTClassBlockBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBlockBuilder.class";
  }

  @(ASTClassBlockBuilder.java):JavaSourceFile{
    simpleName = "ASTClassBlockBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBlockBuilder.java";
  }

  @(ASTClassBody.class):JavaClassFile{
    simpleName = "ASTClassBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBody.class";
  }

  @(ASTClassBody.java):JavaSourceFile{
    simpleName = "ASTClassBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBody.java";
  }

  @(ASTClassBodyBuilder.class):JavaClassFile{
    simpleName = "ASTClassBodyBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBodyBuilder.class";
  }

  @(ASTClassBodyBuilder.java):JavaSourceFile{
    simpleName = "ASTClassBodyBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBodyBuilder.java";
  }

  @(ASTClassBodyDeclaration.class):JavaClassFile{
    simpleName = "ASTClassBodyDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBodyDeclaration.class";
  }

  @(ASTClassBodyDeclaration.java):JavaSourceFile{
    simpleName = "ASTClassBodyDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassBodyDeclaration.java";
  }

  @(ASTClassCreatorRest.class):JavaClassFile{
    simpleName = "ASTClassCreatorRest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassCreatorRest.class";
  }

  @(ASTClassCreatorRest.java):JavaSourceFile{
    simpleName = "ASTClassCreatorRest";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassCreatorRest.java";
  }

  @(ASTClassCreatorRestBuilder.class):JavaClassFile{
    simpleName = "ASTClassCreatorRestBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassCreatorRestBuilder.class";
  }

  @(ASTClassCreatorRestBuilder.java):JavaSourceFile{
    simpleName = "ASTClassCreatorRestBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassCreatorRestBuilder.java";
  }

  @(ASTClassDeclaration.class):JavaClassFile{
    simpleName = "ASTClassDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassDeclaration.class";
  }

  @(ASTClassDeclaration.java):JavaSourceFile{
    simpleName = "ASTClassDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassDeclaration.java";
  }

  @(ASTClassDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTClassDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassDeclarationBuilder.class";
  }

  @(ASTClassDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTClassDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassDeclarationBuilder.java";
  }

  @(ASTClassMemberDeclaration.class):JavaClassFile{
    simpleName = "ASTClassMemberDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassMemberDeclaration.class";
  }

  @(ASTClassMemberDeclaration.java):JavaSourceFile{
    simpleName = "ASTClassMemberDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassMemberDeclaration.java";
  }

  @(ASTClassOrInterfaceType.class):JavaClassFile{
    simpleName = "ASTClassOrInterfaceType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassOrInterfaceType.class";
  }

  @(ASTClassOrInterfaceType.java):JavaSourceFile{
    simpleName = "ASTClassOrInterfaceType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassOrInterfaceType.java";
  }

  @(ASTClassOrInterfaceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTClassOrInterfaceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassOrInterfaceTypeBuilder.class";
  }

  @(ASTClassOrInterfaceTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTClassOrInterfaceTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTClassOrInterfaceTypeBuilder.java";
  }

  @(ASTCommonForControl.class):JavaClassFile{
    simpleName = "ASTCommonForControl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCommonForControl.class";
  }

  @(ASTCommonForControl.java):JavaSourceFile{
    simpleName = "ASTCommonForControl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCommonForControl.java";
  }

  @(ASTCommonForControlBuilder.class):JavaClassFile{
    simpleName = "ASTCommonForControlBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCommonForControlBuilder.class";
  }

  @(ASTCommonForControlBuilder.java):JavaSourceFile{
    simpleName = "ASTCommonForControlBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCommonForControlBuilder.java";
  }

  @(ASTCompilationUnit.class):JavaClassFile{
    simpleName = "ASTCompilationUnit";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCompilationUnit.class";
  }

  @(ASTCompilationUnit.java):JavaSourceFile{
    simpleName = "ASTCompilationUnit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCompilationUnit.java";
  }

  @(ASTCompilationUnitBuilder.class):JavaClassFile{
    simpleName = "ASTCompilationUnitBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCompilationUnitBuilder.class";
  }

  @(ASTCompilationUnitBuilder.java):JavaSourceFile{
    simpleName = "ASTCompilationUnitBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCompilationUnitBuilder.java";
  }

  @(ASTConstantDeclarator.class):JavaClassFile{
    simpleName = "ASTConstantDeclarator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantDeclarator.class";
  }

  @(ASTConstantDeclarator.java):JavaSourceFile{
    simpleName = "ASTConstantDeclarator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantDeclarator.java";
  }

  @(ASTConstantDeclaratorBuilder.class):JavaClassFile{
    simpleName = "ASTConstantDeclaratorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantDeclaratorBuilder.class";
  }

  @(ASTConstantDeclaratorBuilder.java):JavaSourceFile{
    simpleName = "ASTConstantDeclaratorBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantDeclaratorBuilder.java";
  }

  @(ASTConstantExpressionSwitchLabel.class):JavaClassFile{
    simpleName = "ASTConstantExpressionSwitchLabel";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantExpressionSwitchLabel.class";
  }

  @(ASTConstantExpressionSwitchLabel.java):JavaSourceFile{
    simpleName = "ASTConstantExpressionSwitchLabel";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantExpressionSwitchLabel.java";
  }

  @(ASTConstantExpressionSwitchLabelBuilder.class):JavaClassFile{
    simpleName = "ASTConstantExpressionSwitchLabelBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantExpressionSwitchLabelBuilder.class";
  }

  @(ASTConstantExpressionSwitchLabelBuilder.java):JavaSourceFile{
    simpleName = "ASTConstantExpressionSwitchLabelBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantExpressionSwitchLabelBuilder.java";
  }

  @(ASTConstantsTestJavaDSL.class):JavaClassFile{
    simpleName = "ASTConstantsTestJavaDSL";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantsTestJavaDSL.class";
  }

  @(ASTConstantsTestJavaDSL.java):JavaSourceFile{
    simpleName = "ASTConstantsTestJavaDSL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstantsTestJavaDSL.java";
  }

  @(ASTConstDeclaration.class):JavaClassFile{
    simpleName = "ASTConstDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstDeclaration.class";
  }

  @(ASTConstDeclaration.java):JavaSourceFile{
    simpleName = "ASTConstDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstDeclaration.java";
  }

  @(ASTConstDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTConstDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstDeclarationBuilder.class";
  }

  @(ASTConstDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTConstDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstDeclarationBuilder.java";
  }

  @(ASTConstructorBody.class):JavaClassFile{
    simpleName = "ASTConstructorBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorBody.class";
  }

  @(ASTConstructorBody.java):JavaSourceFile{
    simpleName = "ASTConstructorBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorBody.java";
  }

  @(ASTConstructorDeclaration.class):JavaClassFile{
    simpleName = "ASTConstructorDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorDeclaration.class";
  }

  @(ASTConstructorDeclaration.java):JavaSourceFile{
    simpleName = "ASTConstructorDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorDeclaration.java";
  }

  @(ASTConstructorDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTConstructorDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorDeclarationBuilder.class";
  }

  @(ASTConstructorDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTConstructorDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTConstructorDeclarationBuilder.java";
  }

  @(ASTContinueStatement.class):JavaClassFile{
    simpleName = "ASTContinueStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTContinueStatement.class";
  }

  @(ASTContinueStatement.java):JavaSourceFile{
    simpleName = "ASTContinueStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTContinueStatement.java";
  }

  @(ASTContinueStatementBuilder.class):JavaClassFile{
    simpleName = "ASTContinueStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTContinueStatementBuilder.class";
  }

  @(ASTContinueStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTContinueStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTContinueStatementBuilder.java";
  }

  @(ASTCreatedName.class):JavaClassFile{
    simpleName = "ASTCreatedName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreatedName.class";
  }

  @(ASTCreatedName.java):JavaSourceFile{
    simpleName = "ASTCreatedName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreatedName.java";
  }

  @(ASTCreatedNameBuilder.class):JavaClassFile{
    simpleName = "ASTCreatedNameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreatedNameBuilder.class";
  }

  @(ASTCreatedNameBuilder.java):JavaSourceFile{
    simpleName = "ASTCreatedNameBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreatedNameBuilder.java";
  }

  @(ASTCreator.class):JavaClassFile{
    simpleName = "ASTCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreator.class";
  }

  @(ASTCreator.java):JavaSourceFile{
    simpleName = "ASTCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTCreator.java";
  }

  @(ASTDeclaratorId.class):JavaClassFile{
    simpleName = "ASTDeclaratorId";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDeclaratorId.class";
  }

  @(ASTDeclaratorId.java):JavaSourceFile{
    simpleName = "ASTDeclaratorId";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDeclaratorId.java";
  }

  @(ASTDeclaratorIdBuilder.class):JavaClassFile{
    simpleName = "ASTDeclaratorIdBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDeclaratorIdBuilder.class";
  }

  @(ASTDeclaratorIdBuilder.java):JavaSourceFile{
    simpleName = "ASTDeclaratorIdBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDeclaratorIdBuilder.java";
  }

  @(ASTDefaultSwitchLabel.class):JavaClassFile{
    simpleName = "ASTDefaultSwitchLabel";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultSwitchLabel.class";
  }

  @(ASTDefaultSwitchLabel.java):JavaSourceFile{
    simpleName = "ASTDefaultSwitchLabel";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultSwitchLabel.java";
  }

  @(ASTDefaultSwitchLabelBuilder.class):JavaClassFile{
    simpleName = "ASTDefaultSwitchLabelBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultSwitchLabelBuilder.class";
  }

  @(ASTDefaultSwitchLabelBuilder.java):JavaSourceFile{
    simpleName = "ASTDefaultSwitchLabelBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultSwitchLabelBuilder.java";
  }

  @(ASTDefaultValue.class):JavaClassFile{
    simpleName = "ASTDefaultValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultValue.class";
  }

  @(ASTDefaultValue.java):JavaSourceFile{
    simpleName = "ASTDefaultValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultValue.java";
  }

  @(ASTDefaultValueBuilder.class):JavaClassFile{
    simpleName = "ASTDefaultValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultValueBuilder.class";
  }

  @(ASTDefaultValueBuilder.java):JavaSourceFile{
    simpleName = "ASTDefaultValueBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDefaultValueBuilder.java";
  }

  @(ASTDoWhileStatement.class):JavaClassFile{
    simpleName = "ASTDoWhileStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDoWhileStatement.class";
  }

  @(ASTDoWhileStatement.java):JavaSourceFile{
    simpleName = "ASTDoWhileStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDoWhileStatement.java";
  }

  @(ASTDoWhileStatementBuilder.class):JavaClassFile{
    simpleName = "ASTDoWhileStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDoWhileStatementBuilder.class";
  }

  @(ASTDoWhileStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTDoWhileStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTDoWhileStatementBuilder.java";
  }

  @(ASTElementValue.class):JavaClassFile{
    simpleName = "ASTElementValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValue.class";
  }

  @(ASTElementValue.java):JavaSourceFile{
    simpleName = "ASTElementValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValue.java";
  }

  @(ASTElementValueArrayInitializer.class):JavaClassFile{
    simpleName = "ASTElementValueArrayInitializer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValueArrayInitializer.class";
  }

  @(ASTElementValueArrayInitializer.java):JavaSourceFile{
    simpleName = "ASTElementValueArrayInitializer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValueArrayInitializer.java";
  }

  @(ASTElementValueArrayInitializerBuilder.class):JavaClassFile{
    simpleName = "ASTElementValueArrayInitializerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValueArrayInitializerBuilder.class";
  }

  @(ASTElementValueArrayInitializerBuilder.java):JavaSourceFile{
    simpleName = "ASTElementValueArrayInitializerBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValueArrayInitializerBuilder.java";
  }

  @(ASTElementValuePair.class):JavaClassFile{
    simpleName = "ASTElementValuePair";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValuePair.class";
  }

  @(ASTElementValuePair.java):JavaSourceFile{
    simpleName = "ASTElementValuePair";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValuePair.java";
  }

  @(ASTElementValuePairBuilder.class):JavaClassFile{
    simpleName = "ASTElementValuePairBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValuePairBuilder.class";
  }

  @(ASTElementValuePairBuilder.java):JavaSourceFile{
    simpleName = "ASTElementValuePairBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTElementValuePairBuilder.java";
  }

  @(ASTEmptyDeclaration.class):JavaClassFile{
    simpleName = "ASTEmptyDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyDeclaration.class";
  }

  @(ASTEmptyDeclaration.java):JavaSourceFile{
    simpleName = "ASTEmptyDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyDeclaration.java";
  }

  @(ASTEmptyDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTEmptyDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyDeclarationBuilder.class";
  }

  @(ASTEmptyDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTEmptyDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyDeclarationBuilder.java";
  }

  @(ASTEmptyStatement.class):JavaClassFile{
    simpleName = "ASTEmptyStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyStatement.class";
  }

  @(ASTEmptyStatement.java):JavaSourceFile{
    simpleName = "ASTEmptyStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyStatement.java";
  }

  @(ASTEmptyStatementBuilder.class):JavaClassFile{
    simpleName = "ASTEmptyStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyStatementBuilder.class";
  }

  @(ASTEmptyStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTEmptyStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEmptyStatementBuilder.java";
  }

  @(ASTEnhancedForControl.class):JavaClassFile{
    simpleName = "ASTEnhancedForControl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnhancedForControl.class";
  }

  @(ASTEnhancedForControl.java):JavaSourceFile{
    simpleName = "ASTEnhancedForControl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnhancedForControl.java";
  }

  @(ASTEnhancedForControlBuilder.class):JavaClassFile{
    simpleName = "ASTEnhancedForControlBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnhancedForControlBuilder.class";
  }

  @(ASTEnhancedForControlBuilder.java):JavaSourceFile{
    simpleName = "ASTEnhancedForControlBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnhancedForControlBuilder.java";
  }

  @(ASTEnumBody.class):JavaClassFile{
    simpleName = "ASTEnumBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumBody.class";
  }

  @(ASTEnumBody.java):JavaSourceFile{
    simpleName = "ASTEnumBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumBody.java";
  }

  @(ASTEnumBodyBuilder.class):JavaClassFile{
    simpleName = "ASTEnumBodyBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumBodyBuilder.class";
  }

  @(ASTEnumBodyBuilder.java):JavaSourceFile{
    simpleName = "ASTEnumBodyBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumBodyBuilder.java";
  }

  @(ASTEnumConstantDeclaration.class):JavaClassFile{
    simpleName = "ASTEnumConstantDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantDeclaration.class";
  }

  @(ASTEnumConstantDeclaration.java):JavaSourceFile{
    simpleName = "ASTEnumConstantDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantDeclaration.java";
  }

  @(ASTEnumConstantDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTEnumConstantDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantDeclarationBuilder.class";
  }

  @(ASTEnumConstantDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTEnumConstantDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantDeclarationBuilder.java";
  }

  @(ASTEnumConstantSwitchLabel.class):JavaClassFile{
    simpleName = "ASTEnumConstantSwitchLabel";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantSwitchLabel.class";
  }

  @(ASTEnumConstantSwitchLabel.java):JavaSourceFile{
    simpleName = "ASTEnumConstantSwitchLabel";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantSwitchLabel.java";
  }

  @(ASTEnumConstantSwitchLabelBuilder.class):JavaClassFile{
    simpleName = "ASTEnumConstantSwitchLabelBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantSwitchLabelBuilder.class";
  }

  @(ASTEnumConstantSwitchLabelBuilder.java):JavaSourceFile{
    simpleName = "ASTEnumConstantSwitchLabelBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumConstantSwitchLabelBuilder.java";
  }

  @(ASTEnumDeclaration.class):JavaClassFile{
    simpleName = "ASTEnumDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumDeclaration.class";
  }

  @(ASTEnumDeclaration.java):JavaSourceFile{
    simpleName = "ASTEnumDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumDeclaration.java";
  }

  @(ASTEnumDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTEnumDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumDeclarationBuilder.class";
  }

  @(ASTEnumDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTEnumDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTEnumDeclarationBuilder.java";
  }

  @(ASTExceptionHandler.class):JavaClassFile{
    simpleName = "ASTExceptionHandler";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExceptionHandler.class";
  }

  @(ASTExceptionHandler.java):JavaSourceFile{
    simpleName = "ASTExceptionHandler";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExceptionHandler.java";
  }

  @(ASTExplicitGenericInvocation.class):JavaClassFile{
    simpleName = "ASTExplicitGenericInvocation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocation.class";
  }

  @(ASTExplicitGenericInvocation.java):JavaSourceFile{
    simpleName = "ASTExplicitGenericInvocation";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocation.java";
  }

  @(ASTExplicitGenericInvocationBuilder.class):JavaClassFile{
    simpleName = "ASTExplicitGenericInvocationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationBuilder.class";
  }

  @(ASTExplicitGenericInvocationBuilder.java):JavaSourceFile{
    simpleName = "ASTExplicitGenericInvocationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationBuilder.java";
  }

  @(ASTExplicitGenericInvocationSuffix.class):JavaClassFile{
    simpleName = "ASTExplicitGenericInvocationSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationSuffix.class";
  }

  @(ASTExplicitGenericInvocationSuffix.java):JavaSourceFile{
    simpleName = "ASTExplicitGenericInvocationSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationSuffix.java";
  }

  @(ASTExplicitGenericInvocationSuffixBuilder.class):JavaClassFile{
    simpleName = "ASTExplicitGenericInvocationSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationSuffixBuilder.class";
  }

  @(ASTExplicitGenericInvocationSuffixBuilder.java):JavaSourceFile{
    simpleName = "ASTExplicitGenericInvocationSuffixBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExplicitGenericInvocationSuffixBuilder.java";
  }

  @(ASTExpression.class!2):JavaClassFile{
    simpleName = "ASTExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpression.class";
  }

  @(ASTExpression.java!2):JavaSourceFile{
    simpleName = "ASTExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpression.java";
  }

  @(ASTExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionBuilder.class";
  }

  @(ASTExpressionBuilder.java):JavaSourceFile{
    simpleName = "ASTExpressionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionBuilder.java";
  }

  @(ASTExpressionStatement.class):JavaClassFile{
    simpleName = "ASTExpressionStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionStatement.class";
  }

  @(ASTExpressionStatement.java):JavaSourceFile{
    simpleName = "ASTExpressionStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionStatement.java";
  }

  @(ASTExpressionStatementBuilder.class):JavaClassFile{
    simpleName = "ASTExpressionStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionStatementBuilder.class";
  }

  @(ASTExpressionStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTExpressionStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTExpressionStatementBuilder.java";
  }

  @(ASTFieldDeclaration.class):JavaClassFile{
    simpleName = "ASTFieldDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFieldDeclaration.class";
  }

  @(ASTFieldDeclaration.java):JavaSourceFile{
    simpleName = "ASTFieldDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFieldDeclaration.java";
  }

  @(ASTFieldDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTFieldDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFieldDeclarationBuilder.class";
  }

  @(ASTFieldDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTFieldDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFieldDeclarationBuilder.java";
  }

  @(ASTFinallyBlock.class):JavaClassFile{
    simpleName = "ASTFinallyBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlock.class";
  }

  @(ASTFinallyBlock.java):JavaSourceFile{
    simpleName = "ASTFinallyBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlock.java";
  }

  @(ASTFinallyBlockOnlyHandler.class):JavaClassFile{
    simpleName = "ASTFinallyBlockOnlyHandler";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlockOnlyHandler.class";
  }

  @(ASTFinallyBlockOnlyHandler.java):JavaSourceFile{
    simpleName = "ASTFinallyBlockOnlyHandler";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlockOnlyHandler.java";
  }

  @(ASTFinallyBlockOnlyHandlerBuilder.class):JavaClassFile{
    simpleName = "ASTFinallyBlockOnlyHandlerBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlockOnlyHandlerBuilder.class";
  }

  @(ASTFinallyBlockOnlyHandlerBuilder.java):JavaSourceFile{
    simpleName = "ASTFinallyBlockOnlyHandlerBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFinallyBlockOnlyHandlerBuilder.java";
  }

  @(ASTForControl.class):JavaClassFile{
    simpleName = "ASTForControl";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForControl.class";
  }

  @(ASTForControl.java):JavaSourceFile{
    simpleName = "ASTForControl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForControl.java";
  }

  @(ASTForInit.class):JavaClassFile{
    simpleName = "ASTForInit";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInit.class";
  }

  @(ASTForInit.java):JavaSourceFile{
    simpleName = "ASTForInit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInit.java";
  }

  @(ASTForInitByExpressions.class):JavaClassFile{
    simpleName = "ASTForInitByExpressions";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInitByExpressions.class";
  }

  @(ASTForInitByExpressions.java):JavaSourceFile{
    simpleName = "ASTForInitByExpressions";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInitByExpressions.java";
  }

  @(ASTForInitByExpressionsBuilder.class):JavaClassFile{
    simpleName = "ASTForInitByExpressionsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInitByExpressionsBuilder.class";
  }

  @(ASTForInitByExpressionsBuilder.java):JavaSourceFile{
    simpleName = "ASTForInitByExpressionsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForInitByExpressionsBuilder.java";
  }

  @(ASTFormalParameter.class):JavaClassFile{
    simpleName = "ASTFormalParameter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameter.class";
  }

  @(ASTFormalParameter.java):JavaSourceFile{
    simpleName = "ASTFormalParameter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameter.java";
  }

  @(ASTFormalParameterBuilder.class):JavaClassFile{
    simpleName = "ASTFormalParameterBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterBuilder.class";
  }

  @(ASTFormalParameterBuilder.java):JavaSourceFile{
    simpleName = "ASTFormalParameterBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterBuilder.java";
  }

  @(ASTFormalParameterListing.class):JavaClassFile{
    simpleName = "ASTFormalParameterListing";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterListing.class";
  }

  @(ASTFormalParameterListing.java):JavaSourceFile{
    simpleName = "ASTFormalParameterListing";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterListing.java";
  }

  @(ASTFormalParameterListingBuilder.class):JavaClassFile{
    simpleName = "ASTFormalParameterListingBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterListingBuilder.class";
  }

  @(ASTFormalParameterListingBuilder.java):JavaSourceFile{
    simpleName = "ASTFormalParameterListingBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameterListingBuilder.java";
  }

  @(ASTFormalParameters.class):JavaClassFile{
    simpleName = "ASTFormalParameters";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameters.class";
  }

  @(ASTFormalParameters.java):JavaSourceFile{
    simpleName = "ASTFormalParameters";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParameters.java";
  }

  @(ASTFormalParametersBuilder.class):JavaClassFile{
    simpleName = "ASTFormalParametersBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParametersBuilder.class";
  }

  @(ASTFormalParametersBuilder.java):JavaSourceFile{
    simpleName = "ASTFormalParametersBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTFormalParametersBuilder.java";
  }

  @(ASTForStatement.class):JavaClassFile{
    simpleName = "ASTForStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForStatement.class";
  }

  @(ASTForStatement.java):JavaSourceFile{
    simpleName = "ASTForStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForStatement.java";
  }

  @(ASTForStatementBuilder.class):JavaClassFile{
    simpleName = "ASTForStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForStatementBuilder.class";
  }

  @(ASTForStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTForStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTForStatementBuilder.java";
  }

  @(ASTIdentifierAndTypeArgument.class):JavaClassFile{
    simpleName = "ASTIdentifierAndTypeArgument";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIdentifierAndTypeArgument.class";
  }

  @(ASTIdentifierAndTypeArgument.java):JavaSourceFile{
    simpleName = "ASTIdentifierAndTypeArgument";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIdentifierAndTypeArgument.java";
  }

  @(ASTIdentifierAndTypeArgumentBuilder.class):JavaClassFile{
    simpleName = "ASTIdentifierAndTypeArgumentBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIdentifierAndTypeArgumentBuilder.class";
  }

  @(ASTIdentifierAndTypeArgumentBuilder.java):JavaSourceFile{
    simpleName = "ASTIdentifierAndTypeArgumentBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIdentifierAndTypeArgumentBuilder.java";
  }

  @(ASTIfStatement.class):JavaClassFile{
    simpleName = "ASTIfStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIfStatement.class";
  }

  @(ASTIfStatement.java):JavaSourceFile{
    simpleName = "ASTIfStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIfStatement.java";
  }

  @(ASTIfStatementBuilder.class):JavaClassFile{
    simpleName = "ASTIfStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIfStatementBuilder.class";
  }

  @(ASTIfStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTIfStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTIfStatementBuilder.java";
  }

  @(ASTImportDeclaration.class):JavaClassFile{
    simpleName = "ASTImportDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTImportDeclaration.class";
  }

  @(ASTImportDeclaration.java):JavaSourceFile{
    simpleName = "ASTImportDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTImportDeclaration.java";
  }

  @(ASTImportDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTImportDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTImportDeclarationBuilder.class";
  }

  @(ASTImportDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTImportDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTImportDeclarationBuilder.java";
  }

  @(ASTInnerCreator.class):JavaClassFile{
    simpleName = "ASTInnerCreator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInnerCreator.class";
  }

  @(ASTInnerCreator.java):JavaSourceFile{
    simpleName = "ASTInnerCreator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInnerCreator.java";
  }

  @(ASTInnerCreatorBuilder.class):JavaClassFile{
    simpleName = "ASTInnerCreatorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInnerCreatorBuilder.class";
  }

  @(ASTInnerCreatorBuilder.java):JavaSourceFile{
    simpleName = "ASTInnerCreatorBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInnerCreatorBuilder.java";
  }

  @(ASTInterfaceBody.class):JavaClassFile{
    simpleName = "ASTInterfaceBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBody.class";
  }

  @(ASTInterfaceBody.java):JavaSourceFile{
    simpleName = "ASTInterfaceBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBody.java";
  }

  @(ASTInterfaceBodyBuilder.class):JavaClassFile{
    simpleName = "ASTInterfaceBodyBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBodyBuilder.class";
  }

  @(ASTInterfaceBodyBuilder.java):JavaSourceFile{
    simpleName = "ASTInterfaceBodyBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBodyBuilder.java";
  }

  @(ASTInterfaceBodyDeclaration.class):JavaClassFile{
    simpleName = "ASTInterfaceBodyDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBodyDeclaration.class";
  }

  @(ASTInterfaceBodyDeclaration.java):JavaSourceFile{
    simpleName = "ASTInterfaceBodyDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceBodyDeclaration.java";
  }

  @(ASTInterfaceDeclaration.class):JavaClassFile{
    simpleName = "ASTInterfaceDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceDeclaration.class";
  }

  @(ASTInterfaceDeclaration.java):JavaSourceFile{
    simpleName = "ASTInterfaceDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceDeclaration.java";
  }

  @(ASTInterfaceDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTInterfaceDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceDeclarationBuilder.class";
  }

  @(ASTInterfaceDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTInterfaceDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceDeclarationBuilder.java";
  }

  @(ASTInterfaceMemberDeclaration.class):JavaClassFile{
    simpleName = "ASTInterfaceMemberDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMemberDeclaration.class";
  }

  @(ASTInterfaceMemberDeclaration.java):JavaSourceFile{
    simpleName = "ASTInterfaceMemberDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMemberDeclaration.java";
  }

  @(ASTInterfaceMethodDeclaration.class):JavaClassFile{
    simpleName = "ASTInterfaceMethodDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMethodDeclaration.class";
  }

  @(ASTInterfaceMethodDeclaration.java):JavaSourceFile{
    simpleName = "ASTInterfaceMethodDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMethodDeclaration.java";
  }

  @(ASTInterfaceMethodDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTInterfaceMethodDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMethodDeclarationBuilder.class";
  }

  @(ASTInterfaceMethodDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTInterfaceMethodDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTInterfaceMethodDeclarationBuilder.java";
  }

  @(ASTJavaBlock.class):JavaClassFile{
    simpleName = "ASTJavaBlock";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTJavaBlock.class";
  }

  @(ASTJavaBlock.java):JavaSourceFile{
    simpleName = "ASTJavaBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTJavaBlock.java";
  }

  @(ASTJavaBlockBuilder.class):JavaClassFile{
    simpleName = "ASTJavaBlockBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTJavaBlockBuilder.class";
  }

  @(ASTJavaBlockBuilder.java):JavaSourceFile{
    simpleName = "ASTJavaBlockBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTJavaBlockBuilder.java";
  }

  @(ASTLabeledStatement.class):JavaClassFile{
    simpleName = "ASTLabeledStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLabeledStatement.class";
  }

  @(ASTLabeledStatement.java):JavaSourceFile{
    simpleName = "ASTLabeledStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLabeledStatement.java";
  }

  @(ASTLabeledStatementBuilder.class):JavaClassFile{
    simpleName = "ASTLabeledStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLabeledStatementBuilder.class";
  }

  @(ASTLabeledStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTLabeledStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLabeledStatementBuilder.java";
  }

  @(ASTLastFormalParameter.class):JavaClassFile{
    simpleName = "ASTLastFormalParameter";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLastFormalParameter.class";
  }

  @(ASTLastFormalParameter.java):JavaSourceFile{
    simpleName = "ASTLastFormalParameter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLastFormalParameter.java";
  }

  @(ASTLastFormalParameterBuilder.class):JavaClassFile{
    simpleName = "ASTLastFormalParameterBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLastFormalParameterBuilder.class";
  }

  @(ASTLastFormalParameterBuilder.java):JavaSourceFile{
    simpleName = "ASTLastFormalParameterBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLastFormalParameterBuilder.java";
  }

  @(ASTLocalVariableDeclaration.class):JavaClassFile{
    simpleName = "ASTLocalVariableDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclaration.class";
  }

  @(ASTLocalVariableDeclaration.java):JavaSourceFile{
    simpleName = "ASTLocalVariableDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclaration.java";
  }

  @(ASTLocalVariableDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTLocalVariableDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationBuilder.class";
  }

  @(ASTLocalVariableDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTLocalVariableDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationBuilder.java";
  }

  @(ASTLocalVariableDeclarationStatement.class):JavaClassFile{
    simpleName = "ASTLocalVariableDeclarationStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationStatement.class";
  }

  @(ASTLocalVariableDeclarationStatement.java):JavaSourceFile{
    simpleName = "ASTLocalVariableDeclarationStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationStatement.java";
  }

  @(ASTLocalVariableDeclarationStatementBuilder.class):JavaClassFile{
    simpleName = "ASTLocalVariableDeclarationStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationStatementBuilder.class";
  }

  @(ASTLocalVariableDeclarationStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTLocalVariableDeclarationStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTLocalVariableDeclarationStatementBuilder.java";
  }

  @(ASTMethodBody.class):JavaClassFile{
    simpleName = "ASTMethodBody";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodBody.class";
  }

  @(ASTMethodBody.java):JavaSourceFile{
    simpleName = "ASTMethodBody";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodBody.java";
  }

  @(ASTMethodDeclaration.class):JavaClassFile{
    simpleName = "ASTMethodDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodDeclaration.class";
  }

  @(ASTMethodDeclaration.java):JavaSourceFile{
    simpleName = "ASTMethodDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodDeclaration.java";
  }

  @(ASTMethodDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTMethodDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodDeclarationBuilder.class";
  }

  @(ASTMethodDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTMethodDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodDeclarationBuilder.java";
  }

  @(ASTMethodSignature.class):JavaClassFile{
    simpleName = "ASTMethodSignature";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodSignature.class";
  }

  @(ASTMethodSignature.java):JavaSourceFile{
    simpleName = "ASTMethodSignature";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodSignature.java";
  }

  @(ASTMethodSignatureBuilder.class):JavaClassFile{
    simpleName = "ASTMethodSignatureBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodSignatureBuilder.class";
  }

  @(ASTMethodSignatureBuilder.java):JavaSourceFile{
    simpleName = "ASTMethodSignatureBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTMethodSignatureBuilder.java";
  }

  @(ASTModifier.class!2):JavaClassFile{
    simpleName = "ASTModifier";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTModifier.class";
  }

  @(ASTModifier.java!2):JavaSourceFile{
    simpleName = "ASTModifier";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTModifier.java";
  }

  @(ASTPackageDeclaration.class):JavaClassFile{
    simpleName = "ASTPackageDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPackageDeclaration.class";
  }

  @(ASTPackageDeclaration.java):JavaSourceFile{
    simpleName = "ASTPackageDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPackageDeclaration.java";
  }

  @(ASTPackageDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTPackageDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPackageDeclarationBuilder.class";
  }

  @(ASTPackageDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTPackageDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPackageDeclarationBuilder.java";
  }

  @(ASTPrimaryExpression.class):JavaClassFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimaryExpression.class";
  }

  @(ASTPrimaryExpression.java):JavaSourceFile{
    simpleName = "ASTPrimaryExpression";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimaryExpression.java";
  }

  @(ASTPrimaryExpressionBuilder.class):JavaClassFile{
    simpleName = "ASTPrimaryExpressionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimaryExpressionBuilder.class";
  }

  @(ASTPrimaryExpressionBuilder.java):JavaSourceFile{
    simpleName = "ASTPrimaryExpressionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimaryExpressionBuilder.java";
  }

  @(ASTPrimitiveModifier.class):JavaClassFile{
    simpleName = "ASTPrimitiveModifier";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimitiveModifier.class";
  }

  @(ASTPrimitiveModifier.java):JavaSourceFile{
    simpleName = "ASTPrimitiveModifier";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimitiveModifier.java";
  }

  @(ASTPrimitiveModifierBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveModifierBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimitiveModifierBuilder.class";
  }

  @(ASTPrimitiveModifierBuilder.java):JavaSourceFile{
    simpleName = "ASTPrimitiveModifierBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTPrimitiveModifierBuilder.java";
  }

  @(ASTResource.class):JavaClassFile{
    simpleName = "ASTResource";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTResource.class";
  }

  @(ASTResource.java):JavaSourceFile{
    simpleName = "ASTResource";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTResource.java";
  }

  @(ASTResourceBuilder.class):JavaClassFile{
    simpleName = "ASTResourceBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTResourceBuilder.class";
  }

  @(ASTResourceBuilder.java):JavaSourceFile{
    simpleName = "ASTResourceBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTResourceBuilder.java";
  }

  @(ASTReturnStatement.class):JavaClassFile{
    simpleName = "ASTReturnStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTReturnStatement.class";
  }

  @(ASTReturnStatement.java):JavaSourceFile{
    simpleName = "ASTReturnStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTReturnStatement.java";
  }

  @(ASTReturnStatementBuilder.class):JavaClassFile{
    simpleName = "ASTReturnStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTReturnStatementBuilder.class";
  }

  @(ASTReturnStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTReturnStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTReturnStatementBuilder.java";
  }

  @(ASTStatement.class):JavaClassFile{
    simpleName = "ASTStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTStatement.class";
  }

  @(ASTStatement.java):JavaSourceFile{
    simpleName = "ASTStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTStatement.java";
  }

  @(ASTSuperSuffix.class):JavaClassFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSuperSuffix.class";
  }

  @(ASTSuperSuffix.java):JavaSourceFile{
    simpleName = "ASTSuperSuffix";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSuperSuffix.java";
  }

  @(ASTSuperSuffixBuilder.class):JavaClassFile{
    simpleName = "ASTSuperSuffixBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSuperSuffixBuilder.class";
  }

  @(ASTSuperSuffixBuilder.java):JavaSourceFile{
    simpleName = "ASTSuperSuffixBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSuperSuffixBuilder.java";
  }

  @(ASTSwitchBlockStatementGroup.class):JavaClassFile{
    simpleName = "ASTSwitchBlockStatementGroup";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchBlockStatementGroup.class";
  }

  @(ASTSwitchBlockStatementGroup.java):JavaSourceFile{
    simpleName = "ASTSwitchBlockStatementGroup";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchBlockStatementGroup.java";
  }

  @(ASTSwitchBlockStatementGroupBuilder.class):JavaClassFile{
    simpleName = "ASTSwitchBlockStatementGroupBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchBlockStatementGroupBuilder.class";
  }

  @(ASTSwitchBlockStatementGroupBuilder.java):JavaSourceFile{
    simpleName = "ASTSwitchBlockStatementGroupBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchBlockStatementGroupBuilder.java";
  }

  @(ASTSwitchLabel.class):JavaClassFile{
    simpleName = "ASTSwitchLabel";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchLabel.class";
  }

  @(ASTSwitchLabel.java):JavaSourceFile{
    simpleName = "ASTSwitchLabel";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchLabel.java";
  }

  @(ASTSwitchStatement.class):JavaClassFile{
    simpleName = "ASTSwitchStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchStatement.class";
  }

  @(ASTSwitchStatement.java):JavaSourceFile{
    simpleName = "ASTSwitchStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchStatement.java";
  }

  @(ASTSwitchStatementBuilder.class):JavaClassFile{
    simpleName = "ASTSwitchStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchStatementBuilder.class";
  }

  @(ASTSwitchStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTSwitchStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSwitchStatementBuilder.java";
  }

  @(ASTSynchronizedStatement.class):JavaClassFile{
    simpleName = "ASTSynchronizedStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSynchronizedStatement.class";
  }

  @(ASTSynchronizedStatement.java):JavaSourceFile{
    simpleName = "ASTSynchronizedStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSynchronizedStatement.java";
  }

  @(ASTSynchronizedStatementBuilder.class):JavaClassFile{
    simpleName = "ASTSynchronizedStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSynchronizedStatementBuilder.class";
  }

  @(ASTSynchronizedStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTSynchronizedStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTSynchronizedStatementBuilder.java";
  }

  @(ASTTestJavaDSLNode.class):JavaClassFile{
    simpleName = "ASTTestJavaDSLNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTestJavaDSLNode.class";
  }

  @(ASTTestJavaDSLNode.java):JavaSourceFile{
    simpleName = "ASTTestJavaDSLNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTestJavaDSLNode.java";
  }

  @(ASTThrows.class):JavaClassFile{
    simpleName = "ASTThrows";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrows.class";
  }

  @(ASTThrows.java):JavaSourceFile{
    simpleName = "ASTThrows";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrows.java";
  }

  @(ASTThrowsBuilder.class):JavaClassFile{
    simpleName = "ASTThrowsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowsBuilder.class";
  }

  @(ASTThrowsBuilder.java):JavaSourceFile{
    simpleName = "ASTThrowsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowsBuilder.java";
  }

  @(ASTThrowStatement.class):JavaClassFile{
    simpleName = "ASTThrowStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowStatement.class";
  }

  @(ASTThrowStatement.java):JavaSourceFile{
    simpleName = "ASTThrowStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowStatement.java";
  }

  @(ASTThrowStatementBuilder.class):JavaClassFile{
    simpleName = "ASTThrowStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowStatementBuilder.class";
  }

  @(ASTThrowStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTThrowStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTThrowStatementBuilder.java";
  }

  @(ASTTryStatement.class):JavaClassFile{
    simpleName = "ASTTryStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatement.class";
  }

  @(ASTTryStatement.java):JavaSourceFile{
    simpleName = "ASTTryStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatement.java";
  }

  @(ASTTryStatementBuilder.class):JavaClassFile{
    simpleName = "ASTTryStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementBuilder.class";
  }

  @(ASTTryStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTTryStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementBuilder.java";
  }

  @(ASTTryStatementWithResources.class):JavaClassFile{
    simpleName = "ASTTryStatementWithResources";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementWithResources.class";
  }

  @(ASTTryStatementWithResources.java):JavaSourceFile{
    simpleName = "ASTTryStatementWithResources";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementWithResources.java";
  }

  @(ASTTryStatementWithResourcesBuilder.class):JavaClassFile{
    simpleName = "ASTTryStatementWithResourcesBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementWithResourcesBuilder.class";
  }

  @(ASTTryStatementWithResourcesBuilder.java):JavaSourceFile{
    simpleName = "ASTTryStatementWithResourcesBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTryStatementWithResourcesBuilder.java";
  }

  @(ASTTypeDeclaration.class):JavaClassFile{
    simpleName = "ASTTypeDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTypeDeclaration.class";
  }

  @(ASTTypeDeclaration.java):JavaSourceFile{
    simpleName = "ASTTypeDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTTypeDeclaration.java";
  }

  @(ASTVariableDeclarator.class):JavaClassFile{
    simpleName = "ASTVariableDeclarator";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableDeclarator.class";
  }

  @(ASTVariableDeclarator.java):JavaSourceFile{
    simpleName = "ASTVariableDeclarator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableDeclarator.java";
  }

  @(ASTVariableDeclaratorBuilder.class):JavaClassFile{
    simpleName = "ASTVariableDeclaratorBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableDeclaratorBuilder.class";
  }

  @(ASTVariableDeclaratorBuilder.java):JavaSourceFile{
    simpleName = "ASTVariableDeclaratorBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableDeclaratorBuilder.java";
  }

  @(ASTVariableInitializer.class):JavaClassFile{
    simpleName = "ASTVariableInitializer";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableInitializer.class";
  }

  @(ASTVariableInitializer.java):JavaSourceFile{
    simpleName = "ASTVariableInitializer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTVariableInitializer.java";
  }

  @(ASTWhileStatement.class):JavaClassFile{
    simpleName = "ASTWhileStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTWhileStatement.class";
  }

  @(ASTWhileStatement.java):JavaSourceFile{
    simpleName = "ASTWhileStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTWhileStatement.java";
  }

  @(ASTWhileStatementBuilder.class):JavaClassFile{
    simpleName = "ASTWhileStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTWhileStatementBuilder.class";
  }

  @(ASTWhileStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTWhileStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/ASTWhileStatementBuilder.java";
  }

  @(TestJavaDSLLiterals.class):JavaClassFile{
    simpleName = "TestJavaDSLLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLLiterals.class";
  }

  @(TestJavaDSLLiterals.java):JavaSourceFile{
    simpleName = "TestJavaDSLLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLLiterals.java";
  }

  @(TestJavaDSLMill.class):JavaClassFile{
    simpleName = "TestJavaDSLMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLMill.class";
  }

  @(TestJavaDSLMill.java):JavaSourceFile{
    simpleName = "TestJavaDSLMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLMill.java";
  }

  @(TestJavaDSLNodeFactory.class):JavaClassFile{
    simpleName = "TestJavaDSLNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLNodeFactory.class";
  }

  @(TestJavaDSLNodeFactory.java):JavaSourceFile{
    simpleName = "TestJavaDSLNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_ast/TestJavaDSLNodeFactory.java";
  }

  @(_cocos!34):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos";
  }

  @(TestJavaDSLASTAnnotationArgumentsCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationArgumentsCoCo.class";
  }

  @(TestJavaDSLASTAnnotationArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationArgumentsCoCo.java";
  }

  @(TestJavaDSLASTAnnotationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationCoCo.class";
  }

  @(TestJavaDSLASTAnnotationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationCoCo.java";
  }

  @(TestJavaDSLASTAnnotationConstantCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationConstantCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationConstantCoCo.class";
  }

  @(TestJavaDSLASTAnnotationConstantCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationConstantCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationConstantCoCo.java";
  }

  @(TestJavaDSLASTAnnotationMethodCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationMethodCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationMethodCoCo.class";
  }

  @(TestJavaDSLASTAnnotationMethodCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationMethodCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationMethodCoCo.java";
  }

  @(TestJavaDSLASTAnnotationPairArgumentsCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationPairArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationPairArgumentsCoCo.class";
  }

  @(TestJavaDSLASTAnnotationPairArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationPairArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationPairArgumentsCoCo.java";
  }

  @(TestJavaDSLASTAnnotationTypeBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationTypeBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeBodyCoCo.class";
  }

  @(TestJavaDSLASTAnnotationTypeBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationTypeBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeBodyCoCo.java";
  }

  @(TestJavaDSLASTAnnotationTypeDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationTypeDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeDeclarationCoCo.class";
  }

  @(TestJavaDSLASTAnnotationTypeDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationTypeDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeDeclarationCoCo.java";
  }

  @(TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnnotationTypeElementDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.class";
  }

  @(TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnnotationTypeElementDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.java";
  }

  @(TestJavaDSLASTAnonymousClassCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAnonymousClassCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnonymousClassCoCo.class";
  }

  @(TestJavaDSLASTAnonymousClassCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAnonymousClassCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAnonymousClassCoCo.java";
  }

  @(TestJavaDSLASTArgumentsCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArgumentsCoCo.class";
  }

  @(TestJavaDSLASTArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArgumentsCoCo.java";
  }

  @(TestJavaDSLASTArrayCreatorCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArrayCreatorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayCreatorCoCo.class";
  }

  @(TestJavaDSLASTArrayCreatorCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArrayCreatorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayCreatorCoCo.java";
  }

  @(TestJavaDSLASTArrayDimensionByExpressionCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArrayDimensionByExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionByExpressionCoCo.class";
  }

  @(TestJavaDSLASTArrayDimensionByExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArrayDimensionByExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionByExpressionCoCo.java";
  }

  @(TestJavaDSLASTArrayDimensionByInitializerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArrayDimensionByInitializerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionByInitializerCoCo.class";
  }

  @(TestJavaDSLASTArrayDimensionByInitializerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArrayDimensionByInitializerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionByInitializerCoCo.java";
  }

  @(TestJavaDSLASTArrayDimensionSpecifierCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArrayDimensionSpecifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionSpecifierCoCo.class";
  }

  @(TestJavaDSLASTArrayDimensionSpecifierCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArrayDimensionSpecifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayDimensionSpecifierCoCo.java";
  }

  @(TestJavaDSLASTArrayInitializerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTArrayInitializerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayInitializerCoCo.class";
  }

  @(TestJavaDSLASTArrayInitializerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTArrayInitializerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTArrayInitializerCoCo.java";
  }

  @(TestJavaDSLASTAssertStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTAssertStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAssertStatementCoCo.class";
  }

  @(TestJavaDSLASTAssertStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTAssertStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTAssertStatementCoCo.java";
  }

  @(TestJavaDSLASTBlockStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTBlockStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTBlockStatementCoCo.class";
  }

  @(TestJavaDSLASTBlockStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTBlockStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTBlockStatementCoCo.java";
  }

  @(TestJavaDSLASTBreakStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTBreakStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTBreakStatementCoCo.class";
  }

  @(TestJavaDSLASTBreakStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTBreakStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTBreakStatementCoCo.java";
  }

  @(TestJavaDSLASTCatchClauseCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCatchClauseCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchClauseCoCo.class";
  }

  @(TestJavaDSLASTCatchClauseCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCatchClauseCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchClauseCoCo.java";
  }

  @(TestJavaDSLASTCatchExceptionsHandlerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCatchExceptionsHandlerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchExceptionsHandlerCoCo.class";
  }

  @(TestJavaDSLASTCatchExceptionsHandlerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCatchExceptionsHandlerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchExceptionsHandlerCoCo.java";
  }

  @(TestJavaDSLASTCatchTypeCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCatchTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchTypeCoCo.class";
  }

  @(TestJavaDSLASTCatchTypeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCatchTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCatchTypeCoCo.java";
  }

  @(TestJavaDSLASTClassBlockCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassBlockCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBlockCoCo.class";
  }

  @(TestJavaDSLASTClassBlockCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassBlockCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBlockCoCo.java";
  }

  @(TestJavaDSLASTClassBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBodyCoCo.class";
  }

  @(TestJavaDSLASTClassBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBodyCoCo.java";
  }

  @(TestJavaDSLASTClassBodyDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassBodyDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBodyDeclarationCoCo.class";
  }

  @(TestJavaDSLASTClassBodyDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassBodyDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassBodyDeclarationCoCo.java";
  }

  @(TestJavaDSLASTClassCreatorRestCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassCreatorRestCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassCreatorRestCoCo.class";
  }

  @(TestJavaDSLASTClassCreatorRestCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassCreatorRestCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassCreatorRestCoCo.java";
  }

  @(TestJavaDSLASTClassDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassDeclarationCoCo.class";
  }

  @(TestJavaDSLASTClassDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassDeclarationCoCo.java";
  }

  @(TestJavaDSLASTClassMemberDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassMemberDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassMemberDeclarationCoCo.class";
  }

  @(TestJavaDSLASTClassMemberDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassMemberDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassMemberDeclarationCoCo.java";
  }

  @(TestJavaDSLASTClassOrInterfaceTypeCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTClassOrInterfaceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassOrInterfaceTypeCoCo.class";
  }

  @(TestJavaDSLASTClassOrInterfaceTypeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTClassOrInterfaceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTClassOrInterfaceTypeCoCo.java";
  }

  @(TestJavaDSLASTCommonForControlCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCommonForControlCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCommonForControlCoCo.class";
  }

  @(TestJavaDSLASTCommonForControlCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCommonForControlCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCommonForControlCoCo.java";
  }

  @(TestJavaDSLASTCompilationUnitCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCompilationUnitCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCompilationUnitCoCo.class";
  }

  @(TestJavaDSLASTCompilationUnitCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCompilationUnitCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCompilationUnitCoCo.java";
  }

  @(TestJavaDSLASTConstantDeclaratorCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTConstantDeclaratorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstantDeclaratorCoCo.class";
  }

  @(TestJavaDSLASTConstantDeclaratorCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTConstantDeclaratorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstantDeclaratorCoCo.java";
  }

  @(TestJavaDSLASTConstantExpressionSwitchLabelCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTConstantExpressionSwitchLabelCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstantExpressionSwitchLabelCoCo.class";
  }

  @(TestJavaDSLASTConstantExpressionSwitchLabelCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTConstantExpressionSwitchLabelCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstantExpressionSwitchLabelCoCo.java";
  }

  @(TestJavaDSLASTConstDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTConstDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstDeclarationCoCo.class";
  }

  @(TestJavaDSLASTConstDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTConstDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstDeclarationCoCo.java";
  }

  @(TestJavaDSLASTConstructorBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTConstructorBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstructorBodyCoCo.class";
  }

  @(TestJavaDSLASTConstructorBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTConstructorBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstructorBodyCoCo.java";
  }

  @(TestJavaDSLASTConstructorDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTConstructorDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstructorDeclarationCoCo.class";
  }

  @(TestJavaDSLASTConstructorDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTConstructorDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTConstructorDeclarationCoCo.java";
  }

  @(TestJavaDSLASTContinueStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTContinueStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTContinueStatementCoCo.class";
  }

  @(TestJavaDSLASTContinueStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTContinueStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTContinueStatementCoCo.java";
  }

  @(TestJavaDSLASTCreatedNameCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCreatedNameCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCreatedNameCoCo.class";
  }

  @(TestJavaDSLASTCreatedNameCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCreatedNameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCreatedNameCoCo.java";
  }

  @(TestJavaDSLASTCreatorCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTCreatorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCreatorCoCo.class";
  }

  @(TestJavaDSLASTCreatorCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTCreatorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTCreatorCoCo.java";
  }

  @(TestJavaDSLASTDeclaratorIdCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTDeclaratorIdCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDeclaratorIdCoCo.class";
  }

  @(TestJavaDSLASTDeclaratorIdCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTDeclaratorIdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDeclaratorIdCoCo.java";
  }

  @(TestJavaDSLASTDefaultSwitchLabelCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTDefaultSwitchLabelCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDefaultSwitchLabelCoCo.class";
  }

  @(TestJavaDSLASTDefaultSwitchLabelCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTDefaultSwitchLabelCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDefaultSwitchLabelCoCo.java";
  }

  @(TestJavaDSLASTDefaultValueCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTDefaultValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDefaultValueCoCo.class";
  }

  @(TestJavaDSLASTDefaultValueCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTDefaultValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDefaultValueCoCo.java";
  }

  @(TestJavaDSLASTDoWhileStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTDoWhileStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDoWhileStatementCoCo.class";
  }

  @(TestJavaDSLASTDoWhileStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTDoWhileStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTDoWhileStatementCoCo.java";
  }

  @(TestJavaDSLASTElementValueArrayInitializerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTElementValueArrayInitializerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValueArrayInitializerCoCo.class";
  }

  @(TestJavaDSLASTElementValueArrayInitializerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTElementValueArrayInitializerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValueArrayInitializerCoCo.java";
  }

  @(TestJavaDSLASTElementValueCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTElementValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValueCoCo.class";
  }

  @(TestJavaDSLASTElementValueCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTElementValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValueCoCo.java";
  }

  @(TestJavaDSLASTElementValuePairCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTElementValuePairCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValuePairCoCo.class";
  }

  @(TestJavaDSLASTElementValuePairCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTElementValuePairCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTElementValuePairCoCo.java";
  }

  @(TestJavaDSLASTEmptyDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEmptyDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEmptyDeclarationCoCo.class";
  }

  @(TestJavaDSLASTEmptyDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEmptyDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEmptyDeclarationCoCo.java";
  }

  @(TestJavaDSLASTEmptyStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEmptyStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEmptyStatementCoCo.class";
  }

  @(TestJavaDSLASTEmptyStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEmptyStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEmptyStatementCoCo.java";
  }

  @(TestJavaDSLASTEnhancedForControlCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEnhancedForControlCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnhancedForControlCoCo.class";
  }

  @(TestJavaDSLASTEnhancedForControlCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEnhancedForControlCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnhancedForControlCoCo.java";
  }

  @(TestJavaDSLASTEnumBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEnumBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumBodyCoCo.class";
  }

  @(TestJavaDSLASTEnumBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEnumBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumBodyCoCo.java";
  }

  @(TestJavaDSLASTEnumConstantDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEnumConstantDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumConstantDeclarationCoCo.class";
  }

  @(TestJavaDSLASTEnumConstantDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEnumConstantDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumConstantDeclarationCoCo.java";
  }

  @(TestJavaDSLASTEnumConstantSwitchLabelCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEnumConstantSwitchLabelCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumConstantSwitchLabelCoCo.class";
  }

  @(TestJavaDSLASTEnumConstantSwitchLabelCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEnumConstantSwitchLabelCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumConstantSwitchLabelCoCo.java";
  }

  @(TestJavaDSLASTEnumDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTEnumDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumDeclarationCoCo.class";
  }

  @(TestJavaDSLASTEnumDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTEnumDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTEnumDeclarationCoCo.java";
  }

  @(TestJavaDSLASTExceptionHandlerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTExceptionHandlerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExceptionHandlerCoCo.class";
  }

  @(TestJavaDSLASTExceptionHandlerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTExceptionHandlerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExceptionHandlerCoCo.java";
  }

  @(TestJavaDSLASTExplicitGenericInvocationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTExplicitGenericInvocationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExplicitGenericInvocationCoCo.class";
  }

  @(TestJavaDSLASTExplicitGenericInvocationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTExplicitGenericInvocationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExplicitGenericInvocationCoCo.java";
  }

  @(TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTExplicitGenericInvocationSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.class";
  }

  @(TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTExplicitGenericInvocationSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.java";
  }

  @(TestJavaDSLASTExpressionCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExpressionCoCo.class";
  }

  @(TestJavaDSLASTExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExpressionCoCo.java";
  }

  @(TestJavaDSLASTExpressionStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTExpressionStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExpressionStatementCoCo.class";
  }

  @(TestJavaDSLASTExpressionStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTExpressionStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTExpressionStatementCoCo.java";
  }

  @(TestJavaDSLASTFieldDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFieldDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFieldDeclarationCoCo.class";
  }

  @(TestJavaDSLASTFieldDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFieldDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFieldDeclarationCoCo.java";
  }

  @(TestJavaDSLASTFinallyBlockCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFinallyBlockCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFinallyBlockCoCo.class";
  }

  @(TestJavaDSLASTFinallyBlockCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFinallyBlockCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFinallyBlockCoCo.java";
  }

  @(TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFinallyBlockOnlyHandlerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.class";
  }

  @(TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFinallyBlockOnlyHandlerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.java";
  }

  @(TestJavaDSLASTForControlCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTForControlCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForControlCoCo.class";
  }

  @(TestJavaDSLASTForControlCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTForControlCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForControlCoCo.java";
  }

  @(TestJavaDSLASTForInitByExpressionsCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTForInitByExpressionsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForInitByExpressionsCoCo.class";
  }

  @(TestJavaDSLASTForInitByExpressionsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTForInitByExpressionsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForInitByExpressionsCoCo.java";
  }

  @(TestJavaDSLASTForInitCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTForInitCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForInitCoCo.class";
  }

  @(TestJavaDSLASTForInitCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTForInitCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForInitCoCo.java";
  }

  @(TestJavaDSLASTFormalParameterCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFormalParameterCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParameterCoCo.class";
  }

  @(TestJavaDSLASTFormalParameterCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFormalParameterCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParameterCoCo.java";
  }

  @(TestJavaDSLASTFormalParameterListingCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFormalParameterListingCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParameterListingCoCo.class";
  }

  @(TestJavaDSLASTFormalParameterListingCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFormalParameterListingCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParameterListingCoCo.java";
  }

  @(TestJavaDSLASTFormalParametersCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTFormalParametersCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParametersCoCo.class";
  }

  @(TestJavaDSLASTFormalParametersCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTFormalParametersCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTFormalParametersCoCo.java";
  }

  @(TestJavaDSLASTForStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTForStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForStatementCoCo.class";
  }

  @(TestJavaDSLASTForStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTForStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTForStatementCoCo.java";
  }

  @(TestJavaDSLASTIdentifierAndTypeArgumentCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTIdentifierAndTypeArgumentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTIdentifierAndTypeArgumentCoCo.class";
  }

  @(TestJavaDSLASTIdentifierAndTypeArgumentCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTIdentifierAndTypeArgumentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTIdentifierAndTypeArgumentCoCo.java";
  }

  @(TestJavaDSLASTIfStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTIfStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTIfStatementCoCo.class";
  }

  @(TestJavaDSLASTIfStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTIfStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTIfStatementCoCo.java";
  }

  @(TestJavaDSLASTImportDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTImportDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTImportDeclarationCoCo.class";
  }

  @(TestJavaDSLASTImportDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTImportDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTImportDeclarationCoCo.java";
  }

  @(TestJavaDSLASTInnerCreatorCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInnerCreatorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInnerCreatorCoCo.class";
  }

  @(TestJavaDSLASTInnerCreatorCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInnerCreatorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInnerCreatorCoCo.java";
  }

  @(TestJavaDSLASTInterfaceBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInterfaceBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceBodyCoCo.class";
  }

  @(TestJavaDSLASTInterfaceBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInterfaceBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceBodyCoCo.java";
  }

  @(TestJavaDSLASTInterfaceBodyDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInterfaceBodyDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceBodyDeclarationCoCo.class";
  }

  @(TestJavaDSLASTInterfaceBodyDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInterfaceBodyDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceBodyDeclarationCoCo.java";
  }

  @(TestJavaDSLASTInterfaceDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInterfaceDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceDeclarationCoCo.class";
  }

  @(TestJavaDSLASTInterfaceDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInterfaceDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceDeclarationCoCo.java";
  }

  @(TestJavaDSLASTInterfaceMemberDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInterfaceMemberDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceMemberDeclarationCoCo.class";
  }

  @(TestJavaDSLASTInterfaceMemberDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInterfaceMemberDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceMemberDeclarationCoCo.java";
  }

  @(TestJavaDSLASTInterfaceMethodDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTInterfaceMethodDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceMethodDeclarationCoCo.class";
  }

  @(TestJavaDSLASTInterfaceMethodDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTInterfaceMethodDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTInterfaceMethodDeclarationCoCo.java";
  }

  @(TestJavaDSLASTJavaBlockCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTJavaBlockCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTJavaBlockCoCo.class";
  }

  @(TestJavaDSLASTJavaBlockCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTJavaBlockCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTJavaBlockCoCo.java";
  }

  @(TestJavaDSLASTLabeledStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTLabeledStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLabeledStatementCoCo.class";
  }

  @(TestJavaDSLASTLabeledStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTLabeledStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLabeledStatementCoCo.java";
  }

  @(TestJavaDSLASTLastFormalParameterCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTLastFormalParameterCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLastFormalParameterCoCo.class";
  }

  @(TestJavaDSLASTLastFormalParameterCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTLastFormalParameterCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLastFormalParameterCoCo.java";
  }

  @(TestJavaDSLASTLocalVariableDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTLocalVariableDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLocalVariableDeclarationCoCo.class";
  }

  @(TestJavaDSLASTLocalVariableDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTLocalVariableDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLocalVariableDeclarationCoCo.java";
  }

  @(TestJavaDSLASTLocalVariableDeclarationStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTLocalVariableDeclarationStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLocalVariableDeclarationStatementCoCo.class";
  }

  @(TestJavaDSLASTLocalVariableDeclarationStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTLocalVariableDeclarationStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTLocalVariableDeclarationStatementCoCo.java";
  }

  @(TestJavaDSLASTMethodBodyCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTMethodBodyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodBodyCoCo.class";
  }

  @(TestJavaDSLASTMethodBodyCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTMethodBodyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodBodyCoCo.java";
  }

  @(TestJavaDSLASTMethodDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTMethodDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodDeclarationCoCo.class";
  }

  @(TestJavaDSLASTMethodDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTMethodDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodDeclarationCoCo.java";
  }

  @(TestJavaDSLASTMethodSignatureCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTMethodSignatureCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodSignatureCoCo.class";
  }

  @(TestJavaDSLASTMethodSignatureCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTMethodSignatureCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTMethodSignatureCoCo.java";
  }

  @(TestJavaDSLASTModifierCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTModifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTModifierCoCo.class";
  }

  @(TestJavaDSLASTModifierCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTModifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTModifierCoCo.java";
  }

  @(TestJavaDSLASTPackageDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTPackageDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPackageDeclarationCoCo.class";
  }

  @(TestJavaDSLASTPackageDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTPackageDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPackageDeclarationCoCo.java";
  }

  @(TestJavaDSLASTPrimaryExpressionCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTPrimaryExpressionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPrimaryExpressionCoCo.class";
  }

  @(TestJavaDSLASTPrimaryExpressionCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTPrimaryExpressionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPrimaryExpressionCoCo.java";
  }

  @(TestJavaDSLASTPrimitiveModifierCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTPrimitiveModifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPrimitiveModifierCoCo.class";
  }

  @(TestJavaDSLASTPrimitiveModifierCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTPrimitiveModifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTPrimitiveModifierCoCo.java";
  }

  @(TestJavaDSLASTResourceCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTResourceCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTResourceCoCo.class";
  }

  @(TestJavaDSLASTResourceCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTResourceCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTResourceCoCo.java";
  }

  @(TestJavaDSLASTReturnStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTReturnStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTReturnStatementCoCo.class";
  }

  @(TestJavaDSLASTReturnStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTReturnStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTReturnStatementCoCo.java";
  }

  @(TestJavaDSLASTStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTStatementCoCo.class";
  }

  @(TestJavaDSLASTStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTStatementCoCo.java";
  }

  @(TestJavaDSLASTSuperSuffixCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTSuperSuffixCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSuperSuffixCoCo.class";
  }

  @(TestJavaDSLASTSuperSuffixCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTSuperSuffixCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSuperSuffixCoCo.java";
  }

  @(TestJavaDSLASTSwitchBlockStatementGroupCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTSwitchBlockStatementGroupCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchBlockStatementGroupCoCo.class";
  }

  @(TestJavaDSLASTSwitchBlockStatementGroupCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTSwitchBlockStatementGroupCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchBlockStatementGroupCoCo.java";
  }

  @(TestJavaDSLASTSwitchLabelCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTSwitchLabelCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchLabelCoCo.class";
  }

  @(TestJavaDSLASTSwitchLabelCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTSwitchLabelCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchLabelCoCo.java";
  }

  @(TestJavaDSLASTSwitchStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTSwitchStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchStatementCoCo.class";
  }

  @(TestJavaDSLASTSwitchStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTSwitchStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSwitchStatementCoCo.java";
  }

  @(TestJavaDSLASTSynchronizedStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTSynchronizedStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSynchronizedStatementCoCo.class";
  }

  @(TestJavaDSLASTSynchronizedStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTSynchronizedStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTSynchronizedStatementCoCo.java";
  }

  @(TestJavaDSLASTTestJavaDSLNodeCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTTestJavaDSLNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTestJavaDSLNodeCoCo.class";
  }

  @(TestJavaDSLASTTestJavaDSLNodeCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTTestJavaDSLNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTestJavaDSLNodeCoCo.java";
  }

  @(TestJavaDSLASTThrowsCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTThrowsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTThrowsCoCo.class";
  }

  @(TestJavaDSLASTThrowsCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTThrowsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTThrowsCoCo.java";
  }

  @(TestJavaDSLASTThrowStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTThrowStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTThrowStatementCoCo.class";
  }

  @(TestJavaDSLASTThrowStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTThrowStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTThrowStatementCoCo.java";
  }

  @(TestJavaDSLASTTryStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTTryStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTryStatementCoCo.class";
  }

  @(TestJavaDSLASTTryStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTTryStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTryStatementCoCo.java";
  }

  @(TestJavaDSLASTTryStatementWithResourcesCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTTryStatementWithResourcesCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTryStatementWithResourcesCoCo.class";
  }

  @(TestJavaDSLASTTryStatementWithResourcesCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTTryStatementWithResourcesCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTryStatementWithResourcesCoCo.java";
  }

  @(TestJavaDSLASTTypeDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTTypeDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTypeDeclarationCoCo.class";
  }

  @(TestJavaDSLASTTypeDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTTypeDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTTypeDeclarationCoCo.java";
  }

  @(TestJavaDSLASTVariableDeclaratorCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTVariableDeclaratorCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTVariableDeclaratorCoCo.class";
  }

  @(TestJavaDSLASTVariableDeclaratorCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTVariableDeclaratorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTVariableDeclaratorCoCo.java";
  }

  @(TestJavaDSLASTVariableInitializerCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTVariableInitializerCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTVariableInitializerCoCo.class";
  }

  @(TestJavaDSLASTVariableInitializerCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTVariableInitializerCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTVariableInitializerCoCo.java";
  }

  @(TestJavaDSLASTWhileStatementCoCo.class):JavaClassFile{
    simpleName = "TestJavaDSLASTWhileStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTWhileStatementCoCo.class";
  }

  @(TestJavaDSLASTWhileStatementCoCo.java):JavaSourceFile{
    simpleName = "TestJavaDSLASTWhileStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLASTWhileStatementCoCo.java";
  }

  @(TestJavaDSLCoCoChecker.class):JavaClassFile{
    simpleName = "TestJavaDSLCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLCoCoChecker.class";
  }

  @(TestJavaDSLCoCoChecker.java):JavaSourceFile{
    simpleName = "TestJavaDSLCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_cocos/TestJavaDSLCoCoChecker.java";
  }

  @(_od!34):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_od";
  }

  @(TestJavaDSL2OD.class):JavaClassFile{
    simpleName = "TestJavaDSL2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_od/TestJavaDSL2OD.class";
  }

  @(TestJavaDSL2OD.java):JavaSourceFile{
    simpleName = "TestJavaDSL2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_od/TestJavaDSL2OD.java";
  }

  @(_visitor!34):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor";
  }

  @(TestJavaDSLDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestJavaDSLDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLDelegatorVisitor.class";
  }

  @(TestJavaDSLDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestJavaDSLDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLDelegatorVisitor.java";
  }

  @(TestJavaDSLInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestJavaDSLInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLInheritanceVisitor.class";
  }

  @(TestJavaDSLInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestJavaDSLInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLInheritanceVisitor.java";
  }

  @(TestJavaDSLParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestJavaDSLParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLParentAwareVisitor.class";
  }

  @(TestJavaDSLParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestJavaDSLParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLParentAwareVisitor.java";
  }

  @(TestJavaDSLVisitor.class):JavaClassFile{
    simpleName = "TestJavaDSLVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLVisitor.class";
  }

  @(TestJavaDSLVisitor.java):JavaSourceFile{
    simpleName = "TestJavaDSLVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testjavadsl/_visitor/TestJavaDSLVisitor.java";
  }

  @(testod):Directory{
    simpleName = "testod";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod";
  }

  @(_ast!41):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast";
  }

  @(ASTConstantsTestOD.class):JavaClassFile{
    simpleName = "ASTConstantsTestOD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTConstantsTestOD.class";
  }

  @(ASTConstantsTestOD.java):JavaSourceFile{
    simpleName = "ASTConstantsTestOD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTConstantsTestOD.java";
  }

  @(ASTODAttribute.class):JavaClassFile{
    simpleName = "ASTODAttribute";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODAttribute.class";
  }

  @(ASTODAttribute.java):JavaSourceFile{
    simpleName = "ASTODAttribute";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODAttribute.java";
  }

  @(ASTODAttributeBuilder.class):JavaClassFile{
    simpleName = "ASTODAttributeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODAttributeBuilder.class";
  }

  @(ASTODAttributeBuilder.java):JavaSourceFile{
    simpleName = "ASTODAttributeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODAttributeBuilder.java";
  }

  @(ASTODCommonObject.class):JavaClassFile{
    simpleName = "ASTODCommonObject";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCommonObject.class";
  }

  @(ASTODCommonObject.java):JavaSourceFile{
    simpleName = "ASTODCommonObject";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCommonObject.java";
  }

  @(ASTODCompilationUnit.class):JavaClassFile{
    simpleName = "ASTODCompilationUnit";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCompilationUnit.class";
  }

  @(ASTODCompilationUnit.java):JavaSourceFile{
    simpleName = "ASTODCompilationUnit";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCompilationUnit.java";
  }

  @(ASTODCompilationUnitBuilder.class):JavaClassFile{
    simpleName = "ASTODCompilationUnitBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCompilationUnitBuilder.class";
  }

  @(ASTODCompilationUnitBuilder.java):JavaSourceFile{
    simpleName = "ASTODCompilationUnitBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODCompilationUnitBuilder.java";
  }

  @(ASTODDefinition.class):JavaClassFile{
    simpleName = "ASTODDefinition";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODDefinition.class";
  }

  @(ASTODDefinition.java):JavaSourceFile{
    simpleName = "ASTODDefinition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODDefinition.java";
  }

  @(ASTODDefinitionBuilder.class):JavaClassFile{
    simpleName = "ASTODDefinitionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODDefinitionBuilder.class";
  }

  @(ASTODDefinitionBuilder.java):JavaSourceFile{
    simpleName = "ASTODDefinitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODDefinitionBuilder.java";
  }

  @(ASTODElement.class):JavaClassFile{
    simpleName = "ASTODElement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODElement.class";
  }

  @(ASTODElement.java):JavaSourceFile{
    simpleName = "ASTODElement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODElement.java";
  }

  @(ASTODElementBuilder.class):JavaClassFile{
    simpleName = "ASTODElementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODElementBuilder.class";
  }

  @(ASTODElementBuilder.java):JavaSourceFile{
    simpleName = "ASTODElementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODElementBuilder.java";
  }

  @(ASTODInnerLink.class):JavaClassFile{
    simpleName = "ASTODInnerLink";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerLink.class";
  }

  @(ASTODInnerLink.java):JavaSourceFile{
    simpleName = "ASTODInnerLink";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerLink.java";
  }

  @(ASTODInnerLinkBuilder.class):JavaClassFile{
    simpleName = "ASTODInnerLinkBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerLinkBuilder.class";
  }

  @(ASTODInnerLinkBuilder.java):JavaSourceFile{
    simpleName = "ASTODInnerLinkBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerLinkBuilder.java";
  }

  @(ASTODInnerObject.class):JavaClassFile{
    simpleName = "ASTODInnerObject";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerObject.class";
  }

  @(ASTODInnerObject.java):JavaSourceFile{
    simpleName = "ASTODInnerObject";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerObject.java";
  }

  @(ASTODInnerObjectBuilder.class):JavaClassFile{
    simpleName = "ASTODInnerObjectBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerObjectBuilder.class";
  }

  @(ASTODInnerObjectBuilder.java):JavaSourceFile{
    simpleName = "ASTODInnerObjectBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODInnerObjectBuilder.java";
  }

  @(ASTODLink.class):JavaClassFile{
    simpleName = "ASTODLink";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLink.class";
  }

  @(ASTODLink.java):JavaSourceFile{
    simpleName = "ASTODLink";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLink.java";
  }

  @(ASTODLinkBuilder.class):JavaClassFile{
    simpleName = "ASTODLinkBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkBuilder.class";
  }

  @(ASTODLinkBuilder.java):JavaSourceFile{
    simpleName = "ASTODLinkBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkBuilder.java";
  }

  @(ASTODLinkQualifier.class):JavaClassFile{
    simpleName = "ASTODLinkQualifier";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkQualifier.class";
  }

  @(ASTODLinkQualifier.java):JavaSourceFile{
    simpleName = "ASTODLinkQualifier";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkQualifier.java";
  }

  @(ASTODLinkQualifierBuilder.class):JavaClassFile{
    simpleName = "ASTODLinkQualifierBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkQualifierBuilder.class";
  }

  @(ASTODLinkQualifierBuilder.java):JavaSourceFile{
    simpleName = "ASTODLinkQualifierBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODLinkQualifierBuilder.java";
  }

  @(ASTODObject.class):JavaClassFile{
    simpleName = "ASTODObject";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODObject.class";
  }

  @(ASTODObject.java):JavaSourceFile{
    simpleName = "ASTODObject";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODObject.java";
  }

  @(ASTODObjectBuilder.class):JavaClassFile{
    simpleName = "ASTODObjectBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODObjectBuilder.class";
  }

  @(ASTODObjectBuilder.java):JavaSourceFile{
    simpleName = "ASTODObjectBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODObjectBuilder.java";
  }

  @(ASTODValueCollection.class):JavaClassFile{
    simpleName = "ASTODValueCollection";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODValueCollection.class";
  }

  @(ASTODValueCollection.java):JavaSourceFile{
    simpleName = "ASTODValueCollection";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODValueCollection.java";
  }

  @(ASTODValueCollectionBuilder.class):JavaClassFile{
    simpleName = "ASTODValueCollectionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODValueCollectionBuilder.class";
  }

  @(ASTODValueCollectionBuilder.java):JavaSourceFile{
    simpleName = "ASTODValueCollectionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTODValueCollectionBuilder.java";
  }

  @(ASTTestODNode.class):JavaClassFile{
    simpleName = "ASTTestODNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTTestODNode.class";
  }

  @(ASTTestODNode.java):JavaSourceFile{
    simpleName = "ASTTestODNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTTestODNode.java";
  }

  @(ASTValue.class!2):JavaClassFile{
    simpleName = "ASTValue";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTValue.class";
  }

  @(ASTValue.java!2):JavaSourceFile{
    simpleName = "ASTValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTValue.java";
  }

  @(ASTValueBuilder.class):JavaClassFile{
    simpleName = "ASTValueBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTValueBuilder.class";
  }

  @(ASTValueBuilder.java):JavaSourceFile{
    simpleName = "ASTValueBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTValueBuilder.java";
  }

  @(ASTVersion.class):JavaClassFile{
    simpleName = "ASTVersion";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTVersion.class";
  }

  @(ASTVersion.java):JavaSourceFile{
    simpleName = "ASTVersion";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTVersion.java";
  }

  @(ASTVersionBuilder.class):JavaClassFile{
    simpleName = "ASTVersionBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTVersionBuilder.class";
  }

  @(ASTVersionBuilder.java):JavaSourceFile{
    simpleName = "ASTVersionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/ASTVersionBuilder.java";
  }

  @(TestODLiterals.class):JavaClassFile{
    simpleName = "TestODLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODLiterals.class";
  }

  @(TestODLiterals.java):JavaSourceFile{
    simpleName = "TestODLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODLiterals.java";
  }

  @(TestODMill.class):JavaClassFile{
    simpleName = "TestODMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODMill.class";
  }

  @(TestODMill.java):JavaSourceFile{
    simpleName = "TestODMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODMill.java";
  }

  @(TestODNodeFactory.class):JavaClassFile{
    simpleName = "TestODNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODNodeFactory.class";
  }

  @(TestODNodeFactory.java):JavaSourceFile{
    simpleName = "TestODNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_ast/TestODNodeFactory.java";
  }

  @(_cocos!35):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos";
  }

  @(TestODASTODAttributeCoCo.class):JavaClassFile{
    simpleName = "TestODASTODAttributeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODAttributeCoCo.class";
  }

  @(TestODASTODAttributeCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODAttributeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODAttributeCoCo.java";
  }

  @(TestODASTODCommonObjectCoCo.class):JavaClassFile{
    simpleName = "TestODASTODCommonObjectCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODCommonObjectCoCo.class";
  }

  @(TestODASTODCommonObjectCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODCommonObjectCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODCommonObjectCoCo.java";
  }

  @(TestODASTODCompilationUnitCoCo.class):JavaClassFile{
    simpleName = "TestODASTODCompilationUnitCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODCompilationUnitCoCo.class";
  }

  @(TestODASTODCompilationUnitCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODCompilationUnitCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODCompilationUnitCoCo.java";
  }

  @(TestODASTODDefinitionCoCo.class):JavaClassFile{
    simpleName = "TestODASTODDefinitionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODDefinitionCoCo.class";
  }

  @(TestODASTODDefinitionCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODDefinitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODDefinitionCoCo.java";
  }

  @(TestODASTODElementCoCo.class):JavaClassFile{
    simpleName = "TestODASTODElementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODElementCoCo.class";
  }

  @(TestODASTODElementCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODElementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODElementCoCo.java";
  }

  @(TestODASTODInnerLinkCoCo.class):JavaClassFile{
    simpleName = "TestODASTODInnerLinkCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODInnerLinkCoCo.class";
  }

  @(TestODASTODInnerLinkCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODInnerLinkCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODInnerLinkCoCo.java";
  }

  @(TestODASTODInnerObjectCoCo.class):JavaClassFile{
    simpleName = "TestODASTODInnerObjectCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODInnerObjectCoCo.class";
  }

  @(TestODASTODInnerObjectCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODInnerObjectCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODInnerObjectCoCo.java";
  }

  @(TestODASTODLinkCoCo.class):JavaClassFile{
    simpleName = "TestODASTODLinkCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODLinkCoCo.class";
  }

  @(TestODASTODLinkCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODLinkCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODLinkCoCo.java";
  }

  @(TestODASTODLinkQualifierCoCo.class):JavaClassFile{
    simpleName = "TestODASTODLinkQualifierCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODLinkQualifierCoCo.class";
  }

  @(TestODASTODLinkQualifierCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODLinkQualifierCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODLinkQualifierCoCo.java";
  }

  @(TestODASTODObjectCoCo.class):JavaClassFile{
    simpleName = "TestODASTODObjectCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODObjectCoCo.class";
  }

  @(TestODASTODObjectCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODObjectCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODObjectCoCo.java";
  }

  @(TestODASTODValueCollectionCoCo.class):JavaClassFile{
    simpleName = "TestODASTODValueCollectionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODValueCollectionCoCo.class";
  }

  @(TestODASTODValueCollectionCoCo.java):JavaSourceFile{
    simpleName = "TestODASTODValueCollectionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTODValueCollectionCoCo.java";
  }

  @(TestODASTTestODNodeCoCo.class):JavaClassFile{
    simpleName = "TestODASTTestODNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTTestODNodeCoCo.class";
  }

  @(TestODASTTestODNodeCoCo.java):JavaSourceFile{
    simpleName = "TestODASTTestODNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTTestODNodeCoCo.java";
  }

  @(TestODASTValueCoCo.class):JavaClassFile{
    simpleName = "TestODASTValueCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTValueCoCo.class";
  }

  @(TestODASTValueCoCo.java):JavaSourceFile{
    simpleName = "TestODASTValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTValueCoCo.java";
  }

  @(TestODASTVersionCoCo.class):JavaClassFile{
    simpleName = "TestODASTVersionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTVersionCoCo.class";
  }

  @(TestODASTVersionCoCo.java):JavaSourceFile{
    simpleName = "TestODASTVersionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODASTVersionCoCo.java";
  }

  @(TestODCoCoChecker.class):JavaClassFile{
    simpleName = "TestODCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODCoCoChecker.class";
  }

  @(TestODCoCoChecker.java):JavaSourceFile{
    simpleName = "TestODCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_cocos/TestODCoCoChecker.java";
  }

  @(_od!35):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_od";
  }

  @(TestOD2OD.class):JavaClassFile{
    simpleName = "TestOD2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_od/TestOD2OD.class";
  }

  @(TestOD2OD.java):JavaSourceFile{
    simpleName = "TestOD2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_od/TestOD2OD.java";
  }

  @(_visitor!35):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor";
  }

  @(TestODDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestODDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODDelegatorVisitor.class";
  }

  @(TestODDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestODDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODDelegatorVisitor.java";
  }

  @(TestODInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestODInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODInheritanceVisitor.class";
  }

  @(TestODInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestODInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODInheritanceVisitor.java";
  }

  @(TestODParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestODParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODParentAwareVisitor.class";
  }

  @(TestODParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestODParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODParentAwareVisitor.java";
  }

  @(TestODVisitor.class):JavaClassFile{
    simpleName = "TestODVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODVisitor.class";
  }

  @(TestODVisitor.java):JavaSourceFile{
    simpleName = "TestODVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/testod/_visitor/TestODVisitor.java";
  }

  @(types!8):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types";
  }

  @(testtypes):Directory{
    simpleName = "testtypes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes";
  }

  @(_ast!42):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast";
  }

  @(ASTArrayType.class):JavaClassFile{
    simpleName = "ASTArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTArrayType.class";
  }

  @(ASTArrayType.java):JavaSourceFile{
    simpleName = "ASTArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTArrayType.java";
  }

  @(ASTArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTArrayTypeBuilder.class";
  }

  @(ASTArrayTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTArrayTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTArrayTypeBuilder.java";
  }

  @(ASTComplexArrayType.class):JavaClassFile{
    simpleName = "ASTComplexArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexArrayType.class";
  }

  @(ASTComplexArrayType.java):JavaSourceFile{
    simpleName = "ASTComplexArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexArrayType.java";
  }

  @(ASTComplexArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTComplexArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexArrayTypeBuilder.class";
  }

  @(ASTComplexArrayTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTComplexArrayTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexArrayTypeBuilder.java";
  }

  @(ASTComplexReferenceType.class):JavaClassFile{
    simpleName = "ASTComplexReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexReferenceType.class";
  }

  @(ASTComplexReferenceType.java):JavaSourceFile{
    simpleName = "ASTComplexReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexReferenceType.java";
  }

  @(ASTComplexReferenceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTComplexReferenceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexReferenceTypeBuilder.class";
  }

  @(ASTComplexReferenceTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTComplexReferenceTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTComplexReferenceTypeBuilder.java";
  }

  @(ASTConstantsTestTypes.class):JavaClassFile{
    simpleName = "ASTConstantsTestTypes";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTConstantsTestTypes.class";
  }

  @(ASTConstantsTestTypes.java):JavaSourceFile{
    simpleName = "ASTConstantsTestTypes";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTConstantsTestTypes.java";
  }

  @(ASTImportStatement.class):JavaClassFile{
    simpleName = "ASTImportStatement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTImportStatement.class";
  }

  @(ASTImportStatement.java):JavaSourceFile{
    simpleName = "ASTImportStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTImportStatement.java";
  }

  @(ASTImportStatementBuilder.class):JavaClassFile{
    simpleName = "ASTImportStatementBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTImportStatementBuilder.class";
  }

  @(ASTImportStatementBuilder.java):JavaSourceFile{
    simpleName = "ASTImportStatementBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTImportStatementBuilder.java";
  }

  @(ASTPrimitiveArrayType.class):JavaClassFile{
    simpleName = "ASTPrimitiveArrayType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveArrayType.class";
  }

  @(ASTPrimitiveArrayType.java):JavaSourceFile{
    simpleName = "ASTPrimitiveArrayType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveArrayType.java";
  }

  @(ASTPrimitiveArrayTypeBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveArrayTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveArrayTypeBuilder.class";
  }

  @(ASTPrimitiveArrayTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTPrimitiveArrayTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveArrayTypeBuilder.java";
  }

  @(ASTPrimitiveType.class):JavaClassFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveType.class";
  }

  @(ASTPrimitiveType.java):JavaSourceFile{
    simpleName = "ASTPrimitiveType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveType.java";
  }

  @(ASTPrimitiveTypeBuilder.class):JavaClassFile{
    simpleName = "ASTPrimitiveTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveTypeBuilder.class";
  }

  @(ASTPrimitiveTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTPrimitiveTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTPrimitiveTypeBuilder.java";
  }

  @(ASTQualifiedName.class):JavaClassFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTQualifiedName.class";
  }

  @(ASTQualifiedName.java):JavaSourceFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTQualifiedName.java";
  }

  @(ASTQualifiedNameBuilder.class):JavaClassFile{
    simpleName = "ASTQualifiedNameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTQualifiedNameBuilder.class";
  }

  @(ASTQualifiedNameBuilder.java):JavaSourceFile{
    simpleName = "ASTQualifiedNameBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTQualifiedNameBuilder.java";
  }

  @(ASTReferenceType.class):JavaClassFile{
    simpleName = "ASTReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTReferenceType.class";
  }

  @(ASTReferenceType.java):JavaSourceFile{
    simpleName = "ASTReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTReferenceType.java";
  }

  @(ASTReturnType.class):JavaClassFile{
    simpleName = "ASTReturnType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTReturnType.class";
  }

  @(ASTReturnType.java):JavaSourceFile{
    simpleName = "ASTReturnType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTReturnType.java";
  }

  @(ASTSimpleReferenceType.class):JavaClassFile{
    simpleName = "ASTSimpleReferenceType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTSimpleReferenceType.class";
  }

  @(ASTSimpleReferenceType.java):JavaSourceFile{
    simpleName = "ASTSimpleReferenceType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTSimpleReferenceType.java";
  }

  @(ASTSimpleReferenceTypeBuilder.class):JavaClassFile{
    simpleName = "ASTSimpleReferenceTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTSimpleReferenceTypeBuilder.class";
  }

  @(ASTSimpleReferenceTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTSimpleReferenceTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTSimpleReferenceTypeBuilder.java";
  }

  @(ASTTestTypesNode.class):JavaClassFile{
    simpleName = "ASTTestTypesNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTestTypesNode.class";
  }

  @(ASTTestTypesNode.java):JavaSourceFile{
    simpleName = "ASTTestTypesNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTestTypesNode.java";
  }

  @(ASTType.class):JavaClassFile{
    simpleName = "ASTType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTType.class";
  }

  @(ASTType.java):JavaSourceFile{
    simpleName = "ASTType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTType.java";
  }

  @(ASTTypeArgument.class):JavaClassFile{
    simpleName = "ASTTypeArgument";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArgument.class";
  }

  @(ASTTypeArgument.java):JavaSourceFile{
    simpleName = "ASTTypeArgument";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArgument.java";
  }

  @(ASTTypeArguments.class):JavaClassFile{
    simpleName = "ASTTypeArguments";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArguments.class";
  }

  @(ASTTypeArguments.java):JavaSourceFile{
    simpleName = "ASTTypeArguments";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArguments.java";
  }

  @(ASTTypeArgumentsBuilder.class):JavaClassFile{
    simpleName = "ASTTypeArgumentsBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArgumentsBuilder.class";
  }

  @(ASTTypeArgumentsBuilder.java):JavaSourceFile{
    simpleName = "ASTTypeArgumentsBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeArgumentsBuilder.java";
  }

  @(ASTTypeParameters.class):JavaClassFile{
    simpleName = "ASTTypeParameters";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeParameters.class";
  }

  @(ASTTypeParameters.java):JavaSourceFile{
    simpleName = "ASTTypeParameters";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeParameters.java";
  }

  @(ASTTypeParametersBuilder.class):JavaClassFile{
    simpleName = "ASTTypeParametersBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeParametersBuilder.class";
  }

  @(ASTTypeParametersBuilder.java):JavaSourceFile{
    simpleName = "ASTTypeParametersBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeParametersBuilder.java";
  }

  @(ASTTypeVariableDeclaration.class):JavaClassFile{
    simpleName = "ASTTypeVariableDeclaration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeVariableDeclaration.class";
  }

  @(ASTTypeVariableDeclaration.java):JavaSourceFile{
    simpleName = "ASTTypeVariableDeclaration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeVariableDeclaration.java";
  }

  @(ASTTypeVariableDeclarationBuilder.class):JavaClassFile{
    simpleName = "ASTTypeVariableDeclarationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeVariableDeclarationBuilder.class";
  }

  @(ASTTypeVariableDeclarationBuilder.java):JavaSourceFile{
    simpleName = "ASTTypeVariableDeclarationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTTypeVariableDeclarationBuilder.java";
  }

  @(ASTVoidType.class):JavaClassFile{
    simpleName = "ASTVoidType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTVoidType.class";
  }

  @(ASTVoidType.java):JavaSourceFile{
    simpleName = "ASTVoidType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTVoidType.java";
  }

  @(ASTVoidTypeBuilder.class):JavaClassFile{
    simpleName = "ASTVoidTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTVoidTypeBuilder.class";
  }

  @(ASTVoidTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTVoidTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTVoidTypeBuilder.java";
  }

  @(ASTWildcardType.class):JavaClassFile{
    simpleName = "ASTWildcardType";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTWildcardType.class";
  }

  @(ASTWildcardType.java):JavaSourceFile{
    simpleName = "ASTWildcardType";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTWildcardType.java";
  }

  @(ASTWildcardTypeBuilder.class):JavaClassFile{
    simpleName = "ASTWildcardTypeBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTWildcardTypeBuilder.class";
  }

  @(ASTWildcardTypeBuilder.java):JavaSourceFile{
    simpleName = "ASTWildcardTypeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/ASTWildcardTypeBuilder.java";
  }

  @(TestTypesLiterals.class):JavaClassFile{
    simpleName = "TestTypesLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesLiterals.class";
  }

  @(TestTypesLiterals.java):JavaSourceFile{
    simpleName = "TestTypesLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesLiterals.java";
  }

  @(TestTypesMill.class):JavaClassFile{
    simpleName = "TestTypesMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesMill.class";
  }

  @(TestTypesMill.java):JavaSourceFile{
    simpleName = "TestTypesMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesMill.java";
  }

  @(TestTypesNodeFactory.class):JavaClassFile{
    simpleName = "TestTypesNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesNodeFactory.class";
  }

  @(TestTypesNodeFactory.java):JavaSourceFile{
    simpleName = "TestTypesNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_ast/TestTypesNodeFactory.java";
  }

  @(_cocos!36):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos";
  }

  @(TestTypesASTArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTArrayTypeCoCo.class";
  }

  @(TestTypesASTArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTArrayTypeCoCo.java";
  }

  @(TestTypesASTComplexArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTComplexArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTComplexArrayTypeCoCo.class";
  }

  @(TestTypesASTComplexArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTComplexArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTComplexArrayTypeCoCo.java";
  }

  @(TestTypesASTComplexReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTComplexReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTComplexReferenceTypeCoCo.class";
  }

  @(TestTypesASTComplexReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTComplexReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTComplexReferenceTypeCoCo.java";
  }

  @(TestTypesASTImportStatementCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTImportStatementCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTImportStatementCoCo.class";
  }

  @(TestTypesASTImportStatementCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTImportStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTImportStatementCoCo.java";
  }

  @(TestTypesASTPrimitiveArrayTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTPrimitiveArrayTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTPrimitiveArrayTypeCoCo.class";
  }

  @(TestTypesASTPrimitiveArrayTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTPrimitiveArrayTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTPrimitiveArrayTypeCoCo.java";
  }

  @(TestTypesASTPrimitiveTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTPrimitiveTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTPrimitiveTypeCoCo.class";
  }

  @(TestTypesASTPrimitiveTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTPrimitiveTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTPrimitiveTypeCoCo.java";
  }

  @(TestTypesASTQualifiedNameCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTQualifiedNameCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTQualifiedNameCoCo.class";
  }

  @(TestTypesASTQualifiedNameCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTQualifiedNameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTQualifiedNameCoCo.java";
  }

  @(TestTypesASTReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTReferenceTypeCoCo.class";
  }

  @(TestTypesASTReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTReferenceTypeCoCo.java";
  }

  @(TestTypesASTReturnTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTReturnTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTReturnTypeCoCo.class";
  }

  @(TestTypesASTReturnTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTReturnTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTReturnTypeCoCo.java";
  }

  @(TestTypesASTSimpleReferenceTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTSimpleReferenceTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTSimpleReferenceTypeCoCo.class";
  }

  @(TestTypesASTSimpleReferenceTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTSimpleReferenceTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTSimpleReferenceTypeCoCo.java";
  }

  @(TestTypesASTTestTypesNodeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTestTypesNodeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTestTypesNodeCoCo.class";
  }

  @(TestTypesASTTestTypesNodeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTestTypesNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTestTypesNodeCoCo.java";
  }

  @(TestTypesASTTypeArgumentCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTypeArgumentCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeArgumentCoCo.class";
  }

  @(TestTypesASTTypeArgumentCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTypeArgumentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeArgumentCoCo.java";
  }

  @(TestTypesASTTypeArgumentsCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTypeArgumentsCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeArgumentsCoCo.class";
  }

  @(TestTypesASTTypeArgumentsCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTypeArgumentsCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeArgumentsCoCo.java";
  }

  @(TestTypesASTTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeCoCo.class";
  }

  @(TestTypesASTTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeCoCo.java";
  }

  @(TestTypesASTTypeParametersCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTypeParametersCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeParametersCoCo.class";
  }

  @(TestTypesASTTypeParametersCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTypeParametersCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeParametersCoCo.java";
  }

  @(TestTypesASTTypeVariableDeclarationCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTTypeVariableDeclarationCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeVariableDeclarationCoCo.class";
  }

  @(TestTypesASTTypeVariableDeclarationCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTTypeVariableDeclarationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTTypeVariableDeclarationCoCo.java";
  }

  @(TestTypesASTVoidTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTVoidTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTVoidTypeCoCo.class";
  }

  @(TestTypesASTVoidTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTVoidTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTVoidTypeCoCo.java";
  }

  @(TestTypesASTWildcardTypeCoCo.class):JavaClassFile{
    simpleName = "TestTypesASTWildcardTypeCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTWildcardTypeCoCo.class";
  }

  @(TestTypesASTWildcardTypeCoCo.java):JavaSourceFile{
    simpleName = "TestTypesASTWildcardTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesASTWildcardTypeCoCo.java";
  }

  @(TestTypesCoCoChecker.class):JavaClassFile{
    simpleName = "TestTypesCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesCoCoChecker.class";
  }

  @(TestTypesCoCoChecker.java):JavaSourceFile{
    simpleName = "TestTypesCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_cocos/TestTypesCoCoChecker.java";
  }

  @(_od!36):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_od";
  }

  @(TestTypes2OD.class):JavaClassFile{
    simpleName = "TestTypes2OD";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_od/TestTypes2OD.class";
  }

  @(TestTypes2OD.java):JavaSourceFile{
    simpleName = "TestTypes2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_od/TestTypes2OD.java";
  }

  @(_visitor!36):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor";
  }

  @(TestTypesDelegatorVisitor.class):JavaClassFile{
    simpleName = "TestTypesDelegatorVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesDelegatorVisitor.class";
  }

  @(TestTypesDelegatorVisitor.java):JavaSourceFile{
    simpleName = "TestTypesDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesDelegatorVisitor.java";
  }

  @(TestTypesInheritanceVisitor.class):JavaClassFile{
    simpleName = "TestTypesInheritanceVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesInheritanceVisitor.class";
  }

  @(TestTypesInheritanceVisitor.java):JavaSourceFile{
    simpleName = "TestTypesInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesInheritanceVisitor.java";
  }

  @(TestTypesParentAwareVisitor.class):JavaClassFile{
    simpleName = "TestTypesParentAwareVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesParentAwareVisitor.class";
  }

  @(TestTypesParentAwareVisitor.java):JavaSourceFile{
    simpleName = "TestTypesParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesParentAwareVisitor.java";
  }

  @(TestTypesVisitor.class):JavaClassFile{
    simpleName = "TestTypesVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesVisitor.class";
  }

  @(TestTypesVisitor.java):JavaSourceFile{
    simpleName = "TestTypesVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/grammars/types/testtypes/_visitor/TestTypesVisitor.java";
  }

  @(robot!4):Directory{
    simpleName = "robot";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot";
  }

  @(robotdsl):Directory{
    simpleName = "robotdsl";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl";
  }

  @(_ast!43):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast";
  }

  @(ASTConstantsRobotDSL.class):JavaClassFile{
    simpleName = "ASTConstantsRobotDSL";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTConstantsRobotDSL.class";
  }

  @(ASTConstantsRobotDSL.java):JavaSourceFile{
    simpleName = "ASTConstantsRobotDSL";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTConstantsRobotDSL.java";
  }

  @(ASTDirection.class):JavaClassFile{
    simpleName = "ASTDirection";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTDirection.class";
  }

  @(ASTDirection.java):JavaSourceFile{
    simpleName = "ASTDirection";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTDirection.java";
  }

  @(ASTIteration.class):JavaClassFile{
    simpleName = "ASTIteration";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTIteration.class";
  }

  @(ASTIteration.java):JavaSourceFile{
    simpleName = "ASTIteration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTIteration.java";
  }

  @(ASTIterationBuilder.class):JavaClassFile{
    simpleName = "ASTIterationBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTIterationBuilder.class";
  }

  @(ASTIterationBuilder.java):JavaSourceFile{
    simpleName = "ASTIterationBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTIterationBuilder.java";
  }

  @(ASTMovement.class):JavaClassFile{
    simpleName = "ASTMovement";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTMovement.class";
  }

  @(ASTMovement.java):JavaSourceFile{
    simpleName = "ASTMovement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTMovement.java";
  }

  @(ASTProcedureReference.class):JavaClassFile{
    simpleName = "ASTProcedureReference";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTProcedureReference.class";
  }

  @(ASTProcedureReference.java):JavaSourceFile{
    simpleName = "ASTProcedureReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTProcedureReference.java";
  }

  @(ASTProcedureReferenceBuilder.class):JavaClassFile{
    simpleName = "ASTProcedureReferenceBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTProcedureReferenceBuilder.class";
  }

  @(ASTProcedureReferenceBuilder.java):JavaSourceFile{
    simpleName = "ASTProcedureReferenceBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTProcedureReferenceBuilder.java";
  }

  @(ASTQualifiedName.class!2):JavaClassFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTQualifiedName.class";
  }

  @(ASTQualifiedName.java!2):JavaSourceFile{
    simpleName = "ASTQualifiedName";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTQualifiedName.java";
  }

  @(ASTQualifiedNameBuilder.class!2):JavaClassFile{
    simpleName = "ASTQualifiedNameBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTQualifiedNameBuilder.class";
  }

  @(ASTQualifiedNameBuilder.java!2):JavaSourceFile{
    simpleName = "ASTQualifiedNameBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTQualifiedNameBuilder.java";
  }

  @(ASTRobotDSLNode.class):JavaClassFile{
    simpleName = "ASTRobotDSLNode";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotDSLNode.class";
  }

  @(ASTRobotDSLNode.java):JavaSourceFile{
    simpleName = "ASTRobotDSLNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotDSLNode.java";
  }

  @(ASTRobotProcedure.class):JavaClassFile{
    simpleName = "ASTRobotProcedure";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotProcedure.class";
  }

  @(ASTRobotProcedure.java):JavaSourceFile{
    simpleName = "ASTRobotProcedure";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotProcedure.java";
  }

  @(ASTRobotProcedureBuilder.class):JavaClassFile{
    simpleName = "ASTRobotProcedureBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotProcedureBuilder.class";
  }

  @(ASTRobotProcedureBuilder.java):JavaSourceFile{
    simpleName = "ASTRobotProcedureBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTRobotProcedureBuilder.java";
  }

  @(ASTSimpleMove.class):JavaClassFile{
    simpleName = "ASTSimpleMove";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTSimpleMove.class";
  }

  @(ASTSimpleMove.java):JavaSourceFile{
    simpleName = "ASTSimpleMove";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTSimpleMove.java";
  }

  @(ASTSimpleMoveBuilder.class):JavaClassFile{
    simpleName = "ASTSimpleMoveBuilder";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTSimpleMoveBuilder.class";
  }

  @(ASTSimpleMoveBuilder.java):JavaSourceFile{
    simpleName = "ASTSimpleMoveBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/ASTSimpleMoveBuilder.java";
  }

  @(RobotDSLLiterals.class):JavaClassFile{
    simpleName = "RobotDSLLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLLiterals.class";
  }

  @(RobotDSLLiterals.java):JavaSourceFile{
    simpleName = "RobotDSLLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLLiterals.java";
  }

  @(RobotDSLMill.class):JavaClassFile{
    simpleName = "RobotDSLMill";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLMill.class";
  }

  @(RobotDSLMill.java):JavaSourceFile{
    simpleName = "RobotDSLMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLMill.java";
  }

  @(RobotDSLNodeFactory.class):JavaClassFile{
    simpleName = "RobotDSLNodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLNodeFactory.class";
  }

  @(RobotDSLNodeFactory.java):JavaSourceFile{
    simpleName = "RobotDSLNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_ast/RobotDSLNodeFactory.java";
  }

  @(_cocos!37):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos";
  }

  @(RobotDSLASTIterationCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTIterationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTIterationCoCo.java";
  }

  @(RobotDSLASTMovementCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTMovementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTMovementCoCo.java";
  }

  @(RobotDSLASTProcedureReferenceCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTProcedureReferenceCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTProcedureReferenceCoCo.java";
  }

  @(RobotDSLASTQualifiedNameCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTQualifiedNameCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTQualifiedNameCoCo.java";
  }

  @(RobotDSLASTRobotDSLNodeCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTRobotDSLNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTRobotDSLNodeCoCo.java";
  }

  @(RobotDSLASTRobotProcedureCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTRobotProcedureCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTRobotProcedureCoCo.java";
  }

  @(RobotDSLASTSimpleMoveCoCo.java):JavaSourceFile{
    simpleName = "RobotDSLASTSimpleMoveCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLASTSimpleMoveCoCo.java";
  }

  @(RobotDSLCoCoChecker.java):JavaSourceFile{
    simpleName = "RobotDSLCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_cocos/RobotDSLCoCoChecker.java";
  }

  @(_od!37):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_od";
  }

  @(RobotDSL2OD.java):JavaSourceFile{
    simpleName = "RobotDSL2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_od/RobotDSL2OD.java";
  }

  @(_visitor!37):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor";
  }

  @(RobotDSLDelegatorVisitor.java):JavaSourceFile{
    simpleName = "RobotDSLDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor/RobotDSLDelegatorVisitor.java";
  }

  @(RobotDSLInheritanceVisitor.java):JavaSourceFile{
    simpleName = "RobotDSLInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor/RobotDSLInheritanceVisitor.java";
  }

  @(RobotDSLParentAwareVisitor.java):JavaSourceFile{
    simpleName = "RobotDSLParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor/RobotDSLParentAwareVisitor.java";
  }

  @(RobotDSLVisitor.class):JavaClassFile{
    simpleName = "RobotDSLVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor/RobotDSLVisitor.class";
  }

  @(RobotDSLVisitor.java):JavaSourceFile{
    simpleName = "RobotDSLVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/codetocompile/mc/robot/robotdsl/_visitor/RobotDSLVisitor.java";
  }

  @(sourcecode):Directory{
    simpleName = "sourcecode";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode";
  }

  @(de!19):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de";
  }

  @(monticore!20):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore";
  }

  @(grammar!10):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar";
  }

  @(concepts!5):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts";
  }

  @(antlr!9):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr";
  }

  @(antlr!10):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr";
  }

  @(_ast!44):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast";
  }

  @(AntlrLiterals.java):JavaSourceFile{
    simpleName = "AntlrLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrLiterals.java";
  }

  @(AntlrMill.java):JavaSourceFile{
    simpleName = "AntlrMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrMill.java";
  }

  @(AntlrNodeFactory.java):JavaSourceFile{
    simpleName = "AntlrNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrNodeFactory.java";
  }

  @(AntlrPackage.java):JavaSourceFile{
    simpleName = "AntlrPackage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrPackage.java";
  }

  @(AntlrPackageImpl.java):JavaSourceFile{
    simpleName = "AntlrPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/AntlrPackageImpl.java";
  }

  @(ASTAntlrLexerAction.java):JavaSourceFile{
    simpleName = "ASTAntlrLexerAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrLexerAction.java";
  }

  @(ASTAntlrNode.java):JavaSourceFile{
    simpleName = "ASTAntlrNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrNode.java";
  }

  @(ASTAntlrParserAction.java):JavaSourceFile{
    simpleName = "ASTAntlrParserAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTAntlrParserAction.java";
  }

  @(ASTConceptAntlr.java):JavaSourceFile{
    simpleName = "ASTConceptAntlr";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTConceptAntlr.java";
  }

  @(ASTConstantsAntlr.java):JavaSourceFile{
    simpleName = "ASTConstantsAntlr";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTConstantsAntlr.java";
  }

  @(ASTJavaCodeExt.java):JavaSourceFile{
    simpleName = "ASTJavaCodeExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_ast/ASTJavaCodeExt.java";
  }

  @(_cocos!38):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos";
  }

  @(AntlrAntlrPackageCoCo.java):JavaSourceFile{
    simpleName = "AntlrAntlrPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrAntlrPackageCoCo.java";
  }

  @(AntlrASTAntlrLexerActionCoCo.java):JavaSourceFile{
    simpleName = "AntlrASTAntlrLexerActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrLexerActionCoCo.java";
  }

  @(AntlrASTAntlrNodeCoCo.java):JavaSourceFile{
    simpleName = "AntlrASTAntlrNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrNodeCoCo.java";
  }

  @(AntlrASTAntlrParserActionCoCo.java):JavaSourceFile{
    simpleName = "AntlrASTAntlrParserActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTAntlrParserActionCoCo.java";
  }

  @(AntlrASTConceptAntlrCoCo.java):JavaSourceFile{
    simpleName = "AntlrASTConceptAntlrCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTConceptAntlrCoCo.java";
  }

  @(AntlrASTJavaCodeExtCoCo.java):JavaSourceFile{
    simpleName = "AntlrASTJavaCodeExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrASTJavaCodeExtCoCo.java";
  }

  @(AntlrCoCoChecker.java):JavaSourceFile{
    simpleName = "AntlrCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_cocos/AntlrCoCoChecker.java";
  }

  @(_od!38):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_od";
  }

  @(Antlr2OD.java):JavaSourceFile{
    simpleName = "Antlr2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_od/Antlr2OD.java";
  }

  @(_symboltable!16):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_symboltable";
  }

  @(AntlrLanguage.java):JavaSourceFile{
    simpleName = "AntlrLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_symboltable/AntlrLanguage.java";
  }

  @(AntlrModelLoader.java):JavaSourceFile{
    simpleName = "AntlrModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_symboltable/AntlrModelLoader.java";
  }

  @(_visitor!38):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_visitor";
  }

  @(AntlrDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AntlrDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrDelegatorVisitor.java";
  }

  @(AntlrInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AntlrInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrInheritanceVisitor.java";
  }

  @(AntlrParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AntlrParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrParentAwareVisitor.java";
  }

  @(AntlrVisitor.java):JavaSourceFile{
    simpleName = "AntlrVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/concepts/antlr/antlr/_visitor/AntlrVisitor.java";
  }

  @(grammar!11):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar";
  }

  @(_ast!45):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast";
  }

  @(ASTAbstractProd.java):JavaSourceFile{
    simpleName = "ASTAbstractProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTAbstractProd.java";
  }

  @(ASTActionExt.java!3):JavaSourceFile{
    simpleName = "ASTActionExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTActionExt.java";
  }

  @(ASTAlt.java):JavaSourceFile{
    simpleName = "ASTAlt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTAlt.java";
  }

  @(ASTAntlrOption.java):JavaSourceFile{
    simpleName = "ASTAntlrOption";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTAntlrOption.java";
  }

  @(ASTAnything.java):JavaSourceFile{
    simpleName = "ASTAnything";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTAnything.java";
  }

  @(ASTASTRule.java):JavaSourceFile{
    simpleName = "ASTASTRule";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTASTRule.java";
  }

  @(ASTAttributeInAST.java):JavaSourceFile{
    simpleName = "ASTAttributeInAST";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTAttributeInAST.java";
  }

  @(ASTBlock.java):JavaSourceFile{
    simpleName = "ASTBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTBlock.java";
  }

  @(ASTCard.java):JavaSourceFile{
    simpleName = "ASTCard";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTCard.java";
  }

  @(ASTClassProd.java!3):JavaSourceFile{
    simpleName = "ASTClassProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTClassProd.java";
  }

  @(ASTConcept.java):JavaSourceFile{
    simpleName = "ASTConcept";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTConcept.java";
  }

  @(ASTConstant.java):JavaSourceFile{
    simpleName = "ASTConstant";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTConstant.java";
  }

  @(ASTConstantGroup.java):JavaSourceFile{
    simpleName = "ASTConstantGroup";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTConstantGroup.java";
  }

  @(ASTConstantsGrammar.java):JavaSourceFile{
    simpleName = "ASTConstantsGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTConstantsGrammar.java";
  }

  @(ASTEnumProd.java):JavaSourceFile{
    simpleName = "ASTEnumProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTEnumProd.java";
  }

  @(ASTEof.java):JavaSourceFile{
    simpleName = "ASTEof";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTEof.java";
  }

  @(ASTExpressionPredicateExt.java):JavaSourceFile{
    simpleName = "ASTExpressionPredicateExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTExpressionPredicateExt.java";
  }

  @(ASTExternalProd.java):JavaSourceFile{
    simpleName = "ASTExternalProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTExternalProd.java";
  }

  @(ASTFollowOption.java):JavaSourceFile{
    simpleName = "ASTFollowOption";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTFollowOption.java";
  }

  @(ASTGenericTypeTOP.java):JavaSourceFile{
    simpleName = "ASTGenericTypeTOP";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTGenericTypeTOP.java";
  }

  @(ASTGrammarNode.java):JavaSourceFile{
    simpleName = "ASTGrammarNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTGrammarNode.java";
  }

  @(ASTGrammarOption.java):JavaSourceFile{
    simpleName = "ASTGrammarOption";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTGrammarOption.java";
  }

  @(ASTGrammarReference.java):JavaSourceFile{
    simpleName = "ASTGrammarReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTGrammarReference.java";
  }

  @(ASTInterfaceProd.java):JavaSourceFile{
    simpleName = "ASTInterfaceProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTInterfaceProd.java";
  }

  @(ASTITerminal.java):JavaSourceFile{
    simpleName = "ASTITerminal";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTITerminal.java";
  }

  @(ASTLexActionOrPredicate.java):JavaSourceFile{
    simpleName = "ASTLexActionOrPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexActionOrPredicate.java";
  }

  @(ASTLexAlt.java):JavaSourceFile{
    simpleName = "ASTLexAlt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexAlt.java";
  }

  @(ASTLexAnyChar.java):JavaSourceFile{
    simpleName = "ASTLexAnyChar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexAnyChar.java";
  }

  @(ASTLexBlock.java):JavaSourceFile{
    simpleName = "ASTLexBlock";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexBlock.java";
  }

  @(ASTLexChar.java):JavaSourceFile{
    simpleName = "ASTLexChar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexChar.java";
  }

  @(ASTLexCharRange.java):JavaSourceFile{
    simpleName = "ASTLexCharRange";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexCharRange.java";
  }

  @(ASTLexComponent.java):JavaSourceFile{
    simpleName = "ASTLexComponent";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexComponent.java";
  }

  @(ASTLexNonTerminal.java):JavaSourceFile{
    simpleName = "ASTLexNonTerminal";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexNonTerminal.java";
  }

  @(ASTLexOption.java):JavaSourceFile{
    simpleName = "ASTLexOption";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexOption.java";
  }

  @(ASTLexProd.java!2):JavaSourceFile{
    simpleName = "ASTLexProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexProd.java";
  }

  @(ASTLexSimpleIteration.java):JavaSourceFile{
    simpleName = "ASTLexSimpleIteration";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexSimpleIteration.java";
  }

  @(ASTLexString.java):JavaSourceFile{
    simpleName = "ASTLexString";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTLexString.java";
  }

  @(ASTMCAnything.java):JavaSourceFile{
    simpleName = "ASTMCAnything";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMCAnything.java";
  }

  @(ASTMCConceptExt.java):JavaSourceFile{
    simpleName = "ASTMCConceptExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMCConceptExt.java";
  }

  @(ASTMCGrammar.java!2):JavaSourceFile{
    simpleName = "ASTMCGrammar";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMCGrammar.java";
  }

  @(ASTMCImportStatement.java):JavaSourceFile{
    simpleName = "ASTMCImportStatement";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMCImportStatement.java";
  }

  @(ASTMethod.java):JavaSourceFile{
    simpleName = "ASTMethod";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMethod.java";
  }

  @(ASTMethodParameter.java):JavaSourceFile{
    simpleName = "ASTMethodParameter";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTMethodParameter.java";
  }

  @(ASTNonTerminal.java):JavaSourceFile{
    simpleName = "ASTNonTerminal";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTNonTerminal.java";
  }

  @(ASTNonTerminalSeparator.java):JavaSourceFile{
    simpleName = "ASTNonTerminalSeparator";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTNonTerminalSeparator.java";
  }

  @(ASTOption.java):JavaSourceFile{
    simpleName = "ASTOption";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTOption.java";
  }

  @(ASTOptionValue.java):JavaSourceFile{
    simpleName = "ASTOptionValue";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTOptionValue.java";
  }

  @(ASTParserProd.java!2):JavaSourceFile{
    simpleName = "ASTParserProd";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTParserProd.java";
  }

  @(ASTProdTOP.java):JavaSourceFile{
    simpleName = "ASTProdTOP";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTProdTOP.java";
  }

  @(ASTRuleComponent.java):JavaSourceFile{
    simpleName = "ASTRuleComponent";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTRuleComponent.java";
  }

  @(ASTRuleReference.java):JavaSourceFile{
    simpleName = "ASTRuleReference";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTRuleReference.java";
  }

  @(ASTSemanticpredicateOrAction.java):JavaSourceFile{
    simpleName = "ASTSemanticpredicateOrAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTSemanticpredicateOrAction.java";
  }

  @(ASTStartRule.java):JavaSourceFile{
    simpleName = "ASTStartRule";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTStartRule.java";
  }

  @(ASTSymbolDefinition.java):JavaSourceFile{
    simpleName = "ASTSymbolDefinition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTSymbolDefinition.java";
  }

  @(ASTTerminal.java):JavaSourceFile{
    simpleName = "ASTTerminal";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/ASTTerminal.java";
  }

  @(GrammarLiterals.java):JavaSourceFile{
    simpleName = "GrammarLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/GrammarLiterals.java";
  }

  @(GrammarMill.java):JavaSourceFile{
    simpleName = "GrammarMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/GrammarMill.java";
  }

  @(GrammarNodeFactory.java):JavaSourceFile{
    simpleName = "GrammarNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/GrammarNodeFactory.java";
  }

  @(GrammarPackage.java):JavaSourceFile{
    simpleName = "GrammarPackage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/GrammarPackage.java";
  }

  @(GrammarPackageImpl.java):JavaSourceFile{
    simpleName = "GrammarPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_ast/GrammarPackageImpl.java";
  }

  @(_cocos!39):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos";
  }

  @(GrammarASTAbstractProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTAbstractProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTAbstractProdCoCo.java";
  }

  @(GrammarASTActionExtCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTActionExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTActionExtCoCo.java";
  }

  @(GrammarASTAltCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTAltCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTAltCoCo.java";
  }

  @(GrammarASTAntlrOptionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTAntlrOptionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTAntlrOptionCoCo.java";
  }

  @(GrammarASTAnythingCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTAnythingCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTAnythingCoCo.java";
  }

  @(GrammarASTASTRuleCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTASTRuleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTASTRuleCoCo.java";
  }

  @(GrammarASTAttributeInASTCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTAttributeInASTCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTAttributeInASTCoCo.java";
  }

  @(GrammarASTBlockCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTBlockCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTBlockCoCo.java";
  }

  @(GrammarASTCardCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTCardCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTCardCoCo.java";
  }

  @(GrammarASTClassProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTClassProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTClassProdCoCo.java";
  }

  @(GrammarASTConceptCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTConceptCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTConceptCoCo.java";
  }

  @(GrammarASTConstantCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTConstantCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTConstantCoCo.java";
  }

  @(GrammarASTConstantGroupCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTConstantGroupCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTConstantGroupCoCo.java";
  }

  @(GrammarASTEnumProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTEnumProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTEnumProdCoCo.java";
  }

  @(GrammarASTEofCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTEofCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTEofCoCo.java";
  }

  @(GrammarASTExpressionPredicateExtCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTExpressionPredicateExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTExpressionPredicateExtCoCo.java";
  }

  @(GrammarASTExternalProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTExternalProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTExternalProdCoCo.java";
  }

  @(GrammarASTFollowOptionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTFollowOptionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTFollowOptionCoCo.java";
  }

  @(GrammarASTGenericTypeCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTGenericTypeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTGenericTypeCoCo.java";
  }

  @(GrammarASTGrammarNodeCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTGrammarNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarNodeCoCo.java";
  }

  @(GrammarASTGrammarOptionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTGrammarOptionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarOptionCoCo.java";
  }

  @(GrammarASTGrammarReferenceCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTGrammarReferenceCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTGrammarReferenceCoCo.java";
  }

  @(GrammarASTInterfaceProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTInterfaceProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTInterfaceProdCoCo.java";
  }

  @(GrammarASTITerminalCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTITerminalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTITerminalCoCo.java";
  }

  @(GrammarASTLexActionOrPredicateCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexActionOrPredicateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexActionOrPredicateCoCo.java";
  }

  @(GrammarASTLexAltCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexAltCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexAltCoCo.java";
  }

  @(GrammarASTLexAnyCharCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexAnyCharCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexAnyCharCoCo.java";
  }

  @(GrammarASTLexBlockCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexBlockCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexBlockCoCo.java";
  }

  @(GrammarASTLexCharCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexCharCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexCharCoCo.java";
  }

  @(GrammarASTLexCharRangeCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexCharRangeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexCharRangeCoCo.java";
  }

  @(GrammarASTLexComponentCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexComponentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexComponentCoCo.java";
  }

  @(GrammarASTLexNonTerminalCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexNonTerminalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexNonTerminalCoCo.java";
  }

  @(GrammarASTLexOptionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexOptionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexOptionCoCo.java";
  }

  @(GrammarASTLexProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexProdCoCo.java";
  }

  @(GrammarASTLexSimpleIterationCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexSimpleIterationCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexSimpleIterationCoCo.java";
  }

  @(GrammarASTLexStringCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTLexStringCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTLexStringCoCo.java";
  }

  @(GrammarASTMCAnythingCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMCAnythingCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMCAnythingCoCo.java";
  }

  @(GrammarASTMCConceptExtCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMCConceptExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMCConceptExtCoCo.java";
  }

  @(GrammarASTMCGrammarCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMCGrammarCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMCGrammarCoCo.java";
  }

  @(GrammarASTMCImportStatementCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMCImportStatementCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMCImportStatementCoCo.java";
  }

  @(GrammarASTMethodCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMethodCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMethodCoCo.java";
  }

  @(GrammarASTMethodParameterCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTMethodParameterCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTMethodParameterCoCo.java";
  }

  @(GrammarASTNonTerminalCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTNonTerminalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTNonTerminalCoCo.java";
  }

  @(GrammarASTNonTerminalSeparatorCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTNonTerminalSeparatorCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTNonTerminalSeparatorCoCo.java";
  }

  @(GrammarASTOptionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTOptionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTOptionCoCo.java";
  }

  @(GrammarASTOptionValueCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTOptionValueCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTOptionValueCoCo.java";
  }

  @(GrammarASTParserProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTParserProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTParserProdCoCo.java";
  }

  @(GrammarASTProdCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTProdCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTProdCoCo.java";
  }

  @(GrammarASTRuleComponentCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTRuleComponentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTRuleComponentCoCo.java";
  }

  @(GrammarASTRuleReferenceCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTRuleReferenceCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTRuleReferenceCoCo.java";
  }

  @(GrammarASTSemanticpredicateOrActionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTSemanticpredicateOrActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTSemanticpredicateOrActionCoCo.java";
  }

  @(GrammarASTStartRuleCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTStartRuleCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTStartRuleCoCo.java";
  }

  @(GrammarASTSymbolDefinitionCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTSymbolDefinitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTSymbolDefinitionCoCo.java";
  }

  @(GrammarASTTerminalCoCo.java):JavaSourceFile{
    simpleName = "GrammarASTTerminalCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarASTTerminalCoCo.java";
  }

  @(GrammarCoCoChecker.java):JavaSourceFile{
    simpleName = "GrammarCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarCoCoChecker.java";
  }

  @(GrammarGrammarPackageCoCo.java):JavaSourceFile{
    simpleName = "GrammarGrammarPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_cocos/GrammarGrammarPackageCoCo.java";
  }

  @(_od!39):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_od";
  }

  @(Grammar2OD.java):JavaSourceFile{
    simpleName = "Grammar2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_od/Grammar2OD.java";
  }

  @(_symboltable!17):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_symboltable";
  }

  @(GrammarLanguage.java):JavaSourceFile{
    simpleName = "GrammarLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_symboltable/GrammarLanguage.java";
  }

  @(GrammarModelLoader.java):JavaSourceFile{
    simpleName = "GrammarModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_symboltable/GrammarModelLoader.java";
  }

  @(_visitor!39):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_visitor";
  }

  @(GrammarDelegatorVisitor.java):JavaSourceFile{
    simpleName = "GrammarDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_visitor/GrammarDelegatorVisitor.java";
  }

  @(GrammarInheritanceVisitor.java):JavaSourceFile{
    simpleName = "GrammarInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_visitor/GrammarInheritanceVisitor.java";
  }

  @(GrammarParentAwareVisitor.java):JavaSourceFile{
    simpleName = "GrammarParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_visitor/GrammarParentAwareVisitor.java";
  }

  @(GrammarVisitor.java):JavaSourceFile{
    simpleName = "GrammarVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar/_visitor/GrammarVisitor.java";
  }

  @(grammar_withconcepts!2):Directory{
    simpleName = "grammar_withconcepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts";
  }

  @(_ast!46):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast";
  }

  @(ASTAction.java!2):JavaSourceFile{
    simpleName = "ASTAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTAction.java";
  }

  @(ASTConstantsGrammar_WithConcepts.java):JavaSourceFile{
    simpleName = "ASTConstantsGrammar_WithConcepts";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTConstantsGrammar_WithConcepts.java";
  }

  @(ASTExpressionPredicate.java):JavaSourceFile{
    simpleName = "ASTExpressionPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTExpressionPredicate.java";
  }

  @(ASTGrammar_WithConceptsNode.java):JavaSourceFile{
    simpleName = "ASTGrammar_WithConceptsNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTGrammar_WithConceptsNode.java";
  }

  @(ASTJavaCode.java):JavaSourceFile{
    simpleName = "ASTJavaCode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTJavaCode.java";
  }

  @(ASTMCConcept.java):JavaSourceFile{
    simpleName = "ASTMCConcept";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/ASTMCConcept.java";
  }

  @(Grammar_WithConceptsLiterals.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsLiterals.java";
  }

  @(Grammar_WithConceptsMill.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsMill.java";
  }

  @(Grammar_WithConceptsNodeFactory.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsNodeFactory.java";
  }

  @(Grammar_WithConceptsPackage.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsPackage.java";
  }

  @(Grammar_WithConceptsPackageImpl.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_ast/Grammar_WithConceptsPackageImpl.java";
  }

  @(_cocos!40):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos";
  }

  @(Grammar_WithConceptsASTActionCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsASTActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTActionCoCo.java";
  }

  @(Grammar_WithConceptsASTExpressionPredicateCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsASTExpressionPredicateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTExpressionPredicateCoCo.java";
  }

  @(Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.java";
  }

  @(Grammar_WithConceptsASTJavaCodeCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsASTJavaCodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTJavaCodeCoCo.java";
  }

  @(Grammar_WithConceptsASTMCConceptCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsASTMCConceptCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsASTMCConceptCoCo.java";
  }

  @(Grammar_WithConceptsCoCoChecker.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsCoCoChecker.java";
  }

  @(Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsGrammar_WithConceptsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_cocos/Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.java";
  }

  @(_od!40):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_od";
  }

  @(Grammar_WithConcepts2OD.java):JavaSourceFile{
    simpleName = "Grammar_WithConcepts2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_od/Grammar_WithConcepts2OD.java";
  }

  @(_parser!13):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser";
  }

  @(Grammar_WithConceptsAntlrBaseListener.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrBaseListener.java";
  }

  @(Grammar_WithConceptsAntlrLexer.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrLexer.java";
  }

  @(Grammar_WithConceptsAntlrListener.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrListener.java";
  }

  @(Grammar_WithConceptsAntlrParser.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsAntlrParser.java";
  }

  @(Grammar_WithConceptsParser.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsParser";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_parser/Grammar_WithConceptsParser.java";
  }

  @(_symboltable!18):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_symboltable";
  }

  @(Grammar_WithConceptsLanguage.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_symboltable/Grammar_WithConceptsLanguage.java";
  }

  @(Grammar_WithConceptsModelLoader.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_symboltable/Grammar_WithConceptsModelLoader.java";
  }

  @(_visitor!40):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_visitor";
  }

  @(Grammar_WithConceptsDelegatorVisitor.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsDelegatorVisitor.java";
  }

  @(Grammar_WithConceptsInheritanceVisitor.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsInheritanceVisitor.java";
  }

  @(Grammar_WithConceptsParentAwareVisitor.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsParentAwareVisitor.java";
  }

  @(Grammar_WithConceptsVisitor.java):JavaSourceFile{
    simpleName = "Grammar_WithConceptsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/de/monticore/grammar/grammar_withconcepts/_visitor/Grammar_WithConceptsVisitor.java";
  }

  @(reports!2):Directory{
    simpleName = "reports";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/reports";
  }

  @(de.monticore.grammar.concepts.antlr):Directory{
    simpleName = "de.monticore.grammar.concepts.antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/reports/de.monticore.grammar.concepts.antlr.Antlr";
  }

  @(de.monticore.grammar):Directory{
    simpleName = "de.monticore.grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/reports/de.monticore.grammar.Grammar";
  }

  @(de.monticore.grammar!2):Directory{
    simpleName = "de.monticore.grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/sourcecode/reports/de.monticore.grammar.Grammar_WithConcepts";
  }

  @(symboltable!13):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-sources/monticore/symboltable";
  }

  @(generated-test-sources!2):Directory{
    simpleName = "generated-test-sources";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources";
  }

  @(de!20):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de";
  }

  @(monticore!21):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore";
  }

  @(statechart!6):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart";
  }

  @(statechart!7):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart";
  }

  @(_ast!47):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast";
  }

  @(ASTAbstractAnything.java!2):JavaSourceFile{
    simpleName = "ASTAbstractAnything";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTAbstractAnything.java";
  }

  @(ASTAbstractAnythingBuilder.java!2):JavaSourceFile{
    simpleName = "ASTAbstractAnythingBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTAbstractAnythingBuilder.java";
  }

  @(ASTArgument.java!2):JavaSourceFile{
    simpleName = "ASTArgument";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTArgument.java";
  }

  @(ASTArgumentBuilder.java!2):JavaSourceFile{
    simpleName = "ASTArgumentBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTArgumentBuilder.java";
  }

  @(ASTBlockStatementExt.java!2):JavaSourceFile{
    simpleName = "ASTBlockStatementExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTBlockStatementExt.java";
  }

  @(ASTClassbodyExt.java!2):JavaSourceFile{
    simpleName = "ASTClassbodyExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTClassbodyExt.java";
  }

  @(ASTCode.java!2):JavaSourceFile{
    simpleName = "ASTCode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTCode.java";
  }

  @(ASTCodeBuilder.java!2):JavaSourceFile{
    simpleName = "ASTCodeBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTCodeBuilder.java";
  }

  @(ASTConstantsStatechart.java!2):JavaSourceFile{
    simpleName = "ASTConstantsStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTConstantsStatechart.java";
  }

  @(ASTEntryAction.java!2):JavaSourceFile{
    simpleName = "ASTEntryAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTEntryAction.java";
  }

  @(ASTEntryActionBuilder.java!2):JavaSourceFile{
    simpleName = "ASTEntryActionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTEntryActionBuilder.java";
  }

  @(ASTExitAction.java!2):JavaSourceFile{
    simpleName = "ASTExitAction";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTExitAction.java";
  }

  @(ASTExitActionBuilder.java!2):JavaSourceFile{
    simpleName = "ASTExitActionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTExitActionBuilder.java";
  }

  @(ASTExpressionExt.java!2):JavaSourceFile{
    simpleName = "ASTExpressionExt";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTExpressionExt.java";
  }

  @(ASTSCStructure.java!2):JavaSourceFile{
    simpleName = "ASTSCStructure";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTSCStructure.java";
  }

  @(ASTState.java!11):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTState.java";
  }

  @(ASTStateBuilder.java!11):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTStateBuilder.java";
  }

  @(ASTStatechart.java!3):JavaSourceFile{
    simpleName = "ASTStatechart";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTStatechart.java";
  }

  @(ASTStatechartBuilder.java!2):JavaSourceFile{
    simpleName = "ASTStatechartBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTStatechartBuilder.java";
  }

  @(ASTStatechartNode.java!2):JavaSourceFile{
    simpleName = "ASTStatechartNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTStatechartNode.java";
  }

  @(ASTTransition.java!10):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.java!10):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/ASTTransitionBuilder.java";
  }

  @(StatechartLiterals.java!2):JavaSourceFile{
    simpleName = "StatechartLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/StatechartLiterals.java";
  }

  @(StatechartMill.java!2):JavaSourceFile{
    simpleName = "StatechartMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/StatechartMill.java";
  }

  @(StatechartNodeFactory.java!2):JavaSourceFile{
    simpleName = "StatechartNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/StatechartNodeFactory.java";
  }

  @(StatechartPackage.java):JavaSourceFile{
    simpleName = "StatechartPackage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/StatechartPackage.java";
  }

  @(StatechartPackageImpl.java):JavaSourceFile{
    simpleName = "StatechartPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_ast/StatechartPackageImpl.java";
  }

  @(_cocos!41):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos";
  }

  @(StatechartASTAbstractAnythingCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTAbstractAnythingCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTAbstractAnythingCoCo.java";
  }

  @(StatechartASTArgumentCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTArgumentCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTArgumentCoCo.java";
  }

  @(StatechartASTBlockStatementExtCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTBlockStatementExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTBlockStatementExtCoCo.java";
  }

  @(StatechartASTClassbodyExtCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTClassbodyExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTClassbodyExtCoCo.java";
  }

  @(StatechartASTCodeCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTCodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTCodeCoCo.java";
  }

  @(StatechartASTEntryActionCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTEntryActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTEntryActionCoCo.java";
  }

  @(StatechartASTExitActionCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTExitActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTExitActionCoCo.java";
  }

  @(StatechartASTExpressionExtCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTExpressionExtCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTExpressionExtCoCo.java";
  }

  @(StatechartASTSCStructureCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTSCStructureCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTSCStructureCoCo.java";
  }

  @(StatechartASTStatechartCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTStatechartCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartCoCo.java";
  }

  @(StatechartASTStatechartNodeCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTStatechartNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTStatechartNodeCoCo.java";
  }

  @(StatechartASTStateCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTStateCoCo.java";
  }

  @(StatechartASTTransitionCoCo.java!2):JavaSourceFile{
    simpleName = "StatechartASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartASTTransitionCoCo.java";
  }

  @(StatechartCoCoChecker.java!2):JavaSourceFile{
    simpleName = "StatechartCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartCoCoChecker.java";
  }

  @(StatechartStatechartPackageCoCo.java):JavaSourceFile{
    simpleName = "StatechartStatechartPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_cocos/StatechartStatechartPackageCoCo.java";
  }

  @(_od!41):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_od";
  }

  @(Statechart2OD.java!2):JavaSourceFile{
    simpleName = "Statechart2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_od/Statechart2OD.java";
  }

  @(_symboltable!19):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_symboltable";
  }

  @(StatechartLanguage.java):JavaSourceFile{
    simpleName = "StatechartLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_symboltable/StatechartLanguage.java";
  }

  @(StatechartModelLoader.java):JavaSourceFile{
    simpleName = "StatechartModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_symboltable/StatechartModelLoader.java";
  }

  @(_visitor!41):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_visitor";
  }

  @(StatechartDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "StatechartDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_visitor/StatechartDelegatorVisitor.java";
  }

  @(StatechartInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "StatechartInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_visitor/StatechartInheritanceVisitor.java";
  }

  @(StatechartParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "StatechartParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_visitor/StatechartParentAwareVisitor.java";
  }

  @(StatechartVisitor.java!2):JavaSourceFile{
    simpleName = "StatechartVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/de/monticore/statechart/statechart/_visitor/StatechartVisitor.java";
  }

  @(emf!8):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf";
  }

  @(modelinstances):Directory{
    simpleName = "modelinstances";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/modelinstances";
  }

  @(grammar!12):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/modelinstances/grammar";
  }

  @(models):Directory{
    simpleName = "models";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models";
  }

  @(de!21):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de";
  }

  @(monticore!22):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore";
  }

  @(emf!9):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/emf";
  }

  @(grammar!13):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/grammar";
  }

  @(grammar!14):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/grammar/grammar";
  }

  @(lexicals!4):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/lexicals";
  }

  @(lexicals!5):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/lexicals/lexicals";
  }

  @(literals!4):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/literals";
  }

  @(literals!5):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/emf/models/de/monticore/literals/literals";
  }

  @(mc!8):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc";
  }

  @(grammars!6):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars";
  }

  @(lexicals!6):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals";
  }

  @(testlexicals!2):Directory{
    simpleName = "testlexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals";
  }

  @(_ast!48):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast";
  }

  @(ASTConstantsTestLexicals.java!2):JavaSourceFile{
    simpleName = "ASTConstantsTestLexicals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/ASTConstantsTestLexicals.java";
  }

  @(ASTTestLexicalsNode.java!2):JavaSourceFile{
    simpleName = "ASTTestLexicalsNode";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/ASTTestLexicalsNode.java";
  }

  @(TestLexicalsLiterals.java!2):JavaSourceFile{
    simpleName = "TestLexicalsLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsLiterals.java";
  }

  @(TestLexicalsMill.java!2):JavaSourceFile{
    simpleName = "TestLexicalsMill";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsMill.java";
  }

  @(TestLexicalsNodeFactory.java!2):JavaSourceFile{
    simpleName = "TestLexicalsNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsNodeFactory.java";
  }

  @(TestLexicalsPackage.java):JavaSourceFile{
    simpleName = "TestLexicalsPackage";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsPackage.java";
  }

  @(TestLexicalsPackageImpl.java):JavaSourceFile{
    simpleName = "TestLexicalsPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_ast/TestLexicalsPackageImpl.java";
  }

  @(_cocos!42):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_cocos";
  }

  @(TestLexicalsASTTestLexicalsNodeCoCo.java!2):JavaSourceFile{
    simpleName = "TestLexicalsASTTestLexicalsNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsASTTestLexicalsNodeCoCo.java";
  }

  @(TestLexicalsCoCoChecker.java!2):JavaSourceFile{
    simpleName = "TestLexicalsCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsCoCoChecker.java";
  }

  @(TestLexicalsTestLexicalsPackageCoCo.java):JavaSourceFile{
    simpleName = "TestLexicalsTestLexicalsPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_cocos/TestLexicalsTestLexicalsPackageCoCo.java";
  }

  @(_od!42):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_od";
  }

  @(TestLexicals2OD.java!2):JavaSourceFile{
    simpleName = "TestLexicals2OD";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_od/TestLexicals2OD.java";
  }

  @(_visitor!42):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_visitor";
  }

  @(TestLexicalsDelegatorVisitor.java!2):JavaSourceFile{
    simpleName = "TestLexicalsDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsDelegatorVisitor.java";
  }

  @(TestLexicalsInheritanceVisitor.java!2):JavaSourceFile{
    simpleName = "TestLexicalsInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsInheritanceVisitor.java";
  }

  @(TestLexicalsParentAwareVisitor.java!2):JavaSourceFile{
    simpleName = "TestLexicalsParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsParentAwareVisitor.java";
  }

  @(TestLexicalsVisitor.java!2):JavaSourceFile{
    simpleName = "TestLexicalsVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-generator/target/generated-test-sources/mc/grammars/lexicals/testlexicals/_visitor/TestLexicalsVisitor.java";
  }

  @(reports!3):Directory{
    simpleName = "reports";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/reports";
  }

  @(de.monticore.statechart):Directory{
    simpleName = "de.monticore.statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/reports/de.monticore.statechart.Statechart";
  }

  @(mc.grammars.lexicals):Directory{
    simpleName = "mc.grammars.lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/reports/mc.grammars.lexicals.TestLexicals";
  }

  @(test-annotations!2):Directory{
    simpleName = "test-annotations";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/generated-test-sources/test-annotations";
  }

  @(maven-archiver!3):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-archiver";
  }

  @(maven-status!3):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status";
  }

  @(maven-compiler-plugin!3):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status/maven-compiler-plugin";
  }

  @(compile!3):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!3):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(testCompile!2):Directory{
    simpleName = "testCompile";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status/maven-compiler-plugin/testCompile";
  }

  @(default-testCompile!2):Directory{
    simpleName = "default-testCompile";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile";
  }

  @(monticore-generator-4.5.5.1-sources.jar):JarArchive{
    simpleName = "monticore-generator-4.5.5.1-sources";
    nameExtension = "jar";
    fullName = "sources/monticore-generator/target/monticore-generator-4.5.5.1-sources.jar";
  }

  @(monticore-generator-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-generator-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-generator/target/monticore-generator-4.5.5.1.jar";
  }

  @(surefire-reports!2):Directory{
    simpleName = "surefire-reports";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/surefire-reports";
  }

  @(test-classes!2):Directory{
    simpleName = "test-classes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes";
  }

  @(cocos!10):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos";
  }

  @(invalid!2):Directory{
    simpleName = "invalid";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid";
  }

  @(A0276!2):Directory{
    simpleName = "A0276";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A0276";
  }

  @(A0277!2):Directory{
    simpleName = "A0277";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A0277";
  }

  @(A0278!2):Directory{
    simpleName = "A0278";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A0278";
  }

  @(A2025!2):Directory{
    simpleName = "A2025";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2025";
  }

  @(A2026!2):Directory{
    simpleName = "A2026";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2026";
  }

  @(A2030!2):Directory{
    simpleName = "A2030";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2030";
  }

  @(A2031!2):Directory{
    simpleName = "A2031";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2031";
  }

  @(A2102!2):Directory{
    simpleName = "A2102";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2102";
  }

  @(A2103!2):Directory{
    simpleName = "A2103";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2103";
  }

  @(A2106!2):Directory{
    simpleName = "A2106";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2106";
  }

  @(A2107!2):Directory{
    simpleName = "A2107";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2107";
  }

  @(A2116!2):Directory{
    simpleName = "A2116";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A2116";
  }

  @(A4001!2):Directory{
    simpleName = "A4001";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4001";
  }

  @(A4002!2):Directory{
    simpleName = "A4002";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4002";
  }

  @(A4003!2):Directory{
    simpleName = "A4003";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4003";
  }

  @(A4004!2):Directory{
    simpleName = "A4004";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4004";
  }

  @(A4005!2):Directory{
    simpleName = "A4005";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4005";
  }

  @(A4006!2):Directory{
    simpleName = "A4006";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4006";
  }

  @(A4007!2):Directory{
    simpleName = "A4007";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4007";
  }

  @(A4008!2):Directory{
    simpleName = "A4008";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4008";
  }

  @(A4009!2):Directory{
    simpleName = "A4009";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4009";
  }

  @(A4010!2):Directory{
    simpleName = "A4010";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4010";
  }

  @(A4011!2):Directory{
    simpleName = "A4011";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4011";
  }

  @(A4012!2):Directory{
    simpleName = "A4012";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4012";
  }

  @(A4013!2):Directory{
    simpleName = "A4013";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4013";
  }

  @(A4014!2):Directory{
    simpleName = "A4014";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4014";
  }

  @(A4015!2):Directory{
    simpleName = "A4015";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4015";
  }

  @(A4016!2):Directory{
    simpleName = "A4016";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4016";
  }

  @(A4017!2):Directory{
    simpleName = "A4017";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4017";
  }

  @(A4018!2):Directory{
    simpleName = "A4018";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4018";
  }

  @(A4019!2):Directory{
    simpleName = "A4019";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4019";
  }

  @(A4020!2):Directory{
    simpleName = "A4020";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4020";
  }

  @(A4021!2):Directory{
    simpleName = "A4021";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4021";
  }

  @(A4022!2):Directory{
    simpleName = "A4022";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4022";
  }

  @(A4023!2):Directory{
    simpleName = "A4023";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4023";
  }

  @(A4024!2):Directory{
    simpleName = "A4024";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4024";
  }

  @(A4025!2):Directory{
    simpleName = "A4025";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4025";
  }

  @(A4026!2):Directory{
    simpleName = "A4026";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4026";
  }

  @(A4027!2):Directory{
    simpleName = "A4027";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4027";
  }

  @(A4028!2):Directory{
    simpleName = "A4028";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4028";
  }

  @(A4029!2):Directory{
    simpleName = "A4029";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4029";
  }

  @(A4030!2):Directory{
    simpleName = "A4030";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4030";
  }

  @(A4031!2):Directory{
    simpleName = "A4031";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4031";
  }

  @(A4032!2):Directory{
    simpleName = "A4032";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4032";
  }

  @(A4033!2):Directory{
    simpleName = "A4033";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4033";
  }

  @(A4041!2):Directory{
    simpleName = "A4041";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4041";
  }

  @(A4047!2):Directory{
    simpleName = "A4047";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4047";
  }

  @(A4054!2):Directory{
    simpleName = "A4054";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4054";
  }

  @(A4056!2):Directory{
    simpleName = "A4056";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4056";
  }

  @(A4058!2):Directory{
    simpleName = "A4058";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4058";
  }

  @(A4097!2):Directory{
    simpleName = "A4097";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/invalid/A4097";
  }

  @(valid!2):Directory{
    simpleName = "valid";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/valid";
  }

  @(enum!2):Directory{
    simpleName = "enum";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/cocos/valid/enum";
  }

  @(de!22):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de";
  }

  @(monticore!23):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore";
  }

  @(codegen!4):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen";
  }

  @(AstDependentGeneratorTest.class):JavaClassFile{
    simpleName = "AstDependentGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/AstDependentGeneratorTest.class";
  }

  @(cd2java!4):Directory{
    simpleName = "cd2java";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java";
  }

  @(ast!9):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java/ast";
  }

  @(AstGeneratorTest.class):JavaClassFile{
    simpleName = "AstGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java/ast/AstGeneratorTest.class";
  }

  @(CdDecoratorTest.class):JavaClassFile{
    simpleName = "CdDecoratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java/ast/CdDecoratorTest.class";
  }

  @(cocos!11):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java/cocos";
  }

  @(CoCoGeneratorTest.class):JavaClassFile{
    simpleName = "CoCoGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/cd2java/cocos/CoCoGeneratorTest.class";
  }

  @(emf!10):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/emf";
  }

  @(ASTNodeTest.class):JavaClassFile{
    simpleName = "ASTNodeTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/emf/ASTNodeTest.class";
  }

  @(GrammarDiffsTest.class):JavaClassFile{
    simpleName = "GrammarDiffsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/emf/GrammarDiffsTest.class";
  }

  @(GrammarSerDeserTest.class):JavaClassFile{
    simpleName = "GrammarSerDeserTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/emf/GrammarSerDeserTest.class";
  }

  @(GeneratorTest.class):JavaClassFile{
    simpleName = "GeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/GeneratorTest.class";
  }

  @(mc2cd!4):Directory{
    simpleName = "mc2cd";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd";
  }

  @(manipul!4):Directory{
    simpleName = "manipul";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/manipul";
  }

  @(RemoveRedundantReferencesManipulationTest.class):JavaClassFile{
    simpleName = "RemoveRedundantReferencesManipulationTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/manipul/RemoveRedundantReferencesManipulationTest.class";
  }

  @(PrettyPrintingTranslation.class):JavaClassFile{
    simpleName = "PrettyPrintingTranslation";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/PrettyPrintingTranslation.class";
  }

  @(TestHelper.class):JavaClassFile{
    simpleName = "TestHelper";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/TestHelper.class";
  }

  @(transl!4):Directory{
    simpleName = "transl";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl";
  }

  @(AbstractProdTest.class):JavaClassFile{
    simpleName = "AbstractProdTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AbstractProdTest.class";
  }

  @(AstRuleInheritanceTest.class):JavaClassFile{
    simpleName = "AstRuleInheritanceTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AstRuleInheritanceTest.class";
  }

  @(AstRuleTest.class):JavaClassFile{
    simpleName = "AstRuleTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AstRuleTest.class";
  }

  @(AttributeInASTMultiplicityTest.class):JavaClassFile{
    simpleName = "AttributeInASTMultiplicityTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AttributeInASTMultiplicityTest.class";
  }

  @(AttributeInASTOverridingTest.class):JavaClassFile{
    simpleName = "AttributeInASTOverridingTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AttributeInASTOverridingTest.class";
  }

  @(AttributeInASTTypeTest.class):JavaClassFile{
    simpleName = "AttributeInASTTypeTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/AttributeInASTTypeTest.class";
  }

  @(ConstantTest.class):JavaClassFile{
    simpleName = "ConstantTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/ConstantTest.class";
  }

  @(DirectLeftRecursionDetectorTest.class):JavaClassFile{
    simpleName = "DirectLeftRecursionDetectorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/DirectLeftRecursionDetectorTest.class";
  }

  @(EnumProdTest.class):JavaClassFile{
    simpleName = "EnumProdTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/EnumProdTest.class";
  }

  @(ExternalImplementationTest.class):JavaClassFile{
    simpleName = "ExternalImplementationTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/ExternalImplementationTest.class";
  }

  @(InheritanceTest.class):JavaClassFile{
    simpleName = "InheritanceTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/InheritanceTest.class";
  }

  @(InheritedNonTerminalsTest.class):JavaClassFile{
    simpleName = "InheritedNonTerminalsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/InheritedNonTerminalsTest.class";
  }

  @(InterfaceProdTest.class):JavaClassFile{
    simpleName = "InterfaceProdTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/InterfaceProdTest.class";
  }

  @(NonTerminalMultiplicityTest.class):JavaClassFile{
    simpleName = "NonTerminalMultiplicityTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/NonTerminalMultiplicityTest.class";
  }

  @(OverridingClassProdTest.class):JavaClassFile{
    simpleName = "OverridingClassProdTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/OverridingClassProdTest.class";
  }

  @(StarImportSuperGrammarTest.class):JavaClassFile{
    simpleName = "StarImportSuperGrammarTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/StarImportSuperGrammarTest.class";
  }

  @(TerminalWithUsageNameTest.class):JavaClassFile{
    simpleName = "TerminalWithUsageNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/TerminalWithUsageNameTest.class";
  }

  @(TokenMultiplicityTest.class):JavaClassFile{
    simpleName = "TokenMultiplicityTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/TokenMultiplicityTest.class";
  }

  @(TokenTypeTest.class):JavaClassFile{
    simpleName = "TokenTypeTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/TokenTypeTest.class";
  }

  @(UsageNameTest.class):JavaClassFile{
    simpleName = "UsageNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/mc2cd/transl/UsageNameTest.class";
  }

  @(parser!7):Directory{
    simpleName = "parser";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/parser";
  }

  @(MCGrammarParserTest.class):JavaClassFile{
    simpleName = "MCGrammarParserTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/parser/MCGrammarParserTest.class";
  }

  @(ParserGeneratorTest.class):JavaClassFile{
    simpleName = "ParserGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/parser/ParserGeneratorTest.class";
  }

  @(prettyprint!6):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/prettyprint";
  }

  @(MCGrammarPrettyPrinterTest.class):JavaClassFile{
    simpleName = "MCGrammarPrettyPrinterTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/prettyprint/MCGrammarPrettyPrinterTest.class";
  }

  @(symboltable!14):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/symboltable";
  }

  @(SymbolTableGeneratorTest.class):JavaClassFile{
    simpleName = "SymbolTableGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/symboltable/SymbolTableGeneratorTest.class";
  }

  @(types!9):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/types";
  }

  @(TypeResolverGeneratorTest.class):JavaClassFile{
    simpleName = "TypeResolverGeneratorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/codegen/types/TypeResolverGeneratorTest.class";
  }

  @(emf!11):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/emf";
  }

  @(expression!7):Directory{
    simpleName = "expression";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/expression";
  }

  @(fautomaton!5):Directory{
    simpleName = "fautomaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/fautomaton";
  }

  @(action!5):Directory{
    simpleName = "action";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/fautomaton/action";
  }

  @(automaton!16):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/fautomaton/automaton";
  }

  @(automatonwithaction!4):Directory{
    simpleName = "automatonwithaction";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/fautomaton/automatonwithaction";
  }

  @(grammar!15):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar";
  }

  @(cocos!12):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos";
  }

  @(AbstractNTNotExtendInterfaceOrExternalNTsTest.class):JavaClassFile{
    simpleName = "AbstractNTNotExtendInterfaceOrExternalNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AbstractNTNotExtendInterfaceOrExternalNTsTest.class";
  }

  @(AbstractNTOnlyExtendsOneNTOrClassTest.class):JavaClassFile{
    simpleName = "AbstractNTOnlyExtendsOneNTOrClassTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOneNTOrClassTest.class";
  }

  @(AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.class):JavaClassFile{
    simpleName = "AbstractNTOnlyExtendsOrAstextendsNTOrClassTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.class";
  }

  @(AbstractNTOnlyImplementInterfaceNTsTest.class):JavaClassFile{
    simpleName = "AbstractNTOnlyImplementInterfaceNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AbstractNTOnlyImplementInterfaceNTsTest.class";
  }

  @(AbstractNTWithoutExtensionOnlyInComponentGrammarTest.class):JavaClassFile{
    simpleName = "AbstractNTWithoutExtensionOnlyInComponentGrammarTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AbstractNTWithoutExtensionOnlyInComponentGrammarTest.class";
  }

  @(ASTRuleAndNTUseSameAttrNameForDiffNTsTest.class):JavaClassFile{
    simpleName = "ASTRuleAndNTUseSameAttrNameForDiffNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ASTRuleAndNTUseSameAttrNameForDiffNTsTest.class";
  }

  @(AttributeNameForNTDuplicatedTest.class):JavaClassFile{
    simpleName = "AttributeNameForNTDuplicatedTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AttributeNameForNTDuplicatedTest.class";
  }

  @(AttributeNameLowerCaseTest.class):JavaClassFile{
    simpleName = "AttributeNameLowerCaseTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/AttributeNameLowerCaseTest.class";
  }

  @(CocoTest.class):JavaClassFile{
    simpleName = "CocoTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/CocoTest.class";
  }

  @(DuplicatedEnumConstantTest.class):JavaClassFile{
    simpleName = "DuplicatedEnumConstantTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/DuplicatedEnumConstantTest.class";
  }

  @(DuplicatedSymbolDefinitionInProdTest.class):JavaClassFile{
    simpleName = "DuplicatedSymbolDefinitionInProdTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/DuplicatedSymbolDefinitionInProdTest.class";
  }

  @(ExternalNTOnlyInComponentGrammarTest.class):JavaClassFile{
    simpleName = "ExternalNTOnlyInComponentGrammarTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ExternalNTOnlyInComponentGrammarTest.class";
  }

  @(GrammarInheritanceCycleTest.class):JavaClassFile{
    simpleName = "GrammarInheritanceCycleTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/GrammarInheritanceCycleTest.class";
  }

  @(GrammarNameEqualsFileNameTest.class):JavaClassFile{
    simpleName = "GrammarNameEqualsFileNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/GrammarNameEqualsFileNameTest.class";
  }

  @(GrammarNameUpperCaseTest.class):JavaClassFile{
    simpleName = "GrammarNameUpperCaseTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/GrammarNameUpperCaseTest.class";
  }

  @(InterfaceNTOnlyExtendInterfaceNTsTest.class):JavaClassFile{
    simpleName = "InterfaceNTOnlyExtendInterfaceNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/InterfaceNTOnlyExtendInterfaceNTsTest.class";
  }

  @(InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.class):JavaClassFile{
    simpleName = "InterfaceNTWithoutImplementationOnlyInComponentGrammarTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.class";
  }

  @(KeywordAlternativeNameTest.class):JavaClassFile{
    simpleName = "KeywordAlternativeNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/KeywordAlternativeNameTest.class";
  }

  @(KeywordInvalidNameTest.class):JavaClassFile{
    simpleName = "KeywordInvalidNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/KeywordInvalidNameTest.class";
  }

  @(LeftRecursiveRulesInBlockTest.class):JavaClassFile{
    simpleName = "LeftRecursiveRulesInBlockTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/LeftRecursiveRulesInBlockTest.class";
  }

  @(LexNTsNotEmptyTest.class):JavaClassFile{
    simpleName = "LexNTsNotEmptyTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/LexNTsNotEmptyTest.class";
  }

  @(LexNTsOnlyUseLexNTsTest.class):JavaClassFile{
    simpleName = "LexNTsOnlyUseLexNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/LexNTsOnlyUseLexNTsTest.class";
  }

  @(MultipleASTRulesTest.class):JavaClassFile{
    simpleName = "MultipleASTRulesTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/MultipleASTRulesTest.class";
  }

  @(NoASTExtendsForClassesTest.class):JavaClassFile{
    simpleName = "NoASTExtendsForClassesTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NoASTExtendsForClassesTest.class";
  }

  @(NoASTRuleForEnumNTsTest.class):JavaClassFile{
    simpleName = "NoASTRuleForEnumNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NoASTRuleForEnumNTsTest.class";
  }

  @(NoNTInheritanceCycleTest.class):JavaClassFile{
    simpleName = "NoNTInheritanceCycleTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NoNTInheritanceCycleTest.class";
  }

  @(NTAndASTRuleExtendTypeTest.class):JavaClassFile{
    simpleName = "NTAndASTRuleExtendTypeTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTAndASTRuleExtendTypeTest.class";
  }

  @(NTDefinedByAtmostOneProductionTest.class):JavaClassFile{
    simpleName = "NTDefinedByAtmostOneProductionTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTDefinedByAtmostOneProductionTest.class";
  }

  @(NTForASTRuleExistsTest.class):JavaClassFile{
    simpleName = "NTForASTRuleExistsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTForASTRuleExistsTest.class";
  }

  @(NTNotExtendInterfaceOrExternalNTsTest.class):JavaClassFile{
    simpleName = "NTNotExtendInterfaceOrExternalNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTNotExtendInterfaceOrExternalNTsTest.class";
  }

  @(NTOnlyExtendsOneNTOrClassTest.class):JavaClassFile{
    simpleName = "NTOnlyExtendsOneNTOrClassTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTOnlyExtendsOneNTOrClassTest.class";
  }

  @(NTOnlyExtendsOrAstextendsNTOrClassTest.class):JavaClassFile{
    simpleName = "NTOnlyExtendsOrAstextendsNTOrClassTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTOnlyExtendsOrAstextendsNTOrClassTest.class";
  }

  @(NTOnlyImplementInterfaceNTsTest.class):JavaClassFile{
    simpleName = "NTOnlyImplementInterfaceNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTOnlyImplementInterfaceNTsTest.class";
  }

  @(NTUniqueIgnoreCaseTest.class):JavaClassFile{
    simpleName = "NTUniqueIgnoreCaseTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/NTUniqueIgnoreCaseTest.class";
  }

  @(OverridingAbstractNTsHaveNoSuperRulesTest.class):JavaClassFile{
    simpleName = "OverridingAbstractNTsHaveNoSuperRulesTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingAbstractNTsHaveNoSuperRulesTest.class";
  }

  @(OverridingAbstractNTsTest.class):JavaClassFile{
    simpleName = "OverridingAbstractNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingAbstractNTsTest.class";
  }

  @(OverridingEnumNTsTest.class):JavaClassFile{
    simpleName = "OverridingEnumNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingEnumNTsTest.class";
  }

  @(OverridingInterfaceNTsTest.class):JavaClassFile{
    simpleName = "OverridingInterfaceNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingInterfaceNTsTest.class";
  }

  @(OverridingLexNTsTest.class):JavaClassFile{
    simpleName = "OverridingLexNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingLexNTsTest.class";
  }

  @(OverridingNTsHaveNoSuperRulesTest.class):JavaClassFile{
    simpleName = "OverridingNTsHaveNoSuperRulesTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingNTsHaveNoSuperRulesTest.class";
  }

  @(OverridingNTsTest.class):JavaClassFile{
    simpleName = "OverridingNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/OverridingNTsTest.class";
  }

  @(ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.class):JavaClassFile{
    simpleName = "ProdAndExtendedProdUseSameAttrNameForDiffNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.class";
  }

  @(ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.class):JavaClassFile{
    simpleName = "ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.class";
  }

  @(ProdStartsWithCapitalTest.class):JavaClassFile{
    simpleName = "ProdStartsWithCapitalTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ProdStartsWithCapitalTest.class";
  }

  @(ProdWithExtensionMustNotBeOverriddenTest.class):JavaClassFile{
    simpleName = "ProdWithExtensionMustNotBeOverriddenTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ProdWithExtensionMustNotBeOverriddenTest.class";
  }

  @(ReferencedNTNotDefinedTest.class):JavaClassFile{
    simpleName = "ReferencedNTNotDefinedTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/ReferencedNTNotDefinedTest.class";
  }

  @(SubrulesUseInterfaceNTsTest.class):JavaClassFile{
    simpleName = "SubrulesUseInterfaceNTsTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/SubrulesUseInterfaceNTsTest.class";
  }

  @(SymbolWithoutNameTest.class):JavaClassFile{
    simpleName = "SymbolWithoutNameTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/SymbolWithoutNameTest.class";
  }

  @(TerminalEmptyStringTest.class):JavaClassFile{
    simpleName = "TerminalEmptyStringTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/TerminalEmptyStringTest.class";
  }

  @(UsedLexNTNotDefinedTest.class):JavaClassFile{
    simpleName = "UsedLexNTNotDefinedTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/UsedLexNTNotDefinedTest.class";
  }

  @(UsedNTNotDefinedTest.class):JavaClassFile{
    simpleName = "UsedNTNotDefinedTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/cocos/UsedNTNotDefinedTest.class";
  }

  @(symboltable!15):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/symboltable";
  }

  @(MontiCoreGrammarSymbolTableCreatorTest.class):JavaClassFile{
    simpleName = "MontiCoreGrammarSymbolTableCreatorTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/grammar/symboltable/MontiCoreGrammarSymbolTableCreatorTest.class";
  }

  @(GrammarGlobalScopeTestFactory.class):JavaClassFile{
    simpleName = "GrammarGlobalScopeTestFactory";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/GrammarGlobalScopeTestFactory.class";
  }

  @(groovy!2):Directory{
    simpleName = "groovy";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/groovy";
  }

  @(inherited!3):Directory{
    simpleName = "inherited";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/inherited";
  }

  @(sub!7):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/inherited/sub";
  }

  @(subsub!2):Directory{
    simpleName = "subsub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/inherited/subsub";
  }

  @(interfaces!5):Directory{
    simpleName = "interfaces";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/interfaces";
  }

  @(MCGrammarLanguageFamilySymbolTableTest.class):JavaClassFile{
    simpleName = "MCGrammarLanguageFamilySymbolTableTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/MCGrammarLanguageFamilySymbolTableTest.class";
  }

  @(MontiCoreScriptTest.class):JavaClassFile{
    simpleName = "MontiCoreScriptTest";
    nameExtension = "class";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/MontiCoreScriptTest.class";
  }

  @(script!2):Directory{
    simpleName = "script";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/script";
  }

  @(statechart!8):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/statechart";
  }

  @(sub!8):Directory{
    simpleName = "sub";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/statechart/sub";
  }

  @(symboltable!16):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/symboltable";
  }

  @(visitors!3):Directory{
    simpleName = "visitors";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/de/monticore/visitors";
  }

  @(mc!9):Directory{
    simpleName = "mc";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc";
  }

  @(grammars!7):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars";
  }

  @(common!4):Directory{
    simpleName = "common";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/common";
  }

  @(concepts!6):Directory{
    simpleName = "concepts";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts";
  }

  @(antlr!11):Directory{
    simpleName = "antlr";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts/antlr";
  }

  @(attributes!3):Directory{
    simpleName = "attributes";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts/attributes";
  }

  @(texteditor!4):Directory{
    simpleName = "texteditor";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts/texteditor";
  }

  @(texteditoringrammar!3):Directory{
    simpleName = "texteditoringrammar";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts/texteditoringrammar";
  }

  @(visualoutline!3):Directory{
    simpleName = "visualoutline";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/concepts/visualoutline";
  }

  @(lexicals!7):Directory{
    simpleName = "lexicals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/lexicals";
  }

  @(literals!6):Directory{
    simpleName = "literals";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/literals";
  }

  @(types!10):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/grammars/types";
  }

  @(robot!5):Directory{
    simpleName = "robot";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc/robot";
  }

  @(mc2cdtransformation!2):Directory{
    simpleName = "mc2cdtransformation";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc2cdtransformation";
  }

  @(super!2):Directory{
    simpleName = "super";
    nameExtension = "";
    fullName = "sources/monticore-generator/target/test-classes/mc2cdtransformation/super";
  }

  monticoreruntime:Module{
    simpleName = "monticoreruntime";
  }

  @(monticore-runtime):Directory{
    simpleName = "monticore-runtime";
    nameExtension = "";
    fullName = "sources/monticore-runtime";
  }

  @(src!14):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src";
  }

  @(main!14):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main";
  }

  @(java!19):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java";
  }

  @(de!36):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de";
  }

  @(monticore!39):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore";
  }

  @(AmbiguityException.java):JavaSourceFile{
    simpleName = "AmbiguityException";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/AmbiguityException.java";
  }

  @(annotations!6):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/annotations";
  }

  @(Visit.java):JavaSourceFile{
    simpleName = "Visit";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/annotations/Visit.java";
  }

  @(VisitAnnotations.java):JavaSourceFile{
    simpleName = "VisitAnnotations";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/annotations/VisitAnnotations.java";
  }

  @(antlr4):Directory{
    simpleName = "antlr4";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/antlr4";
  }

  @(MCConcreteParser.java):JavaSourceFile{
    simpleName = "MCConcreteParser";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/antlr4/MCConcreteParser.java";
  }

  @(MCErrorListener.java):JavaSourceFile{
    simpleName = "MCErrorListener";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/antlr4/MCErrorListener.java";
  }

  @(MCLexer.java):JavaSourceFile{
    simpleName = "MCLexer";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/antlr4/MCLexer.java";
  }

  @(MCParser.java):JavaSourceFile{
    simpleName = "MCParser";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/antlr4/MCParser.java";
  }

  @(ast!10):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast";
  }

  @(ASTCNode.java!2):JavaSourceFile{
    simpleName = "ASTCNode";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast/ASTCNode.java";
  }

  @(ASTNode.java):JavaSourceFile{
    simpleName = "ASTNode";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast/ASTNode.java";
  }

  @(ASTNodeNull.java):JavaSourceFile{
    simpleName = "ASTNodeNull";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast/ASTNodeNull.java";
  }

  @(Comment.java):JavaSourceFile{
    simpleName = "Comment";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast/Comment.java";
  }

  @(CompareNotSupportedException.java):JavaSourceFile{
    simpleName = "CompareNotSupportedException";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ast/CompareNotSupportedException.java";
  }

  @(CommentExt.java):JavaSourceFile{
    simpleName = "CommentExt";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/CommentExt.java";
  }

  @(CommonModelingLanguage.java):JavaSourceFile{
    simpleName = "CommonModelingLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/CommonModelingLanguage.java";
  }

  @(CommonModelNameCalculator.java):JavaSourceFile{
    simpleName = "CommonModelNameCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/CommonModelNameCalculator.java";
  }

  @(EmbeddingModelingLanguage.java):JavaSourceFile{
    simpleName = "EmbeddingModelingLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/EmbeddingModelingLanguage.java";
  }

  @(EmptyModelNameCalculator.java):JavaSourceFile{
    simpleName = "EmptyModelNameCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/EmptyModelNameCalculator.java";
  }

  @(generating):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating";
  }

  @(GeneratorEngine.java):JavaSourceFile{
    simpleName = "GeneratorEngine";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/GeneratorEngine.java";
  }

  @(GeneratorSetup.java):JavaSourceFile{
    simpleName = "GeneratorSetup";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/GeneratorSetup.java";
  }

  @(templateengine):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine";
  }

  @(CodeHookPoint.java):JavaSourceFile{
    simpleName = "CodeHookPoint";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/CodeHookPoint.java";
  }

  @(freemarker):Directory{
    simpleName = "freemarker";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker";
  }

  @(FreeMarkerTemplateEngine.java):JavaSourceFile{
    simpleName = "FreeMarkerTemplateEngine";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/FreeMarkerTemplateEngine.java";
  }

  @(MontiCoreFileTemplateLoader.java):JavaSourceFile{
    simpleName = "MontiCoreFileTemplateLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/MontiCoreFileTemplateLoader.java";
  }

  @(MontiCoreFreeMarkerException.java):JavaSourceFile{
    simpleName = "MontiCoreFreeMarkerException";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/MontiCoreFreeMarkerException.java";
  }

  @(MontiCoreTemplateExceptionHandler.java):JavaSourceFile{
    simpleName = "MontiCoreTemplateExceptionHandler";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/MontiCoreTemplateExceptionHandler.java";
  }

  @(MontiCoreTemplateLoader.java):JavaSourceFile{
    simpleName = "MontiCoreTemplateLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/MontiCoreTemplateLoader.java";
  }

  @(SimpleHashFactory.java):JavaSourceFile{
    simpleName = "SimpleHashFactory";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/freemarker/SimpleHashFactory.java";
  }

  @(GlobalExtensionManagement.java):JavaSourceFile{
    simpleName = "GlobalExtensionManagement";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/GlobalExtensionManagement.java";
  }

  @(HookPoint.java):JavaSourceFile{
    simpleName = "HookPoint";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/HookPoint.java";
  }

  @(ObjectFactory.java):JavaSourceFile{
    simpleName = "ObjectFactory";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/ObjectFactory.java";
  }

  @(reporting!2):Directory{
    simpleName = "reporting";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting";
  }

  @(artifacts):Directory{
    simpleName = "artifacts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts";
  }

  @(ArtifactReporter.java):JavaSourceFile{
    simpleName = "ArtifactReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/ArtifactReporter.java";
  }

  @(formatter):Directory{
    simpleName = "formatter";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/formatter";
  }

  @(AFormatter.java):JavaSourceFile{
    simpleName = "AFormatter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/formatter/AFormatter.java";
  }

  @(GMLFormatter.java):JavaSourceFile{
    simpleName = "GMLFormatter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/formatter/GMLFormatter.java";
  }

  @(GVFormatter.java):JavaSourceFile{
    simpleName = "GVFormatter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/formatter/GVFormatter.java";
  }

  @(model!2):Directory{
    simpleName = "model";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model";
  }

  @(APkg.java):JavaSourceFile{
    simpleName = "APkg";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/APkg.java";
  }

  @(Element.java):JavaSourceFile{
    simpleName = "Element";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/Element.java";
  }

  @(ElementFactory.java):JavaSourceFile{
    simpleName = "ElementFactory";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/ElementFactory.java";
  }

  @(ElementType.java):JavaSourceFile{
    simpleName = "ElementType";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/ElementType.java";
  }

  @(Pkg.java):JavaSourceFile{
    simpleName = "Pkg";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/Pkg.java";
  }

  @(RootPkg.java):JavaSourceFile{
    simpleName = "RootPkg";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/model/RootPkg.java";
  }

  @(ReportingNameHelper.java):JavaSourceFile{
    simpleName = "ReportingNameHelper";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/artifacts/ReportingNameHelper.java";
  }

  @(commons!2):Directory{
    simpleName = "commons";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons";
  }

  @(AReporter.java):JavaSourceFile{
    simpleName = "AReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/AReporter.java";
  }

  @(ASTNodeIdentHelper.java):JavaSourceFile{
    simpleName = "ASTNodeIdentHelper";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ASTNodeIdentHelper.java";
  }

  @(DefaultReportEventHandler.java):JavaSourceFile{
    simpleName = "DefaultReportEventHandler";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/DefaultReportEventHandler.java";
  }

  @(IASTNodeIdentHelper.java):JavaSourceFile{
    simpleName = "IASTNodeIdentHelper";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/IASTNodeIdentHelper.java";
  }

  @(IReportEventHandler.java):JavaSourceFile{
    simpleName = "IReportEventHandler";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/IReportEventHandler.java";
  }

  @(Layouter.java):JavaSourceFile{
    simpleName = "Layouter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/Layouter.java";
  }

  @(MapUtil.java):JavaSourceFile{
    simpleName = "MapUtil";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/MapUtil.java";
  }

  @(ObjectCountVisitor.java):JavaSourceFile{
    simpleName = "ObjectCountVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ObjectCountVisitor.java";
  }

  @(ReportCreator.java):JavaSourceFile{
    simpleName = "ReportCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ReportCreator.java";
  }

  @(ReportingConstants.java):JavaSourceFile{
    simpleName = "ReportingConstants";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ReportingConstants.java";
  }

  @(ReportingHelper.java):JavaSourceFile{
    simpleName = "ReportingHelper";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ReportingHelper.java";
  }

  @(ReportingRepository.java):JavaSourceFile{
    simpleName = "ReportingRepository";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ReportingRepository.java";
  }

  @(ReportManager.java):JavaSourceFile{
    simpleName = "ReportManager";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/ReportManager.java";
  }

  @(TreePrintVisitor.java):JavaSourceFile{
    simpleName = "TreePrintVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/commons/TreePrintVisitor.java";
  }

  @(reporter):Directory{
    simpleName = "reporter";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter";
  }

  @(ArtifactGmlReporter.java):JavaSourceFile{
    simpleName = "ArtifactGmlReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/ArtifactGmlReporter.java";
  }

  @(ArtifactGVReporter.java):JavaSourceFile{
    simpleName = "ArtifactGVReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/ArtifactGVReporter.java";
  }

  @(DetailedReporter.java):JavaSourceFile{
    simpleName = "DetailedReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/DetailedReporter.java";
  }

  @(GeneratedFilesReporter.java):JavaSourceFile{
    simpleName = "GeneratedFilesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/GeneratedFilesReporter.java";
  }

  @(HandWrittenCodeReporter.java):JavaSourceFile{
    simpleName = "HandWrittenCodeReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/HandWrittenCodeReporter.java";
  }

  @(HookPointReporter.java):JavaSourceFile{
    simpleName = "HookPointReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/HookPointReporter.java";
  }

  @(InputOutputFilesReporter.java):JavaSourceFile{
    simpleName = "InputOutputFilesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/InputOutputFilesReporter.java";
  }

  @(InstantiationsReporter.java):JavaSourceFile{
    simpleName = "InstantiationsReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/InstantiationsReporter.java";
  }

  @(InvolvedFilesReporter.java):JavaSourceFile{
    simpleName = "InvolvedFilesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/InvolvedFilesReporter.java";
  }

  @(NodeTreeDecoratedReporter.java):JavaSourceFile{
    simpleName = "NodeTreeDecoratedReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/NodeTreeDecoratedReporter.java";
  }

  @(NodeTreeReporter.java):JavaSourceFile{
    simpleName = "NodeTreeReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/NodeTreeReporter.java";
  }

  @(NodeTypesReporter.java):JavaSourceFile{
    simpleName = "NodeTypesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/NodeTypesReporter.java";
  }

  @(SuccessfulReporter.java):JavaSourceFile{
    simpleName = "SuccessfulReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/SuccessfulReporter.java";
  }

  @(SummaryReporter.java):JavaSourceFile{
    simpleName = "SummaryReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/SummaryReporter.java";
  }

  @(SymbolTableReporter.java):JavaSourceFile{
    simpleName = "SymbolTableReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/SymbolTableReporter.java";
  }

  @(TemplatesReporter.java):JavaSourceFile{
    simpleName = "TemplatesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/TemplatesReporter.java";
  }

  @(TemplateTreeReporter.java):JavaSourceFile{
    simpleName = "TemplateTreeReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/TemplateTreeReporter.java";
  }

  @(TransformationReporter.java):JavaSourceFile{
    simpleName = "TransformationReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/TransformationReporter.java";
  }

  @(VariablesReporter.java):JavaSourceFile{
    simpleName = "VariablesReporter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/reporter/VariablesReporter.java";
  }

  @(Reporting.java):JavaSourceFile{
    simpleName = "Reporting";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/reporting/Reporting.java";
  }

  @(StringHookPoint.java):JavaSourceFile{
    simpleName = "StringHookPoint";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/StringHookPoint.java";
  }

  @(TemplateController.java):JavaSourceFile{
    simpleName = "TemplateController";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/TemplateController.java";
  }

  @(TemplateHookPoint.java):JavaSourceFile{
    simpleName = "TemplateHookPoint";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/TemplateHookPoint.java";
  }

  @(TemplateStringHookPoint.java):JavaSourceFile{
    simpleName = "TemplateStringHookPoint";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/generating/templateengine/TemplateStringHookPoint.java";
  }

  @(incremental):Directory{
    simpleName = "incremental";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/incremental";
  }

  @(IncrementalChecker.java):JavaSourceFile{
    simpleName = "IncrementalChecker";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/incremental/IncrementalChecker.java";
  }

  @(io):Directory{
    simpleName = "io";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io";
  }

  @(FileReaderWriter.java):JavaSourceFile{
    simpleName = "FileReaderWriter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/FileReaderWriter.java";
  }

  @(paths):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths";
  }

  @(IterablePath.java):JavaSourceFile{
    simpleName = "IterablePath";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths/IterablePath.java";
  }

  @(ModelCoordinate.java):JavaSourceFile{
    simpleName = "ModelCoordinate";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths/ModelCoordinate.java";
  }

  @(ModelCoordinateImpl.java):JavaSourceFile{
    simpleName = "ModelCoordinateImpl";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths/ModelCoordinateImpl.java";
  }

  @(ModelCoordinates.java):JavaSourceFile{
    simpleName = "ModelCoordinates";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths/ModelCoordinates.java";
  }

  @(ModelPath.java):JavaSourceFile{
    simpleName = "ModelPath";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/io/paths/ModelPath.java";
  }

  @(ModelingLanguage.java):JavaSourceFile{
    simpleName = "ModelingLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ModelingLanguage.java";
  }

  @(ModelingLanguageFamily.java):JavaSourceFile{
    simpleName = "ModelingLanguageFamily";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ModelingLanguageFamily.java";
  }

  @(modelloader):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/modelloader";
  }

  @(AstProvider.java):JavaSourceFile{
    simpleName = "AstProvider";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/modelloader/AstProvider.java";
  }

  @(FileBasedAstProvider.java):JavaSourceFile{
    simpleName = "FileBasedAstProvider";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/modelloader/FileBasedAstProvider.java";
  }

  @(ModelingLanguageModelLoader.java):JavaSourceFile{
    simpleName = "ModelingLanguageModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/modelloader/ModelingLanguageModelLoader.java";
  }

  @(ModelNameCalculator.java):JavaSourceFile{
    simpleName = "ModelNameCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/ModelNameCalculator.java";
  }

  @(MontiCoreConstants.java):JavaSourceFile{
    simpleName = "MontiCoreConstants";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/MontiCoreConstants.java";
  }

  @(parsing):Directory{
    simpleName = "parsing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/parsing";
  }

  @(Parser.java):JavaSourceFile{
    simpleName = "Parser";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/parsing/Parser.java";
  }

  @(prettyprint!20):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/prettyprint";
  }

  @(AstPrettyPrinter.java):JavaSourceFile{
    simpleName = "AstPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/prettyprint/AstPrettyPrinter.java";
  }

  @(CommentPrettyPrinter.java):JavaSourceFile{
    simpleName = "CommentPrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/prettyprint/CommentPrettyPrinter.java";
  }

  @(IndentPrinter.java):JavaSourceFile{
    simpleName = "IndentPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/prettyprint/IndentPrinter.java";
  }

  @(symboltable!19):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable";
  }

  @(ArtifactScope.java):JavaSourceFile{
    simpleName = "ArtifactScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/ArtifactScope.java";
  }

  @(CommonScope.java):JavaSourceFile{
    simpleName = "CommonScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/CommonScope.java";
  }

  @(CommonScopeSpanningSymbol.java):JavaSourceFile{
    simpleName = "CommonScopeSpanningSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/CommonScopeSpanningSymbol.java";
  }

  @(CommonSymbol.java):JavaSourceFile{
    simpleName = "CommonSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/CommonSymbol.java";
  }

  @(CommonSymbolTableCreator.java):JavaSourceFile{
    simpleName = "CommonSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/CommonSymbolTableCreator.java";
  }

  @(EnclosingScopeOfNodesInitializer.java):JavaSourceFile{
    simpleName = "EnclosingScopeOfNodesInitializer";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/EnclosingScopeOfNodesInitializer.java";
  }

  @(GlobalScope.java):JavaSourceFile{
    simpleName = "GlobalScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/GlobalScope.java";
  }

  @(ImportStatement.java):JavaSourceFile{
    simpleName = "ImportStatement";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/ImportStatement.java";
  }

  @(modifiers):Directory{
    simpleName = "modifiers";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers";
  }

  @(AccessModifier.java):JavaSourceFile{
    simpleName = "AccessModifier";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers/AccessModifier.java";
  }

  @(BasicAccessModifier.java):JavaSourceFile{
    simpleName = "BasicAccessModifier";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers/BasicAccessModifier.java";
  }

  @(IncludesAccessModifierPredicate.java):JavaSourceFile{
    simpleName = "IncludesAccessModifierPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers/IncludesAccessModifierPredicate.java";
  }

  @(Modifier.java):JavaSourceFile{
    simpleName = "Modifier";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers/Modifier.java";
  }

  @(NoAccessModifier.java):JavaSourceFile{
    simpleName = "NoAccessModifier";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/modifiers/NoAccessModifier.java";
  }

  @(MutableScope.java):JavaSourceFile{
    simpleName = "MutableScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/MutableScope.java";
  }

  @(names):Directory{
    simpleName = "names";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/names";
  }

  @(CommonQualifiedNamesCalculator.java):JavaSourceFile{
    simpleName = "CommonQualifiedNamesCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/names/CommonQualifiedNamesCalculator.java";
  }

  @(QualifiedNamesCalculator.java):JavaSourceFile{
    simpleName = "QualifiedNamesCalculator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/names/QualifiedNamesCalculator.java";
  }

  @(references):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/references";
  }

  @(CommonSymbolReference.java):JavaSourceFile{
    simpleName = "CommonSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/references/CommonSymbolReference.java";
  }

  @(SymbolReference.java):JavaSourceFile{
    simpleName = "SymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/references/SymbolReference.java";
  }

  @(resolving):Directory{
    simpleName = "resolving";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving";
  }

  @(AdaptedResolvingFilter.java):JavaSourceFile{
    simpleName = "AdaptedResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/AdaptedResolvingFilter.java";
  }

  @(CommonAdaptedResolvingFilter.java):JavaSourceFile{
    simpleName = "CommonAdaptedResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/CommonAdaptedResolvingFilter.java";
  }

  @(CommonResolvingFilter.java):JavaSourceFile{
    simpleName = "CommonResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/CommonResolvingFilter.java";
  }

  @(ResolvedSeveralEntriesException.java):JavaSourceFile{
    simpleName = "ResolvedSeveralEntriesException";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/ResolvedSeveralEntriesException.java";
  }

  @(ResolvingFilter.java):JavaSourceFile{
    simpleName = "ResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/ResolvingFilter.java";
  }

  @(ResolvingInfo.java):JavaSourceFile{
    simpleName = "ResolvingInfo";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/ResolvingInfo.java";
  }

  @(SymbolAdapter.java):JavaSourceFile{
    simpleName = "SymbolAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/SymbolAdapter.java";
  }

  @(TransitiveAdaptedResolvingFilter.java):JavaSourceFile{
    simpleName = "TransitiveAdaptedResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/resolving/TransitiveAdaptedResolvingFilter.java";
  }

  @(ResolvingConfiguration.java):JavaSourceFile{
    simpleName = "ResolvingConfiguration";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/ResolvingConfiguration.java";
  }

  @(Scope.java):JavaSourceFile{
    simpleName = "Scope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/Scope.java";
  }

  @(Scopes.java):JavaSourceFile{
    simpleName = "Scopes";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/Scopes.java";
  }

  @(ScopeSpanningSymbol.java):JavaSourceFile{
    simpleName = "ScopeSpanningSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/ScopeSpanningSymbol.java";
  }

  @(serializing):Directory{
    simpleName = "serializing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/serializing";
  }

  @(Serialization.java):JavaSourceFile{
    simpleName = "Serialization";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/serializing/Serialization.java";
  }

  @(Symbol.java):JavaSourceFile{
    simpleName = "Symbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/Symbol.java";
  }

  @(SymbolKind.java):JavaSourceFile{
    simpleName = "SymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/SymbolKind.java";
  }

  @(SymbolNameAndKindPredicate.java):JavaSourceFile{
    simpleName = "SymbolNameAndKindPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/SymbolNameAndKindPredicate.java";
  }

  @(SymbolPredicate.java):JavaSourceFile{
    simpleName = "SymbolPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/SymbolPredicate.java";
  }

  @(Symbols.java):JavaSourceFile{
    simpleName = "Symbols";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/Symbols.java";
  }

  @(SymbolTableCreator.java):JavaSourceFile{
    simpleName = "SymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/SymbolTableCreator.java";
  }

  @(types!21):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types";
  }

  @(CommonJFieldSymbol.java):JavaSourceFile{
    simpleName = "CommonJFieldSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/CommonJFieldSymbol.java";
  }

  @(CommonJMethodSymbol.java):JavaSourceFile{
    simpleName = "CommonJMethodSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/CommonJMethodSymbol.java";
  }

  @(CommonJTypeScope.java):JavaSourceFile{
    simpleName = "CommonJTypeScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/CommonJTypeScope.java";
  }

  @(CommonJTypeSymbol.java):JavaSourceFile{
    simpleName = "CommonJTypeSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/CommonJTypeSymbol.java";
  }

  @(JAttributeSymbolKind.java):JavaSourceFile{
    simpleName = "JAttributeSymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JAttributeSymbolKind.java";
  }

  @(JFieldSymbol.java):JavaSourceFile{
    simpleName = "JFieldSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JFieldSymbol.java";
  }

  @(JMethodSymbol.java):JavaSourceFile{
    simpleName = "JMethodSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JMethodSymbol.java";
  }

  @(JMethodSymbolKind.java):JavaSourceFile{
    simpleName = "JMethodSymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JMethodSymbolKind.java";
  }

  @(JTypeSymbol.java):JavaSourceFile{
    simpleName = "JTypeSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JTypeSymbol.java";
  }

  @(JTypeSymbolKind.java):JavaSourceFile{
    simpleName = "JTypeSymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/JTypeSymbolKind.java";
  }

  @(Parameter.java):JavaSourceFile{
    simpleName = "Parameter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/Parameter.java";
  }

  @(references!2):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references";
  }

  @(ActualTypeArgument.java):JavaSourceFile{
    simpleName = "ActualTypeArgument";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references/ActualTypeArgument.java";
  }

  @(CommonJTypeReference.java):JavaSourceFile{
    simpleName = "CommonJTypeReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references/CommonJTypeReference.java";
  }

  @(CommonTypeReference.java):JavaSourceFile{
    simpleName = "CommonTypeReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references/CommonTypeReference.java";
  }

  @(JTypeReference.java):JavaSourceFile{
    simpleName = "JTypeReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references/JTypeReference.java";
  }

  @(TypeReference.java):JavaSourceFile{
    simpleName = "TypeReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/references/TypeReference.java";
  }

  @(TypeSymbol.java):JavaSourceFile{
    simpleName = "TypeSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/TypeSymbol.java";
  }

  @(TypeSymbolKind.java):JavaSourceFile{
    simpleName = "TypeSymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/types/TypeSymbolKind.java";
  }

  @(visibility):Directory{
    simpleName = "visibility";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/visibility";
  }

  @(IsShadowedBySymbol.java):JavaSourceFile{
    simpleName = "IsShadowedBySymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/visibility/IsShadowedBySymbol.java";
  }

  @(ShadowsSymbol.java):JavaSourceFile{
    simpleName = "ShadowsSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/symboltable/visibility/ShadowsSymbol.java";
  }

  @(types!22):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/types";
  }

  @(TypeResolver.java):JavaSourceFile{
    simpleName = "TypeResolver";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/types/TypeResolver.java";
  }

  @(utils):Directory{
    simpleName = "utils";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/utils";
  }

  @(ASTNodes.java):JavaSourceFile{
    simpleName = "ASTNodes";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/utils/ASTNodes.java";
  }

  @(ASTTraverser.java):JavaSourceFile{
    simpleName = "ASTTraverser";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/utils/ASTTraverser.java";
  }

  @(Link.java):JavaSourceFile{
    simpleName = "Link";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/utils/Link.java";
  }

  @(visitor!8):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/visitor";
  }

  @(CommonVisitor.java!2):JavaSourceFile{
    simpleName = "CommonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/main/java/de/monticore/visitor/CommonVisitor.java";
  }

  @(resources!18):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources";
  }

  @(de!37):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources/de";
  }

  @(monticore!40):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources/de/monticore";
  }

  @(generating!2):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources/de/monticore/generating";
  }

  @(templateengine!2):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources/de/monticore/generating/templateengine";
  }

  @(freemarker!2):Directory{
    simpleName = "freemarker";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/main/resources/de/monticore/generating/templateengine/freemarker";
  }

  @(Aliases.ftl):FreeMarkerTemplate{
    simpleName = "Aliases";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/main/resources/de/monticore/generating/templateengine/freemarker/Aliases.ftl";
  }

  @(test!8):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test";
  }

  @(java!20):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java";
  }

  @(de!38):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de";
  }

  @(monticore!41):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore";
  }

  @(ast!11):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/ast";
  }

  @(ASTCNodeMock.java):JavaSourceFile{
    simpleName = "ASTCNodeMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/ast/ASTCNodeMock.java";
  }

  @(ASTNodeMock.java):JavaSourceFile{
    simpleName = "ASTNodeMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/ast/ASTNodeMock.java";
  }

  @(cocos!14):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/cocos";
  }

  @(CocoCheckTest.java):JavaSourceFile{
    simpleName = "CocoCheckTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/cocos/CocoCheckTest.java";
  }

  @(helper):Directory{
    simpleName = "helper";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/cocos/helper";
  }

  @(Assert.java):JavaSourceFile{
    simpleName = "Assert";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/cocos/helper/Assert.java";
  }

  @(generating!3):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating";
  }

  @(GeneratorEngineMock.java):JavaSourceFile{
    simpleName = "GeneratorEngineMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/GeneratorEngineMock.java";
  }

  @(GeneratorEngineTest.java):JavaSourceFile{
    simpleName = "GeneratorEngineTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/GeneratorEngineTest.java";
  }

  @(templateengine!3):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine";
  }

  @(CodeHookPointMock.java):JavaSourceFile{
    simpleName = "CodeHookPointMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/CodeHookPointMock.java";
  }

  @(FreeMarkerTemplateEngineMock.java):JavaSourceFile{
    simpleName = "FreeMarkerTemplateEngineMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/FreeMarkerTemplateEngineMock.java";
  }

  @(FreeMarkerTemplateMock.java):JavaSourceFile{
    simpleName = "FreeMarkerTemplateMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/FreeMarkerTemplateMock.java";
  }

  @(GeneratorSetupMock.java):JavaSourceFile{
    simpleName = "GeneratorSetupMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/GeneratorSetupMock.java";
  }

  @(GlobalExtensionManagementGlobalVarsTest.java):JavaSourceFile{
    simpleName = "GlobalExtensionManagementGlobalVarsTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/GlobalExtensionManagementGlobalVarsTest.java";
  }

  @(ObjectFactoryTest.java):JavaSourceFile{
    simpleName = "ObjectFactoryTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/ObjectFactoryTest.java";
  }

  @(reporting!3):Directory{
    simpleName = "reporting";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/reporting";
  }

  @(commons!3):Directory{
    simpleName = "commons";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/reporting/commons";
  }

  @(ReportingStringHelperTest.java):JavaSourceFile{
    simpleName = "ReportingStringHelperTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/reporting/commons/ReportingStringHelperTest.java";
  }

  @(TemplateAliasingTest.java):JavaSourceFile{
    simpleName = "TemplateAliasingTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateAliasingTest.java";
  }

  @(TemplateControllerHookPointsTest.java):JavaSourceFile{
    simpleName = "TemplateControllerHookPointsTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateControllerHookPointsTest.java";
  }

  @(TemplateControllerMock.java):JavaSourceFile{
    simpleName = "TemplateControllerMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateControllerMock.java";
  }

  @(TemplateControllerSignatureUsageTest.java):JavaSourceFile{
    simpleName = "TemplateControllerSignatureUsageTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateControllerSignatureUsageTest.java";
  }

  @(TemplateControllerTest.java):JavaSourceFile{
    simpleName = "TemplateControllerTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateControllerTest.java";
  }

  @(TemplateLoggerTest.java):JavaSourceFile{
    simpleName = "TemplateLoggerTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TemplateLoggerTest.java";
  }

  @(templates!2):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates";
  }

  @(A.ftl):FreeMarkerTemplate{
    simpleName = "A";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/A.ftl";
  }

  @(aliases):Directory{
    simpleName = "aliases";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases";
  }

  @(GlobalListVars.ftl):FreeMarkerTemplate{
    simpleName = "GlobalListVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/GlobalListVars.ftl";
  }

  @(IncludeAlias.ftl):FreeMarkerTemplate{
    simpleName = "IncludeAlias";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/IncludeAlias.ftl";
  }

  @(IncludeArgsAndSignatureAlias.ftl):FreeMarkerTemplate{
    simpleName = "IncludeArgsAndSignatureAlias";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/IncludeArgsAndSignatureAlias.ftl";
  }

  @(LogAliases.ftl):FreeMarkerTemplate{
    simpleName = "LogAliases";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/LogAliases.ftl";
  }

  @(Plain.ftl):FreeMarkerTemplate{
    simpleName = "Plain";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/Plain.ftl";
  }

  @(SignatureAliasWithThreeParameters.ftl):FreeMarkerTemplate{
    simpleName = "SignatureAliasWithThreeParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/aliases/SignatureAliasWithThreeParameters.ftl";
  }

  @(ArgumentsAreOnlyVisibleInIncludedTemplate.ftl):FreeMarkerTemplate{
    simpleName = "ArgumentsAreOnlyVisibleInIncludedTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/ArgumentsAreOnlyVisibleInIncludedTemplate.ftl";
  }

  @(B.ftl):FreeMarkerTemplate{
    simpleName = "B";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/B.ftl";
  }

  @(C.ftl):FreeMarkerTemplate{
    simpleName = "C";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/C.ftl";
  }

  @(GlobalListVars.ftl!2):FreeMarkerTemplate{
    simpleName = "GlobalListVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/GlobalListVars.ftl";
  }

  @(GlobalVars.ftl):FreeMarkerTemplate{
    simpleName = "GlobalVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/GlobalVars.ftl";
  }

  @(HelloWorld.ftl):FreeMarkerTemplate{
    simpleName = "HelloWorld";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/HelloWorld.ftl";
  }

  @(HookCall.ftl):FreeMarkerTemplate{
    simpleName = "HookCall";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/HookCall.ftl";
  }

  @(HowAreYou.ftl):FreeMarkerTemplate{
    simpleName = "HowAreYou";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/HowAreYou.ftl";
  }

  @(Log.ftl):FreeMarkerTemplate{
    simpleName = "Log";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/Log.ftl";
  }

  @(NestedSignatureCalls.ftl):FreeMarkerTemplate{
    simpleName = "NestedSignatureCalls";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/NestedSignatureCalls.ftl";
  }

  @(ParameterizedInclusionUsage.ftl):FreeMarkerTemplate{
    simpleName = "ParameterizedInclusionUsage";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/ParameterizedInclusionUsage.ftl";
  }

  @(PrintNameIfExists.ftl):FreeMarkerTemplate{
    simpleName = "PrintNameIfExists";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/PrintNameIfExists.ftl";
  }

  @(SignatureWithManyParameters.ftl):FreeMarkerTemplate{
    simpleName = "SignatureWithManyParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/SignatureWithManyParameters.ftl";
  }

  @(SignatureWithOneParameter.ftl):FreeMarkerTemplate{
    simpleName = "SignatureWithOneParameter";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/SignatureWithOneParameter.ftl";
  }

  @(SignatureWithThreeParameters.ftl):FreeMarkerTemplate{
    simpleName = "SignatureWithThreeParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/SignatureWithThreeParameters.ftl";
  }

  @(TestVariables4.ftl):FreeMarkerTemplate{
    simpleName = "TestVariables4";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/TestVariables4.ftl";
  }

  @(TopA.ftl):FreeMarkerTemplate{
    simpleName = "TopA";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/TopA.ftl";
  }

  @(TopStringHook.ftl):FreeMarkerTemplate{
    simpleName = "TopStringHook";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/TopStringHook.ftl";
  }

  @(TopTemplateHook.ftl):FreeMarkerTemplate{
    simpleName = "TopTemplateHook";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/templates/TopTemplateHook.ftl";
  }

  @(TestConstants.java):JavaSourceFile{
    simpleName = "TestConstants";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templateengine/TestConstants.java";
  }

  @(templates!3):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates";
  }

  @(ClassProd.ftl):FreeMarkerTemplate{
    simpleName = "ClassProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/ClassProd.ftl";
  }

  @(First.ftl):FreeMarkerTemplate{
    simpleName = "First";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/First.ftl";
  }

  @(Grammar.ftl!3):FreeMarkerTemplate{
    simpleName = "Grammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/Grammar.ftl";
  }

  @(InterfaceProd.ftl):FreeMarkerTemplate{
    simpleName = "InterfaceProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/InterfaceProd.ftl";
  }

  @(Main.ftl!3):FreeMarkerTemplate{
    simpleName = "Main";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/Main.ftl";
  }

  @(MainClassProd.ftl):FreeMarkerTemplate{
    simpleName = "MainClassProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/MainClassProd.ftl";
  }

  @(MainGrammar.ftl):FreeMarkerTemplate{
    simpleName = "MainGrammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/MainGrammar.ftl";
  }

  @(MainInterfaceProd.ftl):FreeMarkerTemplate{
    simpleName = "MainInterfaceProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/generating/templates/MainInterfaceProd.ftl";
  }

  @(io!2):Directory{
    simpleName = "io";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io";
  }

  @(FileReaderWriterMock.java):JavaSourceFile{
    simpleName = "FileReaderWriterMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/FileReaderWriterMock.java";
  }

  @(FileReaderWriterTest.java):JavaSourceFile{
    simpleName = "FileReaderWriterTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/FileReaderWriterTest.java";
  }

  @(paths!2):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/paths";
  }

  @(IterablePathTest.java):JavaSourceFile{
    simpleName = "IterablePathTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/paths/IterablePathTest.java";
  }

  @(ModelCoordinateTest.java):JavaSourceFile{
    simpleName = "ModelCoordinateTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/paths/ModelCoordinateTest.java";
  }

  @(ModelPathTest.java):JavaSourceFile{
    simpleName = "ModelPathTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/io/paths/ModelPathTest.java";
  }

  @(modelloader!2):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/modelloader";
  }

  @(ModelLoaderTest.java):JavaSourceFile{
    simpleName = "ModelLoaderTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/modelloader/ModelLoaderTest.java";
  }

  @(symboltable!20):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable";
  }

  @(AdaptedResolvingTest.java):JavaSourceFile{
    simpleName = "AdaptedResolvingTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/AdaptedResolvingTest.java";
  }

  @(ArtifactScopeTest.java):JavaSourceFile{
    simpleName = "ArtifactScopeTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ArtifactScopeTest.java";
  }

  @(GlobalScopeTest.java):JavaSourceFile{
    simpleName = "GlobalScopeTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/GlobalScopeTest.java";
  }

  @(LanguageCompositionTest.java):JavaSourceFile{
    simpleName = "LanguageCompositionTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/LanguageCompositionTest.java";
  }

  @(mocks):Directory{
    simpleName = "mocks";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks";
  }

  @(asts):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts";
  }

  @(ASTCompilationUnit.java!2):JavaSourceFile{
    simpleName = "ASTCompilationUnit";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/ASTCompilationUnit.java";
  }

  @(ASTId.java):JavaSourceFile{
    simpleName = "ASTId";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/ASTId.java";
  }

  @(ASTNodeMock.java!2):JavaSourceFile{
    simpleName = "ASTNodeMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/ASTNodeMock.java";
  }

  @(ASTSymbol.java):JavaSourceFile{
    simpleName = "ASTSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/ASTSymbol.java";
  }

  @(ASTSymbolReference.java):JavaSourceFile{
    simpleName = "ASTSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/ASTSymbolReference.java";
  }

  @(grammar!16):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/grammar";
  }

  @(ASTProd.java!4):JavaSourceFile{
    simpleName = "ASTProd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/grammar/ASTProd.java";
  }

  @(ASTSymbolProd.java):JavaSourceFile{
    simpleName = "ASTSymbolProd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/grammar/ASTSymbolProd.java";
  }

  @(ASTSymbolProdReference.java):JavaSourceFile{
    simpleName = "ASTSymbolProdReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/asts/grammar/ASTSymbolProdReference.java";
  }

  @(CommonScopeMock.java):JavaSourceFile{
    simpleName = "CommonScopeMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/CommonScopeMock.java";
  }

  @(languages):Directory{
    simpleName = "languages";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages";
  }

  @(edl!3):Directory{
    simpleName = "edl";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/edl";
  }

  @(asts!2):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/edl/asts";
  }

  @(ASTEntity.java):JavaSourceFile{
    simpleName = "ASTEntity";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/edl/asts/ASTEntity.java";
  }

  @(ASTEntityEnd.java):JavaSourceFile{
    simpleName = "ASTEntityEnd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/edl/asts/ASTEntityEnd.java";
  }

  @(ASTProperty.java):JavaSourceFile{
    simpleName = "ASTProperty";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/edl/asts/ASTProperty.java";
  }

  @(entity):Directory{
    simpleName = "entity";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity";
  }

  @(ActionScope.java):JavaSourceFile{
    simpleName = "ActionScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/ActionScope.java";
  }

  @(ActionSymbol.java):JavaSourceFile{
    simpleName = "ActionSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/ActionSymbol.java";
  }

  @(ActionSymbolKind.java):JavaSourceFile{
    simpleName = "ActionSymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/ActionSymbolKind.java";
  }

  @(asts!3):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts";
  }

  @(ASTAction.java!3):JavaSourceFile{
    simpleName = "ASTAction";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTAction.java";
  }

  @(ASTActionEnd.java):JavaSourceFile{
    simpleName = "ASTActionEnd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTActionEnd.java";
  }

  @(ASTEntity.java!2):JavaSourceFile{
    simpleName = "ASTEntity";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntity.java";
  }

  @(ASTEntityBase.java):JavaSourceFile{
    simpleName = "ASTEntityBase";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityBase.java";
  }

  @(ASTEntityCompilationUnit.java):JavaSourceFile{
    simpleName = "ASTEntityCompilationUnit";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityCompilationUnit.java";
  }

  @(ASTEntityEnd.java!2):JavaSourceFile{
    simpleName = "ASTEntityEnd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityEnd.java";
  }

  @(ASTProperty.java!2):JavaSourceFile{
    simpleName = "ASTProperty";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/ASTProperty.java";
  }

  @(EntityLanguageVisitor.java):JavaSourceFile{
    simpleName = "EntityLanguageVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/asts/EntityLanguageVisitor.java";
  }

  @(cocos!15):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos";
  }

  @(ContextCondition.java):JavaSourceFile{
    simpleName = "ContextCondition";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/ContextCondition.java";
  }

  @(EntityASTActionCoCo.java):JavaSourceFile{
    simpleName = "EntityASTActionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTActionCoCo.java";
  }

  @(EntityASTEntityCoCo.java):JavaSourceFile{
    simpleName = "EntityASTEntityCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTEntityCoCo.java";
  }

  @(EntityASTEntityCompilationUnitCoCo.java):JavaSourceFile{
    simpleName = "EntityASTEntityCompilationUnitCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTEntityCompilationUnitCoCo.java";
  }

  @(EntityASTPropertyCoCo.java):JavaSourceFile{
    simpleName = "EntityASTPropertyCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTPropertyCoCo.java";
  }

  @(EntityCoCoChecker.java):JavaSourceFile{
    simpleName = "EntityCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/EntityCoCoChecker.java";
  }

  @(PropertyNameMustStartWithLowerCase.java):JavaSourceFile{
    simpleName = "PropertyNameMustStartWithLowerCase";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/PropertyNameMustStartWithLowerCase.java";
  }

  @(UniquePropertyNamesInEntity.java):JavaSourceFile{
    simpleName = "UniquePropertyNamesInEntity";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/cocos/UniquePropertyNamesInEntity.java";
  }

  @(CommonEntityLanguageSymbolTableCreator.java):JavaSourceFile{
    simpleName = "CommonEntityLanguageSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/CommonEntityLanguageSymbolTableCreator.java";
  }

  @(EntityLanguage.java):JavaSourceFile{
    simpleName = "EntityLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntityLanguage.java";
  }

  @(EntityLanguageCoCos.java):JavaSourceFile{
    simpleName = "EntityLanguageCoCos";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntityLanguageCoCos.java";
  }

  @(EntityLanguageModelLoader.java):JavaSourceFile{
    simpleName = "EntityLanguageModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntityLanguageModelLoader.java";
  }

  @(EntityLanguageSymbolTableCreator.java):JavaSourceFile{
    simpleName = "EntityLanguageSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntityLanguageSymbolTableCreator.java";
  }

  @(EntityParserMock.java):JavaSourceFile{
    simpleName = "EntityParserMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntityParserMock.java";
  }

  @(EntitySymbol.java):JavaSourceFile{
    simpleName = "EntitySymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntitySymbol.java";
  }

  @(EntitySymbolKind.java):JavaSourceFile{
    simpleName = "EntitySymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntitySymbolKind.java";
  }

  @(EntitySymbolReference.java):JavaSourceFile{
    simpleName = "EntitySymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/EntitySymbolReference.java";
  }

  @(PropertyPredicate.java):JavaSourceFile{
    simpleName = "PropertyPredicate";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/PropertyPredicate.java";
  }

  @(PropertySymbol.java):JavaSourceFile{
    simpleName = "PropertySymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/PropertySymbol.java";
  }

  @(PropertySymbolKind.java):JavaSourceFile{
    simpleName = "PropertySymbolKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/entity/PropertySymbolKind.java";
  }

  @(extendedstatechart):Directory{
    simpleName = "extendedstatechart";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart";
  }

  @(XStateChartKind.java):JavaSourceFile{
    simpleName = "XStateChartKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartKind.java";
  }

  @(XStateChartScope.java):JavaSourceFile{
    simpleName = "XStateChartScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartScope.java";
  }

  @(XStateChartSymbol.java):JavaSourceFile{
    simpleName = "XStateChartSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartSymbol.java";
  }

  @(XStateKind.java):JavaSourceFile{
    simpleName = "XStateKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateKind.java";
  }

  @(XStateSymbol.java):JavaSourceFile{
    simpleName = "XStateSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateSymbol.java";
  }

  @(JTypeSymbolMock.java):JavaSourceFile{
    simpleName = "JTypeSymbolMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/JTypeSymbolMock.java";
  }

  @(ParserMock.java):JavaSourceFile{
    simpleName = "ParserMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/ParserMock.java";
  }

  @(references!3):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/references";
  }

  @(PropertySymbolReference.java):JavaSourceFile{
    simpleName = "PropertySymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/references/PropertySymbolReference.java";
  }

  @(scandentity):Directory{
    simpleName = "scandentity";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity";
  }

  @(Action2StateAdapter.java):JavaSourceFile{
    simpleName = "Action2StateAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Action2StateAdapter.java";
  }

  @(Action2StateTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "Action2StateTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Action2StateTransitiveResolvingFilter.java";
  }

  @(CompositeScAndEntitySymbolTableCreator.java):JavaSourceFile{
    simpleName = "CompositeScAndEntitySymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/CompositeScAndEntitySymbolTableCreator.java";
  }

  @(Entity2ScAdapter.java):JavaSourceFile{
    simpleName = "Entity2ScAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Entity2ScAdapter.java";
  }

  @(Entity2ScTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "Entity2ScTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Entity2ScTransitiveResolvingFilter.java";
  }

  @(Entity2StateAdapter.java):JavaSourceFile{
    simpleName = "Entity2StateAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Entity2StateAdapter.java";
  }

  @(Entity2StateTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "Entity2StateTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Entity2StateTransitiveResolvingFilter.java";
  }

  @(EntityEmbeddingScLanguage.java):JavaSourceFile{
    simpleName = "EntityEmbeddingScLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/EntityEmbeddingScLanguage.java";
  }

  @(EntityEmbeddingScModelLoader.java):JavaSourceFile{
    simpleName = "EntityEmbeddingScModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/EntityEmbeddingScModelLoader.java";
  }

  @(Sc2ActionAdapter.java):JavaSourceFile{
    simpleName = "Sc2ActionAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Sc2ActionAdapter.java";
  }

  @(Sc2ActionTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "Sc2ActionTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Sc2ActionTransitiveResolvingFilter.java";
  }

  @(Sc2EntityAdapter.java):JavaSourceFile{
    simpleName = "Sc2EntityAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Sc2EntityAdapter.java";
  }

  @(Sc2EntityTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "Sc2EntityTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/Sc2EntityTransitiveResolvingFilter.java";
  }

  @(ScAndEntityLanguageFamily.java):JavaSourceFile{
    simpleName = "ScAndEntityLanguageFamily";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/ScAndEntityLanguageFamily.java";
  }

  @(State2EntityAdapter.java):JavaSourceFile{
    simpleName = "State2EntityAdapter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/State2EntityAdapter.java";
  }

  @(State2EntityTransitiveResolvingFilter.java):JavaSourceFile{
    simpleName = "State2EntityTransitiveResolvingFilter";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/scandentity/State2EntityTransitiveResolvingFilter.java";
  }

  @(statechart!9):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart";
  }

  @(asts!4):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts";
  }

  @(ASTState.java!12):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/ASTState.java";
  }

  @(ASTStateChart.java):JavaSourceFile{
    simpleName = "ASTStateChart";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChart.java";
  }

  @(ASTStateChartBase.java):JavaSourceFile{
    simpleName = "ASTStateChartBase";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartBase.java";
  }

  @(ASTStateChartCompilationUnit.java):JavaSourceFile{
    simpleName = "ASTStateChartCompilationUnit";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartCompilationUnit.java";
  }

  @(ASTStateChartEnd.java):JavaSourceFile{
    simpleName = "ASTStateChartEnd";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartEnd.java";
  }

  @(StateChartLanguageBaseVisitor.java):JavaSourceFile{
    simpleName = "StateChartLanguageBaseVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/asts/StateChartLanguageBaseVisitor.java";
  }

  @(CommonStateChartSymbolTableCreator.java):JavaSourceFile{
    simpleName = "CommonStateChartSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/CommonStateChartSymbolTableCreator.java";
  }

  @(StateChartKind.java):JavaSourceFile{
    simpleName = "StateChartKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartKind.java";
  }

  @(StateChartLanguage.java):JavaSourceFile{
    simpleName = "StateChartLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguage.java";
  }

  @(StateChartLanguageModelLoader.java):JavaSourceFile{
    simpleName = "StateChartLanguageModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguageModelLoader.java";
  }

  @(StateChartLanguageSymbolTableCreator.java):JavaSourceFile{
    simpleName = "StateChartLanguageSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguageSymbolTableCreator.java";
  }

  @(StateChartParserMock.java):JavaSourceFile{
    simpleName = "StateChartParserMock";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartParserMock.java";
  }

  @(StateChartScope.java):JavaSourceFile{
    simpleName = "StateChartScope";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartScope.java";
  }

  @(StateChartSymbol.java):JavaSourceFile{
    simpleName = "StateChartSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateChartSymbol.java";
  }

  @(StateKind.java!2):JavaSourceFile{
    simpleName = "StateKind";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateKind.java";
  }

  @(StateSymbol.java!2):JavaSourceFile{
    simpleName = "StateSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/mocks/languages/statechart/StateSymbol.java";
  }

  @(ModifierTest.java):JavaSourceFile{
    simpleName = "ModifierTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ModifierTest.java";
  }

  @(NamesTest.java):JavaSourceFile{
    simpleName = "NamesTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/NamesTest.java";
  }

  @(ReferencesTest.java):JavaSourceFile{
    simpleName = "ReferencesTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ReferencesTest.java";
  }

  @(ResolvingImportedScopesTest.java):JavaSourceFile{
    simpleName = "ResolvingImportedScopesTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ResolvingImportedScopesTest.java";
  }

  @(ResolvingTest.java):JavaSourceFile{
    simpleName = "ResolvingTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ResolvingTest.java";
  }

  @(ResolvingViaPredicateTest.java):JavaSourceFile{
    simpleName = "ResolvingViaPredicateTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ResolvingViaPredicateTest.java";
  }

  @(ScopeTest.java):JavaSourceFile{
    simpleName = "ScopeTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ScopeTest.java";
  }

  @(serializing!2):Directory{
    simpleName = "serializing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing";
  }

  @(cycle):Directory{
    simpleName = "cycle";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/cycle";
  }

  @(CycleA.java):JavaSourceFile{
    simpleName = "CycleA";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/cycle/CycleA.java";
  }

  @(CycleB.java):JavaSourceFile{
    simpleName = "CycleB";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/cycle/CycleB.java";
  }

  @(CycleC.java):JavaSourceFile{
    simpleName = "CycleC";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/cycle/CycleC.java";
  }

  @(inheritance!3):Directory{
    simpleName = "inheritance";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/inheritance";
  }

  @(A.java):JavaSourceFile{
    simpleName = "A";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/inheritance/A.java";
  }

  @(B.java):JavaSourceFile{
    simpleName = "B";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/inheritance/B.java";
  }

  @(C.java):JavaSourceFile{
    simpleName = "C";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/inheritance/C.java";
  }

  @(samereferences):Directory{
    simpleName = "samereferences";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/samereferences";
  }

  @(RefA.java):JavaSourceFile{
    simpleName = "RefA";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/samereferences/RefA.java";
  }

  @(RefB.java):JavaSourceFile{
    simpleName = "RefB";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/samereferences/RefB.java";
  }

  @(RefC.java):JavaSourceFile{
    simpleName = "RefC";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/samereferences/RefC.java";
  }

  @(SerializationTest.java):JavaSourceFile{
    simpleName = "SerializationTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/serializing/SerializationTest.java";
  }

  @(ShadowingTest.java):JavaSourceFile{
    simpleName = "ShadowingTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/ShadowingTest.java";
  }

  @(SymbolKindTest.java):JavaSourceFile{
    simpleName = "SymbolKindTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/SymbolKindTest.java";
  }

  @(SymbolTableCreatorTest.java):JavaSourceFile{
    simpleName = "SymbolTableCreatorTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/SymbolTableCreatorTest.java";
  }

  @(SymbolTableTest.java):JavaSourceFile{
    simpleName = "SymbolTableTest";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/java/de/monticore/symboltable/SymbolTableTest.java";
  }

  @(resources!19):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources";
  }

  @(de!39):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de";
  }

  @(monticore!42):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore";
  }

  @(parsing!2):Directory{
    simpleName = "parsing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore/parsing";
  }

  @(symboltable!21):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore/symboltable";
  }

  @(languagecomposition):Directory{
    simpleName = "languagecomposition";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore/symboltable/languagecomposition";
  }

  @(embedding!10):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore/symboltable/languagecomposition/embedding";
  }

  @(family):Directory{
    simpleName = "family";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/de/monticore/symboltable/languagecomposition/family";
  }

  @(hwc!4):Directory{
    simpleName = "hwc";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/hwc";
  }

  @(test!9):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/hwc/test";
  }

  @(A.java!2):JavaSourceFile{
    simpleName = "A";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/src/test/resources/hwc/test/A.java";
  }

  @(modelloader!3):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader";
  }

  @(modeljar.jar):JarArchive{
    simpleName = "modeljar";
    nameExtension = "jar";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader/modeljar.jar";
  }

  @(modelpath!2):Directory{
    simpleName = "modelpath";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader/modelpath";
  }

  @(models!2):Directory{
    simpleName = "models";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader/modelpath/models";
  }

  @(modelpath2):Directory{
    simpleName = "modelpath2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader/modelpath2";
  }

  @(models!3):Directory{
    simpleName = "models";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelloader/modelpath2/models";
  }

  @(modelpathtest):Directory{
    simpleName = "modelpathtest";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelpathtest";
  }

  @(path1):Directory{
    simpleName = "path1";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelpathtest/path1";
  }

  @(path2):Directory{
    simpleName = "path2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/modelpathtest/path2";
  }

  @(paths!3):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/paths";
  }

  @(1):Directory{
    simpleName = "1";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/paths/1";
  }

  @(a!2):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/paths/1/a";
  }

  @(AFile.ftl):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/resources/paths/1/a/AFile.ftl";
  }

  @(AFile.ftl!2):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/resources/paths/1/AFile.ftl";
  }

  @(2!2):Directory{
    simpleName = "2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/paths/2";
  }

  @(a!3):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-runtime/src/test/resources/paths/2/a";
  }

  @(AFile.ftl!3):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/src/test/resources/paths/2/a/AFile.ftl";
  }

  @(target!6):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target";
  }

  @(classes!6):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes";
  }

  @(de!40):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de";
  }

  @(monticore!43):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore";
  }

  @(AmbiguityException.class):JavaClassFile{
    simpleName = "AmbiguityException";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/AmbiguityException.class";
  }

  @(annotations!7):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/annotations";
  }

  @(Visit.class):JavaClassFile{
    simpleName = "Visit";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/annotations/Visit.class";
  }

  @(VisitAnnotations.class):JavaClassFile{
    simpleName = "VisitAnnotations";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/annotations/VisitAnnotations.class";
  }

  @(antlr4!2):Directory{
    simpleName = "antlr4";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4";
  }

  @(MCConcreteParser$ParserExecution.class):JavaClassFile{
    simpleName = "MCConcreteParser$ParserExecution";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4/MCConcreteParser$ParserExecution.class";
  }

  @(MCConcreteParser.class):JavaClassFile{
    simpleName = "MCConcreteParser";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4/MCConcreteParser.class";
  }

  @(MCErrorListener.class):JavaClassFile{
    simpleName = "MCErrorListener";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4/MCErrorListener.class";
  }

  @(MCLexer.class):JavaClassFile{
    simpleName = "MCLexer";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4/MCLexer.class";
  }

  @(MCParser.class):JavaClassFile{
    simpleName = "MCParser";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/antlr4/MCParser.class";
  }

  @(ast!12):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast";
  }

  @(ASTCNode.class):JavaClassFile{
    simpleName = "ASTCNode";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast/ASTCNode.class";
  }

  @(ASTNode.class):JavaClassFile{
    simpleName = "ASTNode";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast/ASTNode.class";
  }

  @(ASTNodeNull.class):JavaClassFile{
    simpleName = "ASTNodeNull";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast/ASTNodeNull.class";
  }

  @(Comment.class):JavaClassFile{
    simpleName = "Comment";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast/Comment.class";
  }

  @(CompareNotSupportedException.class):JavaClassFile{
    simpleName = "CompareNotSupportedException";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ast/CompareNotSupportedException.class";
  }

  @(CommentExt.class):JavaClassFile{
    simpleName = "CommentExt";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/CommentExt.class";
  }

  @(CommonModelingLanguage.class):JavaClassFile{
    simpleName = "CommonModelingLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/CommonModelingLanguage.class";
  }

  @(CommonModelNameCalculator.class):JavaClassFile{
    simpleName = "CommonModelNameCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/CommonModelNameCalculator.class";
  }

  @(EmbeddingModelingLanguage.class):JavaClassFile{
    simpleName = "EmbeddingModelingLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/EmbeddingModelingLanguage.class";
  }

  @(EmptyModelNameCalculator.class):JavaClassFile{
    simpleName = "EmptyModelNameCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/EmptyModelNameCalculator.class";
  }

  @(generating!4):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating";
  }

  @(GeneratorEngine.class):JavaClassFile{
    simpleName = "GeneratorEngine";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/GeneratorEngine.class";
  }

  @(GeneratorSetup.class):JavaClassFile{
    simpleName = "GeneratorSetup";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/GeneratorSetup.class";
  }

  @(templateengine!4):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine";
  }

  @(CodeHookPoint.class):JavaClassFile{
    simpleName = "CodeHookPoint";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/CodeHookPoint.class";
  }

  @(freemarker!3):Directory{
    simpleName = "freemarker";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker";
  }

  @(Aliases.ftl!2):FreeMarkerTemplate{
    simpleName = "Aliases";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/Aliases.ftl";
  }

  @(FreeMarkerTemplateEngine.class):JavaClassFile{
    simpleName = "FreeMarkerTemplateEngine";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/FreeMarkerTemplateEngine.class";
  }

  @(MontiCoreFileTemplateLoader.class):JavaClassFile{
    simpleName = "MontiCoreFileTemplateLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/MontiCoreFileTemplateLoader.class";
  }

  @(MontiCoreFreeMarkerException.class):JavaClassFile{
    simpleName = "MontiCoreFreeMarkerException";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/MontiCoreFreeMarkerException.class";
  }

  @(MontiCoreTemplateExceptionHandler.class):JavaClassFile{
    simpleName = "MontiCoreTemplateExceptionHandler";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/MontiCoreTemplateExceptionHandler.class";
  }

  @(MontiCoreTemplateLoader.class):JavaClassFile{
    simpleName = "MontiCoreTemplateLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/MontiCoreTemplateLoader.class";
  }

  @(SimpleHashFactory.class):JavaClassFile{
    simpleName = "SimpleHashFactory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/freemarker/SimpleHashFactory.class";
  }

  @(GlobalExtensionManagement.class):JavaClassFile{
    simpleName = "GlobalExtensionManagement";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/GlobalExtensionManagement.class";
  }

  @(HookPoint.class):JavaClassFile{
    simpleName = "HookPoint";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/HookPoint.class";
  }

  @(ObjectFactory.class):JavaClassFile{
    simpleName = "ObjectFactory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/ObjectFactory.class";
  }

  @(reporting!4):Directory{
    simpleName = "reporting";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting";
  }

  @(artifacts!2):Directory{
    simpleName = "artifacts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts";
  }

  @(ArtifactReporter.class):JavaClassFile{
    simpleName = "ArtifactReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/ArtifactReporter.class";
  }

  @(formatter!2):Directory{
    simpleName = "formatter";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/formatter";
  }

  @(AFormatter.class):JavaClassFile{
    simpleName = "AFormatter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/formatter/AFormatter.class";
  }

  @(GMLFormatter$1.class):JavaClassFile{
    simpleName = "GMLFormatter$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/formatter/GMLFormatter$1.class";
  }

  @(GMLFormatter.class):JavaClassFile{
    simpleName = "GMLFormatter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/formatter/GMLFormatter.class";
  }

  @(GVFormatter.class):JavaClassFile{
    simpleName = "GVFormatter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/formatter/GVFormatter.class";
  }

  @(model!3):Directory{
    simpleName = "model";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model";
  }

  @(APkg.class):JavaClassFile{
    simpleName = "APkg";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/APkg.class";
  }

  @(Element.class):JavaClassFile{
    simpleName = "Element";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/Element.class";
  }

  @(ElementFactory.class):JavaClassFile{
    simpleName = "ElementFactory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/ElementFactory.class";
  }

  @(ElementType.class):JavaClassFile{
    simpleName = "ElementType";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/ElementType.class";
  }

  @(Pkg.class):JavaClassFile{
    simpleName = "Pkg";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/Pkg.class";
  }

  @(RootPkg.class):JavaClassFile{
    simpleName = "RootPkg";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/model/RootPkg.class";
  }

  @(ReportingNameHelper.class):JavaClassFile{
    simpleName = "ReportingNameHelper";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/artifacts/ReportingNameHelper.class";
  }

  @(commons!4):Directory{
    simpleName = "commons";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons";
  }

  @(AReporter.class):JavaClassFile{
    simpleName = "AReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/AReporter.class";
  }

  @(ASTNodeIdentHelper.class):JavaClassFile{
    simpleName = "ASTNodeIdentHelper";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ASTNodeIdentHelper.class";
  }

  @(DefaultReportEventHandler.class):JavaClassFile{
    simpleName = "DefaultReportEventHandler";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/DefaultReportEventHandler.class";
  }

  @(IASTNodeIdentHelper.class):JavaClassFile{
    simpleName = "IASTNodeIdentHelper";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/IASTNodeIdentHelper.class";
  }

  @(IReportEventHandler.class):JavaClassFile{
    simpleName = "IReportEventHandler";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/IReportEventHandler.class";
  }

  @(Layouter.class):JavaClassFile{
    simpleName = "Layouter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/Layouter.class";
  }

  @(MapUtil.class):JavaClassFile{
    simpleName = "MapUtil";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/MapUtil.class";
  }

  @(ObjectCountVisitor.class):JavaClassFile{
    simpleName = "ObjectCountVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ObjectCountVisitor.class";
  }

  @(ReportCreator.class):JavaClassFile{
    simpleName = "ReportCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportCreator.class";
  }

  @(ReportingConstants.class):JavaClassFile{
    simpleName = "ReportingConstants";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportingConstants.class";
  }

  @(ReportingHelper.class):JavaClassFile{
    simpleName = "ReportingHelper";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportingHelper.class";
  }

  @(ReportingRepository$1.class):JavaClassFile{
    simpleName = "ReportingRepository$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportingRepository$1.class";
  }

  @(ReportingRepository$Helper.class):JavaClassFile{
    simpleName = "ReportingRepository$Helper";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportingRepository$Helper.class";
  }

  @(ReportingRepository.class):JavaClassFile{
    simpleName = "ReportingRepository";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportingRepository.class";
  }

  @(ReportManager$ReportManagerFactory.class):JavaClassFile{
    simpleName = "ReportManager$ReportManagerFactory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportManager$ReportManagerFactory.class";
  }

  @(ReportManager.class):JavaClassFile{
    simpleName = "ReportManager";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/ReportManager.class";
  }

  @(TreePrintVisitor.class):JavaClassFile{
    simpleName = "TreePrintVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/commons/TreePrintVisitor.class";
  }

  @(reporter!2):Directory{
    simpleName = "reporter";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter";
  }

  @(ArtifactGmlReporter.class):JavaClassFile{
    simpleName = "ArtifactGmlReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/ArtifactGmlReporter.class";
  }

  @(ArtifactGVReporter.class):JavaClassFile{
    simpleName = "ArtifactGVReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/ArtifactGVReporter.class";
  }

  @(DetailedReporter.class):JavaClassFile{
    simpleName = "DetailedReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/DetailedReporter.class";
  }

  @(GeneratedFilesReporter.class):JavaClassFile{
    simpleName = "GeneratedFilesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/GeneratedFilesReporter.class";
  }

  @(HandWrittenCodeReporter.class):JavaClassFile{
    simpleName = "HandWrittenCodeReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/HandWrittenCodeReporter.class";
  }

  @(HookPointReporter.class):JavaClassFile{
    simpleName = "HookPointReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/HookPointReporter.class";
  }

  @(InputOutputFilesReporter.class):JavaClassFile{
    simpleName = "InputOutputFilesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/InputOutputFilesReporter.class";
  }

  @(InstantiationsReporter.class):JavaClassFile{
    simpleName = "InstantiationsReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/InstantiationsReporter.class";
  }

  @(InvolvedFilesReporter.class):JavaClassFile{
    simpleName = "InvolvedFilesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/InvolvedFilesReporter.class";
  }

  @(NodeTreeDecoratedReporter.class):JavaClassFile{
    simpleName = "NodeTreeDecoratedReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/NodeTreeDecoratedReporter.class";
  }

  @(NodeTreeReporter.class):JavaClassFile{
    simpleName = "NodeTreeReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/NodeTreeReporter.class";
  }

  @(NodeTypesReporter.class):JavaClassFile{
    simpleName = "NodeTypesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/NodeTypesReporter.class";
  }

  @(SuccessfulReporter.class):JavaClassFile{
    simpleName = "SuccessfulReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/SuccessfulReporter.class";
  }

  @(SummaryReporter.class):JavaClassFile{
    simpleName = "SummaryReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/SummaryReporter.class";
  }

  @(SymbolTableReporter.class):JavaClassFile{
    simpleName = "SymbolTableReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/SymbolTableReporter.class";
  }

  @(TemplatesReporter.class):JavaClassFile{
    simpleName = "TemplatesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/TemplatesReporter.class";
  }

  @(TemplateTreeReporter.class):JavaClassFile{
    simpleName = "TemplateTreeReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/TemplateTreeReporter.class";
  }

  @(TransformationReporter.class):JavaClassFile{
    simpleName = "TransformationReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/TransformationReporter.class";
  }

  @(VariablesReporter.class):JavaClassFile{
    simpleName = "VariablesReporter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/reporter/VariablesReporter.class";
  }

  @(Reporting.class):JavaClassFile{
    simpleName = "Reporting";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/reporting/Reporting.class";
  }

  @(StringHookPoint.class):JavaClassFile{
    simpleName = "StringHookPoint";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/StringHookPoint.class";
  }

  @(TemplateController.class):JavaClassFile{
    simpleName = "TemplateController";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/TemplateController.class";
  }

  @(TemplateHookPoint.class):JavaClassFile{
    simpleName = "TemplateHookPoint";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/TemplateHookPoint.class";
  }

  @(TemplateStringHookPoint.class):JavaClassFile{
    simpleName = "TemplateStringHookPoint";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/generating/templateengine/TemplateStringHookPoint.class";
  }

  @(incremental!2):Directory{
    simpleName = "incremental";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/incremental";
  }

  @(IncrementalChecker$1.class):JavaClassFile{
    simpleName = "IncrementalChecker$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/incremental/IncrementalChecker$1.class";
  }

  @(IncrementalChecker$InputOutputStory.class):JavaClassFile{
    simpleName = "IncrementalChecker$InputOutputStory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/incremental/IncrementalChecker$InputOutputStory.class";
  }

  @(IncrementalChecker$InputStory.class):JavaClassFile{
    simpleName = "IncrementalChecker$InputStory";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/incremental/IncrementalChecker$InputStory.class";
  }

  @(IncrementalChecker.class):JavaClassFile{
    simpleName = "IncrementalChecker";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/incremental/IncrementalChecker.class";
  }

  @(io!3):Directory{
    simpleName = "io";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io";
  }

  @(FileReaderWriter.class):JavaClassFile{
    simpleName = "FileReaderWriter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/FileReaderWriter.class";
  }

  @(paths!4):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths";
  }

  @(IterablePath.class):JavaClassFile{
    simpleName = "IterablePath";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths/IterablePath.class";
  }

  @(ModelCoordinate.class):JavaClassFile{
    simpleName = "ModelCoordinate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths/ModelCoordinate.class";
  }

  @(ModelCoordinateImpl.class):JavaClassFile{
    simpleName = "ModelCoordinateImpl";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths/ModelCoordinateImpl.class";
  }

  @(ModelCoordinates.class):JavaClassFile{
    simpleName = "ModelCoordinates";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths/ModelCoordinates.class";
  }

  @(ModelPath.class):JavaClassFile{
    simpleName = "ModelPath";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/io/paths/ModelPath.class";
  }

  @(ModelingLanguage.class):JavaClassFile{
    simpleName = "ModelingLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ModelingLanguage.class";
  }

  @(ModelingLanguageFamily.class):JavaClassFile{
    simpleName = "ModelingLanguageFamily";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ModelingLanguageFamily.class";
  }

  @(modelloader!4):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/modelloader";
  }

  @(AstProvider.class):JavaClassFile{
    simpleName = "AstProvider";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/modelloader/AstProvider.class";
  }

  @(FileBasedAstProvider.class):JavaClassFile{
    simpleName = "FileBasedAstProvider";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/modelloader/FileBasedAstProvider.class";
  }

  @(ModelingLanguageModelLoader.class):JavaClassFile{
    simpleName = "ModelingLanguageModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/modelloader/ModelingLanguageModelLoader.class";
  }

  @(ModelNameCalculator.class):JavaClassFile{
    simpleName = "ModelNameCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/ModelNameCalculator.class";
  }

  @(MontiCoreConstants.class):JavaClassFile{
    simpleName = "MontiCoreConstants";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/MontiCoreConstants.class";
  }

  @(parsing!3):Directory{
    simpleName = "parsing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/parsing";
  }

  @(Parser$1.class):JavaClassFile{
    simpleName = "Parser$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/parsing/Parser$1.class";
  }

  @(Parser.class):JavaClassFile{
    simpleName = "Parser";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/parsing/Parser.class";
  }

  @(prettyprint!21):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/prettyprint";
  }

  @(AstPrettyPrinter.class):JavaClassFile{
    simpleName = "AstPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/prettyprint/AstPrettyPrinter.class";
  }

  @(CommentPrettyPrinter.class):JavaClassFile{
    simpleName = "CommentPrettyPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/prettyprint/CommentPrettyPrinter.class";
  }

  @(IndentPrinter.class):JavaClassFile{
    simpleName = "IndentPrinter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/prettyprint/IndentPrinter.class";
  }

  @(symboltable!22):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable";
  }

  @(ArtifactScope.class):JavaClassFile{
    simpleName = "ArtifactScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/ArtifactScope.class";
  }

  @(CommonScope.class):JavaClassFile{
    simpleName = "CommonScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/CommonScope.class";
  }

  @(CommonScopeSpanningSymbol.class):JavaClassFile{
    simpleName = "CommonScopeSpanningSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/CommonScopeSpanningSymbol.class";
  }

  @(CommonSymbol.class):JavaClassFile{
    simpleName = "CommonSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/CommonSymbol.class";
  }

  @(CommonSymbolTableCreator.class):JavaClassFile{
    simpleName = "CommonSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/CommonSymbolTableCreator.class";
  }

  @(EnclosingScopeOfNodesInitializer.class):JavaClassFile{
    simpleName = "EnclosingScopeOfNodesInitializer";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/EnclosingScopeOfNodesInitializer.class";
  }

  @(GlobalScope.class):JavaClassFile{
    simpleName = "GlobalScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/GlobalScope.class";
  }

  @(ImportStatement.class):JavaClassFile{
    simpleName = "ImportStatement";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/ImportStatement.class";
  }

  @(modifiers!2):Directory{
    simpleName = "modifiers";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers";
  }

  @(AccessModifier$1.class):JavaClassFile{
    simpleName = "AccessModifier$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/AccessModifier$1.class";
  }

  @(AccessModifier$AllInclusionAccessModifier.class):JavaClassFile{
    simpleName = "AccessModifier$AllInclusionAccessModifier";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/AccessModifier$AllInclusionAccessModifier.class";
  }

  @(AccessModifier.class):JavaClassFile{
    simpleName = "AccessModifier";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/AccessModifier.class";
  }

  @(BasicAccessModifier$1.class):JavaClassFile{
    simpleName = "BasicAccessModifier$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/BasicAccessModifier$1.class";
  }

  @(BasicAccessModifier$2.class):JavaClassFile{
    simpleName = "BasicAccessModifier$2";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/BasicAccessModifier$2.class";
  }

  @(BasicAccessModifier$3.class):JavaClassFile{
    simpleName = "BasicAccessModifier$3";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/BasicAccessModifier$3.class";
  }

  @(BasicAccessModifier$4.class):JavaClassFile{
    simpleName = "BasicAccessModifier$4";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/BasicAccessModifier$4.class";
  }

  @(BasicAccessModifier.class):JavaClassFile{
    simpleName = "BasicAccessModifier";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/BasicAccessModifier.class";
  }

  @(IncludesAccessModifierPredicate.class):JavaClassFile{
    simpleName = "IncludesAccessModifierPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/IncludesAccessModifierPredicate.class";
  }

  @(Modifier.class):JavaClassFile{
    simpleName = "Modifier";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/Modifier.class";
  }

  @(NoAccessModifier.class):JavaClassFile{
    simpleName = "NoAccessModifier";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/modifiers/NoAccessModifier.class";
  }

  @(MutableScope.class):JavaClassFile{
    simpleName = "MutableScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/MutableScope.class";
  }

  @(names!2):Directory{
    simpleName = "names";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/names";
  }

  @(CommonQualifiedNamesCalculator.class):JavaClassFile{
    simpleName = "CommonQualifiedNamesCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/names/CommonQualifiedNamesCalculator.class";
  }

  @(QualifiedNamesCalculator.class):JavaClassFile{
    simpleName = "QualifiedNamesCalculator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/names/QualifiedNamesCalculator.class";
  }

  @(references!4):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/references";
  }

  @(CommonSymbolReference.class):JavaClassFile{
    simpleName = "CommonSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/references/CommonSymbolReference.class";
  }

  @(SymbolReference.class):JavaClassFile{
    simpleName = "SymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/references/SymbolReference.class";
  }

  @(resolving!2):Directory{
    simpleName = "resolving";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving";
  }

  @(AdaptedResolvingFilter.class):JavaClassFile{
    simpleName = "AdaptedResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/AdaptedResolvingFilter.class";
  }

  @(CommonAdaptedResolvingFilter.class):JavaClassFile{
    simpleName = "CommonAdaptedResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/CommonAdaptedResolvingFilter.class";
  }

  @(CommonResolvingFilter.class):JavaClassFile{
    simpleName = "CommonResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/CommonResolvingFilter.class";
  }

  @(ResolvedSeveralEntriesException.class):JavaClassFile{
    simpleName = "ResolvedSeveralEntriesException";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/ResolvedSeveralEntriesException.class";
  }

  @(ResolvingFilter.class):JavaClassFile{
    simpleName = "ResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/ResolvingFilter.class";
  }

  @(ResolvingInfo.class):JavaClassFile{
    simpleName = "ResolvingInfo";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/ResolvingInfo.class";
  }

  @(SymbolAdapter.class):JavaClassFile{
    simpleName = "SymbolAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/SymbolAdapter.class";
  }

  @(TransitiveAdaptedResolvingFilter.class):JavaClassFile{
    simpleName = "TransitiveAdaptedResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/resolving/TransitiveAdaptedResolvingFilter.class";
  }

  @(ResolvingConfiguration.class):JavaClassFile{
    simpleName = "ResolvingConfiguration";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/ResolvingConfiguration.class";
  }

  @(Scope.class):JavaClassFile{
    simpleName = "Scope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/Scope.class";
  }

  @(Scopes.class):JavaClassFile{
    simpleName = "Scopes";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/Scopes.class";
  }

  @(ScopeSpanningSymbol.class):JavaClassFile{
    simpleName = "ScopeSpanningSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/ScopeSpanningSymbol.class";
  }

  @(serializing!3):Directory{
    simpleName = "serializing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/serializing";
  }

  @(Serialization.class):JavaClassFile{
    simpleName = "Serialization";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/serializing/Serialization.class";
  }

  @(Symbol.class):JavaClassFile{
    simpleName = "Symbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/Symbol.class";
  }

  @(SymbolKind$1.class):JavaClassFile{
    simpleName = "SymbolKind$1";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/SymbolKind$1.class";
  }

  @(SymbolKind.class):JavaClassFile{
    simpleName = "SymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/SymbolKind.class";
  }

  @(SymbolNameAndKindPredicate.class):JavaClassFile{
    simpleName = "SymbolNameAndKindPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/SymbolNameAndKindPredicate.class";
  }

  @(SymbolPredicate.class):JavaClassFile{
    simpleName = "SymbolPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/SymbolPredicate.class";
  }

  @(Symbols.class):JavaClassFile{
    simpleName = "Symbols";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/Symbols.class";
  }

  @(SymbolTableCreator.class):JavaClassFile{
    simpleName = "SymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/SymbolTableCreator.class";
  }

  @(types!23):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types";
  }

  @(CommonJFieldSymbol.class):JavaClassFile{
    simpleName = "CommonJFieldSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/CommonJFieldSymbol.class";
  }

  @(CommonJMethodSymbol.class):JavaClassFile{
    simpleName = "CommonJMethodSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/CommonJMethodSymbol.class";
  }

  @(CommonJTypeScope.class):JavaClassFile{
    simpleName = "CommonJTypeScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/CommonJTypeScope.class";
  }

  @(CommonJTypeSymbol.class):JavaClassFile{
    simpleName = "CommonJTypeSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/CommonJTypeSymbol.class";
  }

  @(JAttributeSymbolKind.class):JavaClassFile{
    simpleName = "JAttributeSymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JAttributeSymbolKind.class";
  }

  @(JFieldSymbol.class):JavaClassFile{
    simpleName = "JFieldSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JFieldSymbol.class";
  }

  @(JMethodSymbol.class):JavaClassFile{
    simpleName = "JMethodSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JMethodSymbol.class";
  }

  @(JMethodSymbolKind.class):JavaClassFile{
    simpleName = "JMethodSymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JMethodSymbolKind.class";
  }

  @(JTypeSymbol.class):JavaClassFile{
    simpleName = "JTypeSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JTypeSymbol.class";
  }

  @(JTypeSymbolKind.class):JavaClassFile{
    simpleName = "JTypeSymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/JTypeSymbolKind.class";
  }

  @(Parameter.class):JavaClassFile{
    simpleName = "Parameter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/Parameter.class";
  }

  @(references!5):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references";
  }

  @(ActualTypeArgument.class):JavaClassFile{
    simpleName = "ActualTypeArgument";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references/ActualTypeArgument.class";
  }

  @(CommonJTypeReference.class):JavaClassFile{
    simpleName = "CommonJTypeReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references/CommonJTypeReference.class";
  }

  @(CommonTypeReference.class):JavaClassFile{
    simpleName = "CommonTypeReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references/CommonTypeReference.class";
  }

  @(JTypeReference.class):JavaClassFile{
    simpleName = "JTypeReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references/JTypeReference.class";
  }

  @(TypeReference.class):JavaClassFile{
    simpleName = "TypeReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/references/TypeReference.class";
  }

  @(TypeSymbol.class):JavaClassFile{
    simpleName = "TypeSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/TypeSymbol.class";
  }

  @(TypeSymbolKind.class):JavaClassFile{
    simpleName = "TypeSymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/types/TypeSymbolKind.class";
  }

  @(visibility!2):Directory{
    simpleName = "visibility";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/visibility";
  }

  @(IsShadowedBySymbol.class):JavaClassFile{
    simpleName = "IsShadowedBySymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/visibility/IsShadowedBySymbol.class";
  }

  @(ShadowsSymbol.class):JavaClassFile{
    simpleName = "ShadowsSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/symboltable/visibility/ShadowsSymbol.class";
  }

  @(types!24):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/types";
  }

  @(TypeResolver.class):JavaClassFile{
    simpleName = "TypeResolver";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/types/TypeResolver.class";
  }

  @(utils!2):Directory{
    simpleName = "utils";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/utils";
  }

  @(ASTNodes.class):JavaClassFile{
    simpleName = "ASTNodes";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/utils/ASTNodes.class";
  }

  @(ASTTraverser$Visitor.class):JavaClassFile{
    simpleName = "ASTTraverser$Visitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/utils/ASTTraverser$Visitor.class";
  }

  @(ASTTraverser.class):JavaClassFile{
    simpleName = "ASTTraverser";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/utils/ASTTraverser.class";
  }

  @(Link.class):JavaClassFile{
    simpleName = "Link";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/utils/Link.class";
  }

  @(visitor!9):Directory{
    simpleName = "visitor";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/visitor";
  }

  @(CommonVisitor.class!2):JavaClassFile{
    simpleName = "CommonVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/classes/de/monticore/visitor/CommonVisitor.class";
  }

  @(generated-sources!6):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/generated-sources";
  }

  @(annotations!8):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/generated-sources/annotations";
  }

  @(generated-test-sources!4):Directory{
    simpleName = "generated-test-sources";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/generated-test-sources";
  }

  @(test-annotations!4):Directory{
    simpleName = "test-annotations";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/generated-test-sources/test-annotations";
  }

  @(maven-archiver!6):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-archiver";
  }

  @(maven-status!6):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status";
  }

  @(maven-compiler-plugin!6):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status/maven-compiler-plugin";
  }

  @(compile!6):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!6):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(testCompile!4):Directory{
    simpleName = "testCompile";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status/maven-compiler-plugin/testCompile";
  }

  @(default-testCompile!4):Directory{
    simpleName = "default-testCompile";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile";
  }

  @(monticore-runtime-4.5.5.1-sources.jar):JarArchive{
    simpleName = "monticore-runtime-4.5.5.1-sources";
    nameExtension = "jar";
    fullName = "sources/monticore-runtime/target/monticore-runtime-4.5.5.1-sources.jar";
  }

  @(monticore-runtime-4.5.5.1-tests.jar):JarArchive{
    simpleName = "monticore-runtime-4.5.5.1-tests";
    nameExtension = "jar";
    fullName = "sources/monticore-runtime/target/monticore-runtime-4.5.5.1-tests.jar";
  }

  @(monticore-runtime-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-runtime-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-runtime/target/monticore-runtime-4.5.5.1.jar";
  }

  @(serialization!2):Directory{
    simpleName = "serialization";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/serialization";
  }

  @(surefire-reports!4):Directory{
    simpleName = "surefire-reports";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/surefire-reports";
  }

  @(test!10):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test";
  }

  @(test-classes!4):Directory{
    simpleName = "test-classes";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes";
  }

  @(de!41):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de";
  }

  @(monticore!44):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore";
  }

  @(ast!13):Directory{
    simpleName = "ast";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/ast";
  }

  @(ASTCNodeMock.class):JavaClassFile{
    simpleName = "ASTCNodeMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/ast/ASTCNodeMock.class";
  }

  @(ASTNodeMock.class):JavaClassFile{
    simpleName = "ASTNodeMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/ast/ASTNodeMock.class";
  }

  @(cocos!16):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/cocos";
  }

  @(CocoCheckTest.class):JavaClassFile{
    simpleName = "CocoCheckTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/cocos/CocoCheckTest.class";
  }

  @(helper!2):Directory{
    simpleName = "helper";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/cocos/helper";
  }

  @(Assert.class):JavaClassFile{
    simpleName = "Assert";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/cocos/helper/Assert.class";
  }

  @(generating!5):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating";
  }

  @(GeneratorEngineMock.class):JavaClassFile{
    simpleName = "GeneratorEngineMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/GeneratorEngineMock.class";
  }

  @(GeneratorEngineTest.class):JavaClassFile{
    simpleName = "GeneratorEngineTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/GeneratorEngineTest.class";
  }

  @(templateengine!5):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine";
  }

  @(CodeHookPointMock.class):JavaClassFile{
    simpleName = "CodeHookPointMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/CodeHookPointMock.class";
  }

  @(FreeMarkerTemplateEngineMock.class):JavaClassFile{
    simpleName = "FreeMarkerTemplateEngineMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/FreeMarkerTemplateEngineMock.class";
  }

  @(FreeMarkerTemplateMock.class):JavaClassFile{
    simpleName = "FreeMarkerTemplateMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/FreeMarkerTemplateMock.class";
  }

  @(GeneratorSetupMock.class):JavaClassFile{
    simpleName = "GeneratorSetupMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/GeneratorSetupMock.class";
  }

  @(GlobalExtensionManagementGlobalVarsTest.class):JavaClassFile{
    simpleName = "GlobalExtensionManagementGlobalVarsTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/GlobalExtensionManagementGlobalVarsTest.class";
  }

  @(ObjectFactoryTest.class):JavaClassFile{
    simpleName = "ObjectFactoryTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/ObjectFactoryTest.class";
  }

  @(reporting!5):Directory{
    simpleName = "reporting";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/reporting";
  }

  @(commons!5):Directory{
    simpleName = "commons";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/reporting/commons";
  }

  @(ReportingStringHelperTest.class):JavaClassFile{
    simpleName = "ReportingStringHelperTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/reporting/commons/ReportingStringHelperTest.class";
  }

  @(TemplateAliasingTest.class):JavaClassFile{
    simpleName = "TemplateAliasingTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateAliasingTest.class";
  }

  @(TemplateControllerHookPointsTest.class):JavaClassFile{
    simpleName = "TemplateControllerHookPointsTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateControllerHookPointsTest.class";
  }

  @(TemplateControllerMock.class):JavaClassFile{
    simpleName = "TemplateControllerMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateControllerMock.class";
  }

  @(TemplateControllerSignatureUsageTest.class):JavaClassFile{
    simpleName = "TemplateControllerSignatureUsageTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateControllerSignatureUsageTest.class";
  }

  @(TemplateControllerTest.class):JavaClassFile{
    simpleName = "TemplateControllerTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateControllerTest.class";
  }

  @(TemplateLoggerTest.class):JavaClassFile{
    simpleName = "TemplateLoggerTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TemplateLoggerTest.class";
  }

  @(templates!4):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates";
  }

  @(A.ftl!2):FreeMarkerTemplate{
    simpleName = "A";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/A.ftl";
  }

  @(aliases!2):Directory{
    simpleName = "aliases";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases";
  }

  @(GlobalListVars.ftl!3):FreeMarkerTemplate{
    simpleName = "GlobalListVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/GlobalListVars.ftl";
  }

  @(IncludeAlias.ftl!2):FreeMarkerTemplate{
    simpleName = "IncludeAlias";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/IncludeAlias.ftl";
  }

  @(IncludeArgsAndSignatureAlias.ftl!2):FreeMarkerTemplate{
    simpleName = "IncludeArgsAndSignatureAlias";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/IncludeArgsAndSignatureAlias.ftl";
  }

  @(LogAliases.ftl!2):FreeMarkerTemplate{
    simpleName = "LogAliases";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/LogAliases.ftl";
  }

  @(Plain.ftl!2):FreeMarkerTemplate{
    simpleName = "Plain";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/Plain.ftl";
  }

  @(SignatureAliasWithThreeParameters.ftl!2):FreeMarkerTemplate{
    simpleName = "SignatureAliasWithThreeParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/aliases/SignatureAliasWithThreeParameters.ftl";
  }

  @(ArgumentsAreOnlyVisibleInIncludedTemplate.ftl!2):FreeMarkerTemplate{
    simpleName = "ArgumentsAreOnlyVisibleInIncludedTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/ArgumentsAreOnlyVisibleInIncludedTemplate.ftl";
  }

  @(B.ftl!2):FreeMarkerTemplate{
    simpleName = "B";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/B.ftl";
  }

  @(C.ftl!2):FreeMarkerTemplate{
    simpleName = "C";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/C.ftl";
  }

  @(GlobalListVars.ftl!4):FreeMarkerTemplate{
    simpleName = "GlobalListVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/GlobalListVars.ftl";
  }

  @(GlobalVars.ftl!2):FreeMarkerTemplate{
    simpleName = "GlobalVars";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/GlobalVars.ftl";
  }

  @(HelloWorld.ftl!2):FreeMarkerTemplate{
    simpleName = "HelloWorld";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/HelloWorld.ftl";
  }

  @(HookCall.ftl!2):FreeMarkerTemplate{
    simpleName = "HookCall";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/HookCall.ftl";
  }

  @(HowAreYou.ftl!2):FreeMarkerTemplate{
    simpleName = "HowAreYou";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/HowAreYou.ftl";
  }

  @(Log.ftl!2):FreeMarkerTemplate{
    simpleName = "Log";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/Log.ftl";
  }

  @(NestedSignatureCalls.ftl!2):FreeMarkerTemplate{
    simpleName = "NestedSignatureCalls";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/NestedSignatureCalls.ftl";
  }

  @(ParameterizedInclusionUsage.ftl!2):FreeMarkerTemplate{
    simpleName = "ParameterizedInclusionUsage";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/ParameterizedInclusionUsage.ftl";
  }

  @(PrintNameIfExists.ftl!2):FreeMarkerTemplate{
    simpleName = "PrintNameIfExists";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/PrintNameIfExists.ftl";
  }

  @(SignatureWithManyParameters.ftl!2):FreeMarkerTemplate{
    simpleName = "SignatureWithManyParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/SignatureWithManyParameters.ftl";
  }

  @(SignatureWithOneParameter.ftl!2):FreeMarkerTemplate{
    simpleName = "SignatureWithOneParameter";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/SignatureWithOneParameter.ftl";
  }

  @(SignatureWithThreeParameters.ftl!2):FreeMarkerTemplate{
    simpleName = "SignatureWithThreeParameters";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/SignatureWithThreeParameters.ftl";
  }

  @(TestVariables4.ftl!2):FreeMarkerTemplate{
    simpleName = "TestVariables4";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/TestVariables4.ftl";
  }

  @(TopA.ftl!2):FreeMarkerTemplate{
    simpleName = "TopA";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/TopA.ftl";
  }

  @(TopStringHook.ftl!2):FreeMarkerTemplate{
    simpleName = "TopStringHook";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/TopStringHook.ftl";
  }

  @(TopTemplateHook.ftl!2):FreeMarkerTemplate{
    simpleName = "TopTemplateHook";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/templates/TopTemplateHook.ftl";
  }

  @(TestConstants.class):JavaClassFile{
    simpleName = "TestConstants";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templateengine/TestConstants.class";
  }

  @(templates!5):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates";
  }

  @(ClassProd.ftl!2):FreeMarkerTemplate{
    simpleName = "ClassProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/ClassProd.ftl";
  }

  @(First.ftl!2):FreeMarkerTemplate{
    simpleName = "First";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/First.ftl";
  }

  @(Grammar.ftl!4):FreeMarkerTemplate{
    simpleName = "Grammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/Grammar.ftl";
  }

  @(InterfaceProd.ftl!2):FreeMarkerTemplate{
    simpleName = "InterfaceProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/InterfaceProd.ftl";
  }

  @(Main.ftl!4):FreeMarkerTemplate{
    simpleName = "Main";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/Main.ftl";
  }

  @(MainClassProd.ftl!2):FreeMarkerTemplate{
    simpleName = "MainClassProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/MainClassProd.ftl";
  }

  @(MainGrammar.ftl!2):FreeMarkerTemplate{
    simpleName = "MainGrammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/MainGrammar.ftl";
  }

  @(MainInterfaceProd.ftl!2):FreeMarkerTemplate{
    simpleName = "MainInterfaceProd";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/generating/templates/MainInterfaceProd.ftl";
  }

  @(io!4):Directory{
    simpleName = "io";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io";
  }

  @(FileReaderWriterMock.class):JavaClassFile{
    simpleName = "FileReaderWriterMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/FileReaderWriterMock.class";
  }

  @(FileReaderWriterTest.class):JavaClassFile{
    simpleName = "FileReaderWriterTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/FileReaderWriterTest.class";
  }

  @(paths!5):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/paths";
  }

  @(IterablePathTest.class):JavaClassFile{
    simpleName = "IterablePathTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/paths/IterablePathTest.class";
  }

  @(ModelCoordinateTest.class):JavaClassFile{
    simpleName = "ModelCoordinateTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/paths/ModelCoordinateTest.class";
  }

  @(ModelPathTest.class):JavaClassFile{
    simpleName = "ModelPathTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/io/paths/ModelPathTest.class";
  }

  @(modelloader!5):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/modelloader";
  }

  @(ModelLoaderTest.class):JavaClassFile{
    simpleName = "ModelLoaderTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/modelloader/ModelLoaderTest.class";
  }

  @(parsing!4):Directory{
    simpleName = "parsing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/parsing";
  }

  @(symboltable!23):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable";
  }

  @(AdaptedResolvingTest.class):JavaClassFile{
    simpleName = "AdaptedResolvingTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/AdaptedResolvingTest.class";
  }

  @(ArtifactScopeTest.class):JavaClassFile{
    simpleName = "ArtifactScopeTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ArtifactScopeTest.class";
  }

  @(GlobalScopeTest.class):JavaClassFile{
    simpleName = "GlobalScopeTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/GlobalScopeTest.class";
  }

  @(languagecomposition!2):Directory{
    simpleName = "languagecomposition";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/languagecomposition";
  }

  @(embedding!11):Directory{
    simpleName = "embedding";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/languagecomposition/embedding";
  }

  @(family!2):Directory{
    simpleName = "family";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/languagecomposition/family";
  }

  @(LanguageCompositionTest.class):JavaClassFile{
    simpleName = "LanguageCompositionTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/LanguageCompositionTest.class";
  }

  @(mocks!2):Directory{
    simpleName = "mocks";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks";
  }

  @(asts!5):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts";
  }

  @(ASTCompilationUnit.class!2):JavaClassFile{
    simpleName = "ASTCompilationUnit";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/ASTCompilationUnit.class";
  }

  @(ASTId.class):JavaClassFile{
    simpleName = "ASTId";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/ASTId.class";
  }

  @(ASTNodeMock.class!2):JavaClassFile{
    simpleName = "ASTNodeMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/ASTNodeMock.class";
  }

  @(ASTSymbol.class):JavaClassFile{
    simpleName = "ASTSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/ASTSymbol.class";
  }

  @(ASTSymbolReference.class):JavaClassFile{
    simpleName = "ASTSymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/ASTSymbolReference.class";
  }

  @(grammar!17):Directory{
    simpleName = "grammar";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/grammar";
  }

  @(ASTProd.class!4):JavaClassFile{
    simpleName = "ASTProd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/grammar/ASTProd.class";
  }

  @(ASTSymbolProd.class):JavaClassFile{
    simpleName = "ASTSymbolProd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/grammar/ASTSymbolProd.class";
  }

  @(ASTSymbolProdReference.class):JavaClassFile{
    simpleName = "ASTSymbolProdReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/asts/grammar/ASTSymbolProdReference.class";
  }

  @(CommonScopeMock.class):JavaClassFile{
    simpleName = "CommonScopeMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/CommonScopeMock.class";
  }

  @(languages!2):Directory{
    simpleName = "languages";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages";
  }

  @(edl!4):Directory{
    simpleName = "edl";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/edl";
  }

  @(asts!6):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/edl/asts";
  }

  @(ASTEntity.class):JavaClassFile{
    simpleName = "ASTEntity";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/edl/asts/ASTEntity.class";
  }

  @(ASTEntityEnd.class):JavaClassFile{
    simpleName = "ASTEntityEnd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/edl/asts/ASTEntityEnd.class";
  }

  @(ASTProperty.class):JavaClassFile{
    simpleName = "ASTProperty";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/edl/asts/ASTProperty.class";
  }

  @(entity!2):Directory{
    simpleName = "entity";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity";
  }

  @(ActionScope.class):JavaClassFile{
    simpleName = "ActionScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/ActionScope.class";
  }

  @(ActionSymbol.class):JavaClassFile{
    simpleName = "ActionSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/ActionSymbol.class";
  }

  @(ActionSymbolKind.class):JavaClassFile{
    simpleName = "ActionSymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/ActionSymbolKind.class";
  }

  @(asts!7):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts";
  }

  @(ASTAction.class!3):JavaClassFile{
    simpleName = "ASTAction";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTAction.class";
  }

  @(ASTActionEnd.class):JavaClassFile{
    simpleName = "ASTActionEnd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTActionEnd.class";
  }

  @(ASTEntity.class!2):JavaClassFile{
    simpleName = "ASTEntity";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntity.class";
  }

  @(ASTEntityBase.class):JavaClassFile{
    simpleName = "ASTEntityBase";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityBase.class";
  }

  @(ASTEntityCompilationUnit.class):JavaClassFile{
    simpleName = "ASTEntityCompilationUnit";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityCompilationUnit.class";
  }

  @(ASTEntityEnd.class!2):JavaClassFile{
    simpleName = "ASTEntityEnd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTEntityEnd.class";
  }

  @(ASTProperty.class!2):JavaClassFile{
    simpleName = "ASTProperty";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/ASTProperty.class";
  }

  @(EntityLanguageVisitor.class):JavaClassFile{
    simpleName = "EntityLanguageVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/asts/EntityLanguageVisitor.class";
  }

  @(cocos!17):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos";
  }

  @(ContextCondition.class):JavaClassFile{
    simpleName = "ContextCondition";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/ContextCondition.class";
  }

  @(EntityASTActionCoCo.class):JavaClassFile{
    simpleName = "EntityASTActionCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTActionCoCo.class";
  }

  @(EntityASTEntityCoCo.class):JavaClassFile{
    simpleName = "EntityASTEntityCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTEntityCoCo.class";
  }

  @(EntityASTEntityCompilationUnitCoCo.class):JavaClassFile{
    simpleName = "EntityASTEntityCompilationUnitCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTEntityCompilationUnitCoCo.class";
  }

  @(EntityASTPropertyCoCo.class):JavaClassFile{
    simpleName = "EntityASTPropertyCoCo";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/EntityASTPropertyCoCo.class";
  }

  @(EntityCoCoChecker.class):JavaClassFile{
    simpleName = "EntityCoCoChecker";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/EntityCoCoChecker.class";
  }

  @(PropertyNameMustStartWithLowerCase.class):JavaClassFile{
    simpleName = "PropertyNameMustStartWithLowerCase";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/PropertyNameMustStartWithLowerCase.class";
  }

  @(UniquePropertyNamesInEntity.class):JavaClassFile{
    simpleName = "UniquePropertyNamesInEntity";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/cocos/UniquePropertyNamesInEntity.class";
  }

  @(CommonEntityLanguageSymbolTableCreator.class):JavaClassFile{
    simpleName = "CommonEntityLanguageSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/CommonEntityLanguageSymbolTableCreator.class";
  }

  @(EntityLanguage.class):JavaClassFile{
    simpleName = "EntityLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntityLanguage.class";
  }

  @(EntityLanguageCoCos.class):JavaClassFile{
    simpleName = "EntityLanguageCoCos";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntityLanguageCoCos.class";
  }

  @(EntityLanguageModelLoader.class):JavaClassFile{
    simpleName = "EntityLanguageModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntityLanguageModelLoader.class";
  }

  @(EntityLanguageSymbolTableCreator.class):JavaClassFile{
    simpleName = "EntityLanguageSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntityLanguageSymbolTableCreator.class";
  }

  @(EntityParserMock.class):JavaClassFile{
    simpleName = "EntityParserMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntityParserMock.class";
  }

  @(EntitySymbol.class):JavaClassFile{
    simpleName = "EntitySymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntitySymbol.class";
  }

  @(EntitySymbolKind.class):JavaClassFile{
    simpleName = "EntitySymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntitySymbolKind.class";
  }

  @(EntitySymbolReference.class):JavaClassFile{
    simpleName = "EntitySymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/EntitySymbolReference.class";
  }

  @(PropertyPredicate.class):JavaClassFile{
    simpleName = "PropertyPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/PropertyPredicate.class";
  }

  @(PropertySymbol.class):JavaClassFile{
    simpleName = "PropertySymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/PropertySymbol.class";
  }

  @(PropertySymbolKind.class):JavaClassFile{
    simpleName = "PropertySymbolKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/entity/PropertySymbolKind.class";
  }

  @(extendedstatechart!2):Directory{
    simpleName = "extendedstatechart";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart";
  }

  @(XStateChartKind.class):JavaClassFile{
    simpleName = "XStateChartKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartKind.class";
  }

  @(XStateChartScope.class):JavaClassFile{
    simpleName = "XStateChartScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartScope.class";
  }

  @(XStateChartSymbol.class):JavaClassFile{
    simpleName = "XStateChartSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateChartSymbol.class";
  }

  @(XStateKind.class):JavaClassFile{
    simpleName = "XStateKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateKind.class";
  }

  @(XStateSymbol.class):JavaClassFile{
    simpleName = "XStateSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/extendedstatechart/XStateSymbol.class";
  }

  @(JTypeSymbolMock.class):JavaClassFile{
    simpleName = "JTypeSymbolMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/JTypeSymbolMock.class";
  }

  @(ParserMock.class):JavaClassFile{
    simpleName = "ParserMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/ParserMock.class";
  }

  @(references!6):Directory{
    simpleName = "references";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/references";
  }

  @(PropertySymbolReference.class):JavaClassFile{
    simpleName = "PropertySymbolReference";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/references/PropertySymbolReference.class";
  }

  @(scandentity!2):Directory{
    simpleName = "scandentity";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity";
  }

  @(Action2StateAdapter.class):JavaClassFile{
    simpleName = "Action2StateAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Action2StateAdapter.class";
  }

  @(Action2StateTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "Action2StateTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Action2StateTransitiveResolvingFilter.class";
  }

  @(CompositeScAndEntitySymbolTableCreator.class):JavaClassFile{
    simpleName = "CompositeScAndEntitySymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/CompositeScAndEntitySymbolTableCreator.class";
  }

  @(Entity2ScAdapter.class):JavaClassFile{
    simpleName = "Entity2ScAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Entity2ScAdapter.class";
  }

  @(Entity2ScTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "Entity2ScTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Entity2ScTransitiveResolvingFilter.class";
  }

  @(Entity2StateAdapter.class):JavaClassFile{
    simpleName = "Entity2StateAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Entity2StateAdapter.class";
  }

  @(Entity2StateTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "Entity2StateTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Entity2StateTransitiveResolvingFilter.class";
  }

  @(EntityEmbeddingScLanguage.class):JavaClassFile{
    simpleName = "EntityEmbeddingScLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/EntityEmbeddingScLanguage.class";
  }

  @(EntityEmbeddingScModelLoader.class):JavaClassFile{
    simpleName = "EntityEmbeddingScModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/EntityEmbeddingScModelLoader.class";
  }

  @(Sc2ActionAdapter.class):JavaClassFile{
    simpleName = "Sc2ActionAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Sc2ActionAdapter.class";
  }

  @(Sc2ActionTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "Sc2ActionTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Sc2ActionTransitiveResolvingFilter.class";
  }

  @(Sc2EntityAdapter.class):JavaClassFile{
    simpleName = "Sc2EntityAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Sc2EntityAdapter.class";
  }

  @(Sc2EntityTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "Sc2EntityTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/Sc2EntityTransitiveResolvingFilter.class";
  }

  @(ScAndEntityLanguageFamily.class):JavaClassFile{
    simpleName = "ScAndEntityLanguageFamily";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/ScAndEntityLanguageFamily.class";
  }

  @(State2EntityAdapter.class):JavaClassFile{
    simpleName = "State2EntityAdapter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/State2EntityAdapter.class";
  }

  @(State2EntityTransitiveResolvingFilter.class):JavaClassFile{
    simpleName = "State2EntityTransitiveResolvingFilter";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/scandentity/State2EntityTransitiveResolvingFilter.class";
  }

  @(statechart!10):Directory{
    simpleName = "statechart";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart";
  }

  @(asts!8):Directory{
    simpleName = "asts";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts";
  }

  @(ASTState.class!7):JavaClassFile{
    simpleName = "ASTState";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/ASTState.class";
  }

  @(ASTStateChart.class):JavaClassFile{
    simpleName = "ASTStateChart";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChart.class";
  }

  @(ASTStateChartBase.class):JavaClassFile{
    simpleName = "ASTStateChartBase";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartBase.class";
  }

  @(ASTStateChartCompilationUnit.class):JavaClassFile{
    simpleName = "ASTStateChartCompilationUnit";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartCompilationUnit.class";
  }

  @(ASTStateChartEnd.class):JavaClassFile{
    simpleName = "ASTStateChartEnd";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/ASTStateChartEnd.class";
  }

  @(StateChartLanguageBaseVisitor.class):JavaClassFile{
    simpleName = "StateChartLanguageBaseVisitor";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/asts/StateChartLanguageBaseVisitor.class";
  }

  @(CommonStateChartSymbolTableCreator.class):JavaClassFile{
    simpleName = "CommonStateChartSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/CommonStateChartSymbolTableCreator.class";
  }

  @(StateChartKind.class):JavaClassFile{
    simpleName = "StateChartKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartKind.class";
  }

  @(StateChartLanguage.class):JavaClassFile{
    simpleName = "StateChartLanguage";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguage.class";
  }

  @(StateChartLanguageModelLoader.class):JavaClassFile{
    simpleName = "StateChartLanguageModelLoader";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguageModelLoader.class";
  }

  @(StateChartLanguageSymbolTableCreator.class):JavaClassFile{
    simpleName = "StateChartLanguageSymbolTableCreator";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartLanguageSymbolTableCreator.class";
  }

  @(StateChartParserMock.class):JavaClassFile{
    simpleName = "StateChartParserMock";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartParserMock.class";
  }

  @(StateChartScope.class):JavaClassFile{
    simpleName = "StateChartScope";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartScope.class";
  }

  @(StateChartSymbol.class):JavaClassFile{
    simpleName = "StateChartSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateChartSymbol.class";
  }

  @(StateKind.class!2):JavaClassFile{
    simpleName = "StateKind";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateKind.class";
  }

  @(StateSymbol.class!2):JavaClassFile{
    simpleName = "StateSymbol";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/mocks/languages/statechart/StateSymbol.class";
  }

  @(ModifierTest.class):JavaClassFile{
    simpleName = "ModifierTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ModifierTest.class";
  }

  @(NamesTest.class):JavaClassFile{
    simpleName = "NamesTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/NamesTest.class";
  }

  @(ReferencesTest.class):JavaClassFile{
    simpleName = "ReferencesTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ReferencesTest.class";
  }

  @(ResolvingImportedScopesTest.class):JavaClassFile{
    simpleName = "ResolvingImportedScopesTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ResolvingImportedScopesTest.class";
  }

  @(ResolvingTest.class):JavaClassFile{
    simpleName = "ResolvingTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ResolvingTest.class";
  }

  @(ResolvingViaPredicateTest$CorrectActionParametersPredicate.class):JavaClassFile{
    simpleName = "ResolvingViaPredicateTest$CorrectActionParametersPredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ResolvingViaPredicateTest$CorrectActionParametersPredicate.class";
  }

  @(ResolvingViaPredicateTest$PropertyTypePredicate.class):JavaClassFile{
    simpleName = "ResolvingViaPredicateTest$PropertyTypePredicate";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ResolvingViaPredicateTest$PropertyTypePredicate.class";
  }

  @(ResolvingViaPredicateTest.class):JavaClassFile{
    simpleName = "ResolvingViaPredicateTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ResolvingViaPredicateTest.class";
  }

  @(ScopeTest.class):JavaClassFile{
    simpleName = "ScopeTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ScopeTest.class";
  }

  @(serializing!4):Directory{
    simpleName = "serializing";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing";
  }

  @(cycle!2):Directory{
    simpleName = "cycle";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/cycle";
  }

  @(CycleA.class):JavaClassFile{
    simpleName = "CycleA";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/cycle/CycleA.class";
  }

  @(CycleB.class):JavaClassFile{
    simpleName = "CycleB";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/cycle/CycleB.class";
  }

  @(CycleC.class):JavaClassFile{
    simpleName = "CycleC";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/cycle/CycleC.class";
  }

  @(inheritance!4):Directory{
    simpleName = "inheritance";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/inheritance";
  }

  @(A.class):JavaClassFile{
    simpleName = "A";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/inheritance/A.class";
  }

  @(B.class):JavaClassFile{
    simpleName = "B";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/inheritance/B.class";
  }

  @(C.class):JavaClassFile{
    simpleName = "C";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/inheritance/C.class";
  }

  @(samereferences!2):Directory{
    simpleName = "samereferences";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/samereferences";
  }

  @(RefA.class):JavaClassFile{
    simpleName = "RefA";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/samereferences/RefA.class";
  }

  @(RefB.class):JavaClassFile{
    simpleName = "RefB";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/samereferences/RefB.class";
  }

  @(RefC.class):JavaClassFile{
    simpleName = "RefC";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/samereferences/RefC.class";
  }

  @(SerializationTest.class):JavaClassFile{
    simpleName = "SerializationTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/serializing/SerializationTest.class";
  }

  @(ShadowingTest.class):JavaClassFile{
    simpleName = "ShadowingTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/ShadowingTest.class";
  }

  @(SymbolKindTest.class):JavaClassFile{
    simpleName = "SymbolKindTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/SymbolKindTest.class";
  }

  @(SymbolTableCreatorTest.class):JavaClassFile{
    simpleName = "SymbolTableCreatorTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/SymbolTableCreatorTest.class";
  }

  @(SymbolTableTest.class):JavaClassFile{
    simpleName = "SymbolTableTest";
    nameExtension = "class";
    fullName = "sources/monticore-runtime/target/test-classes/de/monticore/symboltable/SymbolTableTest.class";
  }

  @(hwc!5):Directory{
    simpleName = "hwc";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/hwc";
  }

  @(test!11):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/hwc/test";
  }

  @(A.java!3):JavaSourceFile{
    simpleName = "A";
    nameExtension = "java";
    fullName = "sources/monticore-runtime/target/test-classes/hwc/test/A.java";
  }

  @(modelloader!6):Directory{
    simpleName = "modelloader";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader";
  }

  @(modeljar.jar!2):JarArchive{
    simpleName = "modeljar";
    nameExtension = "jar";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader/modeljar.jar";
  }

  @(modelpath!3):Directory{
    simpleName = "modelpath";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader/modelpath";
  }

  @(models!4):Directory{
    simpleName = "models";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader/modelpath/models";
  }

  @(modelpath2!2):Directory{
    simpleName = "modelpath2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader/modelpath2";
  }

  @(models!5):Directory{
    simpleName = "models";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelloader/modelpath2/models";
  }

  @(modelpathtest!2):Directory{
    simpleName = "modelpathtest";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelpathtest";
  }

  @(path1!2):Directory{
    simpleName = "path1";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelpathtest/path1";
  }

  @(path2!2):Directory{
    simpleName = "path2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/modelpathtest/path2";
  }

  @(paths!6):Directory{
    simpleName = "paths";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/paths";
  }

  @(1!2):Directory{
    simpleName = "1";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/paths/1";
  }

  @(a!4):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/paths/1/a";
  }

  @(AFile.ftl!4):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/paths/1/a/AFile.ftl";
  }

  @(AFile.ftl!5):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/paths/1/AFile.ftl";
  }

  @(2!3):Directory{
    simpleName = "2";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/paths/2";
  }

  @(a!5):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target/test-classes/paths/2/a";
  }

  @(AFile.ftl!6):FreeMarkerTemplate{
    simpleName = "AFile";
    nameExtension = "ftl";
    fullName = "sources/monticore-runtime/target/test-classes/paths/2/a/AFile.ftl";
  }

  @(target1):Directory{
    simpleName = "target1";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target1";
  }

  @(a!6):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-runtime/target1/a";
  }

  monticorecli:Module{
    simpleName = "monticorecli";
  }

  @(monticore-cli):Directory{
    simpleName = "monticore-cli";
    nameExtension = "";
    fullName = "sources/monticore-cli";
  }

  @(src):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-cli/src";
  }

  @(main):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main";
  }

  @(assemblies):Directory{
    simpleName = "assemblies";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/assemblies";
  }

  @(java):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/java";
  }

  @(de):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/java/de";
  }

  @(monticore):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/java/de/monticore";
  }

  @(cli):Directory{
    simpleName = "cli";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/java/de/monticore/cli";
  }

  @(MontiCoreCLI.java):JavaSourceFile{
    simpleName = "MontiCoreCLI";
    nameExtension = "java";
    fullName = "sources/monticore-cli/src/main/java/de/monticore/cli/MontiCoreCLI.java";
  }

  @(MontiCoreCLIConfiguration.java):JavaSourceFile{
    simpleName = "MontiCoreCLIConfiguration";
    nameExtension = "java";
    fullName = "sources/monticore-cli/src/main/java/de/monticore/cli/MontiCoreCLIConfiguration.java";
  }

  @(resources):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/main/resources";
  }

  @(test):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test";
  }

  @(java!2):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/java";
  }

  @(de!2):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/java/de";
  }

  @(monticore!2):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/java/de/monticore";
  }

  @(cli!2):Directory{
    simpleName = "cli";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/java/de/monticore/cli";
  }

  @(MontiCoreCLITest.java):JavaSourceFile{
    simpleName = "MontiCoreCLITest";
    nameExtension = "java";
    fullName = "sources/monticore-cli/src/test/java/de/monticore/cli/MontiCoreCLITest.java";
  }

  @(resources!2):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/resources";
  }

  @(de!3):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/resources/de";
  }

  @(monticore!3):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/resources/de/monticore";
  }

  @(automaton):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/resources/de/monticore/automaton";
  }

  @(monticore!4):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/src/test/resources/monticore";
  }

  @(Grammar.ftl):FreeMarkerTemplate{
    simpleName = "Grammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-cli/src/test/resources/monticore/Grammar.ftl";
  }

  @(Main.ftl):FreeMarkerTemplate{
    simpleName = "Main";
    nameExtension = "ftl";
    fullName = "sources/monticore-cli/src/test/resources/monticore/Main.ftl";
  }

  @(target):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-cli/target";
  }

  @(archive-tmp):Directory{
    simpleName = "archive-tmp";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/archive-tmp";
  }

  @(classes):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/classes";
  }

  @(de!4):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/classes/de";
  }

  @(monticore!5):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/classes/de/monticore";
  }

  @(cli!3):Directory{
    simpleName = "cli";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/classes/de/monticore/cli";
  }

  @(MontiCoreCLI.class):JavaClassFile{
    simpleName = "MontiCoreCLI";
    nameExtension = "class";
    fullName = "sources/monticore-cli/target/classes/de/monticore/cli/MontiCoreCLI.class";
  }

  @(MontiCoreCLIConfiguration$Options.class):JavaClassFile{
    simpleName = "MontiCoreCLIConfiguration$Options";
    nameExtension = "class";
    fullName = "sources/monticore-cli/target/classes/de/monticore/cli/MontiCoreCLIConfiguration$Options.class";
  }

  @(MontiCoreCLIConfiguration.class):JavaClassFile{
    simpleName = "MontiCoreCLIConfiguration";
    nameExtension = "class";
    fullName = "sources/monticore-cli/target/classes/de/monticore/cli/MontiCoreCLIConfiguration.class";
  }

  @(generated-sources):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/generated-sources";
  }

  @(annotations):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/generated-sources/annotations";
  }

  @(generated-test-sources):Directory{
    simpleName = "generated-test-sources";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/generated-test-sources";
  }

  @(test-annotations):Directory{
    simpleName = "test-annotations";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/generated-test-sources/test-annotations";
  }

  @(maven-archiver):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-archiver";
  }

  @(maven-status):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status";
  }

  @(maven-compiler-plugin):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status/maven-compiler-plugin";
  }

  @(compile):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(testCompile):Directory{
    simpleName = "testCompile";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status/maven-compiler-plugin/testCompile";
  }

  @(default-testCompile):Directory{
    simpleName = "default-testCompile";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile";
  }

  @(monticore-cli-4.5.5.1-jar-with-dependencies.jar):JarArchive{
    simpleName = "monticore-cli-4.5.5.1-jar-with-dependencies";
    nameExtension = "jar";
    fullName = "sources/monticore-cli/target/monticore-cli-4.5.5.1-jar-with-dependencies.jar";
  }

  @(monticore-cli-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-cli-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-cli/target/monticore-cli-4.5.5.1.jar";
  }

  @(monticore-cli-4.5.5.1.zip):Archive{
    simpleName = "monticore-cli-4.5.5.1";
    nameExtension = "zip";
    fullName = "sources/monticore-cli/target/monticore-cli-4.5.5.1.zip";
  }

  @(surefire-reports):Directory{
    simpleName = "surefire-reports";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/surefire-reports";
  }

  @(test-classes):Directory{
    simpleName = "test-classes";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes";
  }

  @(de!5):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes/de";
  }

  @(monticore!6):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes/de/monticore";
  }

  @(automaton!2):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes/de/monticore/automaton";
  }

  @(cli!4):Directory{
    simpleName = "cli";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes/de/monticore/cli";
  }

  @(MontiCoreCLITest.class):JavaClassFile{
    simpleName = "MontiCoreCLITest";
    nameExtension = "class";
    fullName = "sources/monticore-cli/target/test-classes/de/monticore/cli/MontiCoreCLITest.class";
  }

  @(monticore!7):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-classes/monticore";
  }

  @(Grammar.ftl!2):FreeMarkerTemplate{
    simpleName = "Grammar";
    nameExtension = "ftl";
    fullName = "sources/monticore-cli/target/test-classes/monticore/Grammar.ftl";
  }

  @(Main.ftl!2):FreeMarkerTemplate{
    simpleName = "Main";
    nameExtension = "ftl";
    fullName = "sources/monticore-cli/target/test-classes/monticore/Main.ftl";
  }

  @(test-run):Directory{
    simpleName = "test-run";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run";
  }

  @(de!6):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de";
  }

  @(monticore!8):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore";
  }

  @(automaton!3):Directory{
    simpleName = "automaton";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton";
  }

  @(_ast):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast";
  }

  @(ASTAutomaton.java):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.java):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTAutomatonNode.java):JavaSourceFile{
    simpleName = "ASTAutomatonNode";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTAutomatonNode.java";
  }

  @(ASTConstantsAutomaton.java):JavaSourceFile{
    simpleName = "ASTConstantsAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTConstantsAutomaton.java";
  }

  @(ASTState.java):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTState.java";
  }

  @(ASTStateBuilder.java):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.java):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.java):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/ASTTransitionBuilder.java";
  }

  @(AutomatonLiterals.java):JavaSourceFile{
    simpleName = "AutomatonLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/AutomatonLiterals.java";
  }

  @(AutomatonMill.java):JavaSourceFile{
    simpleName = "AutomatonMill";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/AutomatonMill.java";
  }

  @(AutomatonNodeFactory.java):JavaSourceFile{
    simpleName = "AutomatonNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_ast/AutomatonNodeFactory.java";
  }

  @(_cocos):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos";
  }

  @(AutomatonASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos/AutomatonASTAutomatonCoCo.java";
  }

  @(AutomatonASTAutomatonNodeCoCo.java):JavaSourceFile{
    simpleName = "AutomatonASTAutomatonNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos/AutomatonASTAutomatonNodeCoCo.java";
  }

  @(AutomatonASTStateCoCo.java):JavaSourceFile{
    simpleName = "AutomatonASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos/AutomatonASTStateCoCo.java";
  }

  @(AutomatonASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "AutomatonASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos/AutomatonASTTransitionCoCo.java";
  }

  @(AutomatonCoCoChecker.java):JavaSourceFile{
    simpleName = "AutomatonCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_cocos/AutomatonCoCoChecker.java";
  }

  @(_od):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_od";
  }

  @(Automaton2OD.java):JavaSourceFile{
    simpleName = "Automaton2OD";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_od/Automaton2OD.java";
  }

  @(_parser):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser";
  }

  @(AutomatonAntlrBaseListener.java):JavaSourceFile{
    simpleName = "AutomatonAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser/AutomatonAntlrBaseListener.java";
  }

  @(AutomatonAntlrLexer.java):JavaSourceFile{
    simpleName = "AutomatonAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser/AutomatonAntlrLexer.java";
  }

  @(AutomatonAntlrListener.java):JavaSourceFile{
    simpleName = "AutomatonAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser/AutomatonAntlrListener.java";
  }

  @(AutomatonAntlrParser.java):JavaSourceFile{
    simpleName = "AutomatonAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser/AutomatonAntlrParser.java";
  }

  @(AutomatonParser.java):JavaSourceFile{
    simpleName = "AutomatonParser";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_parser/AutomatonParser.java";
  }

  @(_symboltable):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_symboltable";
  }

  @(AutomatonLanguage.java):JavaSourceFile{
    simpleName = "AutomatonLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_symboltable/AutomatonLanguage.java";
  }

  @(AutomatonModelLoader.java):JavaSourceFile{
    simpleName = "AutomatonModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_symboltable/AutomatonModelLoader.java";
  }

  @(_visitor):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_visitor";
  }

  @(AutomatonDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AutomatonDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_visitor/AutomatonDelegatorVisitor.java";
  }

  @(AutomatonInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AutomatonInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_visitor/AutomatonInheritanceVisitor.java";
  }

  @(AutomatonParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AutomatonParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_visitor/AutomatonParentAwareVisitor.java";
  }

  @(AutomatonVisitor.java):JavaSourceFile{
    simpleName = "AutomatonVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automaton/_visitor/AutomatonVisitor.java";
  }

  @(automatonemf):Directory{
    simpleName = "automatonemf";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf";
  }

  @(_ast!2):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast";
  }

  @(ASTAutomaton.java!2):JavaSourceFile{
    simpleName = "ASTAutomaton";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTAutomaton.java";
  }

  @(ASTAutomatonBuilder.java!2):JavaSourceFile{
    simpleName = "ASTAutomatonBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTAutomatonBuilder.java";
  }

  @(ASTAutomatonEmfNode.java):JavaSourceFile{
    simpleName = "ASTAutomatonEmfNode";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTAutomatonEmfNode.java";
  }

  @(ASTConstantsAutomatonEmf.java):JavaSourceFile{
    simpleName = "ASTConstantsAutomatonEmf";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTConstantsAutomatonEmf.java";
  }

  @(ASTState.java!2):JavaSourceFile{
    simpleName = "ASTState";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTState.java";
  }

  @(ASTStateBuilder.java!2):JavaSourceFile{
    simpleName = "ASTStateBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTStateBuilder.java";
  }

  @(ASTTransition.java!2):JavaSourceFile{
    simpleName = "ASTTransition";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTTransition.java";
  }

  @(ASTTransitionBuilder.java!2):JavaSourceFile{
    simpleName = "ASTTransitionBuilder";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/ASTTransitionBuilder.java";
  }

  @(AutomatonEmfLiterals.java):JavaSourceFile{
    simpleName = "AutomatonEmfLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/AutomatonEmfLiterals.java";
  }

  @(AutomatonEmfMill.java):JavaSourceFile{
    simpleName = "AutomatonEmfMill";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/AutomatonEmfMill.java";
  }

  @(AutomatonEmfNodeFactory.java):JavaSourceFile{
    simpleName = "AutomatonEmfNodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/AutomatonEmfNodeFactory.java";
  }

  @(AutomatonEmfPackage.java):JavaSourceFile{
    simpleName = "AutomatonEmfPackage";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/AutomatonEmfPackage.java";
  }

  @(AutomatonEmfPackageImpl.java):JavaSourceFile{
    simpleName = "AutomatonEmfPackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_ast/AutomatonEmfPackageImpl.java";
  }

  @(_cocos!2):Directory{
    simpleName = "_cocos";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos";
  }

  @(AutomatonEmfASTAutomatonCoCo.java):JavaSourceFile{
    simpleName = "AutomatonEmfASTAutomatonCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfASTAutomatonCoCo.java";
  }

  @(AutomatonEmfASTAutomatonEmfNodeCoCo.java):JavaSourceFile{
    simpleName = "AutomatonEmfASTAutomatonEmfNodeCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfASTAutomatonEmfNodeCoCo.java";
  }

  @(AutomatonEmfASTStateCoCo.java):JavaSourceFile{
    simpleName = "AutomatonEmfASTStateCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfASTStateCoCo.java";
  }

  @(AutomatonEmfASTTransitionCoCo.java):JavaSourceFile{
    simpleName = "AutomatonEmfASTTransitionCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfASTTransitionCoCo.java";
  }

  @(AutomatonEmfAutomatonEmfPackageCoCo.java):JavaSourceFile{
    simpleName = "AutomatonEmfAutomatonEmfPackageCoCo";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfAutomatonEmfPackageCoCo.java";
  }

  @(AutomatonEmfCoCoChecker.java):JavaSourceFile{
    simpleName = "AutomatonEmfCoCoChecker";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_cocos/AutomatonEmfCoCoChecker.java";
  }

  @(_od!2):Directory{
    simpleName = "_od";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_od";
  }

  @(AutomatonEmf2OD.java):JavaSourceFile{
    simpleName = "AutomatonEmf2OD";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_od/AutomatonEmf2OD.java";
  }

  @(_parser!2):Directory{
    simpleName = "_parser";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser";
  }

  @(AutomatonEmfAntlrBaseListener.java):JavaSourceFile{
    simpleName = "AutomatonEmfAntlrBaseListener";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser/AutomatonEmfAntlrBaseListener.java";
  }

  @(AutomatonEmfAntlrLexer.java):JavaSourceFile{
    simpleName = "AutomatonEmfAntlrLexer";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser/AutomatonEmfAntlrLexer.java";
  }

  @(AutomatonEmfAntlrListener.java):JavaSourceFile{
    simpleName = "AutomatonEmfAntlrListener";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser/AutomatonEmfAntlrListener.java";
  }

  @(AutomatonEmfAntlrParser.java):JavaSourceFile{
    simpleName = "AutomatonEmfAntlrParser";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser/AutomatonEmfAntlrParser.java";
  }

  @(AutomatonEmfParser.java):JavaSourceFile{
    simpleName = "AutomatonEmfParser";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_parser/AutomatonEmfParser.java";
  }

  @(_symboltable!2):Directory{
    simpleName = "_symboltable";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_symboltable";
  }

  @(AutomatonEmfLanguage.java):JavaSourceFile{
    simpleName = "AutomatonEmfLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_symboltable/AutomatonEmfLanguage.java";
  }

  @(AutomatonEmfModelLoader.java):JavaSourceFile{
    simpleName = "AutomatonEmfModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_symboltable/AutomatonEmfModelLoader.java";
  }

  @(_visitor!2):Directory{
    simpleName = "_visitor";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_visitor";
  }

  @(AutomatonEmfDelegatorVisitor.java):JavaSourceFile{
    simpleName = "AutomatonEmfDelegatorVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_visitor/AutomatonEmfDelegatorVisitor.java";
  }

  @(AutomatonEmfInheritanceVisitor.java):JavaSourceFile{
    simpleName = "AutomatonEmfInheritanceVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_visitor/AutomatonEmfInheritanceVisitor.java";
  }

  @(AutomatonEmfParentAwareVisitor.java):JavaSourceFile{
    simpleName = "AutomatonEmfParentAwareVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_visitor/AutomatonEmfParentAwareVisitor.java";
  }

  @(AutomatonEmfVisitor.java):JavaSourceFile{
    simpleName = "AutomatonEmfVisitor";
    nameExtension = "java";
    fullName = "sources/monticore-cli/target/test-run/de/monticore/automatonemf/_visitor/AutomatonEmfVisitor.java";
  }

  @(reports):Directory{
    simpleName = "reports";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/reports";
  }

  @(de.monticore):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/reports/de.monticore.Automaton";
  }

  @(de.monticore!2):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-cli/target/test-run/reports/de.monticore.AutomatonEmf";
  }

  monticoremaven:Module{
    simpleName = "monticoremaven";
  }

  @(monticore-maven):Directory{
    simpleName = "monticore-maven";
    nameExtension = "";
    fullName = "sources/monticore-maven";
  }

  @(monticore-m2e):Directory{
    simpleName = "monticore-m2e";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e";
  }

  @(de.monticore!40):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e";
  }

  @(META-INF!4):Directory{
    simpleName = "META-INF";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/META-INF";
  }

  @(src!9):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src";
  }

  @(main!9):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main";
  }

  @(java!15):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java";
  }

  @(de!32):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de";
  }

  @(monticore!35):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore";
  }

  @(mojo):Directory{
    simpleName = "mojo";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore/mojo";
  }

  @(m2e):Directory{
    simpleName = "m2e";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore/mojo/m2e";
  }

  @(Activator.java):JavaSourceFile{
    simpleName = "Activator";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore/mojo/m2e/Activator.java";
  }

  @(MontiCoreBuildParticipant.java):JavaSourceFile{
    simpleName = "MontiCoreBuildParticipant";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore/mojo/m2e/MontiCoreBuildParticipant.java";
  }

  @(MontiCoreProjectConfigurator.java):JavaSourceFile{
    simpleName = "MontiCoreProjectConfigurator";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e/src/main/java/de/monticore/mojo/m2e/MontiCoreProjectConfigurator.java";
  }

  @(de.monticore.m2e):Directory{
    simpleName = "de.monticore.m2e";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e.feature";
  }

  @(de.monticore.m2e!2):Directory{
    simpleName = "de.monticore.m2e";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-m2e/de.monticore.m2e.site";
  }

  @(monticore-maven-archetypes):Directory{
    simpleName = "monticore-maven-archetypes";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes";
  }

  @(blank):Directory{
    simpleName = "blank";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank";
  }

  @(src!10):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src";
  }

  @(main!10):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/main";
  }

  @(resources!12):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/main/resources";
  }

  @(archetype-resources):Directory{
    simpleName = "archetype-resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/main/resources/archetype-resources";
  }

  @(META-INF!5):Directory{
    simpleName = "META-INF";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/main/resources/META-INF";
  }

  @(maven):Directory{
    simpleName = "maven";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/main/resources/META-INF/maven";
  }

  @(test!5):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/test";
  }

  @(resources!13):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/test/resources";
  }

  @(projects):Directory{
    simpleName = "projects";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/test/resources/projects";
  }

  @(it!2):Directory{
    simpleName = "it";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/blank/src/test/resources/projects/it";
  }

  @(simple):Directory{
    simpleName = "simple";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple";
  }

  @(src!11):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src";
  }

  @(main!11):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main";
  }

  @(resources!14):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources";
  }

  @(archetype-resources!2):Directory{
    simpleName = "archetype-resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources";
  }

  @(src!12):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src";
  }

  @(main!12):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main";
  }

  @(grammars!10):Directory{
    simpleName = "grammars";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/grammars";
  }

  @(java!16):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java";
  }

  @(cocos!13):Directory{
    simpleName = "cocos";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/cocos";
  }

  @(AtLeastOneMyField.java):JavaSourceFile{
    simpleName = "AtLeastOneMyField";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/cocos/AtLeastOneMyField.java";
  }

  @(ExistingMyFieldType.java):JavaSourceFile{
    simpleName = "ExistingMyFieldType";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/cocos/ExistingMyFieldType.java";
  }

  @(MyDSLCoCos.java):JavaSourceFile{
    simpleName = "MyDSLCoCos";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/cocos/MyDSLCoCos.java";
  }

  @(MyElementNameStartsWithCapitalLetter.java):JavaSourceFile{
    simpleName = "MyElementNameStartsWithCapitalLetter";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/cocos/MyElementNameStartsWithCapitalLetter.java";
  }

  @(lang!2):Directory{
    simpleName = "lang";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/lang";
  }

  @(MyDSLLanguage.java):JavaSourceFile{
    simpleName = "MyDSLLanguage";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/lang/MyDSLLanguage.java";
  }

  @(MyDSLTool.java):JavaSourceFile{
    simpleName = "MyDSLTool";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/MyDSLTool.java";
  }

  @(prettyprint!19):Directory{
    simpleName = "prettyprint";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/prettyprint";
  }

  @(PrettyPrinter.java):JavaSourceFile{
    simpleName = "PrettyPrinter";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/prettyprint/PrettyPrinter.java";
  }

  @(symboltable!18):Directory{
    simpleName = "symboltable";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable";
  }

  @(MyDSLModelLoader.java):JavaSourceFile{
    simpleName = "MyDSLModelLoader";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyDSLModelLoader.java";
  }

  @(MyDSLSymbolTableCreator.java):JavaSourceFile{
    simpleName = "MyDSLSymbolTableCreator";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyDSLSymbolTableCreator.java";
  }

  @(MyElementSymbol.java):JavaSourceFile{
    simpleName = "MyElementSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyElementSymbol.java";
  }

  @(MyElementSymbolReference.java):JavaSourceFile{
    simpleName = "MyElementSymbolReference";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyElementSymbolReference.java";
  }

  @(MyFieldSymbol.java):JavaSourceFile{
    simpleName = "MyFieldSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyFieldSymbol.java";
  }

  @(MyModelSymbol.java):JavaSourceFile{
    simpleName = "MyModelSymbol";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/symboltable/MyModelSymbol.java";
  }

  @(visitors!4):Directory{
    simpleName = "visitors";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/visitors";
  }

  @(CountMyElements.java):JavaSourceFile{
    simpleName = "CountMyElements";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/main/java/visitors/CountMyElements.java";
  }

  @(test!6):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/test";
  }

  @(java!17):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/test/java";
  }

  @(MyDSLToolTest.java):JavaSourceFile{
    simpleName = "MyDSLToolTest";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/test/java/MyDSLToolTest.java";
  }

  @(resources!15):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/test/resources";
  }

  @(example!2):Directory{
    simpleName = "example";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/archetype-resources/src/test/resources/example";
  }

  @(META-INF!6):Directory{
    simpleName = "META-INF";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/META-INF";
  }

  @(maven!2):Directory{
    simpleName = "maven";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/main/resources/META-INF/maven";
  }

  @(test!7):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/test";
  }

  @(resources!16):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/test/resources";
  }

  @(projects!2):Directory{
    simpleName = "projects";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/test/resources/projects";
  }

  @(it!3):Directory{
    simpleName = "it";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-archetypes/simple/src/test/resources/projects/it";
  }

  @(monticore-maven-plugin):Directory{
    simpleName = "monticore-maven-plugin";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin";
  }

  @(src!13):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src";
  }

  @(main!13):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main";
  }

  @(java!18):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java";
  }

  @(de!33):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de";
  }

  @(monticore!36):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore";
  }

  @(mojo!2):Directory{
    simpleName = "mojo";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo";
  }

  @(extra):Directory{
    simpleName = "extra";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/extra";
  }

  @(Executable.java):JavaSourceFile{
    simpleName = "Executable";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/extra/Executable.java";
  }

  @(Execution.java):JavaSourceFile{
    simpleName = "Execution";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/extra/Execution.java";
  }

  @(ScriptReportRenderer.java):JavaSourceFile{
    simpleName = "ScriptReportRenderer";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/extra/ScriptReportRenderer.java";
  }

  @(ScriptResultReport.java):JavaSourceFile{
    simpleName = "ScriptResultReport";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/extra/ScriptResultReport.java";
  }

  @(GenerateMojo.java):JavaSourceFile{
    simpleName = "GenerateMojo";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/GenerateMojo.java";
  }

  @(ReportingReport.java):JavaSourceFile{
    simpleName = "ReportingReport";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/ReportingReport.java";
  }

  @(ReportRenderer.java):JavaSourceFile{
    simpleName = "ReportRenderer";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/ReportRenderer.java";
  }

  @(ReportsRenderer.java):JavaSourceFile{
    simpleName = "ReportsRenderer";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/java/de/monticore/mojo/ReportsRenderer.java";
  }

  @(resources!17):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/resources";
  }

  @(scripts):Directory{
    simpleName = "scripts";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/resources/scripts";
  }

  @(util!7):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/main/resources/util";
  }

  @(site):Directory{
    simpleName = "site";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/site";
  }

  @(apt):Directory{
    simpleName = "apt";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/src/site/apt";
  }

  @(target!5):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target";
  }

  @(classes!5):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes";
  }

  @(de!34):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de";
  }

  @(monticore!37):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore";
  }

  @(mojo!3):Directory{
    simpleName = "mojo";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo";
  }

  @(extra!2):Directory{
    simpleName = "extra";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/extra";
  }

  @(Executable.class):JavaClassFile{
    simpleName = "Executable";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/extra/Executable.class";
  }

  @(Execution.class):JavaClassFile{
    simpleName = "Execution";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/extra/Execution.class";
  }

  @(ScriptReportRenderer.class):JavaClassFile{
    simpleName = "ScriptReportRenderer";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/extra/ScriptReportRenderer.class";
  }

  @(ScriptResultReport.class):JavaClassFile{
    simpleName = "ScriptResultReport";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/extra/ScriptResultReport.class";
  }

  @(GenerateMojo.class):JavaClassFile{
    simpleName = "GenerateMojo";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/GenerateMojo.class";
  }

  @(HelpMojo.class):JavaClassFile{
    simpleName = "HelpMojo";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/HelpMojo.class";
  }

  @(ReportingReport.class):JavaClassFile{
    simpleName = "ReportingReport";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/ReportingReport.class";
  }

  @(ReportRenderer.class):JavaClassFile{
    simpleName = "ReportRenderer";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/ReportRenderer.class";
  }

  @(ReportsRenderer.class):JavaClassFile{
    simpleName = "ReportsRenderer";
    nameExtension = "class";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/de/monticore/mojo/ReportsRenderer.class";
  }

  @(META-INF!7):Directory{
    simpleName = "META-INF";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/META-INF";
  }

  @(maven!3):Directory{
    simpleName = "maven";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/META-INF/maven";
  }

  @(de.monticore!41):Directory{
    simpleName = "de.monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/META-INF/maven/de.monticore.mojo";
  }

  @(monticore-maven-plugin!2):Directory{
    simpleName = "monticore-maven-plugin";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/META-INF/maven/de.monticore.mojo/monticore-maven-plugin";
  }

  @(scripts!2):Directory{
    simpleName = "scripts";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/scripts";
  }

  @(util!8):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/classes/util";
  }

  @(generated-sources!5):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources";
  }

  @(annotations!5):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/annotations";
  }

  @(plugin):Directory{
    simpleName = "plugin";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/plugin";
  }

  @(de!35):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/plugin/de";
  }

  @(monticore!38):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/plugin/de/monticore";
  }

  @(mojo!4):Directory{
    simpleName = "mojo";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/plugin/de/monticore/mojo";
  }

  @(HelpMojo.java):JavaSourceFile{
    simpleName = "HelpMojo";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/generated-sources/plugin/de/monticore/mojo/HelpMojo.java";
  }

  @(maven-archiver!5):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-archiver";
  }

  @(maven-plugin-plugin-sources):Directory{
    simpleName = "maven-plugin-plugin-sources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources";
  }

  @(org.apache.maven):Directory{
    simpleName = "org.apache.maven";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting";
  }

  @(maven-reporting-impl):Directory{
    simpleName = "maven-reporting-impl";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl";
  }

  @(2):Directory{
    simpleName = "2";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3";
  }

  @(sources!2):Directory{
    simpleName = "sources";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources";
  }

  @(META-INF!8):Directory{
    simpleName = "META-INF";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/META-INF";
  }

  @(org!2):Directory{
    simpleName = "org";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org";
  }

  @(apache):Directory{
    simpleName = "apache";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache";
  }

  @(maven!4):Directory{
    simpleName = "maven";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache/maven";
  }

  @(reporting):Directory{
    simpleName = "reporting";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache/maven/reporting";
  }

  @(AbstractMavenReport.java):JavaSourceFile{
    simpleName = "AbstractMavenReport";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache/maven/reporting/AbstractMavenReport.java";
  }

  @(AbstractMavenReportRenderer.java):JavaSourceFile{
    simpleName = "AbstractMavenReportRenderer";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache/maven/reporting/AbstractMavenReportRenderer.java";
  }

  @(MavenMultiPageReport.java):JavaSourceFile{
    simpleName = "MavenMultiPageReport";
    nameExtension = "java";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-plugin-plugin-sources/org.apache.maven.reporting/maven-reporting-impl/2.3/sources/org/apache/maven/reporting/MavenMultiPageReport.java";
  }

  @(maven-status!5):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-status";
  }

  @(maven-compiler-plugin!5):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-status/maven-compiler-plugin";
  }

  @(compile!5):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!5):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(monticore-maven-plugin-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-maven-plugin-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-maven/monticore-maven-plugin/target/monticore-maven-plugin-4.5.5.1.jar";
  }

  monticoreemfruntime:Module{
    simpleName = "monticoreemfruntime";
  }

  @(monticore-emf-runtime):Directory{
    simpleName = "monticore-emf-runtime";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime";
  }

  @(src!5):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src";
  }

  @(main!5):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main";
  }

  @(java!6):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java";
  }

  @(de!10):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de";
  }

  @(monticore!10):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore";
  }

  @(emf):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf";
  }

  @(util!5):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/util";
  }

  @(AST2ModelFiles.java):JavaSourceFile{
    simpleName = "AST2ModelFiles";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/util/AST2ModelFiles.java";
  }

  @(compare):Directory{
    simpleName = "compare";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/util/compare";
  }

  @(AstEmfDiffUtility.java):JavaSourceFile{
    simpleName = "AstEmfDiffUtility";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/util/compare/AstEmfDiffUtility.java";
  }

  @(_ast!3):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast";
  }

  @(ASTECNode.java):JavaSourceFile{
    simpleName = "ASTECNode";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTECNode.java";
  }

  @(ASTENode.java):JavaSourceFile{
    simpleName = "ASTENode";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENode.java";
  }

  @(ASTENodeFactory.java):JavaSourceFile{
    simpleName = "ASTENodeFactory";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENodeFactory.java";
  }

  @(ASTENodeFactoryImpl.java):JavaSourceFile{
    simpleName = "ASTENodeFactoryImpl";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENodeFactoryImpl.java";
  }

  @(ASTENodeLiterals.java):JavaSourceFile{
    simpleName = "ASTENodeLiterals";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENodeLiterals.java";
  }

  @(ASTENodePackage.java):JavaSourceFile{
    simpleName = "ASTENodePackage";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENodePackage.java";
  }

  @(ASTENodePackageImpl.java):JavaSourceFile{
    simpleName = "ASTENodePackageImpl";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTENodePackageImpl.java";
  }

  @(ASTEPackage.java):JavaSourceFile{
    simpleName = "ASTEPackage";
    nameExtension = "java";
    fullName = "sources/monticore-emf-runtime/src/main/java/de/monticore/emf/_ast/ASTEPackage.java";
  }

  @(target!2):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target";
  }

  @(classes!2):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes";
  }

  @(de!11):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de";
  }

  @(monticore!11):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore";
  }

  @(emf!2):Directory{
    simpleName = "emf";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf";
  }

  @(util!6):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/util";
  }

  @(AST2ModelFiles.class):JavaClassFile{
    simpleName = "AST2ModelFiles";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/util/AST2ModelFiles.class";
  }

  @(compare!2):Directory{
    simpleName = "compare";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/util/compare";
  }

  @(AstEmfDiffUtility.class):JavaClassFile{
    simpleName = "AstEmfDiffUtility";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/util/compare/AstEmfDiffUtility.class";
  }

  @(_ast!4):Directory{
    simpleName = "_ast";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast";
  }

  @(ASTECNode.class):JavaClassFile{
    simpleName = "ASTECNode";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTECNode.class";
  }

  @(ASTENode.class):JavaClassFile{
    simpleName = "ASTENode";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENode.class";
  }

  @(ASTENodeFactory.class):JavaClassFile{
    simpleName = "ASTENodeFactory";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodeFactory.class";
  }

  @(ASTENodeFactoryImpl.class):JavaClassFile{
    simpleName = "ASTENodeFactoryImpl";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodeFactoryImpl.class";
  }

  @(ASTENodeLiterals.class):JavaClassFile{
    simpleName = "ASTENodeLiterals";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodeLiterals.class";
  }

  @(ASTENodePackage$Literals.class):JavaClassFile{
    simpleName = "ASTENodePackage$Literals";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodePackage$Literals.class";
  }

  @(ASTENodePackage.class):JavaClassFile{
    simpleName = "ASTENodePackage";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodePackage.class";
  }

  @(ASTENodePackageImpl.class):JavaClassFile{
    simpleName = "ASTENodePackageImpl";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTENodePackageImpl.class";
  }

  @(ASTEPackage.class):JavaClassFile{
    simpleName = "ASTEPackage";
    nameExtension = "class";
    fullName = "sources/monticore-emf-runtime/target/classes/de/monticore/emf/_ast/ASTEPackage.class";
  }

  @(generated-sources!2):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/generated-sources";
  }

  @(annotations!2):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/generated-sources/annotations";
  }

  @(maven-archiver!2):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/maven-archiver";
  }

  @(maven-status!2):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/maven-status";
  }

  @(maven-compiler-plugin!2):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/maven-status/maven-compiler-plugin";
  }

  @(compile!2):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!2):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-emf-runtime/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(monticore-emf-runtime-4.5.5.1-sources.jar):JarArchive{
    simpleName = "monticore-emf-runtime-4.5.5.1-sources";
    nameExtension = "jar";
    fullName = "sources/monticore-emf-runtime/target/monticore-emf-runtime-4.5.5.1-sources.jar";
  }

  @(monticore-emf-runtime-4.5.5.1-tests.jar):JarArchive{
    simpleName = "monticore-emf-runtime-4.5.5.1-tests";
    nameExtension = "jar";
    fullName = "sources/monticore-emf-runtime/target/monticore-emf-runtime-4.5.5.1-tests.jar";
  }

  @(monticore-emf-runtime-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-emf-runtime-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-emf-runtime/target/monticore-emf-runtime-4.5.5.1.jar";
  }

  monticoretemplateclassgenerator:Module{
    simpleName = "monticoretemplateclassgenerator";
  }

  @(monticore-templateclassgenerator):Directory{
    simpleName = "monticore-templateclassgenerator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator";
  }

  @(gen):Directory{
    simpleName = "gen";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/gen";
  }

  @(_templates):Directory{
    simpleName = "_templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates";
  }

  @(typesafety):Directory{
    simpleName = "typesafety";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety";
  }

  @(MainTemplateFactory.java):JavaSourceFile{
    simpleName = "MainTemplateFactory";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/MainTemplateFactory.java";
  }

  @(setup):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/setup";
  }

  @(GeneratorConfig.java):JavaSourceFile{
    simpleName = "GeneratorConfig";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/setup/GeneratorConfig.java";
  }

  @(Setup.java):JavaSourceFile{
    simpleName = "Setup";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/setup/Setup.java";
  }

  @(SetupAssignments.java):JavaSourceFile{
    simpleName = "SetupAssignments";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/setup/SetupAssignments.java";
  }

  @(TemplateAccessor.java):JavaSourceFile{
    simpleName = "TemplateAccessor";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/setup/TemplateAccessor.java";
  }

  @(TemplateClass.java):JavaSourceFile{
    simpleName = "TemplateClass";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/typesafety/TemplateClass.java";
  }

  @(_setup):Directory{
    simpleName = "_setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/_setup";
  }

  @(GeneratorConfig.java!2):JavaSourceFile{
    simpleName = "GeneratorConfig";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/_setup/GeneratorConfig.java";
  }

  @(Setup.ftl):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/_setup/Setup.ftl";
  }

  @(TemplateAccessor.java!2):JavaSourceFile{
    simpleName = "TemplateAccessor";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/gen/_templates/_setup/TemplateAccessor.java";
  }

  @(it!4):Directory{
    simpleName = "it";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it";
  }

  @(monticore-templateclassgenerator-it):Directory{
    simpleName = "monticore-templateclassgenerator-it";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it";
  }

  @(src!15):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src";
  }

  @(main!15):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main";
  }

  @(java!21):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java";
  }

  @(types!25):Directory{
    simpleName = "types";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/types";
  }

  @(Attribute.java):JavaSourceFile{
    simpleName = "Attribute";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/types/Attribute.java";
  }

  @(Helper.java):JavaSourceFile{
    simpleName = "Helper";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/types/Helper.java";
  }

  @(_templates!2):Directory{
    simpleName = "_templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/_templates";
  }

  @(templates!6):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/_templates/templates";
  }

  @(maintemplates):Directory{
    simpleName = "maintemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/_templates/templates/maintemplates";
  }

  @(HelloMainImpl.java):JavaSourceFile{
    simpleName = "HelloMainImpl";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/main/java/_templates/templates/maintemplates/HelloMainImpl.java";
  }

  @(test!12):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test";
  }

  @(java!22):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java";
  }

  @(de!42):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de";
  }

  @(monticore!45):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore";
  }

  @(templateclassgenerator):Directory{
    simpleName = "templateclassgenerator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore/templateclassgenerator";
  }

  @(it!5):Directory{
    simpleName = "it";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore/templateclassgenerator/it";
  }

  @(AbstractSymtabTest.java):JavaSourceFile{
    simpleName = "AbstractSymtabTest";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore/templateclassgenerator/it/AbstractSymtabTest.java";
  }

  @(CorrectnessTest.java):JavaSourceFile{
    simpleName = "CorrectnessTest";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore/templateclassgenerator/it/CorrectnessTest.java";
  }

  @(UsageTest.java):JavaSourceFile{
    simpleName = "UsageTest";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/java/de/monticore/templateclassgenerator/it/UsageTest.java";
  }

  @(resources!20):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources";
  }

  @(anotherFolder):Directory{
    simpleName = "anotherFolder";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/anotherFolder";
  }

  @(EmptyTemplate.ftl):FreeMarkerTemplate{
    simpleName = "EmptyTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/anotherFolder/EmptyTemplate.ftl";
  }

  @(templates!7):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates";
  }

  @(a!7):Directory{
    simpleName = "a";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/a";
  }

  @(EmptyTemplate.ftl!2):FreeMarkerTemplate{
    simpleName = "EmptyTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/a/EmptyTemplate.ftl";
  }

  @(TemplateWithoutResult.ftl):FreeMarkerTemplate{
    simpleName = "TemplateWithoutResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/a/TemplateWithoutResult.ftl";
  }

  @(TemplateWithoutSignature.ftl):FreeMarkerTemplate{
    simpleName = "TemplateWithoutSignature";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/a/TemplateWithoutSignature.ftl";
  }

  @(TemplateWithResult.ftl):FreeMarkerTemplate{
    simpleName = "TemplateWithResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/a/TemplateWithResult.ftl";
  }

  @(b!2):Directory{
    simpleName = "b";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/b";
  }

  @(Constructor.ftl!3):FreeMarkerTemplate{
    simpleName = "Constructor";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/b/Constructor.ftl";
  }

  @(JavaClass.ftl):FreeMarkerTemplate{
    simpleName = "JavaClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/b/JavaClass.ftl";
  }

  @(Template.ftl):FreeMarkerTemplate{
    simpleName = "Template";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/b/Template.ftl";
  }

  @(maintemplates!2):Directory{
    simpleName = "maintemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/maintemplates";
  }

  @(HelloMain.ftl):FreeMarkerTemplate{
    simpleName = "HelloMain";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/it/monticore-templateclassgenerator-it/src/test/resources/templates/maintemplates/HelloMain.ftl";
  }

  @(src!16):Directory{
    simpleName = "src";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src";
  }

  @(main!16):Directory{
    simpleName = "main";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main";
  }

  @(java!23):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java";
  }

  @(de!43):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de";
  }

  @(monticore!46):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore";
  }

  @(generating!6):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/generating";
  }

  @(ExtendedGeneratorSetup.java):JavaSourceFile{
    simpleName = "ExtendedGeneratorSetup";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/generating/ExtendedGeneratorSetup.java";
  }

  @(templateengine!6):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/generating/templateengine";
  }

  @(ExtendedTemplateController.java):JavaSourceFile{
    simpleName = "ExtendedTemplateController";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/generating/templateengine/ExtendedTemplateController.java";
  }

  @(templateclassgenerator!2):Directory{
    simpleName = "templateclassgenerator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator";
  }

  @(codegen!5):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/codegen";
  }

  @(TemplateClassGenerator.java):JavaSourceFile{
    simpleName = "TemplateClassGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/codegen/TemplateClassGenerator.java";
  }

  @(TemplateClassGeneratorConstants.java):JavaSourceFile{
    simpleName = "TemplateClassGeneratorConstants";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/codegen/TemplateClassGeneratorConstants.java";
  }

  @(TemplateClassHelper.java):JavaSourceFile{
    simpleName = "TemplateClassHelper";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/codegen/TemplateClassHelper.java";
  }

  @(EmptyNode.java):JavaSourceFile{
    simpleName = "EmptyNode";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/EmptyNode.java";
  }

  @(Modelfinder.java):JavaSourceFile{
    simpleName = "Modelfinder";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/Modelfinder.java";
  }

  @(TemplateClassGenerator.java!2):JavaSourceFile{
    simpleName = "TemplateClassGenerator";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/TemplateClassGenerator.java";
  }

  @(TemplateClassGeneratorConfiguration.java):JavaSourceFile{
    simpleName = "TemplateClassGeneratorConfiguration";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/TemplateClassGeneratorConfiguration.java";
  }

  @(TemplateClassGeneratorScript.java):JavaSourceFile{
    simpleName = "TemplateClassGeneratorScript";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/TemplateClassGeneratorScript.java";
  }

  @(util!9):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/util";
  }

  @(GeneratorInterface.java):JavaSourceFile{
    simpleName = "GeneratorInterface";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/de/monticore/templateclassgenerator/util/GeneratorInterface.java";
  }

  @(freemarker!4):Directory{
    simpleName = "freemarker";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/freemarker";
  }

  @(core):Directory{
    simpleName = "core";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/freemarker/core";
  }

  @(FMHelper.java):JavaSourceFile{
    simpleName = "FMHelper";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/freemarker/core/FMHelper.java";
  }

  @(Parameter.java!2):JavaSourceFile{
    simpleName = "Parameter";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/main/java/freemarker/core/Parameter.java";
  }

  @(resources!21):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources";
  }

  @(de!44):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/de";
  }

  @(monticore!47):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/de/monticore";
  }

  @(templateclassgenerator!3):Directory{
    simpleName = "templateclassgenerator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/de/monticore/templateclassgenerator";
  }

  @(typesafety!2):Directory{
    simpleName = "typesafety";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety";
  }

  @(MainTemplateFactory.ftl):FreeMarkerTemplate{
    simpleName = "MainTemplateFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/MainTemplateFactory.ftl";
  }

  @(setup!2):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/setup";
  }

  @(GeneratorConfig.ftl):FreeMarkerTemplate{
    simpleName = "GeneratorConfig";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/setup/GeneratorConfig.ftl";
  }

  @(Setup.ftl!2):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/setup/Setup.ftl";
  }

  @(SetupAssignments.ftl):FreeMarkerTemplate{
    simpleName = "SetupAssignments";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/setup/SetupAssignments.ftl";
  }

  @(TemplateAccessor.ftl):FreeMarkerTemplate{
    simpleName = "TemplateAccessor";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/setup/TemplateAccessor.ftl";
  }

  @(TemplateClass.ftl):FreeMarkerTemplate{
    simpleName = "TemplateClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/main/resources/typesafety/TemplateClass.ftl";
  }

  @(test!13):Directory{
    simpleName = "test";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test";
  }

  @(java!24):Directory{
    simpleName = "java";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java";
  }

  @(de!45):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de";
  }

  @(monticore!48):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de/monticore";
  }

  @(generator):Directory{
    simpleName = "generator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de/monticore/generator";
  }

  @(typesafety!3):Directory{
    simpleName = "typesafety";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de/monticore/generator/typesafety";
  }

  @(codegen!6):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de/monticore/generator/typesafety/codegen";
  }

  @(GroovyScriptTest.java):JavaSourceFile{
    simpleName = "GroovyScriptTest";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/src/test/java/de/monticore/generator/typesafety/codegen/GroovyScriptTest.java";
  }

  @(resources!22):Directory{
    simpleName = "resources";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources";
  }

  @(component):Directory{
    simpleName = "component";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component";
  }

  @(EmptyTemplate.ftl!3):FreeMarkerTemplate{
    simpleName = "EmptyTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/EmptyTemplate.ftl";
  }

  @(mainTemplates):Directory{
    simpleName = "mainTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/mainTemplates";
  }

  @(TemplateMain.ftl):FreeMarkerTemplate{
    simpleName = "TemplateMain";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/mainTemplates/TemplateMain.ftl";
  }

  @(manyComponents):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/manyComponents";
  }

  @(OneOfMany.ftl):FreeMarkerTemplate{
    simpleName = "OneOfMany";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/manyComponents/OneOfMany.ftl";
  }

  @(moreComponents):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/moreComponents";
  }

  @(manyComponents!2):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/moreComponents/manyComponents";
  }

  @(moreComponents!2):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/moreComponents/manyComponents/moreComponents";
  }

  @(BubuTemplate.ftl):FreeMarkerTemplate{
    simpleName = "BubuTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/moreComponents/manyComponents/moreComponents/BubuTemplate.ftl";
  }

  @(OneMoreTemplate.ftl):FreeMarkerTemplate{
    simpleName = "OneMoreTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/moreComponents/OneMoreTemplate.ftl";
  }

  @(setup!3):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/setup";
  }

  @(setup!4):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/setup/setup";
  }

  @(Setup.ftl!3):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/setup/setup/Setup.ftl";
  }

  @(Setup.ftl!4):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/setup/Setup.ftl";
  }

  @(Setup.ftl!5):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/Setup.ftl";
  }

  @(TemplateWithoutResult.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateWithoutResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/TemplateWithoutResult.ftl";
  }

  @(TemplateWithoutSignature.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateWithoutSignature";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/TemplateWithoutSignature.ftl";
  }

  @(TemplateWithResult.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateWithResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/component/TemplateWithResult.ftl";
  }

  @(templates!8):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/templates";
  }

  @(someTemplates):Directory{
    simpleName = "someTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/templates/someTemplates";
  }

  @(A.ftl!3):FreeMarkerTemplate{
    simpleName = "A";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/src/test/resources/templates/someTemplates/A.ftl";
  }

  @(target!7):Directory{
    simpleName = "target";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target";
  }

  @(archive-tmp!3):Directory{
    simpleName = "archive-tmp";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/archive-tmp";
  }

  @(classes!7):Directory{
    simpleName = "classes";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes";
  }

  @(de!46):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de";
  }

  @(monticore!49):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore";
  }

  @(generating!7):Directory{
    simpleName = "generating";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/generating";
  }

  @(ExtendedGeneratorSetup.class):JavaClassFile{
    simpleName = "ExtendedGeneratorSetup";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/generating/ExtendedGeneratorSetup.class";
  }

  @(templateengine!7):Directory{
    simpleName = "templateengine";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/generating/templateengine";
  }

  @(ExtendedTemplateController.class):JavaClassFile{
    simpleName = "ExtendedTemplateController";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/generating/templateengine/ExtendedTemplateController.class";
  }

  @(templateclassgenerator!4):Directory{
    simpleName = "templateclassgenerator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator";
  }

  @(codegen!7):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/codegen";
  }

  @(TemplateClassGenerator.class):JavaClassFile{
    simpleName = "TemplateClassGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/codegen/TemplateClassGenerator.class";
  }

  @(TemplateClassGeneratorConstants.class):JavaClassFile{
    simpleName = "TemplateClassGeneratorConstants";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/codegen/TemplateClassGeneratorConstants.class";
  }

  @(TemplateClassHelper.class):JavaClassFile{
    simpleName = "TemplateClassHelper";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/codegen/TemplateClassHelper.class";
  }

  @(EmptyNode.class):JavaClassFile{
    simpleName = "EmptyNode";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/EmptyNode.class";
  }

  @(Modelfinder.class):JavaClassFile{
    simpleName = "Modelfinder";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/Modelfinder.class";
  }

  @(TemplateClassGenerator.class!2):JavaClassFile{
    simpleName = "TemplateClassGenerator";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/TemplateClassGenerator.class";
  }

  @(TemplateClassGeneratorConfiguration$Options.class):JavaClassFile{
    simpleName = "TemplateClassGeneratorConfiguration$Options";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/TemplateClassGeneratorConfiguration$Options.class";
  }

  @(TemplateClassGeneratorConfiguration.class):JavaClassFile{
    simpleName = "TemplateClassGeneratorConfiguration";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/TemplateClassGeneratorConfiguration.class";
  }

  @(TemplateClassGeneratorScript.class):JavaClassFile{
    simpleName = "TemplateClassGeneratorScript";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/TemplateClassGeneratorScript.class";
  }

  @(util!10):Directory{
    simpleName = "util";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/util";
  }

  @(GeneratorInterface.class):JavaClassFile{
    simpleName = "GeneratorInterface";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/de/monticore/templateclassgenerator/util/GeneratorInterface.class";
  }

  @(freemarker!5):Directory{
    simpleName = "freemarker";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/freemarker";
  }

  @(core!2):Directory{
    simpleName = "core";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/freemarker/core";
  }

  @(FMHelper.class):JavaClassFile{
    simpleName = "FMHelper";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/freemarker/core/FMHelper.class";
  }

  @(Parameter.class!2):JavaClassFile{
    simpleName = "Parameter";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/classes/freemarker/core/Parameter.class";
  }

  @(typesafety!4):Directory{
    simpleName = "typesafety";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety";
  }

  @(MainTemplateFactory.ftl!2):FreeMarkerTemplate{
    simpleName = "MainTemplateFactory";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/MainTemplateFactory.ftl";
  }

  @(setup!5):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/setup";
  }

  @(GeneratorConfig.ftl!2):FreeMarkerTemplate{
    simpleName = "GeneratorConfig";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/setup/GeneratorConfig.ftl";
  }

  @(Setup.ftl!6):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/setup/Setup.ftl";
  }

  @(SetupAssignments.ftl!2):FreeMarkerTemplate{
    simpleName = "SetupAssignments";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/setup/SetupAssignments.ftl";
  }

  @(TemplateAccessor.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateAccessor";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/setup/TemplateAccessor.ftl";
  }

  @(TemplateClass.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateClass";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/classes/typesafety/TemplateClass.ftl";
  }

  @(generated-sources!7):Directory{
    simpleName = "generated-sources";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources";
  }

  @(annotations!9):Directory{
    simpleName = "annotations";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/annotations";
  }

  @(monticore!50):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore";
  }

  @(codetocompile!2):Directory{
    simpleName = "codetocompile";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile";
  }

  @(_templates!3):Directory{
    simpleName = "_templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates";
  }

  @(component!2):Directory{
    simpleName = "component";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component";
  }

  @(EmptyTemplate.java):JavaSourceFile{
    simpleName = "EmptyTemplate";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/EmptyTemplate.java";
  }

  @(mainTemplates!2):Directory{
    simpleName = "mainTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/mainTemplates";
  }

  @(TemplateMain.java):JavaSourceFile{
    simpleName = "TemplateMain";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/mainTemplates/TemplateMain.java";
  }

  @(TemplateMainFactory.java):JavaSourceFile{
    simpleName = "TemplateMainFactory";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/mainTemplates/TemplateMainFactory.java";
  }

  @(manyComponents!3):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/manyComponents";
  }

  @(OneOfMany.java):JavaSourceFile{
    simpleName = "OneOfMany";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/manyComponents/OneOfMany.java";
  }

  @(moreComponents!3):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/moreComponents";
  }

  @(manyComponents!4):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/moreComponents/manyComponents";
  }

  @(moreComponents!4):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/moreComponents/manyComponents/moreComponents";
  }

  @(BubuTemplate.java):JavaSourceFile{
    simpleName = "BubuTemplate";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/moreComponents/manyComponents/moreComponents/BubuTemplate.java";
  }

  @(OneMoreTemplate.java):JavaSourceFile{
    simpleName = "OneMoreTemplate";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/moreComponents/OneMoreTemplate.java";
  }

  @(setup!6):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/setup";
  }

  @(setup!7):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/setup/setup";
  }

  @(Setup.java!2):JavaSourceFile{
    simpleName = "Setup";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/setup/setup/Setup.java";
  }

  @(Setup.java!3):JavaSourceFile{
    simpleName = "Setup";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/setup/Setup.java";
  }

  @(Setup.java!4):JavaSourceFile{
    simpleName = "Setup";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/Setup.java";
  }

  @(TemplateWithoutResult.java):JavaSourceFile{
    simpleName = "TemplateWithoutResult";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/TemplateWithoutResult.java";
  }

  @(TemplateWithoutSignature.java):JavaSourceFile{
    simpleName = "TemplateWithoutSignature";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/TemplateWithoutSignature.java";
  }

  @(TemplateWithResult.java):JavaSourceFile{
    simpleName = "TemplateWithResult";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/component/TemplateWithResult.java";
  }

  @(templates!9):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/templates";
  }

  @(someTemplates!2):Directory{
    simpleName = "someTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/templates/someTemplates";
  }

  @(A.java!4):JavaSourceFile{
    simpleName = "A";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/templates/someTemplates/A.java";
  }

  @(_setup!2):Directory{
    simpleName = "_setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/_setup";
  }

  @(GeneratorConfig.java!3):JavaSourceFile{
    simpleName = "GeneratorConfig";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/_setup/GeneratorConfig.java";
  }

  @(Setup.ftl!7):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/_setup/Setup.ftl";
  }

  @(TemplateAccessor.java!3):JavaSourceFile{
    simpleName = "TemplateAccessor";
    nameExtension = "java";
    fullName = "sources/monticore-templateclassgenerator/target/generated-sources/monticore/codetocompile/_templates/_setup/TemplateAccessor.java";
  }

  @(generated-test-sources!5):Directory{
    simpleName = "generated-test-sources";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-test-sources";
  }

  @(test-annotations!5):Directory{
    simpleName = "test-annotations";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/generated-test-sources/test-annotations";
  }

  @(maven-archiver!7):Directory{
    simpleName = "maven-archiver";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-archiver";
  }

  @(maven-status!7):Directory{
    simpleName = "maven-status";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status";
  }

  @(maven-compiler-plugin!7):Directory{
    simpleName = "maven-compiler-plugin";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status/maven-compiler-plugin";
  }

  @(compile!7):Directory{
    simpleName = "compile";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status/maven-compiler-plugin/compile";
  }

  @(default-compile!7):Directory{
    simpleName = "default-compile";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status/maven-compiler-plugin/compile/default-compile";
  }

  @(testCompile!5):Directory{
    simpleName = "testCompile";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status/maven-compiler-plugin/testCompile";
  }

  @(default-testCompile!5):Directory{
    simpleName = "default-testCompile";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile";
  }

  @(monticore-templateclassgenerator-4.5.5.1-cli.jar):JarArchive{
    simpleName = "monticore-templateclassgenerator-4.5.5.1-cli";
    nameExtension = "jar";
    fullName = "sources/monticore-templateclassgenerator/target/monticore-templateclassgenerator-4.5.5.1-cli.jar";
  }

  @(monticore-templateclassgenerator-4.5.5.1.jar):JarArchive{
    simpleName = "monticore-templateclassgenerator-4.5.5.1";
    nameExtension = "jar";
    fullName = "sources/monticore-templateclassgenerator/target/monticore-templateclassgenerator-4.5.5.1.jar";
  }

  @(surefire-reports!5):Directory{
    simpleName = "surefire-reports";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/surefire-reports";
  }

  @(test-classes!5):Directory{
    simpleName = "test-classes";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes";
  }

  @(component!3):Directory{
    simpleName = "component";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component";
  }

  @(EmptyTemplate.ftl!4):FreeMarkerTemplate{
    simpleName = "EmptyTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/EmptyTemplate.ftl";
  }

  @(mainTemplates!3):Directory{
    simpleName = "mainTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/mainTemplates";
  }

  @(TemplateMain.ftl!2):FreeMarkerTemplate{
    simpleName = "TemplateMain";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/mainTemplates/TemplateMain.ftl";
  }

  @(manyComponents!5):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/manyComponents";
  }

  @(OneOfMany.ftl!2):FreeMarkerTemplate{
    simpleName = "OneOfMany";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/manyComponents/OneOfMany.ftl";
  }

  @(moreComponents!5):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/moreComponents";
  }

  @(manyComponents!6):Directory{
    simpleName = "manyComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/moreComponents/manyComponents";
  }

  @(moreComponents!6):Directory{
    simpleName = "moreComponents";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/moreComponents/manyComponents/moreComponents";
  }

  @(BubuTemplate.ftl!2):FreeMarkerTemplate{
    simpleName = "BubuTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/moreComponents/manyComponents/moreComponents/BubuTemplate.ftl";
  }

  @(OneMoreTemplate.ftl!2):FreeMarkerTemplate{
    simpleName = "OneMoreTemplate";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/moreComponents/OneMoreTemplate.ftl";
  }

  @(setup!8):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/setup";
  }

  @(setup!9):Directory{
    simpleName = "setup";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/setup/setup";
  }

  @(Setup.ftl!8):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/setup/setup/Setup.ftl";
  }

  @(Setup.ftl!9):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/setup/Setup.ftl";
  }

  @(Setup.ftl!10):FreeMarkerTemplate{
    simpleName = "Setup";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/Setup.ftl";
  }

  @(TemplateWithoutResult.ftl!3):FreeMarkerTemplate{
    simpleName = "TemplateWithoutResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/TemplateWithoutResult.ftl";
  }

  @(TemplateWithoutSignature.ftl!3):FreeMarkerTemplate{
    simpleName = "TemplateWithoutSignature";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/TemplateWithoutSignature.ftl";
  }

  @(TemplateWithResult.ftl!3):FreeMarkerTemplate{
    simpleName = "TemplateWithResult";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/component/TemplateWithResult.ftl";
  }

  @(de!47):Directory{
    simpleName = "de";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de";
  }

  @(monticore!51):Directory{
    simpleName = "monticore";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de/monticore";
  }

  @(generator!2):Directory{
    simpleName = "generator";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de/monticore/generator";
  }

  @(typesafety!5):Directory{
    simpleName = "typesafety";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de/monticore/generator/typesafety";
  }

  @(codegen!8):Directory{
    simpleName = "codegen";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de/monticore/generator/typesafety/codegen";
  }

  @(GroovyScriptTest.class):JavaClassFile{
    simpleName = "GroovyScriptTest";
    nameExtension = "class";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/de/monticore/generator/typesafety/codegen/GroovyScriptTest.class";
  }

  @(templates!10):Directory{
    simpleName = "templates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/templates";
  }

  @(someTemplates!3):Directory{
    simpleName = "someTemplates";
    nameExtension = "";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/templates/someTemplates";
  }

  @(A.ftl!4):FreeMarkerTemplate{
    simpleName = "A";
    nameExtension = "ftl";
    fullName = "sources/monticore-templateclassgenerator/target/test-classes/templates/someTemplates/A.ftl";
  }

  link artifact monticoregrammar -> @(monticore-grammar);
  link artifact monticoregrammar -> @(src!8);
  link artifact monticoregrammar -> @(main!8);
  link artifact monticoregrammar -> @(grammars!8);
  link artifact monticoregrammar -> @(de!23);
  link artifact monticoregrammar -> @(monticore!24);
  link artifact monticoregrammar -> @(common!5);
  link artifact monticoregrammar -> @(lexicals!8);
  link artifact monticoregrammar -> @(literals!7);
  link artifact monticoregrammar -> @(types!11);
  link artifact monticoregrammar -> @(java!13);
  link artifact monticoregrammar -> @(de!24);
  link artifact monticoregrammar -> @(monticore!25);
  link artifact monticoregrammar -> @(common!6);
  link artifact monticoregrammar -> @(prettyprint!7);
  link artifact monticoregrammar -> @(CommonPrettyPrinterConcreteVisitor.java);
  link artifact monticoregrammar -> @(expressions);
  link artifact monticoregrammar -> @(prettyprint!8);
  link artifact monticoregrammar -> @(AssignmentExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(CommonExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(MCExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(OCLExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(SetExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(ShiftExpressionsPrettyPrinter.java);
  link artifact monticoregrammar -> @(literals!8);
  link artifact monticoregrammar -> @(LiteralsHelper.java);
  link artifact monticoregrammar -> @(LiteralsNodeIdentHelper.java);
  link artifact monticoregrammar -> @(prettyprint!9);
  link artifact monticoregrammar -> @(LiteralsPrettyPrinterConcreteVisitor.java);
  link artifact monticoregrammar -> @(MCLiteralsDecoder.java);
  link artifact monticoregrammar -> @(MCLiteralsPrettyPrinterConcreteVisitor.java);
  link artifact monticoregrammar -> @(prettyprint!10);
  link artifact monticoregrammar -> @(CardinalityPrettyPrinter.java);
  link artifact monticoregrammar -> @(CompletenessPrettyPrinter.java);
  link artifact monticoregrammar -> @(MCBasicTypes1PrettyPrinter.java);
  link artifact monticoregrammar -> @(MCHexNumbersPrettyPrinter.java);
  link artifact monticoregrammar -> @(MCNumbersPrettyPrinter.java);
  link artifact monticoregrammar -> @(StringLiteralsPrettyPrinter.java);
  link artifact monticoregrammar -> @(UMLModifierPrettyPrinter.java);
  link artifact monticoregrammar -> @(UMLStereotypePrettyPrinter.java);
  link artifact monticoregrammar -> @(types!12);
  link artifact monticoregrammar -> @(JTypeSymbolsHelper.java);
  link artifact monticoregrammar -> @(prettyprint!11);
  link artifact monticoregrammar -> @(TypesPrettyPrinterConcreteVisitor.java);
  link artifact monticoregrammar -> @(TypesHelper.java);
  link artifact monticoregrammar -> @(TypesNodeIdentHelper.java);
  link artifact monticoregrammar -> @(TypesPrinter.java);
  link artifact monticoregrammar -> @(resources!10);
  link artifact monticoregrammar -> @(test!4);
  link artifact monticoregrammar -> @(grammars!9);
  link artifact monticoregrammar -> @(de!25);
  link artifact monticoregrammar -> @(monticore!26);
  link artifact monticoregrammar -> @(common!7);
  link artifact monticoregrammar -> @(literals!9);
  link artifact monticoregrammar -> @(types!13);
  link artifact monticoregrammar -> @(java!14);
  link artifact monticoregrammar -> @(de!26);
  link artifact monticoregrammar -> @(monticore!27);
  link artifact monticoregrammar -> @(common!8);
  link artifact monticoregrammar -> @(StereotypeTest.java);
  link artifact monticoregrammar -> @(literals!10);
  link artifact monticoregrammar -> @(CharLiteralsTest.java);
  link artifact monticoregrammar -> @(DoubleLiteralsTest.java);
  link artifact monticoregrammar -> @(FloatLiteralsTest.java);
  link artifact monticoregrammar -> @(IntLiteralsTest.java);
  link artifact monticoregrammar -> @(LiteralsTestHelper.java);
  link artifact monticoregrammar -> @(LongLiteralsTest.java);
  link artifact monticoregrammar -> @(NullAndBooleanLiteralsTest.java);
  link artifact monticoregrammar -> @(SignedDoubleLiteralsTest.java);
  link artifact monticoregrammar -> @(SignedFloatLiteralsTest.java);
  link artifact monticoregrammar -> @(SignedIntLiteralsTest.java);
  link artifact monticoregrammar -> @(SignedLongLiteralsTest.java);
  link artifact monticoregrammar -> @(StringLiteralsTest.java);
  link artifact monticoregrammar -> @(MCBasicTypes1Test.java);
  link artifact monticoregrammar -> @(MCCommonUnitTest.java);
  link artifact monticoregrammar -> @(mcliterals);
  link artifact monticoregrammar -> @(CharLiteralsTest.java!2);
  link artifact monticoregrammar -> @(DoubleLiteralsTest.java!2);
  link artifact monticoregrammar -> @(FloatLiteralsTest.java!2);
  link artifact monticoregrammar -> @(IntLiteralsTest.java!2);
  link artifact monticoregrammar -> @(LongLiteralsTest.java!2);
  link artifact monticoregrammar -> @(MCHexNumberUnitTests.java);
  link artifact monticoregrammar -> @(MCLiteralsTestHelper.java);
  link artifact monticoregrammar -> @(MCLiteralsUnitTest.java);
  link artifact monticoregrammar -> @(NatLiteralsTest.java);
  link artifact monticoregrammar -> @(NullAndBooleanLiteralsTest.java!2);
  link artifact monticoregrammar -> @(SignedDoubleLiteralsTest.java!2);
  link artifact monticoregrammar -> @(SignedFloatLiteralsTest.java!2);
  link artifact monticoregrammar -> @(SignedIntLiteralsTest.java!2);
  link artifact monticoregrammar -> @(SignedLongLiteralsTest.java!2);
  link artifact monticoregrammar -> @(StringLiteralsTest.java!2);
  link artifact monticoregrammar -> @(prettyprint!12);
  link artifact monticoregrammar -> @(AssignmentExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(CardinalityPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(CommonExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(CompletenessPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(MCBasicTypes1PrettyPrinterTest.java);
  link artifact monticoregrammar -> @(MCHexNumbersPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(MCNumbersPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(OCLExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(SetExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(ShiftExpressionsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(StringLiteralsPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(UMLModifierPrettyPrinterTest.java);
  link artifact monticoregrammar -> @(UMLStereotypePrettyPrinterTest.java);
  link artifact monticoregrammar -> @(types!14);
  link artifact monticoregrammar -> @(ComplexArrayTypesTest.java);
  link artifact monticoregrammar -> @(ComplexQualifiedTypesTest.java);
  link artifact monticoregrammar -> @(NestedTypeArgumentsTest.java);
  link artifact monticoregrammar -> @(NestedTypeParametersTest.java);
  link artifact monticoregrammar -> @(PrimitiveArrayTypesTest.java);
  link artifact monticoregrammar -> @(PrimitiveTypesTest.java);
  link artifact monticoregrammar -> @(ReturnTypesTest.java);
  link artifact monticoregrammar -> @(TypeArgumentsTest.java);
  link artifact monticoregrammar -> @(TypeParametersTest.java);
  link artifact monticoregrammar -> @(TypesTestHelper.java);
  link artifact monticoregrammar -> @(WildcardTypesTest.java);
  link artifact monticoregrammar -> @(resources!11);
  link artifact monticoregrammar -> @(de!27);
  link artifact monticoregrammar -> @(monticore!28);
  link artifact monticoregrammar -> @(target!4);
  link artifact monticoregrammar -> @(archive-tmp!2);
  link artifact monticoregrammar -> @(classes!4);
  link artifact monticoregrammar -> @(de!28);
  link artifact monticoregrammar -> @(monticore!29);
  link artifact monticoregrammar -> @(assignmentexpressions);
  link artifact monticoregrammar -> @(_ast!49);
  link artifact monticoregrammar -> @(AssignmentExpressionsLiterals.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsMill.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsPackage.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(ASTAndAssignmentExpression$AndAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTAndAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTAssignmentExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTBinaryAndExpression$BinaryAndExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryAndExpression.class);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression.class);
  link artifact monticoregrammar -> @(ASTBinaryXorAssignmentExpression$BinaryXorAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryXorAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTBinaryXorExpression$BinaryXorExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryXorExpression.class);
  link artifact monticoregrammar -> @(ASTConstantsAssignmentExpressions.class);
  link artifact monticoregrammar -> @(ASTDecPrefixExpression$DecPrefixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTDecPrefixExpression.class);
  link artifact monticoregrammar -> @(ASTDecSuffixExpression$DecSuffixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTDecSuffixExpression.class);
  link artifact monticoregrammar -> @(ASTDivideAssignmentExpression$DivideAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTDivideAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTIncPrefixExpression$IncPrefixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTIncPrefixExpression.class);
  link artifact monticoregrammar -> @(ASTIncSuffixExpression$IncSuffixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTIncSuffixExpression.class);
  link artifact monticoregrammar -> @(ASTLeftShiftAssignmentExpression$LeftShiftAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLeftShiftAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTLogicalRightAssignmentExpression$LogicalRightAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLogicalRightAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTMinusAssignmentExpression$MinusAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTMinusAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTMinusPrefixExpression$MinusPrefixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTMinusPrefixExpression.class);
  link artifact monticoregrammar -> @(ASTModuloAssignmentExpression$ModuloAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTModuloAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTMultAssignmentExpression$MultAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTMultAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTOrAssignmentExpression$OrAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTOrAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTPlusAssignmentExpression$PlusAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPlusAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTPlusPrefixExpression$PlusPrefixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPlusPrefixExpression.class);
  link artifact monticoregrammar -> @(ASTRegularAssignmentExpression$RegularAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTRegularAssignmentExpression.class);
  link artifact monticoregrammar -> @(ASTRightShiftAssignmentExpression$RightShiftAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTRightShiftAssignmentExpression.class);
  link artifact monticoregrammar -> @(_cocos!43);
  link artifact monticoregrammar -> @(AssignmentExpressionsAssignmentExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAndAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryAndExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryOrOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryXorExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDecPrefixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDecSuffixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDivideAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTIncPrefixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTIncSuffixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMinusAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMinusPrefixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTModuloAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMultAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTOrAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTPlusAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTPlusPrefixExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTRegularAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(_od!43);
  link artifact monticoregrammar -> @(AssignmentExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!20);
  link artifact monticoregrammar -> @(AssignmentExpressionsLanguage.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!43);
  link artifact monticoregrammar -> @(AssignmentExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsVisitor.class);
  link artifact monticoregrammar -> @(cardinality);
  link artifact monticoregrammar -> @(_ast!50);
  link artifact monticoregrammar -> @(ASTCardinality$CardinalityBuilder.class);
  link artifact monticoregrammar -> @(ASTCardinality.class!2);
  link artifact monticoregrammar -> @(ASTCardinalityNode.class);
  link artifact monticoregrammar -> @(ASTConstantsCardinality.class);
  link artifact monticoregrammar -> @(CardinalityLiterals.class);
  link artifact monticoregrammar -> @(CardinalityMill.class);
  link artifact monticoregrammar -> @(CardinalityNodeFactory.class);
  link artifact monticoregrammar -> @(CardinalityPackage$Literals.class);
  link artifact monticoregrammar -> @(CardinalityPackage.class);
  link artifact monticoregrammar -> @(CardinalityPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!44);
  link artifact monticoregrammar -> @(CardinalityASTCardinalityCoCo.class);
  link artifact monticoregrammar -> @(CardinalityASTCardinalityNodeCoCo.class);
  link artifact monticoregrammar -> @(CardinalityCardinalityPackageCoCo.class);
  link artifact monticoregrammar -> @(CardinalityCoCoChecker.class);
  link artifact monticoregrammar -> @(_od!44);
  link artifact monticoregrammar -> @(Cardinality2OD.class);
  link artifact monticoregrammar -> @(_symboltable!21);
  link artifact monticoregrammar -> @(CardinalityLanguage.class);
  link artifact monticoregrammar -> @(CardinalityModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!44);
  link artifact monticoregrammar -> @(CardinalityDelegatorVisitor.class);
  link artifact monticoregrammar -> @(CardinalityInheritanceVisitor.class);
  link artifact monticoregrammar -> @(CardinalityParentAwareVisitor.class);
  link artifact monticoregrammar -> @(CardinalityVisitor.class);
  link artifact monticoregrammar -> @(common!9);
  link artifact monticoregrammar -> @(common!10);
  link artifact monticoregrammar -> @(_ast!51);
  link artifact monticoregrammar -> @(ASTCardinality$CardinalityBuilder.class!2);
  link artifact monticoregrammar -> @(ASTCardinality.class!3);
  link artifact monticoregrammar -> @(ASTCommonNode.class);
  link artifact monticoregrammar -> @(ASTCompleteness$CompletenessBuilder.class);
  link artifact monticoregrammar -> @(ASTCompleteness.class!2);
  link artifact monticoregrammar -> @(ASTConstantsCommon.class);
  link artifact monticoregrammar -> @(ASTModifier$ModifierBuilder.class);
  link artifact monticoregrammar -> @(ASTModifier.class!3);
  link artifact monticoregrammar -> @(ASTStereotype$StereotypeBuilder.class);
  link artifact monticoregrammar -> @(ASTStereotype.class!3);
  link artifact monticoregrammar -> @(ASTStereoValue$StereoValueBuilder.class);
  link artifact monticoregrammar -> @(ASTStereoValue.class!2);
  link artifact monticoregrammar -> @(CommonLiterals.class);
  link artifact monticoregrammar -> @(CommonMill.class);
  link artifact monticoregrammar -> @(CommonNodeFactory.class);
  link artifact monticoregrammar -> @(CommonPackage$Literals.class);
  link artifact monticoregrammar -> @(CommonPackage.class);
  link artifact monticoregrammar -> @(CommonPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!45);
  link artifact monticoregrammar -> @(CommonASTCardinalityCoCo.class);
  link artifact monticoregrammar -> @(CommonASTCommonNodeCoCo.class);
  link artifact monticoregrammar -> @(CommonASTCompletenessCoCo.class);
  link artifact monticoregrammar -> @(CommonASTModifierCoCo.class);
  link artifact monticoregrammar -> @(CommonASTStereotypeCoCo.class);
  link artifact monticoregrammar -> @(CommonASTStereoValueCoCo.class);
  link artifact monticoregrammar -> @(CommonCoCoChecker.class);
  link artifact monticoregrammar -> @(CommonCommonPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!45);
  link artifact monticoregrammar -> @(Common2OD.class);
  link artifact monticoregrammar -> @(_symboltable!22);
  link artifact monticoregrammar -> @(CommonLanguage.class);
  link artifact monticoregrammar -> @(CommonModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!45);
  link artifact monticoregrammar -> @(CommonDelegatorVisitor.class);
  link artifact monticoregrammar -> @(CommonInheritanceVisitor.class);
  link artifact monticoregrammar -> @(CommonParentAwareVisitor.class);
  link artifact monticoregrammar -> @(CommonVisitor.class);
  link artifact monticoregrammar -> @(prettyprint!13);
  link artifact monticoregrammar -> @(CommonPrettyPrinterConcreteVisitor.class);
  link artifact monticoregrammar -> @(commonexpressions);
  link artifact monticoregrammar -> @(_ast!52);
  link artifact monticoregrammar -> @(ASTArguments$ArgumentsBuilder.class);
  link artifact monticoregrammar -> @(ASTArguments.class!2);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression.class);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression$BooleanNotExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression.class);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression.class);
  link artifact monticoregrammar -> @(ASTBracketExpression$BracketExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBracketExpression.class);
  link artifact monticoregrammar -> @(ASTCallExpression$CallExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTCallExpression.class);
  link artifact monticoregrammar -> @(ASTCommonExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTConditionalExpression$ConditionalExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTConditionalExpression.class);
  link artifact monticoregrammar -> @(ASTConstantsCommonExpressions.class);
  link artifact monticoregrammar -> @(ASTDivideExpression$DivideExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTDivideExpression.class);
  link artifact monticoregrammar -> @(ASTEqualsExpression$EqualsExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTEqualsExpression.class);
  link artifact monticoregrammar -> @(ASTEquivalentExpression$EquivalentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTEquivalentExpression.class);
  link artifact monticoregrammar -> @(ASTGreaterEqualExpression$GreaterEqualExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTGreaterEqualExpression.class);
  link artifact monticoregrammar -> @(ASTGreaterThanExpression$GreaterThanExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTGreaterThanExpression.class);
  link artifact monticoregrammar -> @(ASTInfixExpression.class);
  link artifact monticoregrammar -> @(ASTLessEqualExpression$LessEqualExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLessEqualExpression.class);
  link artifact monticoregrammar -> @(ASTLessThanExpression$LessThanExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLessThanExpression.class);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression$LogicalNotExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression.class);
  link artifact monticoregrammar -> @(ASTMinusExpression$MinusExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTMinusExpression.class);
  link artifact monticoregrammar -> @(ASTModuloExpression$ModuloExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTModuloExpression.class);
  link artifact monticoregrammar -> @(ASTMultExpression$MultExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTMultExpression.class);
  link artifact monticoregrammar -> @(ASTNotEqualsExpression$NotEqualsExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTNotEqualsExpression.class);
  link artifact monticoregrammar -> @(ASTPlusExpression$PlusExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPlusExpression.class);
  link artifact monticoregrammar -> @(ASTSimpleAssignmentExpression$SimpleAssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSimpleAssignmentExpression.class);
  link artifact monticoregrammar -> @(CommonExpressionsLiterals.class);
  link artifact monticoregrammar -> @(CommonExpressionsMill.class);
  link artifact monticoregrammar -> @(CommonExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(CommonExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(CommonExpressionsPackage.class);
  link artifact monticoregrammar -> @(CommonExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!46);
  link artifact monticoregrammar -> @(CommonExpressionsASTArgumentsCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanAndOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanNotExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanOrOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTBracketExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTCallExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTCommonExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTConditionalExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTDivideExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTEqualsExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTEquivalentExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTGreaterEqualExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTGreaterThanExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTInfixExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTLessEqualExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTLessThanExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTLogicalNotExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTMinusExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTModuloExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTMultExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTNotEqualsExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTPlusExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsASTSimpleAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(CommonExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(CommonExpressionsCommonExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!46);
  link artifact monticoregrammar -> @(CommonExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!23);
  link artifact monticoregrammar -> @(CommonExpressionsLanguage.class);
  link artifact monticoregrammar -> @(CommonExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!46);
  link artifact monticoregrammar -> @(CommonExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(CommonExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(CommonExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(CommonExpressionsVisitor.class);
  link artifact monticoregrammar -> @(completeness);
  link artifact monticoregrammar -> @(_ast!53);
  link artifact monticoregrammar -> @(ASTCompleteness$CompletenessBuilder.class!2);
  link artifact monticoregrammar -> @(ASTCompleteness.class!3);
  link artifact monticoregrammar -> @(ASTCompletenessNode.class);
  link artifact monticoregrammar -> @(ASTConstantsCompleteness.class);
  link artifact monticoregrammar -> @(CompletenessLiterals.class);
  link artifact monticoregrammar -> @(CompletenessMill.class);
  link artifact monticoregrammar -> @(CompletenessNodeFactory.class);
  link artifact monticoregrammar -> @(CompletenessPackage$Literals.class);
  link artifact monticoregrammar -> @(CompletenessPackage.class);
  link artifact monticoregrammar -> @(CompletenessPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!47);
  link artifact monticoregrammar -> @(CompletenessASTCompletenessCoCo.class);
  link artifact monticoregrammar -> @(CompletenessASTCompletenessNodeCoCo.class);
  link artifact monticoregrammar -> @(CompletenessCoCoChecker.class);
  link artifact monticoregrammar -> @(CompletenessCompletenessPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!47);
  link artifact monticoregrammar -> @(Completeness2OD.class);
  link artifact monticoregrammar -> @(_symboltable!24);
  link artifact monticoregrammar -> @(CompletenessLanguage.class);
  link artifact monticoregrammar -> @(CompletenessModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!47);
  link artifact monticoregrammar -> @(CompletenessDelegatorVisitor.class);
  link artifact monticoregrammar -> @(CompletenessInheritanceVisitor.class);
  link artifact monticoregrammar -> @(CompletenessParentAwareVisitor.class);
  link artifact monticoregrammar -> @(CompletenessVisitor.class);
  link artifact monticoregrammar -> @(expressions!2);
  link artifact monticoregrammar -> @(prettyprint!14);
  link artifact monticoregrammar -> @(AssignmentExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(CommonExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(MCExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(OCLExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(SetExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPrettyPrinter.class);
  link artifact monticoregrammar -> @(expressionsbasis);
  link artifact monticoregrammar -> @(_ast!54);
  link artifact monticoregrammar -> @(ASTConstantsExpressionsBasis.class);
  link artifact monticoregrammar -> @(ASTExpression.class!3);
  link artifact monticoregrammar -> @(ASTExpressionsBasisNode.class);
  link artifact monticoregrammar -> @(ExpressionsBasisLiterals.class);
  link artifact monticoregrammar -> @(ExpressionsBasisMill.class);
  link artifact monticoregrammar -> @(ExpressionsBasisNodeFactory.class);
  link artifact monticoregrammar -> @(ExpressionsBasisPackage$Literals.class);
  link artifact monticoregrammar -> @(ExpressionsBasisPackage.class);
  link artifact monticoregrammar -> @(ExpressionsBasisPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!48);
  link artifact monticoregrammar -> @(ExpressionsBasisASTExpressionCoCo.class);
  link artifact monticoregrammar -> @(ExpressionsBasisASTExpressionsBasisNodeCoCo.class);
  link artifact monticoregrammar -> @(ExpressionsBasisCoCoChecker.class);
  link artifact monticoregrammar -> @(ExpressionsBasisExpressionsBasisPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!48);
  link artifact monticoregrammar -> @(ExpressionsBasis2OD.class);
  link artifact monticoregrammar -> @(_symboltable!25);
  link artifact monticoregrammar -> @(ExpressionsBasisLanguage.class);
  link artifact monticoregrammar -> @(ExpressionsBasisModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!48);
  link artifact monticoregrammar -> @(ExpressionsBasisDelegatorVisitor.class);
  link artifact monticoregrammar -> @(ExpressionsBasisInheritanceVisitor.class);
  link artifact monticoregrammar -> @(ExpressionsBasisParentAwareVisitor.class);
  link artifact monticoregrammar -> @(ExpressionsBasisVisitor.class);
  link artifact monticoregrammar -> @(javaclassexpressions);
  link artifact monticoregrammar -> @(_ast!55);
  link artifact monticoregrammar -> @(ASTClassExpression$ClassExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTClassExpression.class);
  link artifact monticoregrammar -> @(ASTConstantsJavaClassExpressions.class);
  link artifact monticoregrammar -> @(ASTELiteralExt.class);
  link artifact monticoregrammar -> @(ASTEReturnTypeExt.class);
  link artifact monticoregrammar -> @(ASTETypeArgumentsExt.class);
  link artifact monticoregrammar -> @(ASTETypeExt.class);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression.class);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix.class);
  link artifact monticoregrammar -> @(ASTInstanceofExpression$InstanceofExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTInstanceofExpression.class);
  link artifact monticoregrammar -> @(ASTJavaClassExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTLiteralExpression$LiteralExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLiteralExpression.class);
  link artifact monticoregrammar -> @(ASTNameExpression$NameExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTNameExpression.class);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression.class);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression.class);
  link artifact monticoregrammar -> @(ASTSuperExpression$SuperExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSuperExpression.class);
  link artifact monticoregrammar -> @(ASTSuperSuffix$SuperSuffixBuilder.class);
  link artifact monticoregrammar -> @(ASTSuperSuffix.class!2);
  link artifact monticoregrammar -> @(ASTTypeCastExpression$TypeCastExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsLiterals.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsMill.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPackage.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!49);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTClassExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTELiteralExtCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTEReturnTypeExtCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTETypeArgumentsExtCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTETypeExtCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTGenericInvocationExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTGenericInvocationSuffixCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTInstanceofExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTLiteralExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTNameExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTPrimarySuperExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTSuperExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTSuperSuffixCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTTypeCastExpressionCoCo.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsJavaClassExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!49);
  link artifact monticoregrammar -> @(JavaClassExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!26);
  link artifact monticoregrammar -> @(JavaClassExpressionsLanguage.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!49);
  link artifact monticoregrammar -> @(JavaClassExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsVisitor.class);
  link artifact monticoregrammar -> @(lexicals!9);
  link artifact monticoregrammar -> @(lexicals!10);
  link artifact monticoregrammar -> @(_ast!56);
  link artifact monticoregrammar -> @(ASTConstantsLexicals.class);
  link artifact monticoregrammar -> @(ASTLexicalsNode.class);
  link artifact monticoregrammar -> @(LexicalsLiterals.class);
  link artifact monticoregrammar -> @(LexicalsMill.class);
  link artifact monticoregrammar -> @(LexicalsNodeFactory.class);
  link artifact monticoregrammar -> @(LexicalsPackage$Literals.class);
  link artifact monticoregrammar -> @(LexicalsPackage.class);
  link artifact monticoregrammar -> @(LexicalsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!50);
  link artifact monticoregrammar -> @(LexicalsASTLexicalsNodeCoCo.class);
  link artifact monticoregrammar -> @(LexicalsCoCoChecker.class);
  link artifact monticoregrammar -> @(LexicalsLexicalsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!50);
  link artifact monticoregrammar -> @(Lexicals2OD.class);
  link artifact monticoregrammar -> @(_visitor!50);
  link artifact monticoregrammar -> @(LexicalsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(LexicalsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(LexicalsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(LexicalsVisitor.class);
  link artifact monticoregrammar -> @(literals!11);
  link artifact monticoregrammar -> @(literals!12);
  link artifact monticoregrammar -> @(_ast!57);
  link artifact monticoregrammar -> @(ASTBooleanLiteral$BooleanLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTBooleanLiteral.class!2);
  link artifact monticoregrammar -> @(ASTCharLiteral$CharLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTCharLiteral.class!2);
  link artifact monticoregrammar -> @(ASTConstantsLiterals.class);
  link artifact monticoregrammar -> @(ASTDoubleLiteral$DoubleLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTDoubleLiteral.class!2);
  link artifact monticoregrammar -> @(ASTFloatLiteral$FloatLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTFloatLiteral.class!2);
  link artifact monticoregrammar -> @(ASTIntLiteral$IntLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTIntLiteral.class!2);
  link artifact monticoregrammar -> @(ASTLiteral.class!2);
  link artifact monticoregrammar -> @(ASTLiteralsNode.class);
  link artifact monticoregrammar -> @(ASTLongLiteral$LongLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTLongLiteral.class!2);
  link artifact monticoregrammar -> @(ASTNullLiteral$NullLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTNullLiteral.class!2);
  link artifact monticoregrammar -> @(ASTNumericLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral$SignedIntLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral$SignedLongLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral.class!2);
  link artifact monticoregrammar -> @(ASTSignedNumericLiteral.class!2);
  link artifact monticoregrammar -> @(ASTStringLiteral$StringLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTStringLiteral.class!2);
  link artifact monticoregrammar -> @(LiteralsLiterals.class);
  link artifact monticoregrammar -> @(LiteralsMill.class);
  link artifact monticoregrammar -> @(LiteralsNodeFactory.class);
  link artifact monticoregrammar -> @(LiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(LiteralsPackage.class);
  link artifact monticoregrammar -> @(LiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!51);
  link artifact monticoregrammar -> @(LiteralsASTBooleanLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTCharLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTDoubleLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTFloatLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTIntLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTLiteralsNodeCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTLongLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTNullLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTNumericLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedDoubleLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedFloatLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedIntLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedLongLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTSignedNumericLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsASTStringLiteralCoCo.class);
  link artifact monticoregrammar -> @(LiteralsCoCoChecker.class);
  link artifact monticoregrammar -> @(LiteralsLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!51);
  link artifact monticoregrammar -> @(Literals2OD.class);
  link artifact monticoregrammar -> @(_symboltable!27);
  link artifact monticoregrammar -> @(LiteralsLanguage.class);
  link artifact monticoregrammar -> @(LiteralsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!51);
  link artifact monticoregrammar -> @(LiteralsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(LiteralsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(LiteralsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(LiteralsVisitor.class);
  link artifact monticoregrammar -> @(LiteralsHelper.class);
  link artifact monticoregrammar -> @(LiteralsNodeIdentHelper.class);
  link artifact monticoregrammar -> @(prettyprint!15);
  link artifact monticoregrammar -> @(LiteralsPrettyPrinterConcreteVisitor.class);
  link artifact monticoregrammar -> @(mcbasics);
  link artifact monticoregrammar -> @(_ast!58);
  link artifact monticoregrammar -> @(ASTConstantsMCBasics.class);
  link artifact monticoregrammar -> @(ASTMCBasicsNode.class);
  link artifact monticoregrammar -> @(MCBasicsLiterals.class);
  link artifact monticoregrammar -> @(MCBasicsMill.class);
  link artifact monticoregrammar -> @(MCBasicsNodeFactory.class);
  link artifact monticoregrammar -> @(MCBasicsPackage$Literals.class);
  link artifact monticoregrammar -> @(MCBasicsPackage.class);
  link artifact monticoregrammar -> @(MCBasicsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!52);
  link artifact monticoregrammar -> @(MCBasicsASTMCBasicsNodeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicsCoCoChecker.class);
  link artifact monticoregrammar -> @(MCBasicsMCBasicsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!52);
  link artifact monticoregrammar -> @(MCBasics2OD.class);
  link artifact monticoregrammar -> @(_visitor!52);
  link artifact monticoregrammar -> @(MCBasicsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCBasicsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCBasicsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCBasicsVisitor.class);
  link artifact monticoregrammar -> @(mcbasictypes1);
  link artifact monticoregrammar -> @(_ast!59);
  link artifact monticoregrammar -> @(ASTBooleanType$BooleanTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTBooleanType.class);
  link artifact monticoregrammar -> @(ASTByteType$ByteTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTByteType.class);
  link artifact monticoregrammar -> @(ASTCharType$CharTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTCharType.class);
  link artifact monticoregrammar -> @(ASTConstantsMCBasicTypes1.class);
  link artifact monticoregrammar -> @(ASTDoubleType$DoubleTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTDoubleType.class);
  link artifact monticoregrammar -> @(ASTFloatType$FloatTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTFloatType.class);
  link artifact monticoregrammar -> @(ASTImportStatement$ImportStatementBuilder.class);
  link artifact monticoregrammar -> @(ASTImportStatement.class!2);
  link artifact monticoregrammar -> @(ASTIntType$IntTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTIntType.class);
  link artifact monticoregrammar -> @(ASTLongType$LongTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTLongType.class);
  link artifact monticoregrammar -> @(ASTMCBasicTypes1Node.class);
  link artifact monticoregrammar -> @(ASTNameAsReferenceType$NameAsReferenceTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTNameAsReferenceType.class);
  link artifact monticoregrammar -> @(ASTPrimitiveType.class!2);
  link artifact monticoregrammar -> @(ASTQualifiedName$QualifiedNameBuilder.class);
  link artifact monticoregrammar -> @(ASTQualifiedName.class!3);
  link artifact monticoregrammar -> @(ASTReferenceType.class!2);
  link artifact monticoregrammar -> @(ASTReturnType$ReturnTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTReturnType.class!2);
  link artifact monticoregrammar -> @(ASTShortType$ShortTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTShortType.class);
  link artifact monticoregrammar -> @(ASTType.class!2);
  link artifact monticoregrammar -> @(ASTVoidType$VoidTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTVoidType.class!2);
  link artifact monticoregrammar -> @(MCBasicTypes1Literals.class);
  link artifact monticoregrammar -> @(MCBasicTypes1Mill.class);
  link artifact monticoregrammar -> @(MCBasicTypes1NodeFactory.class);
  link artifact monticoregrammar -> @(MCBasicTypes1Package$Literals.class);
  link artifact monticoregrammar -> @(MCBasicTypes1Package.class);
  link artifact monticoregrammar -> @(MCBasicTypes1PackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!53);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTBooleanTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTByteTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTCharTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTDoubleTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTFloatTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTImportStatementCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTIntTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTLongTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTMCBasicTypes1NodeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTNameAsReferenceTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTPrimitiveTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTQualifiedNameCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTReferenceTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTReturnTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTShortTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTVoidTypeCoCo.class);
  link artifact monticoregrammar -> @(MCBasicTypes1CoCoChecker.class);
  link artifact monticoregrammar -> @(MCBasicTypes1MCBasicTypes1PackageCoCo.class);
  link artifact monticoregrammar -> @(_od!53);
  link artifact monticoregrammar -> @(MCBasicTypes12OD.class);
  link artifact monticoregrammar -> @(_symboltable!28);
  link artifact monticoregrammar -> @(MCBasicTypes1Language.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!53);
  link artifact monticoregrammar -> @(MCBasicTypes1DelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCBasicTypes1InheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCBasicTypes1ParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCBasicTypes1Visitor.class);
  link artifact monticoregrammar -> @(mccommon);
  link artifact monticoregrammar -> @(_ast!60);
  link artifact monticoregrammar -> @(ASTConstantsMCCommon.class);
  link artifact monticoregrammar -> @(ASTMCCommonNode.class);
  link artifact monticoregrammar -> @(MCCommonLiterals.class);
  link artifact monticoregrammar -> @(MCCommonMill.class);
  link artifact monticoregrammar -> @(MCCommonNodeFactory.class);
  link artifact monticoregrammar -> @(MCCommonPackage$Literals.class);
  link artifact monticoregrammar -> @(MCCommonPackage.class);
  link artifact monticoregrammar -> @(MCCommonPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!54);
  link artifact monticoregrammar -> @(MCCommonASTMCCommonNodeCoCo.class);
  link artifact monticoregrammar -> @(MCCommonCoCoChecker.class);
  link artifact monticoregrammar -> @(MCCommonMCCommonPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!54);
  link artifact monticoregrammar -> @(MCCommon2OD.class);
  link artifact monticoregrammar -> @(_visitor!54);
  link artifact monticoregrammar -> @(MCCommonDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCCommonInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCCommonParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCCommonVisitor.class);
  link artifact monticoregrammar -> @(mcexpressions);
  link artifact monticoregrammar -> @(_ast!61);
  link artifact monticoregrammar -> @(ASTAddExpression$AddExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTAddExpression.class);
  link artifact monticoregrammar -> @(ASTArguments$ArgumentsBuilder.class!2);
  link artifact monticoregrammar -> @(ASTArguments.class!3);
  link artifact monticoregrammar -> @(ASTArrayExpression$ArrayExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTArrayExpression.class);
  link artifact monticoregrammar -> @(ASTAssignmentExpression$AssignmentExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTAssignmentExpression.class!2);
  link artifact monticoregrammar -> @(ASTBinaryAndOpExpression$BinaryAndOpExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryAndOpExpression.class);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression$BinaryOrOpExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression.class!2);
  link artifact monticoregrammar -> @(ASTBinaryXorOpExpression$BinaryXorOpExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTBinaryXorOpExpression.class);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression$BooleanAndOpExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression.class!2);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression$BooleanNotExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression.class!2);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression$BooleanOrOpExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression.class!2);
  link artifact monticoregrammar -> @(ASTBracketExpression$BracketExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBracketExpression.class!2);
  link artifact monticoregrammar -> @(ASTCallExpression$CallExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTCallExpression.class!2);
  link artifact monticoregrammar -> @(ASTClassExpression$ClassExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTClassExpression.class!2);
  link artifact monticoregrammar -> @(ASTComparisonExpression$ComparisonExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTComparisonExpression.class);
  link artifact monticoregrammar -> @(ASTConditionalExpression$ConditionalExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTConditionalExpression.class!2);
  link artifact monticoregrammar -> @(ASTConstantsMCExpressions.class);
  link artifact monticoregrammar -> @(ASTExpression.class!4);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression$GenericInvocationExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression.class!2);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix$GenericInvocationSuffixBuilder.class!2);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix.class!2);
  link artifact monticoregrammar -> @(ASTIdentityExpression$IdentityExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTIdentityExpression.class);
  link artifact monticoregrammar -> @(ASTInstanceofExpression$InstanceofExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTInstanceofExpression.class!2);
  link artifact monticoregrammar -> @(ASTLiteralExpression$LiteralExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTLiteralExpression.class!2);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression$LogicalNotExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression.class!2);
  link artifact monticoregrammar -> @(ASTMCExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTMultExpression$MultExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTMultExpression.class!2);
  link artifact monticoregrammar -> @(ASTNameExpression$NameExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTNameExpression.class!2);
  link artifact monticoregrammar -> @(ASTPrefixExpression$PrefixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrefixExpression.class);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression$PrimaryGenericInvocationExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression.class!2);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression$PrimarySuperExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression.class!2);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression.class);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression.class);
  link artifact monticoregrammar -> @(ASTShiftExpression$ShiftExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTShiftExpression.class);
  link artifact monticoregrammar -> @(ASTSuffixExpression$SuffixExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSuffixExpression.class);
  link artifact monticoregrammar -> @(ASTSuperExpression$SuperExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSuperExpression.class!2);
  link artifact monticoregrammar -> @(ASTSuperSuffix$SuperSuffixBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSuperSuffix.class!3);
  link artifact monticoregrammar -> @(ASTThisExpression$ThisExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTThisExpression.class);
  link artifact monticoregrammar -> @(ASTTypeCastExpression$TypeCastExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.class!2);
  link artifact monticoregrammar -> @(MCExpressionsLiterals.class);
  link artifact monticoregrammar -> @(MCExpressionsMill.class);
  link artifact monticoregrammar -> @(MCExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(MCExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(MCExpressionsPackage.class);
  link artifact monticoregrammar -> @(MCExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!55);
  link artifact monticoregrammar -> @(MCExpressionsASTAddExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTArgumentsCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTArrayExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTAssignmentExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryAndOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryOrOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryXorOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanAndOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanNotExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanOrOpExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTBracketExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTCallExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTClassExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTComparisonExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTConditionalExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTGenericInvocationExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTGenericInvocationSuffixCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTIdentityExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTInstanceofExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTLiteralExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTLogicalNotExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTMCExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTMultExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTNameExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTPrefixExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimarySuperExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimaryThisExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTQualifiedNameExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTShiftExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTSuffixExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTSuperExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTSuperSuffixCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTThisExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsASTTypeCastExpressionCoCo.class);
  link artifact monticoregrammar -> @(MCExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(MCExpressionsMCExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!55);
  link artifact monticoregrammar -> @(MCExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!29);
  link artifact monticoregrammar -> @(MCExpressionsLanguage.class);
  link artifact monticoregrammar -> @(MCExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!55);
  link artifact monticoregrammar -> @(MCExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCExpressionsVisitor.class);
  link artifact monticoregrammar -> @(mchexnumbers);
  link artifact monticoregrammar -> @(_ast!62);
  link artifact monticoregrammar -> @(ASTConstantsMCHexNumbers.class);
  link artifact monticoregrammar -> @(ASTHexadecimal$HexadecimalBuilder.class);
  link artifact monticoregrammar -> @(ASTHexadecimal.class);
  link artifact monticoregrammar -> @(ASTHexInteger$HexIntegerBuilder.class);
  link artifact monticoregrammar -> @(ASTHexInteger.class);
  link artifact monticoregrammar -> @(ASTMCHexNumbersNode.class);
  link artifact monticoregrammar -> @(MCHexNumbersLiterals.class);
  link artifact monticoregrammar -> @(MCHexNumbersMill.class);
  link artifact monticoregrammar -> @(MCHexNumbersNodeFactory.class);
  link artifact monticoregrammar -> @(MCHexNumbersPackage$Literals.class);
  link artifact monticoregrammar -> @(MCHexNumbersPackage.class);
  link artifact monticoregrammar -> @(MCHexNumbersPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!56);
  link artifact monticoregrammar -> @(MCHexNumbersASTHexadecimalCoCo.class);
  link artifact monticoregrammar -> @(MCHexNumbersASTHexIntegerCoCo.class);
  link artifact monticoregrammar -> @(MCHexNumbersASTMCHexNumbersNodeCoCo.class);
  link artifact monticoregrammar -> @(MCHexNumbersCoCoChecker.class);
  link artifact monticoregrammar -> @(MCHexNumbersMCHexNumbersPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!56);
  link artifact monticoregrammar -> @(MCHexNumbers2OD.class);
  link artifact monticoregrammar -> @(_symboltable!30);
  link artifact monticoregrammar -> @(MCHexNumbersLanguage.class);
  link artifact monticoregrammar -> @(MCHexNumbersModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!56);
  link artifact monticoregrammar -> @(MCHexNumbersDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCHexNumbersInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCHexNumbersParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCHexNumbersVisitor.class);
  link artifact monticoregrammar -> @(mcliterals!2);
  link artifact monticoregrammar -> @(_ast!63);
  link artifact monticoregrammar -> @(ASTBooleanLiteral$BooleanLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTBooleanLiteral.class!3);
  link artifact monticoregrammar -> @(ASTCharLiteral$CharLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTCharLiteral.class!3);
  link artifact monticoregrammar -> @(ASTConstantsMCLiterals.class);
  link artifact monticoregrammar -> @(ASTDoubleLiteral$DoubleLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTDoubleLiteral.class!3);
  link artifact monticoregrammar -> @(ASTFloatLiteral$FloatLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTFloatLiteral.class!3);
  link artifact monticoregrammar -> @(ASTIntLiteral$IntLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTIntLiteral.class!3);
  link artifact monticoregrammar -> @(ASTLiteral.class!3);
  link artifact monticoregrammar -> @(ASTLongLiteral$LongLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTLongLiteral.class!3);
  link artifact monticoregrammar -> @(ASTMCLiteralsNode.class);
  link artifact monticoregrammar -> @(ASTNatLiteral$NatLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTNatLiteral.class);
  link artifact monticoregrammar -> @(ASTNullLiteral$NullLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTNullLiteral.class!3);
  link artifact monticoregrammar -> @(ASTNumericLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral$SignedDoubleLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral$SignedFloatLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral$SignedIntLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral$SignedLongLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral.class!3);
  link artifact monticoregrammar -> @(ASTSignedNatLiteral$SignedNatLiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTSignedNatLiteral.class);
  link artifact monticoregrammar -> @(ASTSignedNumericLiteral.class!3);
  link artifact monticoregrammar -> @(ASTStringLiteral$StringLiteralBuilder.class!2);
  link artifact monticoregrammar -> @(ASTStringLiteral.class!3);
  link artifact monticoregrammar -> @(MCLiteralsLiterals.class);
  link artifact monticoregrammar -> @(MCLiteralsMill.class);
  link artifact monticoregrammar -> @(MCLiteralsNodeFactory.class);
  link artifact monticoregrammar -> @(MCLiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(MCLiteralsPackage.class);
  link artifact monticoregrammar -> @(MCLiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!57);
  link artifact monticoregrammar -> @(MCLiteralsASTBooleanLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTCharLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTDoubleLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTFloatLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTIntLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTLongLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTMCLiteralsNodeCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTNatLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTNullLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTNumericLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedDoubleLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedFloatLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedIntLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedLongLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedNatLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedNumericLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsASTStringLiteralCoCo.class);
  link artifact monticoregrammar -> @(MCLiteralsCoCoChecker.class);
  link artifact monticoregrammar -> @(MCLiteralsMCLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!57);
  link artifact monticoregrammar -> @(MCLiterals2OD.class);
  link artifact monticoregrammar -> @(_symboltable!31);
  link artifact monticoregrammar -> @(MCLiteralsLanguage.class);
  link artifact monticoregrammar -> @(MCLiteralsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!57);
  link artifact monticoregrammar -> @(MCLiteralsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCLiteralsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCLiteralsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCLiteralsVisitor.class);
  link artifact monticoregrammar -> @(MCLiteralsDecoder.class);
  link artifact monticoregrammar -> @(MCLiteralsPrettyPrinterConcreteVisitor.class);
  link artifact monticoregrammar -> @(mcnumbers);
  link artifact monticoregrammar -> @(_ast!64);
  link artifact monticoregrammar -> @(ASTConstantsMCNumbers.class);
  link artifact monticoregrammar -> @(ASTDecimal$DecimalBuilder.class);
  link artifact monticoregrammar -> @(ASTDecimal.class);
  link artifact monticoregrammar -> @(ASTInteger$IntegerBuilder.class);
  link artifact monticoregrammar -> @(ASTInteger.class);
  link artifact monticoregrammar -> @(ASTMCNumbersNode.class);
  link artifact monticoregrammar -> @(ASTNumber.class);
  link artifact monticoregrammar -> @(MCNumbersLiterals.class);
  link artifact monticoregrammar -> @(MCNumbersMill.class);
  link artifact monticoregrammar -> @(MCNumbersNodeFactory.class);
  link artifact monticoregrammar -> @(MCNumbersPackage$Literals.class);
  link artifact monticoregrammar -> @(MCNumbersPackage.class);
  link artifact monticoregrammar -> @(MCNumbersPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!58);
  link artifact monticoregrammar -> @(MCNumbersASTDecimalCoCo.class);
  link artifact monticoregrammar -> @(MCNumbersASTIntegerCoCo.class);
  link artifact monticoregrammar -> @(MCNumbersASTMCNumbersNodeCoCo.class);
  link artifact monticoregrammar -> @(MCNumbersASTNumberCoCo.class);
  link artifact monticoregrammar -> @(MCNumbersCoCoChecker.class);
  link artifact monticoregrammar -> @(MCNumbersMCNumbersPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!58);
  link artifact monticoregrammar -> @(MCNumbers2OD.class);
  link artifact monticoregrammar -> @(_symboltable!32);
  link artifact monticoregrammar -> @(MCNumbersLanguage.class);
  link artifact monticoregrammar -> @(MCNumbersModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!58);
  link artifact monticoregrammar -> @(MCNumbersDelegatorVisitor.class);
  link artifact monticoregrammar -> @(MCNumbersInheritanceVisitor.class);
  link artifact monticoregrammar -> @(MCNumbersParentAwareVisitor.class);
  link artifact monticoregrammar -> @(MCNumbersVisitor.class);
  link artifact monticoregrammar -> @(oclexpressions);
  link artifact monticoregrammar -> @(_ast!65);
  link artifact monticoregrammar -> @(ASTAnyExpr$AnyExprBuilder.class);
  link artifact monticoregrammar -> @(ASTAnyExpr.class);
  link artifact monticoregrammar -> @(ASTConstantsOCLExpressions.class);
  link artifact monticoregrammar -> @(ASTEDeclarationExt.class);
  link artifact monticoregrammar -> @(ASTExistsExpr$ExistsExprBuilder.class);
  link artifact monticoregrammar -> @(ASTExistsExpr.class);
  link artifact monticoregrammar -> @(ASTForallExpr$ForallExprBuilder.class);
  link artifact monticoregrammar -> @(ASTForallExpr.class);
  link artifact monticoregrammar -> @(ASTIfThenElseExpr$IfThenElseExprBuilder.class);
  link artifact monticoregrammar -> @(ASTIfThenElseExpr.class);
  link artifact monticoregrammar -> @(ASTImpliesExpression$ImpliesExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTImpliesExpression.class);
  link artifact monticoregrammar -> @(ASTInExpr$InExprBuilder.class);
  link artifact monticoregrammar -> @(ASTInExpr.class);
  link artifact monticoregrammar -> @(ASTInstanceOfExpression$InstanceOfExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTInstanceOfExpression.class);
  link artifact monticoregrammar -> @(ASTIterateExpr$IterateExprBuilder.class);
  link artifact monticoregrammar -> @(ASTIterateExpr.class);
  link artifact monticoregrammar -> @(ASTLetDeclaration$LetDeclarationBuilder.class);
  link artifact monticoregrammar -> @(ASTLetDeclaration.class);
  link artifact monticoregrammar -> @(ASTLetinExpr$LetinExprBuilder.class);
  link artifact monticoregrammar -> @(ASTLetinExpr.class);
  link artifact monticoregrammar -> @(ASTOCLArgumentQualification$OCLArgumentQualificationBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLArgumentQualification.class);
  link artifact monticoregrammar -> @(ASTOCLArrayQualification$OCLArrayQualificationBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLArrayQualification.class);
  link artifact monticoregrammar -> @(ASTOCLAtPreQualification$OCLAtPreQualificationBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLAtPreQualification.class);
  link artifact monticoregrammar -> @(ASTOCLCollectionItem$OCLCollectionItemBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLCollectionItem.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionEnumerationStyle$OCLComprehensionEnumerationStyleBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionEnumerationStyle.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionExpr.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionExpressionStyle$OCLComprehensionExpressionStyleBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionExpressionStyle.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionItem$OCLComprehensionItemBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionItem.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionPrimary$OCLComprehensionPrimaryBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLComprehensionPrimary.class);
  link artifact monticoregrammar -> @(ASTOCLDefinedPrimary$OCLDefinedPrimaryBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLDefinedPrimary.class);
  link artifact monticoregrammar -> @(ASTOCLExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTOCLIsNewPrimary$OCLIsNewPrimaryBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLIsNewPrimary.class);
  link artifact monticoregrammar -> @(ASTOCLPrimary.class);
  link artifact monticoregrammar -> @(ASTOCLQualification.class);
  link artifact monticoregrammar -> @(ASTOCLQualifiedPrimary$OCLQualifiedPrimaryBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLQualifiedPrimary.class);
  link artifact monticoregrammar -> @(ASTOCLTransitivQualification$OCLTransitivQualificationBuilder.class);
  link artifact monticoregrammar -> @(ASTOCLTransitivQualification.class);
  link artifact monticoregrammar -> @(ASTParenthizedExpression$ParenthizedExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTParenthizedExpression.class);
  link artifact monticoregrammar -> @(ASTSingleLogicalORExpr$SingleLogicalORExprBuilder.class);
  link artifact monticoregrammar -> @(ASTSingleLogicalORExpr.class);
  link artifact monticoregrammar -> @(ASTTypeCastExpression$TypeCastExpressionBuilder.class!3);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.class!3);
  link artifact monticoregrammar -> @(ASTTypeIfExpr$TypeIfExprBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeIfExpr.class);
  link artifact monticoregrammar -> @(OCLExpressionsLiterals.class);
  link artifact monticoregrammar -> @(OCLExpressionsMill.class);
  link artifact monticoregrammar -> @(OCLExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(OCLExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(OCLExpressionsPackage.class);
  link artifact monticoregrammar -> @(OCLExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!59);
  link artifact monticoregrammar -> @(OCLExpressionsASTAnyExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTEDeclarationExtCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTExistsExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTForallExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTIfThenElseExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTImpliesExpressionCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTInExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTInstanceOfExpressionCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTIterateExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTLetDeclarationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTLetinExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLArgumentQualificationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLArrayQualificationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLAtPreQualificationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLCollectionItemCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionItemCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionPrimaryCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLDefinedPrimaryCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLIsNewPrimaryCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLPrimaryCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLQualificationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLQualifiedPrimaryCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLTransitivQualificationCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTParenthizedExpressionCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTSingleLogicalORExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTTypeCastExpressionCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsASTTypeIfExprCoCo.class);
  link artifact monticoregrammar -> @(OCLExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(OCLExpressionsOCLExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!59);
  link artifact monticoregrammar -> @(OCLExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!33);
  link artifact monticoregrammar -> @(OCLExpressionsLanguage.class);
  link artifact monticoregrammar -> @(OCLExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!59);
  link artifact monticoregrammar -> @(OCLExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(OCLExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(OCLExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(OCLExpressionsVisitor.class);
  link artifact monticoregrammar -> @(prettyprint!16);
  link artifact monticoregrammar -> @(CardinalityPrettyPrinter.class);
  link artifact monticoregrammar -> @(CompletenessPrettyPrinter.class);
  link artifact monticoregrammar -> @(MCBasicTypes1PrettyPrinter.class);
  link artifact monticoregrammar -> @(MCHexNumbersPrettyPrinter.class);
  link artifact monticoregrammar -> @(MCNumbersPrettyPrinter.class);
  link artifact monticoregrammar -> @(StringLiteralsPrettyPrinter.class);
  link artifact monticoregrammar -> @(UMLModifierPrettyPrinter.class);
  link artifact monticoregrammar -> @(UMLStereotypePrettyPrinter.class);
  link artifact monticoregrammar -> @(setexpressions);
  link artifact monticoregrammar -> @(_ast!66);
  link artifact monticoregrammar -> @(ASTConstantsSetExpressions.class);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionInfix$IntersectionExpressionInfixBuilder.class);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionInfix.class);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionPrefix$IntersectionExpressionPrefixBuilder.class);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionPrefix.class);
  link artifact monticoregrammar -> @(ASTIsInExpression$IsInExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTIsInExpression.class);
  link artifact monticoregrammar -> @(ASTSetAndExpression$SetAndExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSetAndExpression.class);
  link artifact monticoregrammar -> @(ASTSetExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTSetInExpression$SetInExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSetInExpression.class);
  link artifact monticoregrammar -> @(ASTSetOrExpression$SetOrExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSetOrExpression.class);
  link artifact monticoregrammar -> @(ASTSetXOrExpression$SetXOrExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTSetXOrExpression.class);
  link artifact monticoregrammar -> @(ASTUnionExpressionInfix$UnionExpressionInfixBuilder.class);
  link artifact monticoregrammar -> @(ASTUnionExpressionInfix.class);
  link artifact monticoregrammar -> @(ASTUnionExpressionPrefix$UnionExpressionPrefixBuilder.class);
  link artifact monticoregrammar -> @(ASTUnionExpressionPrefix.class);
  link artifact monticoregrammar -> @(SetExpressionsLiterals.class);
  link artifact monticoregrammar -> @(SetExpressionsMill.class);
  link artifact monticoregrammar -> @(SetExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(SetExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(SetExpressionsPackage.class);
  link artifact monticoregrammar -> @(SetExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!60);
  link artifact monticoregrammar -> @(SetExpressionsASTIntersectionExpressionInfixCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTIntersectionExpressionPrefixCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTIsInExpressionCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTSetAndExpressionCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTSetExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTSetInExpressionCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTSetOrExpressionCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTSetXOrExpressionCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTUnionExpressionInfixCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsASTUnionExpressionPrefixCoCo.class);
  link artifact monticoregrammar -> @(SetExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(SetExpressionsSetExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!60);
  link artifact monticoregrammar -> @(SetExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!34);
  link artifact monticoregrammar -> @(SetExpressionsLanguage.class);
  link artifact monticoregrammar -> @(SetExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!60);
  link artifact monticoregrammar -> @(SetExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(SetExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(SetExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(SetExpressionsVisitor.class);
  link artifact monticoregrammar -> @(shiftexpressions);
  link artifact monticoregrammar -> @(_ast!67);
  link artifact monticoregrammar -> @(ASTArrayExpression$ArrayExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTArrayExpression.class!2);
  link artifact monticoregrammar -> @(ASTConstantsShiftExpressions.class);
  link artifact monticoregrammar -> @(ASTLeftShiftExpression$LeftShiftExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLeftShiftExpression.class);
  link artifact monticoregrammar -> @(ASTLogicalRightShiftExpression$LogicalRightShiftExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTLogicalRightShiftExpression.class);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression$PrimaryThisExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression.class!2);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression$QualifiedNameExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression.class!2);
  link artifact monticoregrammar -> @(ASTRightShiftExpression$RightShiftExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTRightShiftExpression.class);
  link artifact monticoregrammar -> @(ASTShiftExpression.class!2);
  link artifact monticoregrammar -> @(ASTShiftExpressionsNode.class);
  link artifact monticoregrammar -> @(ASTThisExpression$ThisExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTThisExpression.class!2);
  link artifact monticoregrammar -> @(ShiftExpressionsLiterals.class);
  link artifact monticoregrammar -> @(ShiftExpressionsMill.class);
  link artifact monticoregrammar -> @(ShiftExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPackage.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!61);
  link artifact monticoregrammar -> @(ShiftExpressionsASTArrayExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTLeftShiftExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTLogicalRightShiftExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTPrimaryThisExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTQualifiedNameExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTRightShiftExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTShiftExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTShiftExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsASTThisExpressionCoCo.class);
  link artifact monticoregrammar -> @(ShiftExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(ShiftExpressionsShiftExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!61);
  link artifact monticoregrammar -> @(ShiftExpressions2OD.class);
  link artifact monticoregrammar -> @(_symboltable!35);
  link artifact monticoregrammar -> @(ShiftExpressionsLanguage.class);
  link artifact monticoregrammar -> @(ShiftExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!61);
  link artifact monticoregrammar -> @(ShiftExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(ShiftExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(ShiftExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(ShiftExpressionsVisitor.class);
  link artifact monticoregrammar -> @(stringliterals);
  link artifact monticoregrammar -> @(_ast!68);
  link artifact monticoregrammar -> @(ASTCharLiteral$CharLiteralBuilder.class!3);
  link artifact monticoregrammar -> @(ASTCharLiteral.class!4);
  link artifact monticoregrammar -> @(ASTConstantsStringLiterals.class);
  link artifact monticoregrammar -> @(ASTStringLiteral$StringLiteralBuilder.class!3);
  link artifact monticoregrammar -> @(ASTStringLiteral.class!4);
  link artifact monticoregrammar -> @(ASTStringLiteralsNode.class);
  link artifact monticoregrammar -> @(StringLiteralsLiterals.class);
  link artifact monticoregrammar -> @(StringLiteralsMill.class);
  link artifact monticoregrammar -> @(StringLiteralsNodeFactory.class);
  link artifact monticoregrammar -> @(StringLiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(StringLiteralsPackage.class);
  link artifact monticoregrammar -> @(StringLiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!62);
  link artifact monticoregrammar -> @(StringLiteralsASTCharLiteralCoCo.class);
  link artifact monticoregrammar -> @(StringLiteralsASTStringLiteralCoCo.class);
  link artifact monticoregrammar -> @(StringLiteralsASTStringLiteralsNodeCoCo.class);
  link artifact monticoregrammar -> @(StringLiteralsCoCoChecker.class);
  link artifact monticoregrammar -> @(StringLiteralsStringLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!62);
  link artifact monticoregrammar -> @(StringLiterals2OD.class);
  link artifact monticoregrammar -> @(_symboltable!36);
  link artifact monticoregrammar -> @(StringLiteralsLanguage.class);
  link artifact monticoregrammar -> @(StringLiteralsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!62);
  link artifact monticoregrammar -> @(StringLiteralsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(StringLiteralsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(StringLiteralsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(StringLiteralsVisitor.class);
  link artifact monticoregrammar -> @(types!15);
  link artifact monticoregrammar -> @(JTypeSymbolsHelper$CommonJTypeReferenceFactory.class);
  link artifact monticoregrammar -> @(JTypeSymbolsHelper$JTypeFactory.class);
  link artifact monticoregrammar -> @(JTypeSymbolsHelper$JTypeReferenceFactory.class);
  link artifact monticoregrammar -> @(JTypeSymbolsHelper.class);
  link artifact monticoregrammar -> @(prettyprint!17);
  link artifact monticoregrammar -> @(TypesPrettyPrinterConcreteVisitor.class);
  link artifact monticoregrammar -> @(types!16);
  link artifact monticoregrammar -> @(_ast!69);
  link artifact monticoregrammar -> @(ASTArrayType$ArrayTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTArrayType.class!2);
  link artifact monticoregrammar -> @(ASTComplexArrayType$ComplexArrayTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTComplexArrayType.class!2);
  link artifact monticoregrammar -> @(ASTComplexReferenceType$ComplexReferenceTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTComplexReferenceType.class!2);
  link artifact monticoregrammar -> @(ASTConstantsTypes.class);
  link artifact monticoregrammar -> @(ASTImportStatement$ImportStatementBuilder.class!2);
  link artifact monticoregrammar -> @(ASTImportStatement.class!3);
  link artifact monticoregrammar -> @(ASTPrimitiveArrayType$PrimitiveArrayTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimitiveArrayType.class!2);
  link artifact monticoregrammar -> @(ASTPrimitiveType$PrimitiveTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimitiveType.class!3);
  link artifact monticoregrammar -> @(ASTQualifiedName$QualifiedNameBuilder.class!2);
  link artifact monticoregrammar -> @(ASTQualifiedName.class!4);
  link artifact monticoregrammar -> @(ASTReferenceType.class!3);
  link artifact monticoregrammar -> @(ASTReturnType.class!3);
  link artifact monticoregrammar -> @(ASTSimpleReferenceType$SimpleReferenceTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTSimpleReferenceType.class!2);
  link artifact monticoregrammar -> @(ASTType.class!3);
  link artifact monticoregrammar -> @(ASTTypeArgument.class!2);
  link artifact monticoregrammar -> @(ASTTypeArguments$TypeArgumentsBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeArguments.class!2);
  link artifact monticoregrammar -> @(ASTTypeParameters$TypeParametersBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeParameters.class!2);
  link artifact monticoregrammar -> @(ASTTypesNode.class);
  link artifact monticoregrammar -> @(ASTTypeVariableDeclaration$TypeVariableDeclarationBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeVariableDeclaration.class!2);
  link artifact monticoregrammar -> @(ASTVoidType$VoidTypeBuilder.class!2);
  link artifact monticoregrammar -> @(ASTVoidType.class!3);
  link artifact monticoregrammar -> @(ASTWildcardType$WildcardTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTWildcardType.class!2);
  link artifact monticoregrammar -> @(TypesLiterals.class);
  link artifact monticoregrammar -> @(TypesMill.class);
  link artifact monticoregrammar -> @(TypesNodeFactory.class);
  link artifact monticoregrammar -> @(TypesPackage$Literals.class);
  link artifact monticoregrammar -> @(TypesPackage.class);
  link artifact monticoregrammar -> @(TypesPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!63);
  link artifact monticoregrammar -> @(TypesASTArrayTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTComplexArrayTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTComplexReferenceTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTImportStatementCoCo.class);
  link artifact monticoregrammar -> @(TypesASTPrimitiveArrayTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTPrimitiveTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTQualifiedNameCoCo.class);
  link artifact monticoregrammar -> @(TypesASTReferenceTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTReturnTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTSimpleReferenceTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypeArgumentCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypeArgumentsCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypeParametersCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypesNodeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTTypeVariableDeclarationCoCo.class);
  link artifact monticoregrammar -> @(TypesASTVoidTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesASTWildcardTypeCoCo.class);
  link artifact monticoregrammar -> @(TypesCoCoChecker.class);
  link artifact monticoregrammar -> @(TypesTypesPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!63);
  link artifact monticoregrammar -> @(Types2OD.class);
  link artifact monticoregrammar -> @(_symboltable!37);
  link artifact monticoregrammar -> @(TypesLanguage.class);
  link artifact monticoregrammar -> @(TypesModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!63);
  link artifact monticoregrammar -> @(TypesDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TypesInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TypesParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TypesVisitor.class);
  link artifact monticoregrammar -> @(TypesHelper.class);
  link artifact monticoregrammar -> @(TypesNodeIdentHelper.class);
  link artifact monticoregrammar -> @(TypesPrinter.class);
  link artifact monticoregrammar -> @(umlmodifier);
  link artifact monticoregrammar -> @(_ast!70);
  link artifact monticoregrammar -> @(ASTConstantsUMLModifier.class);
  link artifact monticoregrammar -> @(ASTModifier$ModifierBuilder.class!2);
  link artifact monticoregrammar -> @(ASTModifier.class!4);
  link artifact monticoregrammar -> @(ASTUMLModifierNode.class);
  link artifact monticoregrammar -> @(UMLModifierLiterals.class);
  link artifact monticoregrammar -> @(UMLModifierMill.class);
  link artifact monticoregrammar -> @(UMLModifierNodeFactory.class);
  link artifact monticoregrammar -> @(UMLModifierPackage$Literals.class);
  link artifact monticoregrammar -> @(UMLModifierPackage.class);
  link artifact monticoregrammar -> @(UMLModifierPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!64);
  link artifact monticoregrammar -> @(UMLModifierASTModifierCoCo.class);
  link artifact monticoregrammar -> @(UMLModifierASTUMLModifierNodeCoCo.class);
  link artifact monticoregrammar -> @(UMLModifierCoCoChecker.class);
  link artifact monticoregrammar -> @(UMLModifierUMLModifierPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!64);
  link artifact monticoregrammar -> @(UMLModifier2OD.class);
  link artifact monticoregrammar -> @(_symboltable!38);
  link artifact monticoregrammar -> @(UMLModifierLanguage.class);
  link artifact monticoregrammar -> @(UMLModifierModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!64);
  link artifact monticoregrammar -> @(UMLModifierDelegatorVisitor.class);
  link artifact monticoregrammar -> @(UMLModifierInheritanceVisitor.class);
  link artifact monticoregrammar -> @(UMLModifierParentAwareVisitor.class);
  link artifact monticoregrammar -> @(UMLModifierVisitor.class);
  link artifact monticoregrammar -> @(umlstereotype);
  link artifact monticoregrammar -> @(_ast!71);
  link artifact monticoregrammar -> @(ASTConstantsUMLStereotype.class);
  link artifact monticoregrammar -> @(ASTStereotype$StereotypeBuilder.class!2);
  link artifact monticoregrammar -> @(ASTStereotype.class!4);
  link artifact monticoregrammar -> @(ASTStereoValue$StereoValueBuilder.class!2);
  link artifact monticoregrammar -> @(ASTStereoValue.class!3);
  link artifact monticoregrammar -> @(ASTUMLStereotypeNode.class);
  link artifact monticoregrammar -> @(UMLStereotypeLiterals.class);
  link artifact monticoregrammar -> @(UMLStereotypeMill.class);
  link artifact monticoregrammar -> @(UMLStereotypeNodeFactory.class);
  link artifact monticoregrammar -> @(UMLStereotypePackage$Literals.class);
  link artifact monticoregrammar -> @(UMLStereotypePackage.class);
  link artifact monticoregrammar -> @(UMLStereotypePackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!65);
  link artifact monticoregrammar -> @(UMLStereotypeASTStereotypeCoCo.class);
  link artifact monticoregrammar -> @(UMLStereotypeASTStereoValueCoCo.class);
  link artifact monticoregrammar -> @(UMLStereotypeASTUMLStereotypeNodeCoCo.class);
  link artifact monticoregrammar -> @(UMLStereotypeCoCoChecker.class);
  link artifact monticoregrammar -> @(UMLStereotypeUMLStereotypePackageCoCo.class);
  link artifact monticoregrammar -> @(_od!65);
  link artifact monticoregrammar -> @(UMLStereotype2OD.class);
  link artifact monticoregrammar -> @(_symboltable!39);
  link artifact monticoregrammar -> @(UMLStereotypeLanguage.class);
  link artifact monticoregrammar -> @(UMLStereotypeModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!65);
  link artifact monticoregrammar -> @(UMLStereotypeDelegatorVisitor.class);
  link artifact monticoregrammar -> @(UMLStereotypeInheritanceVisitor.class);
  link artifact monticoregrammar -> @(UMLStereotypeParentAwareVisitor.class);
  link artifact monticoregrammar -> @(UMLStereotypeVisitor.class);
  link artifact monticoregrammar -> @(generated-sources!4);
  link artifact monticoregrammar -> @(annotations!4);
  link artifact monticoregrammar -> @(monticore!30);
  link artifact monticoregrammar -> @(sourcecode!2);
  link artifact monticoregrammar -> @(de!29);
  link artifact monticoregrammar -> @(monticore!31);
  link artifact monticoregrammar -> @(assignmentexpressions!2);
  link artifact monticoregrammar -> @(_ast!72);
  link artifact monticoregrammar -> @(AssignmentExpressionsLiterals.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsMill.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsPackage.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(ASTAndAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTAssignmentExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTBinaryAndExpression.java);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression.java);
  link artifact monticoregrammar -> @(ASTBinaryXorAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTBinaryXorExpression.java);
  link artifact monticoregrammar -> @(ASTConstantsAssignmentExpressions.java);
  link artifact monticoregrammar -> @(ASTDecPrefixExpression.java);
  link artifact monticoregrammar -> @(ASTDecSuffixExpression.java);
  link artifact monticoregrammar -> @(ASTDivideAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTIncPrefixExpression.java);
  link artifact monticoregrammar -> @(ASTIncSuffixExpression.java);
  link artifact monticoregrammar -> @(ASTLeftShiftAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTLogicalRightAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTMinusAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTMinusPrefixExpression.java);
  link artifact monticoregrammar -> @(ASTModuloAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTMultAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTOrAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTPlusAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTPlusPrefixExpression.java);
  link artifact monticoregrammar -> @(ASTRegularAssignmentExpression.java);
  link artifact monticoregrammar -> @(ASTRightShiftAssignmentExpression.java);
  link artifact monticoregrammar -> @(_cocos!66);
  link artifact monticoregrammar -> @(AssignmentExpressionsAssignmentExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAndAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTAssignmentExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryAndExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryOrOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryXorAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTBinaryXorExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDecPrefixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDecSuffixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTDivideAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTIncPrefixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTIncSuffixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTLeftShiftAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTLogicalRightAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMinusAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMinusPrefixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTModuloAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTMultAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTOrAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTPlusAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTPlusPrefixExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTRegularAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsASTRightShiftAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(_od!66);
  link artifact monticoregrammar -> @(AssignmentExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!40);
  link artifact monticoregrammar -> @(AssignmentExpressionsLanguage.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!66);
  link artifact monticoregrammar -> @(AssignmentExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(AssignmentExpressionsVisitor.java);
  link artifact monticoregrammar -> @(cardinality!2);
  link artifact monticoregrammar -> @(_ast!73);
  link artifact monticoregrammar -> @(ASTCardinality.java!2);
  link artifact monticoregrammar -> @(ASTCardinalityNode.java);
  link artifact monticoregrammar -> @(ASTConstantsCardinality.java);
  link artifact monticoregrammar -> @(CardinalityLiterals.java);
  link artifact monticoregrammar -> @(CardinalityMill.java);
  link artifact monticoregrammar -> @(CardinalityNodeFactory.java);
  link artifact monticoregrammar -> @(CardinalityPackage.java);
  link artifact monticoregrammar -> @(CardinalityPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!67);
  link artifact monticoregrammar -> @(CardinalityASTCardinalityCoCo.java);
  link artifact monticoregrammar -> @(CardinalityASTCardinalityNodeCoCo.java);
  link artifact monticoregrammar -> @(CardinalityCardinalityPackageCoCo.java);
  link artifact monticoregrammar -> @(CardinalityCoCoChecker.java);
  link artifact monticoregrammar -> @(_od!67);
  link artifact monticoregrammar -> @(Cardinality2OD.java);
  link artifact monticoregrammar -> @(_symboltable!41);
  link artifact monticoregrammar -> @(CardinalityLanguage.java);
  link artifact monticoregrammar -> @(CardinalityModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!67);
  link artifact monticoregrammar -> @(CardinalityDelegatorVisitor.java);
  link artifact monticoregrammar -> @(CardinalityInheritanceVisitor.java);
  link artifact monticoregrammar -> @(CardinalityParentAwareVisitor.java);
  link artifact monticoregrammar -> @(CardinalityVisitor.java);
  link artifact monticoregrammar -> @(common!11);
  link artifact monticoregrammar -> @(common!12);
  link artifact monticoregrammar -> @(_ast!74);
  link artifact monticoregrammar -> @(ASTCardinality.java!3);
  link artifact monticoregrammar -> @(ASTCommonNode.java);
  link artifact monticoregrammar -> @(ASTCompleteness.java!2);
  link artifact monticoregrammar -> @(ASTConstantsCommon.java);
  link artifact monticoregrammar -> @(ASTModifier.java!3);
  link artifact monticoregrammar -> @(ASTStereotype.java!3);
  link artifact monticoregrammar -> @(ASTStereoValue.java!2);
  link artifact monticoregrammar -> @(CommonLiterals.java);
  link artifact monticoregrammar -> @(CommonMill.java);
  link artifact monticoregrammar -> @(CommonNodeFactory.java);
  link artifact monticoregrammar -> @(CommonPackage.java);
  link artifact monticoregrammar -> @(CommonPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!68);
  link artifact monticoregrammar -> @(CommonASTCardinalityCoCo.java);
  link artifact monticoregrammar -> @(CommonASTCommonNodeCoCo.java);
  link artifact monticoregrammar -> @(CommonASTCompletenessCoCo.java);
  link artifact monticoregrammar -> @(CommonASTModifierCoCo.java);
  link artifact monticoregrammar -> @(CommonASTStereotypeCoCo.java);
  link artifact monticoregrammar -> @(CommonASTStereoValueCoCo.java);
  link artifact monticoregrammar -> @(CommonCoCoChecker.java);
  link artifact monticoregrammar -> @(CommonCommonPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!68);
  link artifact monticoregrammar -> @(Common2OD.java);
  link artifact monticoregrammar -> @(_symboltable!42);
  link artifact monticoregrammar -> @(CommonLanguage.java);
  link artifact monticoregrammar -> @(CommonModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!68);
  link artifact monticoregrammar -> @(CommonDelegatorVisitor.java);
  link artifact monticoregrammar -> @(CommonInheritanceVisitor.java);
  link artifact monticoregrammar -> @(CommonParentAwareVisitor.java);
  link artifact monticoregrammar -> @(CommonVisitor.java);
  link artifact monticoregrammar -> @(commonexpressions!2);
  link artifact monticoregrammar -> @(_ast!75);
  link artifact monticoregrammar -> @(ASTArguments.java!2);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression.java);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression.java);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression.java);
  link artifact monticoregrammar -> @(ASTBracketExpression.java);
  link artifact monticoregrammar -> @(ASTCallExpression.java);
  link artifact monticoregrammar -> @(ASTCommonExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTConditionalExpression.java);
  link artifact monticoregrammar -> @(ASTConstantsCommonExpressions.java);
  link artifact monticoregrammar -> @(ASTDivideExpression.java);
  link artifact monticoregrammar -> @(ASTEqualsExpression.java);
  link artifact monticoregrammar -> @(ASTEquivalentExpression.java);
  link artifact monticoregrammar -> @(ASTGreaterEqualExpression.java);
  link artifact monticoregrammar -> @(ASTGreaterThanExpression.java);
  link artifact monticoregrammar -> @(ASTInfixExpression.java);
  link artifact monticoregrammar -> @(ASTLessEqualExpression.java);
  link artifact monticoregrammar -> @(ASTLessThanExpression.java);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression.java);
  link artifact monticoregrammar -> @(ASTMinusExpression.java);
  link artifact monticoregrammar -> @(ASTModuloExpression.java);
  link artifact monticoregrammar -> @(ASTMultExpression.java);
  link artifact monticoregrammar -> @(ASTNotEqualsExpression.java);
  link artifact monticoregrammar -> @(ASTPlusExpression.java);
  link artifact monticoregrammar -> @(ASTSimpleAssignmentExpression.java);
  link artifact monticoregrammar -> @(CommonExpressionsLiterals.java);
  link artifact monticoregrammar -> @(CommonExpressionsMill.java);
  link artifact monticoregrammar -> @(CommonExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(CommonExpressionsPackage.java);
  link artifact monticoregrammar -> @(CommonExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!69);
  link artifact monticoregrammar -> @(CommonExpressionsASTArgumentsCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanAndOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanNotExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTBooleanOrOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTBracketExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTCallExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTCommonExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTConditionalExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTDivideExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTEqualsExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTEquivalentExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTGreaterEqualExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTGreaterThanExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTInfixExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTLessEqualExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTLessThanExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTLogicalNotExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTMinusExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTModuloExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTMultExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTNotEqualsExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTPlusExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsASTSimpleAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(CommonExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(CommonExpressionsCommonExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!69);
  link artifact monticoregrammar -> @(CommonExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!43);
  link artifact monticoregrammar -> @(CommonExpressionsLanguage.java);
  link artifact monticoregrammar -> @(CommonExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!69);
  link artifact monticoregrammar -> @(CommonExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(CommonExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(CommonExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(CommonExpressionsVisitor.java);
  link artifact monticoregrammar -> @(completeness!2);
  link artifact monticoregrammar -> @(_ast!76);
  link artifact monticoregrammar -> @(ASTCompleteness.java!3);
  link artifact monticoregrammar -> @(ASTCompletenessNode.java);
  link artifact monticoregrammar -> @(ASTConstantsCompleteness.java);
  link artifact monticoregrammar -> @(CompletenessLiterals.java);
  link artifact monticoregrammar -> @(CompletenessMill.java);
  link artifact monticoregrammar -> @(CompletenessNodeFactory.java);
  link artifact monticoregrammar -> @(CompletenessPackage.java);
  link artifact monticoregrammar -> @(CompletenessPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!70);
  link artifact monticoregrammar -> @(CompletenessASTCompletenessCoCo.java);
  link artifact monticoregrammar -> @(CompletenessASTCompletenessNodeCoCo.java);
  link artifact monticoregrammar -> @(CompletenessCoCoChecker.java);
  link artifact monticoregrammar -> @(CompletenessCompletenessPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!70);
  link artifact monticoregrammar -> @(Completeness2OD.java);
  link artifact monticoregrammar -> @(_symboltable!44);
  link artifact monticoregrammar -> @(CompletenessLanguage.java);
  link artifact monticoregrammar -> @(CompletenessModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!70);
  link artifact monticoregrammar -> @(CompletenessDelegatorVisitor.java);
  link artifact monticoregrammar -> @(CompletenessInheritanceVisitor.java);
  link artifact monticoregrammar -> @(CompletenessParentAwareVisitor.java);
  link artifact monticoregrammar -> @(CompletenessVisitor.java);
  link artifact monticoregrammar -> @(expressionsbasis!2);
  link artifact monticoregrammar -> @(_ast!77);
  link artifact monticoregrammar -> @(ASTConstantsExpressionsBasis.java);
  link artifact monticoregrammar -> @(ASTExpression.java!3);
  link artifact monticoregrammar -> @(ASTExpressionsBasisNode.java);
  link artifact monticoregrammar -> @(ExpressionsBasisLiterals.java);
  link artifact monticoregrammar -> @(ExpressionsBasisMill.java);
  link artifact monticoregrammar -> @(ExpressionsBasisNodeFactory.java);
  link artifact monticoregrammar -> @(ExpressionsBasisPackage.java);
  link artifact monticoregrammar -> @(ExpressionsBasisPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!71);
  link artifact monticoregrammar -> @(ExpressionsBasisASTExpressionCoCo.java);
  link artifact monticoregrammar -> @(ExpressionsBasisASTExpressionsBasisNodeCoCo.java);
  link artifact monticoregrammar -> @(ExpressionsBasisCoCoChecker.java);
  link artifact monticoregrammar -> @(ExpressionsBasisExpressionsBasisPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!71);
  link artifact monticoregrammar -> @(ExpressionsBasis2OD.java);
  link artifact monticoregrammar -> @(_symboltable!45);
  link artifact monticoregrammar -> @(ExpressionsBasisLanguage.java);
  link artifact monticoregrammar -> @(ExpressionsBasisModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!71);
  link artifact monticoregrammar -> @(ExpressionsBasisDelegatorVisitor.java);
  link artifact monticoregrammar -> @(ExpressionsBasisInheritanceVisitor.java);
  link artifact monticoregrammar -> @(ExpressionsBasisParentAwareVisitor.java);
  link artifact monticoregrammar -> @(ExpressionsBasisVisitor.java);
  link artifact monticoregrammar -> @(javaclassexpressions!2);
  link artifact monticoregrammar -> @(_ast!78);
  link artifact monticoregrammar -> @(ASTClassExpression.java);
  link artifact monticoregrammar -> @(ASTConstantsJavaClassExpressions.java);
  link artifact monticoregrammar -> @(ASTELiteralExt.java);
  link artifact monticoregrammar -> @(ASTEReturnTypeExt.java);
  link artifact monticoregrammar -> @(ASTETypeArgumentsExt.java);
  link artifact monticoregrammar -> @(ASTETypeExt.java);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression.java);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix.java);
  link artifact monticoregrammar -> @(ASTInstanceofExpression.java);
  link artifact monticoregrammar -> @(ASTJavaClassExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTLiteralExpression.java);
  link artifact monticoregrammar -> @(ASTNameExpression.java);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression.java);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression.java);
  link artifact monticoregrammar -> @(ASTSuperExpression.java);
  link artifact monticoregrammar -> @(ASTSuperSuffix.java!2);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsLiterals.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsMill.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsPackage.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!72);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTClassExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTELiteralExtCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTEReturnTypeExtCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTETypeArgumentsExtCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTETypeExtCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTGenericInvocationExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTGenericInvocationSuffixCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTInstanceofExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTJavaClassExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTLiteralExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTNameExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTPrimaryGenericInvocationExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTPrimarySuperExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTSuperExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTSuperSuffixCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsASTTypeCastExpressionCoCo.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsJavaClassExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!72);
  link artifact monticoregrammar -> @(JavaClassExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!46);
  link artifact monticoregrammar -> @(JavaClassExpressionsLanguage.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!72);
  link artifact monticoregrammar -> @(JavaClassExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(JavaClassExpressionsVisitor.java);
  link artifact monticoregrammar -> @(lexicals!11);
  link artifact monticoregrammar -> @(lexicals!12);
  link artifact monticoregrammar -> @(_ast!79);
  link artifact monticoregrammar -> @(ASTConstantsLexicals.java);
  link artifact monticoregrammar -> @(ASTLexicalsNode.java);
  link artifact monticoregrammar -> @(LexicalsLiterals.java);
  link artifact monticoregrammar -> @(LexicalsMill.java);
  link artifact monticoregrammar -> @(LexicalsNodeFactory.java);
  link artifact monticoregrammar -> @(LexicalsPackage.java);
  link artifact monticoregrammar -> @(LexicalsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!73);
  link artifact monticoregrammar -> @(LexicalsASTLexicalsNodeCoCo.java);
  link artifact monticoregrammar -> @(LexicalsCoCoChecker.java);
  link artifact monticoregrammar -> @(LexicalsLexicalsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!73);
  link artifact monticoregrammar -> @(Lexicals2OD.java);
  link artifact monticoregrammar -> @(_visitor!73);
  link artifact monticoregrammar -> @(LexicalsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(LexicalsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(LexicalsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(LexicalsVisitor.java);
  link artifact monticoregrammar -> @(literals!13);
  link artifact monticoregrammar -> @(literals!14);
  link artifact monticoregrammar -> @(_ast!80);
  link artifact monticoregrammar -> @(ASTBooleanLiteral.java!2);
  link artifact monticoregrammar -> @(ASTCharLiteral.java!2);
  link artifact monticoregrammar -> @(ASTConstantsLiterals.java);
  link artifact monticoregrammar -> @(ASTDoubleLiteral.java!2);
  link artifact monticoregrammar -> @(ASTFloatLiteral.java!2);
  link artifact monticoregrammar -> @(ASTIntLiteral.java!2);
  link artifact monticoregrammar -> @(ASTLiteral.java!2);
  link artifact monticoregrammar -> @(ASTLiteralsNode.java);
  link artifact monticoregrammar -> @(ASTLongLiteral.java!2);
  link artifact monticoregrammar -> @(ASTNullLiteral.java!2);
  link artifact monticoregrammar -> @(ASTNumericLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral.java!2);
  link artifact monticoregrammar -> @(ASTSignedNumericLiteral.java!2);
  link artifact monticoregrammar -> @(ASTStringLiteral.java!2);
  link artifact monticoregrammar -> @(LiteralsLiterals.java);
  link artifact monticoregrammar -> @(LiteralsMill.java);
  link artifact monticoregrammar -> @(LiteralsNodeFactory.java);
  link artifact monticoregrammar -> @(LiteralsPackage.java);
  link artifact monticoregrammar -> @(LiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!74);
  link artifact monticoregrammar -> @(LiteralsASTBooleanLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTCharLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTDoubleLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTFloatLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTIntLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTLiteralsNodeCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTLongLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTNullLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTNumericLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedDoubleLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedFloatLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedIntLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedLongLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTSignedNumericLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsASTStringLiteralCoCo.java);
  link artifact monticoregrammar -> @(LiteralsCoCoChecker.java);
  link artifact monticoregrammar -> @(LiteralsLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!74);
  link artifact monticoregrammar -> @(Literals2OD.java);
  link artifact monticoregrammar -> @(_symboltable!47);
  link artifact monticoregrammar -> @(LiteralsLanguage.java);
  link artifact monticoregrammar -> @(LiteralsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!74);
  link artifact monticoregrammar -> @(LiteralsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(LiteralsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(LiteralsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(LiteralsVisitor.java);
  link artifact monticoregrammar -> @(mcbasics!2);
  link artifact monticoregrammar -> @(_ast!81);
  link artifact monticoregrammar -> @(ASTConstantsMCBasics.java);
  link artifact monticoregrammar -> @(ASTMCBasicsNode.java);
  link artifact monticoregrammar -> @(MCBasicsLiterals.java);
  link artifact monticoregrammar -> @(MCBasicsMill.java);
  link artifact monticoregrammar -> @(MCBasicsNodeFactory.java);
  link artifact monticoregrammar -> @(MCBasicsPackage.java);
  link artifact monticoregrammar -> @(MCBasicsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!75);
  link artifact monticoregrammar -> @(MCBasicsASTMCBasicsNodeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicsCoCoChecker.java);
  link artifact monticoregrammar -> @(MCBasicsMCBasicsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!75);
  link artifact monticoregrammar -> @(MCBasics2OD.java);
  link artifact monticoregrammar -> @(_visitor!75);
  link artifact monticoregrammar -> @(MCBasicsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCBasicsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCBasicsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCBasicsVisitor.java);
  link artifact monticoregrammar -> @(mcbasictypes1!2);
  link artifact monticoregrammar -> @(_ast!82);
  link artifact monticoregrammar -> @(ASTBooleanType.java);
  link artifact monticoregrammar -> @(ASTByteType.java);
  link artifact monticoregrammar -> @(ASTCharType.java);
  link artifact monticoregrammar -> @(ASTConstantsMCBasicTypes1.java);
  link artifact monticoregrammar -> @(ASTDoubleType.java);
  link artifact monticoregrammar -> @(ASTFloatType.java);
  link artifact monticoregrammar -> @(ASTImportStatement.java!2);
  link artifact monticoregrammar -> @(ASTIntType.java);
  link artifact monticoregrammar -> @(ASTLongType.java);
  link artifact monticoregrammar -> @(ASTMCBasicTypes1Node.java);
  link artifact monticoregrammar -> @(ASTNameAsReferenceType.java);
  link artifact monticoregrammar -> @(ASTPrimitiveType.java!2);
  link artifact monticoregrammar -> @(ASTQualifiedName.java!3);
  link artifact monticoregrammar -> @(ASTReferenceType.java!2);
  link artifact monticoregrammar -> @(ASTReturnType.java!2);
  link artifact monticoregrammar -> @(ASTShortType.java);
  link artifact monticoregrammar -> @(ASTType.java!2);
  link artifact monticoregrammar -> @(ASTVoidType.java!2);
  link artifact monticoregrammar -> @(MCBasicTypes1Literals.java);
  link artifact monticoregrammar -> @(MCBasicTypes1Mill.java);
  link artifact monticoregrammar -> @(MCBasicTypes1NodeFactory.java);
  link artifact monticoregrammar -> @(MCBasicTypes1Package.java);
  link artifact monticoregrammar -> @(MCBasicTypes1PackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!76);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTBooleanTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTByteTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTCharTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTDoubleTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTFloatTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTImportStatementCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTIntTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTLongTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTMCBasicTypes1NodeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTNameAsReferenceTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTPrimitiveTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTQualifiedNameCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTReferenceTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTReturnTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTShortTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ASTVoidTypeCoCo.java);
  link artifact monticoregrammar -> @(MCBasicTypes1CoCoChecker.java);
  link artifact monticoregrammar -> @(MCBasicTypes1MCBasicTypes1PackageCoCo.java);
  link artifact monticoregrammar -> @(_od!76);
  link artifact monticoregrammar -> @(MCBasicTypes12OD.java);
  link artifact monticoregrammar -> @(_symboltable!48);
  link artifact monticoregrammar -> @(MCBasicTypes1Language.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!76);
  link artifact monticoregrammar -> @(MCBasicTypes1DelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCBasicTypes1InheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCBasicTypes1ParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCBasicTypes1Visitor.java);
  link artifact monticoregrammar -> @(mccommon!2);
  link artifact monticoregrammar -> @(_ast!83);
  link artifact monticoregrammar -> @(ASTConstantsMCCommon.java);
  link artifact monticoregrammar -> @(ASTMCCommonNode.java);
  link artifact monticoregrammar -> @(MCCommonLiterals.java);
  link artifact monticoregrammar -> @(MCCommonMill.java);
  link artifact monticoregrammar -> @(MCCommonNodeFactory.java);
  link artifact monticoregrammar -> @(MCCommonPackage.java);
  link artifact monticoregrammar -> @(MCCommonPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!77);
  link artifact monticoregrammar -> @(MCCommonASTMCCommonNodeCoCo.java);
  link artifact monticoregrammar -> @(MCCommonCoCoChecker.java);
  link artifact monticoregrammar -> @(MCCommonMCCommonPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!77);
  link artifact monticoregrammar -> @(MCCommon2OD.java);
  link artifact monticoregrammar -> @(_visitor!77);
  link artifact monticoregrammar -> @(MCCommonDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCCommonInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCCommonParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCCommonVisitor.java);
  link artifact monticoregrammar -> @(mcexpressions!2);
  link artifact monticoregrammar -> @(_ast!84);
  link artifact monticoregrammar -> @(ASTAddExpression.java);
  link artifact monticoregrammar -> @(ASTArguments.java!3);
  link artifact monticoregrammar -> @(ASTArrayExpression.java);
  link artifact monticoregrammar -> @(ASTAssignmentExpression.java!2);
  link artifact monticoregrammar -> @(ASTBinaryAndOpExpression.java);
  link artifact monticoregrammar -> @(ASTBinaryOrOpExpression.java!2);
  link artifact monticoregrammar -> @(ASTBinaryXorOpExpression.java);
  link artifact monticoregrammar -> @(ASTBooleanAndOpExpression.java!2);
  link artifact monticoregrammar -> @(ASTBooleanNotExpression.java!2);
  link artifact monticoregrammar -> @(ASTBooleanOrOpExpression.java!2);
  link artifact monticoregrammar -> @(ASTBracketExpression.java!2);
  link artifact monticoregrammar -> @(ASTCallExpression.java!2);
  link artifact monticoregrammar -> @(ASTClassExpression.java!2);
  link artifact monticoregrammar -> @(ASTComparisonExpression.java);
  link artifact monticoregrammar -> @(ASTConditionalExpression.java!2);
  link artifact monticoregrammar -> @(ASTConstantsMCExpressions.java);
  link artifact monticoregrammar -> @(ASTExpression.java!4);
  link artifact monticoregrammar -> @(ASTGenericInvocationExpression.java!2);
  link artifact monticoregrammar -> @(ASTGenericInvocationSuffix.java!2);
  link artifact monticoregrammar -> @(ASTIdentityExpression.java);
  link artifact monticoregrammar -> @(ASTInstanceofExpression.java!2);
  link artifact monticoregrammar -> @(ASTLiteralExpression.java!2);
  link artifact monticoregrammar -> @(ASTLogicalNotExpression.java!2);
  link artifact monticoregrammar -> @(ASTMCExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTMultExpression.java!2);
  link artifact monticoregrammar -> @(ASTNameExpression.java!2);
  link artifact monticoregrammar -> @(ASTPrefixExpression.java);
  link artifact monticoregrammar -> @(ASTPrimaryGenericInvocationExpression.java!2);
  link artifact monticoregrammar -> @(ASTPrimarySuperExpression.java!2);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression.java);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression.java);
  link artifact monticoregrammar -> @(ASTShiftExpression.java);
  link artifact monticoregrammar -> @(ASTSuffixExpression.java);
  link artifact monticoregrammar -> @(ASTSuperExpression.java!2);
  link artifact monticoregrammar -> @(ASTSuperSuffix.java!3);
  link artifact monticoregrammar -> @(ASTThisExpression.java);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.java!2);
  link artifact monticoregrammar -> @(MCExpressionsLiterals.java);
  link artifact monticoregrammar -> @(MCExpressionsMill.java);
  link artifact monticoregrammar -> @(MCExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(MCExpressionsPackage.java);
  link artifact monticoregrammar -> @(MCExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!78);
  link artifact monticoregrammar -> @(MCExpressionsASTAddExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTArgumentsCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTArrayExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTAssignmentExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryAndOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryOrOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBinaryXorOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanAndOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanNotExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBooleanOrOpExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTBracketExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTCallExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTClassExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTComparisonExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTConditionalExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTGenericInvocationExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTGenericInvocationSuffixCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTIdentityExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTInstanceofExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTLiteralExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTLogicalNotExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTMCExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTMultExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTNameExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTPrefixExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimaryGenericInvocationExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimarySuperExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTPrimaryThisExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTQualifiedNameExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTShiftExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTSuffixExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTSuperExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTSuperSuffixCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTThisExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsASTTypeCastExpressionCoCo.java);
  link artifact monticoregrammar -> @(MCExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(MCExpressionsMCExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!78);
  link artifact monticoregrammar -> @(MCExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!49);
  link artifact monticoregrammar -> @(MCExpressionsLanguage.java);
  link artifact monticoregrammar -> @(MCExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!78);
  link artifact monticoregrammar -> @(MCExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCExpressionsVisitor.java);
  link artifact monticoregrammar -> @(mchexnumbers!2);
  link artifact monticoregrammar -> @(_ast!85);
  link artifact monticoregrammar -> @(ASTConstantsMCHexNumbers.java);
  link artifact monticoregrammar -> @(ASTHexadecimal.java);
  link artifact monticoregrammar -> @(ASTHexInteger.java);
  link artifact monticoregrammar -> @(ASTMCHexNumbersNode.java);
  link artifact monticoregrammar -> @(MCHexNumbersLiterals.java);
  link artifact monticoregrammar -> @(MCHexNumbersMill.java);
  link artifact monticoregrammar -> @(MCHexNumbersNodeFactory.java);
  link artifact monticoregrammar -> @(MCHexNumbersPackage.java);
  link artifact monticoregrammar -> @(MCHexNumbersPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!79);
  link artifact monticoregrammar -> @(MCHexNumbersASTHexadecimalCoCo.java);
  link artifact monticoregrammar -> @(MCHexNumbersASTHexIntegerCoCo.java);
  link artifact monticoregrammar -> @(MCHexNumbersASTMCHexNumbersNodeCoCo.java);
  link artifact monticoregrammar -> @(MCHexNumbersCoCoChecker.java);
  link artifact monticoregrammar -> @(MCHexNumbersMCHexNumbersPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!79);
  link artifact monticoregrammar -> @(MCHexNumbers2OD.java);
  link artifact monticoregrammar -> @(_symboltable!50);
  link artifact monticoregrammar -> @(MCHexNumbersLanguage.java);
  link artifact monticoregrammar -> @(MCHexNumbersModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!79);
  link artifact monticoregrammar -> @(MCHexNumbersDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCHexNumbersInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCHexNumbersParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCHexNumbersVisitor.java);
  link artifact monticoregrammar -> @(mcliterals!3);
  link artifact monticoregrammar -> @(_ast!86);
  link artifact monticoregrammar -> @(ASTBooleanLiteral.java!3);
  link artifact monticoregrammar -> @(ASTCharLiteral.java!3);
  link artifact monticoregrammar -> @(ASTConstantsMCLiterals.java);
  link artifact monticoregrammar -> @(ASTDoubleLiteral.java!3);
  link artifact monticoregrammar -> @(ASTFloatLiteral.java!3);
  link artifact monticoregrammar -> @(ASTIntLiteral.java!3);
  link artifact monticoregrammar -> @(ASTLiteral.java!3);
  link artifact monticoregrammar -> @(ASTLongLiteral.java!3);
  link artifact monticoregrammar -> @(ASTMCLiteralsNode.java);
  link artifact monticoregrammar -> @(ASTNatLiteral.java);
  link artifact monticoregrammar -> @(ASTNullLiteral.java!3);
  link artifact monticoregrammar -> @(ASTNumericLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedDoubleLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedFloatLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedIntLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedLongLiteral.java!3);
  link artifact monticoregrammar -> @(ASTSignedNatLiteral.java);
  link artifact monticoregrammar -> @(ASTSignedNumericLiteral.java!3);
  link artifact monticoregrammar -> @(ASTStringLiteral.java!3);
  link artifact monticoregrammar -> @(MCLiteralsLiterals.java);
  link artifact monticoregrammar -> @(MCLiteralsMill.java);
  link artifact monticoregrammar -> @(MCLiteralsNodeFactory.java);
  link artifact monticoregrammar -> @(MCLiteralsPackage.java);
  link artifact monticoregrammar -> @(MCLiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!80);
  link artifact monticoregrammar -> @(MCLiteralsASTBooleanLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTCharLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTDoubleLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTFloatLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTIntLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTLongLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTMCLiteralsNodeCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTNatLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTNullLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTNumericLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedDoubleLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedFloatLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedIntLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedLongLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedNatLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTSignedNumericLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsASTStringLiteralCoCo.java);
  link artifact monticoregrammar -> @(MCLiteralsCoCoChecker.java);
  link artifact monticoregrammar -> @(MCLiteralsMCLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!80);
  link artifact monticoregrammar -> @(MCLiterals2OD.java);
  link artifact monticoregrammar -> @(_symboltable!51);
  link artifact monticoregrammar -> @(MCLiteralsLanguage.java);
  link artifact monticoregrammar -> @(MCLiteralsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!80);
  link artifact monticoregrammar -> @(MCLiteralsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCLiteralsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCLiteralsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCLiteralsVisitor.java);
  link artifact monticoregrammar -> @(mcnumbers!2);
  link artifact monticoregrammar -> @(_ast!87);
  link artifact monticoregrammar -> @(ASTConstantsMCNumbers.java);
  link artifact monticoregrammar -> @(ASTDecimal.java);
  link artifact monticoregrammar -> @(ASTInteger.java);
  link artifact monticoregrammar -> @(ASTMCNumbersNode.java);
  link artifact monticoregrammar -> @(ASTNumber.java);
  link artifact monticoregrammar -> @(MCNumbersLiterals.java);
  link artifact monticoregrammar -> @(MCNumbersMill.java);
  link artifact monticoregrammar -> @(MCNumbersNodeFactory.java);
  link artifact monticoregrammar -> @(MCNumbersPackage.java);
  link artifact monticoregrammar -> @(MCNumbersPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!81);
  link artifact monticoregrammar -> @(MCNumbersASTDecimalCoCo.java);
  link artifact monticoregrammar -> @(MCNumbersASTIntegerCoCo.java);
  link artifact monticoregrammar -> @(MCNumbersASTMCNumbersNodeCoCo.java);
  link artifact monticoregrammar -> @(MCNumbersASTNumberCoCo.java);
  link artifact monticoregrammar -> @(MCNumbersCoCoChecker.java);
  link artifact monticoregrammar -> @(MCNumbersMCNumbersPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!81);
  link artifact monticoregrammar -> @(MCNumbers2OD.java);
  link artifact monticoregrammar -> @(_symboltable!52);
  link artifact monticoregrammar -> @(MCNumbersLanguage.java);
  link artifact monticoregrammar -> @(MCNumbersModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!81);
  link artifact monticoregrammar -> @(MCNumbersDelegatorVisitor.java);
  link artifact monticoregrammar -> @(MCNumbersInheritanceVisitor.java);
  link artifact monticoregrammar -> @(MCNumbersParentAwareVisitor.java);
  link artifact monticoregrammar -> @(MCNumbersVisitor.java);
  link artifact monticoregrammar -> @(oclexpressions!2);
  link artifact monticoregrammar -> @(_ast!88);
  link artifact monticoregrammar -> @(ASTAnyExpr.java);
  link artifact monticoregrammar -> @(ASTConstantsOCLExpressions.java);
  link artifact monticoregrammar -> @(ASTEDeclarationExt.java);
  link artifact monticoregrammar -> @(ASTExistsExpr.java);
  link artifact monticoregrammar -> @(ASTForallExpr.java);
  link artifact monticoregrammar -> @(ASTIfThenElseExpr.java);
  link artifact monticoregrammar -> @(ASTImpliesExpression.java);
  link artifact monticoregrammar -> @(ASTInExpr.java);
  link artifact monticoregrammar -> @(ASTInstanceOfExpression.java);
  link artifact monticoregrammar -> @(ASTIterateExpr.java);
  link artifact monticoregrammar -> @(ASTLetDeclaration.java);
  link artifact monticoregrammar -> @(ASTLetinExpr.java);
  link artifact monticoregrammar -> @(ASTOCLArgumentQualification.java);
  link artifact monticoregrammar -> @(ASTOCLArrayQualification.java);
  link artifact monticoregrammar -> @(ASTOCLAtPreQualification.java);
  link artifact monticoregrammar -> @(ASTOCLCollectionItem.java);
  link artifact monticoregrammar -> @(ASTOCLComprehensionEnumerationStyle.java);
  link artifact monticoregrammar -> @(ASTOCLComprehensionExpr.java);
  link artifact monticoregrammar -> @(ASTOCLComprehensionExpressionStyle.java);
  link artifact monticoregrammar -> @(ASTOCLComprehensionItem.java);
  link artifact monticoregrammar -> @(ASTOCLComprehensionPrimary.java);
  link artifact monticoregrammar -> @(ASTOCLDefinedPrimary.java);
  link artifact monticoregrammar -> @(ASTOCLExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTOCLIsNewPrimary.java);
  link artifact monticoregrammar -> @(ASTOCLPrimary.java);
  link artifact monticoregrammar -> @(ASTOCLQualification.java);
  link artifact monticoregrammar -> @(ASTOCLQualifiedPrimary.java);
  link artifact monticoregrammar -> @(ASTOCLTransitivQualification.java);
  link artifact monticoregrammar -> @(ASTParenthizedExpression.java);
  link artifact monticoregrammar -> @(ASTSingleLogicalORExpr.java);
  link artifact monticoregrammar -> @(ASTTypeCastExpression.java!3);
  link artifact monticoregrammar -> @(ASTTypeIfExpr.java);
  link artifact monticoregrammar -> @(OCLExpressionsLiterals.java);
  link artifact monticoregrammar -> @(OCLExpressionsMill.java);
  link artifact monticoregrammar -> @(OCLExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(OCLExpressionsPackage.java);
  link artifact monticoregrammar -> @(OCLExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!82);
  link artifact monticoregrammar -> @(OCLExpressionsASTAnyExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTEDeclarationExtCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTExistsExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTForallExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTIfThenElseExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTImpliesExpressionCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTInExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTInstanceOfExpressionCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTIterateExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTLetDeclarationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTLetinExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLArgumentQualificationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLArrayQualificationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLAtPreQualificationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLCollectionItemCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionEnumerationStyleCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionExpressionStyleCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionItemCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLComprehensionPrimaryCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLDefinedPrimaryCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLIsNewPrimaryCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLPrimaryCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLQualificationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLQualifiedPrimaryCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTOCLTransitivQualificationCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTParenthizedExpressionCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTSingleLogicalORExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTTypeCastExpressionCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsASTTypeIfExprCoCo.java);
  link artifact monticoregrammar -> @(OCLExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(OCLExpressionsOCLExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!82);
  link artifact monticoregrammar -> @(OCLExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!53);
  link artifact monticoregrammar -> @(OCLExpressionsLanguage.java);
  link artifact monticoregrammar -> @(OCLExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!82);
  link artifact monticoregrammar -> @(OCLExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(OCLExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(OCLExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(OCLExpressionsVisitor.java);
  link artifact monticoregrammar -> @(setexpressions!2);
  link artifact monticoregrammar -> @(_ast!89);
  link artifact monticoregrammar -> @(ASTConstantsSetExpressions.java);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionInfix.java);
  link artifact monticoregrammar -> @(ASTIntersectionExpressionPrefix.java);
  link artifact monticoregrammar -> @(ASTIsInExpression.java);
  link artifact monticoregrammar -> @(ASTSetAndExpression.java);
  link artifact monticoregrammar -> @(ASTSetExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTSetInExpression.java);
  link artifact monticoregrammar -> @(ASTSetOrExpression.java);
  link artifact monticoregrammar -> @(ASTSetXOrExpression.java);
  link artifact monticoregrammar -> @(ASTUnionExpressionInfix.java);
  link artifact monticoregrammar -> @(ASTUnionExpressionPrefix.java);
  link artifact monticoregrammar -> @(SetExpressionsLiterals.java);
  link artifact monticoregrammar -> @(SetExpressionsMill.java);
  link artifact monticoregrammar -> @(SetExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(SetExpressionsPackage.java);
  link artifact monticoregrammar -> @(SetExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!83);
  link artifact monticoregrammar -> @(SetExpressionsASTIntersectionExpressionInfixCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTIntersectionExpressionPrefixCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTIsInExpressionCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTSetAndExpressionCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTSetExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTSetInExpressionCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTSetOrExpressionCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTSetXOrExpressionCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTUnionExpressionInfixCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsASTUnionExpressionPrefixCoCo.java);
  link artifact monticoregrammar -> @(SetExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(SetExpressionsSetExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!83);
  link artifact monticoregrammar -> @(SetExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!54);
  link artifact monticoregrammar -> @(SetExpressionsLanguage.java);
  link artifact monticoregrammar -> @(SetExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!83);
  link artifact monticoregrammar -> @(SetExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(SetExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(SetExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(SetExpressionsVisitor.java);
  link artifact monticoregrammar -> @(shiftexpressions!2);
  link artifact monticoregrammar -> @(_ast!90);
  link artifact monticoregrammar -> @(ASTArrayExpression.java!2);
  link artifact monticoregrammar -> @(ASTConstantsShiftExpressions.java);
  link artifact monticoregrammar -> @(ASTLeftShiftExpression.java);
  link artifact monticoregrammar -> @(ASTLogicalRightShiftExpression.java);
  link artifact monticoregrammar -> @(ASTPrimaryThisExpression.java!2);
  link artifact monticoregrammar -> @(ASTQualifiedNameExpression.java!2);
  link artifact monticoregrammar -> @(ASTRightShiftExpression.java);
  link artifact monticoregrammar -> @(ASTShiftExpression.java!2);
  link artifact monticoregrammar -> @(ASTShiftExpressionsNode.java);
  link artifact monticoregrammar -> @(ASTThisExpression.java!2);
  link artifact monticoregrammar -> @(ShiftExpressionsLiterals.java);
  link artifact monticoregrammar -> @(ShiftExpressionsMill.java);
  link artifact monticoregrammar -> @(ShiftExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(ShiftExpressionsPackage.java);
  link artifact monticoregrammar -> @(ShiftExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!84);
  link artifact monticoregrammar -> @(ShiftExpressionsASTArrayExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTLeftShiftExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTLogicalRightShiftExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTPrimaryThisExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTQualifiedNameExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTRightShiftExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTShiftExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTShiftExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsASTThisExpressionCoCo.java);
  link artifact monticoregrammar -> @(ShiftExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(ShiftExpressionsShiftExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!84);
  link artifact monticoregrammar -> @(ShiftExpressions2OD.java);
  link artifact monticoregrammar -> @(_symboltable!55);
  link artifact monticoregrammar -> @(ShiftExpressionsLanguage.java);
  link artifact monticoregrammar -> @(ShiftExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!84);
  link artifact monticoregrammar -> @(ShiftExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(ShiftExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(ShiftExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(ShiftExpressionsVisitor.java);
  link artifact monticoregrammar -> @(stringliterals!2);
  link artifact monticoregrammar -> @(_ast!91);
  link artifact monticoregrammar -> @(ASTCharLiteral.java!4);
  link artifact monticoregrammar -> @(ASTConstantsStringLiterals.java);
  link artifact monticoregrammar -> @(ASTStringLiteral.java!4);
  link artifact monticoregrammar -> @(ASTStringLiteralsNode.java);
  link artifact monticoregrammar -> @(StringLiteralsLiterals.java);
  link artifact monticoregrammar -> @(StringLiteralsMill.java);
  link artifact monticoregrammar -> @(StringLiteralsNodeFactory.java);
  link artifact monticoregrammar -> @(StringLiteralsPackage.java);
  link artifact monticoregrammar -> @(StringLiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!85);
  link artifact monticoregrammar -> @(StringLiteralsASTCharLiteralCoCo.java);
  link artifact monticoregrammar -> @(StringLiteralsASTStringLiteralCoCo.java);
  link artifact monticoregrammar -> @(StringLiteralsASTStringLiteralsNodeCoCo.java);
  link artifact monticoregrammar -> @(StringLiteralsCoCoChecker.java);
  link artifact monticoregrammar -> @(StringLiteralsStringLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!85);
  link artifact monticoregrammar -> @(StringLiterals2OD.java);
  link artifact monticoregrammar -> @(_symboltable!56);
  link artifact monticoregrammar -> @(StringLiteralsLanguage.java);
  link artifact monticoregrammar -> @(StringLiteralsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!85);
  link artifact monticoregrammar -> @(StringLiteralsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(StringLiteralsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(StringLiteralsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(StringLiteralsVisitor.java);
  link artifact monticoregrammar -> @(types!17);
  link artifact monticoregrammar -> @(types!18);
  link artifact monticoregrammar -> @(_ast!92);
  link artifact monticoregrammar -> @(ASTArrayType.java!2);
  link artifact monticoregrammar -> @(ASTComplexArrayType.java!2);
  link artifact monticoregrammar -> @(ASTComplexReferenceType.java!2);
  link artifact monticoregrammar -> @(ASTConstantsTypes.java);
  link artifact monticoregrammar -> @(ASTImportStatement.java!3);
  link artifact monticoregrammar -> @(ASTPrimitiveArrayType.java!2);
  link artifact monticoregrammar -> @(ASTPrimitiveType.java!3);
  link artifact monticoregrammar -> @(ASTQualifiedName.java!4);
  link artifact monticoregrammar -> @(ASTReferenceType.java!3);
  link artifact monticoregrammar -> @(ASTReturnType.java!3);
  link artifact monticoregrammar -> @(ASTSimpleReferenceType.java!2);
  link artifact monticoregrammar -> @(ASTType.java!3);
  link artifact monticoregrammar -> @(ASTTypeArgument.java!2);
  link artifact monticoregrammar -> @(ASTTypeArguments.java!2);
  link artifact monticoregrammar -> @(ASTTypeParameters.java!2);
  link artifact monticoregrammar -> @(ASTTypesNode.java);
  link artifact monticoregrammar -> @(ASTTypeVariableDeclaration.java!2);
  link artifact monticoregrammar -> @(ASTVoidType.java!3);
  link artifact monticoregrammar -> @(ASTWildcardType.java!2);
  link artifact monticoregrammar -> @(TypesLiterals.java);
  link artifact monticoregrammar -> @(TypesMill.java);
  link artifact monticoregrammar -> @(TypesNodeFactory.java);
  link artifact monticoregrammar -> @(TypesPackage.java);
  link artifact monticoregrammar -> @(TypesPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!86);
  link artifact monticoregrammar -> @(TypesASTArrayTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTComplexArrayTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTComplexReferenceTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTImportStatementCoCo.java);
  link artifact monticoregrammar -> @(TypesASTPrimitiveArrayTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTPrimitiveTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTQualifiedNameCoCo.java);
  link artifact monticoregrammar -> @(TypesASTReferenceTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTReturnTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTSimpleReferenceTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypeArgumentCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypeArgumentsCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypeParametersCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypesNodeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTTypeVariableDeclarationCoCo.java);
  link artifact monticoregrammar -> @(TypesASTVoidTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesASTWildcardTypeCoCo.java);
  link artifact monticoregrammar -> @(TypesCoCoChecker.java);
  link artifact monticoregrammar -> @(TypesTypesPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!86);
  link artifact monticoregrammar -> @(Types2OD.java);
  link artifact monticoregrammar -> @(_symboltable!57);
  link artifact monticoregrammar -> @(TypesLanguage.java);
  link artifact monticoregrammar -> @(TypesModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!86);
  link artifact monticoregrammar -> @(TypesDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TypesInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TypesParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TypesVisitor.java);
  link artifact monticoregrammar -> @(umlmodifier!2);
  link artifact monticoregrammar -> @(_ast!93);
  link artifact monticoregrammar -> @(ASTConstantsUMLModifier.java);
  link artifact monticoregrammar -> @(ASTModifier.java!4);
  link artifact monticoregrammar -> @(ASTUMLModifierNode.java);
  link artifact monticoregrammar -> @(UMLModifierLiterals.java);
  link artifact monticoregrammar -> @(UMLModifierMill.java);
  link artifact monticoregrammar -> @(UMLModifierNodeFactory.java);
  link artifact monticoregrammar -> @(UMLModifierPackage.java);
  link artifact monticoregrammar -> @(UMLModifierPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!87);
  link artifact monticoregrammar -> @(UMLModifierASTModifierCoCo.java);
  link artifact monticoregrammar -> @(UMLModifierASTUMLModifierNodeCoCo.java);
  link artifact monticoregrammar -> @(UMLModifierCoCoChecker.java);
  link artifact monticoregrammar -> @(UMLModifierUMLModifierPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!87);
  link artifact monticoregrammar -> @(UMLModifier2OD.java);
  link artifact monticoregrammar -> @(_symboltable!58);
  link artifact monticoregrammar -> @(UMLModifierLanguage.java);
  link artifact monticoregrammar -> @(UMLModifierModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!87);
  link artifact monticoregrammar -> @(UMLModifierDelegatorVisitor.java);
  link artifact monticoregrammar -> @(UMLModifierInheritanceVisitor.java);
  link artifact monticoregrammar -> @(UMLModifierParentAwareVisitor.java);
  link artifact monticoregrammar -> @(UMLModifierVisitor.java);
  link artifact monticoregrammar -> @(umlstereotype!2);
  link artifact monticoregrammar -> @(_ast!94);
  link artifact monticoregrammar -> @(ASTConstantsUMLStereotype.java);
  link artifact monticoregrammar -> @(ASTStereotype.java!4);
  link artifact monticoregrammar -> @(ASTStereoValue.java!3);
  link artifact monticoregrammar -> @(ASTUMLStereotypeNode.java);
  link artifact monticoregrammar -> @(UMLStereotypeLiterals.java);
  link artifact monticoregrammar -> @(UMLStereotypeMill.java);
  link artifact monticoregrammar -> @(UMLStereotypeNodeFactory.java);
  link artifact monticoregrammar -> @(UMLStereotypePackage.java);
  link artifact monticoregrammar -> @(UMLStereotypePackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!88);
  link artifact monticoregrammar -> @(UMLStereotypeASTStereotypeCoCo.java);
  link artifact monticoregrammar -> @(UMLStereotypeASTStereoValueCoCo.java);
  link artifact monticoregrammar -> @(UMLStereotypeASTUMLStereotypeNodeCoCo.java);
  link artifact monticoregrammar -> @(UMLStereotypeCoCoChecker.java);
  link artifact monticoregrammar -> @(UMLStereotypeUMLStereotypePackageCoCo.java);
  link artifact monticoregrammar -> @(_od!88);
  link artifact monticoregrammar -> @(UMLStereotype2OD.java);
  link artifact monticoregrammar -> @(_symboltable!59);
  link artifact monticoregrammar -> @(UMLStereotypeLanguage.java);
  link artifact monticoregrammar -> @(UMLStereotypeModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!88);
  link artifact monticoregrammar -> @(UMLStereotypeDelegatorVisitor.java);
  link artifact monticoregrammar -> @(UMLStereotypeInheritanceVisitor.java);
  link artifact monticoregrammar -> @(UMLStereotypeParentAwareVisitor.java);
  link artifact monticoregrammar -> @(UMLStereotypeVisitor.java);
  link artifact monticoregrammar -> @(reports!4);
  link artifact monticoregrammar -> @(de.monticore!3);
  link artifact monticoregrammar -> @(de.monticore!4);
  link artifact monticoregrammar -> @(de.monticore.common);
  link artifact monticoregrammar -> @(de.monticore!5);
  link artifact monticoregrammar -> @(de.monticore!6);
  link artifact monticoregrammar -> @(de.monticore!7);
  link artifact monticoregrammar -> @(de.monticore!8);
  link artifact monticoregrammar -> @(de.monticore.lexicals);
  link artifact monticoregrammar -> @(de.monticore.literals);
  link artifact monticoregrammar -> @(de.monticore!9);
  link artifact monticoregrammar -> @(de.monticore!10);
  link artifact monticoregrammar -> @(de.monticore!11);
  link artifact monticoregrammar -> @(de.monticore!12);
  link artifact monticoregrammar -> @(de.monticore!13);
  link artifact monticoregrammar -> @(de.monticore!14);
  link artifact monticoregrammar -> @(de.monticore!15);
  link artifact monticoregrammar -> @(de.monticore!16);
  link artifact monticoregrammar -> @(de.monticore!17);
  link artifact monticoregrammar -> @(de.monticore!18);
  link artifact monticoregrammar -> @(de.monticore!19);
  link artifact monticoregrammar -> @(de.monticore.types);
  link artifact monticoregrammar -> @(de.monticore!20);
  link artifact monticoregrammar -> @(de.monticore!21);
  link artifact monticoregrammar -> @(symboltable!17);
  link artifact monticoregrammar -> @(generated-test-sources!3);
  link artifact monticoregrammar -> @(monticore!32);
  link artifact monticoregrammar -> @(sourcecode!3);
  link artifact monticoregrammar -> @(de!30);
  link artifact monticoregrammar -> @(monticore!33);
  link artifact monticoregrammar -> @(common!13);
  link artifact monticoregrammar -> @(testcommon!2);
  link artifact monticoregrammar -> @(_ast!95);
  link artifact monticoregrammar -> @(ASTConstantsTestCommon.java!2);
  link artifact monticoregrammar -> @(ASTTestCommonNode.java!2);
  link artifact monticoregrammar -> @(TestCommonLiterals.java!2);
  link artifact monticoregrammar -> @(TestCommonMill.java!2);
  link artifact monticoregrammar -> @(TestCommonNodeFactory.java!2);
  link artifact monticoregrammar -> @(TestCommonPackage.java);
  link artifact monticoregrammar -> @(TestCommonPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!89);
  link artifact monticoregrammar -> @(TestCommonASTTestCommonNodeCoCo.java!2);
  link artifact monticoregrammar -> @(TestCommonCoCoChecker.java!2);
  link artifact monticoregrammar -> @(TestCommonTestCommonPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!89);
  link artifact monticoregrammar -> @(TestCommon2OD.java!2);
  link artifact monticoregrammar -> @(_parser!14);
  link artifact monticoregrammar -> @(TestCommonAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestCommonAntlrLexer.java);
  link artifact monticoregrammar -> @(TestCommonAntlrListener.java);
  link artifact monticoregrammar -> @(TestCommonAntlrParser.java);
  link artifact monticoregrammar -> @(TestCommonParser.java);
  link artifact monticoregrammar -> @(_visitor!89);
  link artifact monticoregrammar -> @(TestCommonDelegatorVisitor.java!2);
  link artifact monticoregrammar -> @(TestCommonInheritanceVisitor.java!2);
  link artifact monticoregrammar -> @(TestCommonParentAwareVisitor.java!2);
  link artifact monticoregrammar -> @(TestCommonVisitor.java!2);
  link artifact monticoregrammar -> @(literals!15);
  link artifact monticoregrammar -> @(testliterals!2);
  link artifact monticoregrammar -> @(_ast!96);
  link artifact monticoregrammar -> @(ASTConstantsTestLiterals.java!2);
  link artifact monticoregrammar -> @(ASTTestLiteralsNode.java!2);
  link artifact monticoregrammar -> @(TestLiteralsLiterals.java!2);
  link artifact monticoregrammar -> @(TestLiteralsMill.java!2);
  link artifact monticoregrammar -> @(TestLiteralsNodeFactory.java!2);
  link artifact monticoregrammar -> @(TestLiteralsPackage.java);
  link artifact monticoregrammar -> @(TestLiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!90);
  link artifact monticoregrammar -> @(TestLiteralsASTTestLiteralsNodeCoCo.java!2);
  link artifact monticoregrammar -> @(TestLiteralsCoCoChecker.java!2);
  link artifact monticoregrammar -> @(TestLiteralsTestLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!90);
  link artifact monticoregrammar -> @(TestLiterals2OD.java!2);
  link artifact monticoregrammar -> @(_parser!15);
  link artifact monticoregrammar -> @(TestLiteralsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestLiteralsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestLiteralsAntlrListener.java);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser.java);
  link artifact monticoregrammar -> @(TestLiteralsParser.java);
  link artifact monticoregrammar -> @(_visitor!90);
  link artifact monticoregrammar -> @(TestLiteralsDelegatorVisitor.java!2);
  link artifact monticoregrammar -> @(TestLiteralsInheritanceVisitor.java!2);
  link artifact monticoregrammar -> @(TestLiteralsParentAwareVisitor.java!2);
  link artifact monticoregrammar -> @(TestLiteralsVisitor.java!2);
  link artifact monticoregrammar -> @(testassignmentexpressions);
  link artifact monticoregrammar -> @(_ast!97);
  link artifact monticoregrammar -> @(ASTConstantsTestAssignmentExpressions.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!2);
  link artifact monticoregrammar -> @(ASTTestAssignmentExpressionsNode.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsMill.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!91);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!91);
  link artifact monticoregrammar -> @(TestAssignmentExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!16);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!60);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!91);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsVisitor.java);
  link artifact monticoregrammar -> @(testcardinality);
  link artifact monticoregrammar -> @(_ast!98);
  link artifact monticoregrammar -> @(ASTConstantsTestCardinality.java);
  link artifact monticoregrammar -> @(ASTTestCardinalityNode.java);
  link artifact monticoregrammar -> @(TestCardinalityLiterals.java);
  link artifact monticoregrammar -> @(TestCardinalityMill.java);
  link artifact monticoregrammar -> @(TestCardinalityNodeFactory.java);
  link artifact monticoregrammar -> @(TestCardinalityPackage.java);
  link artifact monticoregrammar -> @(TestCardinalityPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!92);
  link artifact monticoregrammar -> @(TestCardinalityASTTestCardinalityNodeCoCo.java);
  link artifact monticoregrammar -> @(TestCardinalityCoCoChecker.java);
  link artifact monticoregrammar -> @(TestCardinalityTestCardinalityPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!92);
  link artifact monticoregrammar -> @(TestCardinality2OD.java);
  link artifact monticoregrammar -> @(_parser!17);
  link artifact monticoregrammar -> @(TestCardinalityAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestCardinalityAntlrLexer.java);
  link artifact monticoregrammar -> @(TestCardinalityAntlrListener.java);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser.java);
  link artifact monticoregrammar -> @(TestCardinalityParser.java);
  link artifact monticoregrammar -> @(_visitor!92);
  link artifact monticoregrammar -> @(TestCardinalityDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestCardinalityInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestCardinalityParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestCardinalityVisitor.java);
  link artifact monticoregrammar -> @(testcommonexpressions);
  link artifact monticoregrammar -> @(_ast!99);
  link artifact monticoregrammar -> @(ASTConstantsTestCommonExpressions.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!3);
  link artifact monticoregrammar -> @(ASTTestCommonExpressionsNode.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsMill.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!93);
  link artifact monticoregrammar -> @(TestCommonExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsTestCommonExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!93);
  link artifact monticoregrammar -> @(TestCommonExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!18);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!61);
  link artifact monticoregrammar -> @(TestCommonExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!93);
  link artifact monticoregrammar -> @(TestCommonExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestCommonExpressionsVisitor.java);
  link artifact monticoregrammar -> @(testcompleteness);
  link artifact monticoregrammar -> @(_ast!100);
  link artifact monticoregrammar -> @(ASTCompletenessList.java);
  link artifact monticoregrammar -> @(ASTConstantsTestCompleteness.java);
  link artifact monticoregrammar -> @(ASTTestCompletenessNode.java);
  link artifact monticoregrammar -> @(TestCompletenessLiterals.java);
  link artifact monticoregrammar -> @(TestCompletenessMill.java);
  link artifact monticoregrammar -> @(TestCompletenessNodeFactory.java);
  link artifact monticoregrammar -> @(TestCompletenessPackage.java);
  link artifact monticoregrammar -> @(TestCompletenessPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!94);
  link artifact monticoregrammar -> @(TestCompletenessASTCompletenessListCoCo.java);
  link artifact monticoregrammar -> @(TestCompletenessASTTestCompletenessNodeCoCo.java);
  link artifact monticoregrammar -> @(TestCompletenessCoCoChecker.java);
  link artifact monticoregrammar -> @(TestCompletenessTestCompletenessPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!94);
  link artifact monticoregrammar -> @(TestCompleteness2OD.java);
  link artifact monticoregrammar -> @(_parser!19);
  link artifact monticoregrammar -> @(TestCompletenessAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestCompletenessAntlrLexer.java);
  link artifact monticoregrammar -> @(TestCompletenessAntlrListener.java);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser.java);
  link artifact monticoregrammar -> @(TestCompletenessParser.java);
  link artifact monticoregrammar -> @(_symboltable!62);
  link artifact monticoregrammar -> @(TestCompletenessLanguage.java);
  link artifact monticoregrammar -> @(TestCompletenessModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!94);
  link artifact monticoregrammar -> @(TestCompletenessDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestCompletenessInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestCompletenessParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestCompletenessVisitor.java);
  link artifact monticoregrammar -> @(testjavaclassexpressions);
  link artifact monticoregrammar -> @(_ast!101);
  link artifact monticoregrammar -> @(ASTConstantsTestJavaClassExpressions.java);
  link artifact monticoregrammar -> @(ASTELiteral.java);
  link artifact monticoregrammar -> @(ASTEReturnType.java);
  link artifact monticoregrammar -> @(ASTEType.java);
  link artifact monticoregrammar -> @(ASTETypeArguments.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!4);
  link artifact monticoregrammar -> @(ASTTestJavaClassExpressionsNode.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsMill.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!95);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTELiteralCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTEReturnTypeCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTETypeArgumentsCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTETypeCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!95);
  link artifact monticoregrammar -> @(TestJavaClassExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!20);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!63);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!95);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsVisitor.java);
  link artifact monticoregrammar -> @(testmcbasictypes1);
  link artifact monticoregrammar -> @(_ast!102);
  link artifact monticoregrammar -> @(ASTCharTypeList.java);
  link artifact monticoregrammar -> @(ASTConstantsTestMCBasicTypes1.java);
  link artifact monticoregrammar -> @(ASTImportStatementList.java);
  link artifact monticoregrammar -> @(ASTNameAsReferenceTypeList.java);
  link artifact monticoregrammar -> @(ASTPrimitiveTypeList.java);
  link artifact monticoregrammar -> @(ASTQualifiedNameList.java);
  link artifact monticoregrammar -> @(ASTReturnTypeList.java);
  link artifact monticoregrammar -> @(ASTTestMCBasicTypes1Node.java);
  link artifact monticoregrammar -> @(ASTTypeList.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Literals.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Mill.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1NodeFactory.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Package.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1PackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!96);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTCharTypeListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTImportStatementListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTPrimitiveTypeListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTQualifiedNameListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTReturnTypeListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTTypeListCoCo.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1CoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.java);
  link artifact monticoregrammar -> @(_od!96);
  link artifact monticoregrammar -> @(TestMCBasicTypes12OD.java);
  link artifact monticoregrammar -> @(_parser!21);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrListener.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Parser.java);
  link artifact monticoregrammar -> @(_symboltable!64);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Language.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!96);
  link artifact monticoregrammar -> @(TestMCBasicTypes1DelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1InheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Visitor.java);
  link artifact monticoregrammar -> @(testmccommon);
  link artifact monticoregrammar -> @(_ast!103);
  link artifact monticoregrammar -> @(ASTA.java!9);
  link artifact monticoregrammar -> @(ASTConstantsTestMCCommon.java);
  link artifact monticoregrammar -> @(ASTTestMCCommonNode.java);
  link artifact monticoregrammar -> @(TestMCCommonLiterals.java);
  link artifact monticoregrammar -> @(TestMCCommonMill.java);
  link artifact monticoregrammar -> @(TestMCCommonNodeFactory.java);
  link artifact monticoregrammar -> @(TestMCCommonPackage.java);
  link artifact monticoregrammar -> @(TestMCCommonPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!97);
  link artifact monticoregrammar -> @(TestMCCommonASTACoCo.java);
  link artifact monticoregrammar -> @(TestMCCommonASTTestMCCommonNodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCCommonCoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCCommonTestMCCommonPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!97);
  link artifact monticoregrammar -> @(TestMCCommon2OD.java);
  link artifact monticoregrammar -> @(_parser!22);
  link artifact monticoregrammar -> @(TestMCCommonAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCCommonAntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCCommonAntlrListener.java);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser.java);
  link artifact monticoregrammar -> @(TestMCCommonParser.java);
  link artifact monticoregrammar -> @(_symboltable!65);
  link artifact monticoregrammar -> @(TestMCCommonLanguage.java);
  link artifact monticoregrammar -> @(TestMCCommonModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!97);
  link artifact monticoregrammar -> @(TestMCCommonDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCCommonInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCCommonParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCCommonVisitor.java);
  link artifact monticoregrammar -> @(testmchexnumbers);
  link artifact monticoregrammar -> @(_ast!104);
  link artifact monticoregrammar -> @(ASTConstantsTestMCHexNumbers.java);
  link artifact monticoregrammar -> @(ASTTestMCHexNumbersNode.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersLiterals.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersMill.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersNodeFactory.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersPackage.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!98);
  link artifact monticoregrammar -> @(TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersCoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersTestMCHexNumbersPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!98);
  link artifact monticoregrammar -> @(TestMCHexNumbers2OD.java);
  link artifact monticoregrammar -> @(_parser!23);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrListener.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersParser.java);
  link artifact monticoregrammar -> @(_visitor!98);
  link artifact monticoregrammar -> @(TestMCHexNumbersDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCHexNumbersVisitor.java);
  link artifact monticoregrammar -> @(testmcliterals);
  link artifact monticoregrammar -> @(_ast!105);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiterals.java);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsNode.java);
  link artifact monticoregrammar -> @(TestMCLiteralsLiterals.java);
  link artifact monticoregrammar -> @(TestMCLiteralsMill.java);
  link artifact monticoregrammar -> @(TestMCLiteralsNodeFactory.java);
  link artifact monticoregrammar -> @(TestMCLiteralsPackage.java);
  link artifact monticoregrammar -> @(TestMCLiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!99);
  link artifact monticoregrammar -> @(TestMCLiteralsASTTestMCLiteralsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCLiteralsTestMCLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!99);
  link artifact monticoregrammar -> @(TestMCLiterals2OD.java);
  link artifact monticoregrammar -> @(_parser!24);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser.java);
  link artifact monticoregrammar -> @(TestMCLiteralsParser.java);
  link artifact monticoregrammar -> @(_visitor!99);
  link artifact monticoregrammar -> @(TestMCLiteralsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsVisitor.java);
  link artifact monticoregrammar -> @(testmcliteralsv2);
  link artifact monticoregrammar -> @(_ast!106);
  link artifact monticoregrammar -> @(ASTAnyToken.java);
  link artifact monticoregrammar -> @(ASTAnyTokenList.java);
  link artifact monticoregrammar -> @(ASTBTest.java);
  link artifact monticoregrammar -> @(ASTCharList.java);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiteralsV2.java);
  link artifact monticoregrammar -> @(ASTDecimalList.java);
  link artifact monticoregrammar -> @(ASTIntegerList.java);
  link artifact monticoregrammar -> @(ASTStringList.java);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsV2Node.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Literals.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Mill.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2NodeFactory.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Package.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2PackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!100);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTAnyTokenCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTAnyTokenListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTBTestCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTCharListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTDecimalListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTIntegerListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTStringListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2CoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.java);
  link artifact monticoregrammar -> @(_od!100);
  link artifact monticoregrammar -> @(TestMCLiteralsV22OD.java);
  link artifact monticoregrammar -> @(_parser!25);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Parser.java);
  link artifact monticoregrammar -> @(_symboltable!66);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Language.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!100);
  link artifact monticoregrammar -> @(TestMCLiteralsV2DelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2InheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Visitor.java);
  link artifact monticoregrammar -> @(testmcliteralsv3);
  link artifact monticoregrammar -> @(_ast!107);
  link artifact monticoregrammar -> @(ASTAnyToken.java!2);
  link artifact monticoregrammar -> @(ASTAnyTokenList.java!2);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiteralsV3.java);
  link artifact monticoregrammar -> @(ASTDecimalList.java!2);
  link artifact monticoregrammar -> @(ASTIntegerList.java!2);
  link artifact monticoregrammar -> @(ASTNumberList.java);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsV3Node.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Literals.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Mill.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3NodeFactory.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Package.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3PackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!101);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTAnyTokenCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTAnyTokenListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTDecimalListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTIntegerListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTNumberListCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3CoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.java);
  link artifact monticoregrammar -> @(_od!101);
  link artifact monticoregrammar -> @(TestMCLiteralsV32OD.java);
  link artifact monticoregrammar -> @(_parser!26);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrListener.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Parser.java);
  link artifact monticoregrammar -> @(_symboltable!67);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Language.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!101);
  link artifact monticoregrammar -> @(TestMCLiteralsV3DelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3InheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Visitor.java);
  link artifact monticoregrammar -> @(testmcnumbers);
  link artifact monticoregrammar -> @(_ast!108);
  link artifact monticoregrammar -> @(ASTConstantsTestMCNumbers.java);
  link artifact monticoregrammar -> @(ASTTestMCNumbersNode.java);
  link artifact monticoregrammar -> @(TestMCNumbersLiterals.java);
  link artifact monticoregrammar -> @(TestMCNumbersMill.java);
  link artifact monticoregrammar -> @(TestMCNumbersNodeFactory.java);
  link artifact monticoregrammar -> @(TestMCNumbersPackage.java);
  link artifact monticoregrammar -> @(TestMCNumbersPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!102);
  link artifact monticoregrammar -> @(TestMCNumbersASTTestMCNumbersNodeCoCo.java);
  link artifact monticoregrammar -> @(TestMCNumbersCoCoChecker.java);
  link artifact monticoregrammar -> @(TestMCNumbersTestMCNumbersPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!102);
  link artifact monticoregrammar -> @(TestMCNumbers2OD.java);
  link artifact monticoregrammar -> @(_parser!27);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrLexer.java);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrListener.java);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser.java);
  link artifact monticoregrammar -> @(TestMCNumbersParser.java);
  link artifact monticoregrammar -> @(_visitor!102);
  link artifact monticoregrammar -> @(TestMCNumbersDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestMCNumbersInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestMCNumbersParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestMCNumbersVisitor.java);
  link artifact monticoregrammar -> @(testoclexpressions);
  link artifact monticoregrammar -> @(_ast!109);
  link artifact monticoregrammar -> @(ASTConstantsTestOCLExpressions.java);
  link artifact monticoregrammar -> @(ASTEDeclaration.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!5);
  link artifact monticoregrammar -> @(ASTPrimaryNestedExpression.java);
  link artifact monticoregrammar -> @(ASTTestOCLExpressionsNode.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsMill.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!103);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTEDeclarationCoCo.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTPrimaryNestedExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsTestOCLExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!103);
  link artifact monticoregrammar -> @(TestOCLExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!28);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!68);
  link artifact monticoregrammar -> @(TestOCLExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!103);
  link artifact monticoregrammar -> @(TestOCLExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestOCLExpressionsVisitor.java);
  link artifact monticoregrammar -> @(testsetexpressions);
  link artifact monticoregrammar -> @(_ast!110);
  link artifact monticoregrammar -> @(ASTConstantsTestSetExpressions.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!6);
  link artifact monticoregrammar -> @(ASTTestSetExpressionsNode.java);
  link artifact monticoregrammar -> @(TestSetExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestSetExpressionsMill.java);
  link artifact monticoregrammar -> @(TestSetExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestSetExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestSetExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!104);
  link artifact monticoregrammar -> @(TestSetExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestSetExpressionsASTTestSetExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestSetExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestSetExpressionsTestSetExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!104);
  link artifact monticoregrammar -> @(TestSetExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!29);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestSetExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!69);
  link artifact monticoregrammar -> @(TestSetExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestSetExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!104);
  link artifact monticoregrammar -> @(TestSetExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestSetExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestSetExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestSetExpressionsVisitor.java);
  link artifact monticoregrammar -> @(testshiftexpressions);
  link artifact monticoregrammar -> @(_ast!111);
  link artifact monticoregrammar -> @(ASTConstantsTestShiftExpressions.java);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.java!7);
  link artifact monticoregrammar -> @(ASTTestShiftExpressionsNode.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsLiterals.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsMill.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsNodeFactory.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsPackage.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!105);
  link artifact monticoregrammar -> @(TestShiftExpressionsASTPrimaryExpressionCoCo.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsTestShiftExpressionsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!105);
  link artifact monticoregrammar -> @(TestShiftExpressions2OD.java);
  link artifact monticoregrammar -> @(_parser!30);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrListener.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsParser.java);
  link artifact monticoregrammar -> @(_symboltable!70);
  link artifact monticoregrammar -> @(TestShiftExpressionsLanguage.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!105);
  link artifact monticoregrammar -> @(TestShiftExpressionsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestShiftExpressionsVisitor.java);
  link artifact monticoregrammar -> @(teststringliterals);
  link artifact monticoregrammar -> @(_ast!112);
  link artifact monticoregrammar -> @(ASTCharLiteralList.java);
  link artifact monticoregrammar -> @(ASTConstantsTestStringLiterals.java);
  link artifact monticoregrammar -> @(ASTStringLiteralList.java);
  link artifact monticoregrammar -> @(ASTTestStringLiteralsNode.java);
  link artifact monticoregrammar -> @(TestStringLiteralsLiterals.java);
  link artifact monticoregrammar -> @(TestStringLiteralsMill.java);
  link artifact monticoregrammar -> @(TestStringLiteralsNodeFactory.java);
  link artifact monticoregrammar -> @(TestStringLiteralsPackage.java);
  link artifact monticoregrammar -> @(TestStringLiteralsPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!106);
  link artifact monticoregrammar -> @(TestStringLiteralsASTCharLiteralListCoCo.java);
  link artifact monticoregrammar -> @(TestStringLiteralsASTStringLiteralListCoCo.java);
  link artifact monticoregrammar -> @(TestStringLiteralsASTTestStringLiteralsNodeCoCo.java);
  link artifact monticoregrammar -> @(TestStringLiteralsCoCoChecker.java);
  link artifact monticoregrammar -> @(TestStringLiteralsTestStringLiteralsPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!106);
  link artifact monticoregrammar -> @(TestStringLiterals2OD.java);
  link artifact monticoregrammar -> @(_parser!31);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrLexer.java);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrListener.java);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser.java);
  link artifact monticoregrammar -> @(TestStringLiteralsParser.java);
  link artifact monticoregrammar -> @(_symboltable!71);
  link artifact monticoregrammar -> @(TestStringLiteralsLanguage.java);
  link artifact monticoregrammar -> @(TestStringLiteralsModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!106);
  link artifact monticoregrammar -> @(TestStringLiteralsDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestStringLiteralsInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestStringLiteralsParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestStringLiteralsVisitor.java);
  link artifact monticoregrammar -> @(testumlmodifier);
  link artifact monticoregrammar -> @(_ast!113);
  link artifact monticoregrammar -> @(ASTA.java!10);
  link artifact monticoregrammar -> @(ASTConstantsTestUMLModifier.java);
  link artifact monticoregrammar -> @(ASTTestUMLModifierNode.java);
  link artifact monticoregrammar -> @(TestUMLModifierLiterals.java);
  link artifact monticoregrammar -> @(TestUMLModifierMill.java);
  link artifact monticoregrammar -> @(TestUMLModifierNodeFactory.java);
  link artifact monticoregrammar -> @(TestUMLModifierPackage.java);
  link artifact monticoregrammar -> @(TestUMLModifierPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!107);
  link artifact monticoregrammar -> @(TestUMLModifierASTACoCo.java);
  link artifact monticoregrammar -> @(TestUMLModifierASTTestUMLModifierNodeCoCo.java);
  link artifact monticoregrammar -> @(TestUMLModifierCoCoChecker.java);
  link artifact monticoregrammar -> @(TestUMLModifierTestUMLModifierPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!107);
  link artifact monticoregrammar -> @(TestUMLModifier2OD.java);
  link artifact monticoregrammar -> @(_parser!32);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrLexer.java);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrListener.java);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser.java);
  link artifact monticoregrammar -> @(TestUMLModifierParser.java);
  link artifact monticoregrammar -> @(_symboltable!72);
  link artifact monticoregrammar -> @(TestUMLModifierLanguage.java);
  link artifact monticoregrammar -> @(TestUMLModifierModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!107);
  link artifact monticoregrammar -> @(TestUMLModifierDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestUMLModifierInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestUMLModifierParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestUMLModifierVisitor.java);
  link artifact monticoregrammar -> @(testumlstereotype);
  link artifact monticoregrammar -> @(_ast!114);
  link artifact monticoregrammar -> @(ASTConstantsTestUMLStereotype.java);
  link artifact monticoregrammar -> @(ASTStereotypeList.java);
  link artifact monticoregrammar -> @(ASTStereoValueList.java);
  link artifact monticoregrammar -> @(ASTTestUMLStereotypeNode.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeLiterals.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeMill.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeNodeFactory.java);
  link artifact monticoregrammar -> @(TestUMLStereotypePackage.java);
  link artifact monticoregrammar -> @(TestUMLStereotypePackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!108);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTStereotypeListCoCo.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTStereoValueListCoCo.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeCoCoChecker.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeTestUMLStereotypePackageCoCo.java);
  link artifact monticoregrammar -> @(_od!108);
  link artifact monticoregrammar -> @(TestUMLStereotype2OD.java);
  link artifact monticoregrammar -> @(_parser!33);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrLexer.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrListener.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeParser.java);
  link artifact monticoregrammar -> @(_symboltable!73);
  link artifact monticoregrammar -> @(TestUMLStereotypeLanguage.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeModelLoader.java);
  link artifact monticoregrammar -> @(_visitor!108);
  link artifact monticoregrammar -> @(TestUMLStereotypeDelegatorVisitor.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeInheritanceVisitor.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeParentAwareVisitor.java);
  link artifact monticoregrammar -> @(TestUMLStereotypeVisitor.java);
  link artifact monticoregrammar -> @(types!19);
  link artifact monticoregrammar -> @(testtypes!2);
  link artifact monticoregrammar -> @(_ast!115);
  link artifact monticoregrammar -> @(ASTConstantsTestTypes.java!2);
  link artifact monticoregrammar -> @(ASTTestTypesNode.java!2);
  link artifact monticoregrammar -> @(TestTypesLiterals.java!2);
  link artifact monticoregrammar -> @(TestTypesMill.java!2);
  link artifact monticoregrammar -> @(TestTypesNodeFactory.java!2);
  link artifact monticoregrammar -> @(TestTypesPackage.java);
  link artifact monticoregrammar -> @(TestTypesPackageImpl.java);
  link artifact monticoregrammar -> @(_cocos!109);
  link artifact monticoregrammar -> @(TestTypesASTTestTypesNodeCoCo.java!2);
  link artifact monticoregrammar -> @(TestTypesCoCoChecker.java!2);
  link artifact monticoregrammar -> @(TestTypesTestTypesPackageCoCo.java);
  link artifact monticoregrammar -> @(_od!109);
  link artifact monticoregrammar -> @(TestTypes2OD.java!2);
  link artifact monticoregrammar -> @(_parser!34);
  link artifact monticoregrammar -> @(TestTypesAntlrBaseListener.java);
  link artifact monticoregrammar -> @(TestTypesAntlrLexer.java);
  link artifact monticoregrammar -> @(TestTypesAntlrListener.java);
  link artifact monticoregrammar -> @(TestTypesAntlrParser.java);
  link artifact monticoregrammar -> @(TestTypesParser.java);
  link artifact monticoregrammar -> @(_visitor!109);
  link artifact monticoregrammar -> @(TestTypesDelegatorVisitor.java!2);
  link artifact monticoregrammar -> @(TestTypesInheritanceVisitor.java!2);
  link artifact monticoregrammar -> @(TestTypesParentAwareVisitor.java!2);
  link artifact monticoregrammar -> @(TestTypesVisitor.java!2);
  link artifact monticoregrammar -> @(reports!5);
  link artifact monticoregrammar -> @(de.monticore.common!2);
  link artifact monticoregrammar -> @(de.monticore.literals!2);
  link artifact monticoregrammar -> @(de.monticore!22);
  link artifact monticoregrammar -> @(de.monticore!23);
  link artifact monticoregrammar -> @(de.monticore!24);
  link artifact monticoregrammar -> @(de.monticore!25);
  link artifact monticoregrammar -> @(de.monticore!26);
  link artifact monticoregrammar -> @(de.monticore!27);
  link artifact monticoregrammar -> @(de.monticore!28);
  link artifact monticoregrammar -> @(de.monticore!29);
  link artifact monticoregrammar -> @(de.monticore!30);
  link artifact monticoregrammar -> @(de.monticore!31);
  link artifact monticoregrammar -> @(de.monticore!32);
  link artifact monticoregrammar -> @(de.monticore!33);
  link artifact monticoregrammar -> @(de.monticore!34);
  link artifact monticoregrammar -> @(de.monticore!35);
  link artifact monticoregrammar -> @(de.monticore!36);
  link artifact monticoregrammar -> @(de.monticore!37);
  link artifact monticoregrammar -> @(de.monticore!38);
  link artifact monticoregrammar -> @(de.monticore!39);
  link artifact monticoregrammar -> @(de.monticore.types!2);
  link artifact monticoregrammar -> @(test-annotations!3);
  link artifact monticoregrammar -> @(maven-archiver!4);
  link artifact monticoregrammar -> @(maven-status!4);
  link artifact monticoregrammar -> @(maven-compiler-plugin!4);
  link artifact monticoregrammar -> @(compile!4);
  link artifact monticoregrammar -> @(default-compile!4);
  link artifact monticoregrammar -> @(testCompile!3);
  link artifact monticoregrammar -> @(default-testCompile!3);
  link artifact monticoregrammar -> @(monticore-grammar-4.5.5.1-grammars.jar);
  link artifact monticoregrammar -> @(monticore-grammar-4.5.5.1-sources.jar);
  link artifact monticoregrammar -> @(monticore-grammar-4.5.5.1.jar);
  link artifact monticoregrammar -> @(surefire-reports!3);
  link artifact monticoregrammar -> @(test-classes!3);
  link artifact monticoregrammar -> @(de!31);
  link artifact monticoregrammar -> @(monticore!34);
  link artifact monticoregrammar -> @(common!14);
  link artifact monticoregrammar -> @(StereotypeTest.class);
  link artifact monticoregrammar -> @(testcommon!3);
  link artifact monticoregrammar -> @(_ast!116);
  link artifact monticoregrammar -> @(ASTConstantsTestCommon.class!2);
  link artifact monticoregrammar -> @(ASTTestCommonNode.class!2);
  link artifact monticoregrammar -> @(TestCommonLiterals.class!2);
  link artifact monticoregrammar -> @(TestCommonMill.class!2);
  link artifact monticoregrammar -> @(TestCommonNodeFactory.class!2);
  link artifact monticoregrammar -> @(TestCommonPackage$Literals.class);
  link artifact monticoregrammar -> @(TestCommonPackage.class);
  link artifact monticoregrammar -> @(TestCommonPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!110);
  link artifact monticoregrammar -> @(TestCommonASTTestCommonNodeCoCo.class!2);
  link artifact monticoregrammar -> @(TestCommonCoCoChecker.class!2);
  link artifact monticoregrammar -> @(TestCommonTestCommonPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!110);
  link artifact monticoregrammar -> @(TestCommon2OD.class!2);
  link artifact monticoregrammar -> @(_parser!35);
  link artifact monticoregrammar -> @(TestCommonAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestCommonAntlrLexer.class);
  link artifact monticoregrammar -> @(TestCommonAntlrListener.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$CardinalityContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Cardinality_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$CompletenessContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Completeness_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ComplexArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ComplexArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ComplexReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ComplexReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$FloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ImportStatementContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ImportStatement_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$IntLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$LiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Literal_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$LongLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ModifierContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Modifier_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$NullLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$NumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$PrimitiveArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$PrimitiveArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$PrimitiveTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$PrimitiveType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$QualifiedNameContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$QualifiedName_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ReturnTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$ReturnType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SimpleReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$SimpleReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$StereotypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Stereotype_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$StereoValueContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$StereoValue_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeArgumentContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeArgumentsContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeArguments_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeArgument_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeParametersContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeParameters_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeVariableDeclarationContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$TypeVariableDeclaration_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$Type_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$VoidTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$VoidType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$WildcardTypeContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser$WildcardType_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonAntlrParser.class);
  link artifact monticoregrammar -> @(TestCommonParser.class);
  link artifact monticoregrammar -> @(_visitor!110);
  link artifact monticoregrammar -> @(TestCommonDelegatorVisitor.class!2);
  link artifact monticoregrammar -> @(TestCommonInheritanceVisitor.class!2);
  link artifact monticoregrammar -> @(TestCommonParentAwareVisitor.class!2);
  link artifact monticoregrammar -> @(TestCommonVisitor.class!2);
  link artifact monticoregrammar -> @(literals!16);
  link artifact monticoregrammar -> @(CharLiteralsTest.class);
  link artifact monticoregrammar -> @(DoubleLiteralsTest.class);
  link artifact monticoregrammar -> @(FloatLiteralsTest.class);
  link artifact monticoregrammar -> @(IntLiteralsTest.class);
  link artifact monticoregrammar -> @(LiteralsTestHelper.class);
  link artifact monticoregrammar -> @(LongLiteralsTest.class);
  link artifact monticoregrammar -> @(NullAndBooleanLiteralsTest.class);
  link artifact monticoregrammar -> @(SignedDoubleLiteralsTest.class);
  link artifact monticoregrammar -> @(SignedFloatLiteralsTest.class);
  link artifact monticoregrammar -> @(SignedIntLiteralsTest.class);
  link artifact monticoregrammar -> @(SignedLongLiteralsTest.class);
  link artifact monticoregrammar -> @(StringLiteralsTest.class);
  link artifact monticoregrammar -> @(testliterals!3);
  link artifact monticoregrammar -> @(_ast!117);
  link artifact monticoregrammar -> @(ASTConstantsTestLiterals.class!2);
  link artifact monticoregrammar -> @(ASTTestLiteralsNode.class!2);
  link artifact monticoregrammar -> @(TestLiteralsLiterals.class!2);
  link artifact monticoregrammar -> @(TestLiteralsMill.class!2);
  link artifact monticoregrammar -> @(TestLiteralsNodeFactory.class!2);
  link artifact monticoregrammar -> @(TestLiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestLiteralsPackage.class);
  link artifact monticoregrammar -> @(TestLiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!111);
  link artifact monticoregrammar -> @(TestLiteralsASTTestLiteralsNodeCoCo.class!2);
  link artifact monticoregrammar -> @(TestLiteralsCoCoChecker.class!2);
  link artifact monticoregrammar -> @(TestLiteralsTestLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!111);
  link artifact monticoregrammar -> @(TestLiterals2OD.class!2);
  link artifact monticoregrammar -> @(_parser!36);
  link artifact monticoregrammar -> @(TestLiteralsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrListener.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$FloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$IntLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$LiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$Literal_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$LongLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$NullLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$NumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestLiteralsAntlrParser.class);
  link artifact monticoregrammar -> @(TestLiteralsParser.class);
  link artifact monticoregrammar -> @(_visitor!111);
  link artifact monticoregrammar -> @(TestLiteralsDelegatorVisitor.class!2);
  link artifact monticoregrammar -> @(TestLiteralsInheritanceVisitor.class!2);
  link artifact monticoregrammar -> @(TestLiteralsParentAwareVisitor.class!2);
  link artifact monticoregrammar -> @(TestLiteralsVisitor.class!2);
  link artifact monticoregrammar -> @(MCBasicTypes1Test.class);
  link artifact monticoregrammar -> @(MCCommonUnitTest.class);
  link artifact monticoregrammar -> @(mcliterals!4);
  link artifact monticoregrammar -> @(CharLiteralsTest.class!2);
  link artifact monticoregrammar -> @(DoubleLiteralsTest.class!2);
  link artifact monticoregrammar -> @(FloatLiteralsTest.class!2);
  link artifact monticoregrammar -> @(IntLiteralsTest.class!2);
  link artifact monticoregrammar -> @(LongLiteralsTest.class!2);
  link artifact monticoregrammar -> @(MCHexNumberUnitTests.class);
  link artifact monticoregrammar -> @(MCLiteralsTestHelper.class);
  link artifact monticoregrammar -> @(MCLiteralsUnitTest.class);
  link artifact monticoregrammar -> @(NatLiteralsTest.class);
  link artifact monticoregrammar -> @(NullAndBooleanLiteralsTest.class!2);
  link artifact monticoregrammar -> @(SignedDoubleLiteralsTest.class!2);
  link artifact monticoregrammar -> @(SignedFloatLiteralsTest.class!2);
  link artifact monticoregrammar -> @(SignedIntLiteralsTest.class!2);
  link artifact monticoregrammar -> @(SignedLongLiteralsTest.class!2);
  link artifact monticoregrammar -> @(StringLiteralsTest.class!2);
  link artifact monticoregrammar -> @(prettyprint!18);
  link artifact monticoregrammar -> @(AssignmentExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(AssignmentExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(CardinalityPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(CommonExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(CommonExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(CompletenessPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(JavaClassExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(MCBasicTypes1PrettyPrinterTest.class);
  link artifact monticoregrammar -> @(MCHexNumbersPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(MCNumbersPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(OCLExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(OCLExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(SetExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(SetExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPrettyPrinterTest$PrimaryPrettyPrinter.class);
  link artifact monticoregrammar -> @(ShiftExpressionsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(StringLiteralsPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(UMLModifierPrettyPrinterTest.class);
  link artifact monticoregrammar -> @(UMLStereotypePrettyPrinterTest.class);
  link artifact monticoregrammar -> @(testassignmentexpressions!2);
  link artifact monticoregrammar -> @(_ast!118);
  link artifact monticoregrammar -> @(ASTConstantsTestAssignmentExpressions.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!2);
  link artifact monticoregrammar -> @(ASTTestAssignmentExpressionsNode.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsMill.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!112);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsASTTestAssignmentExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsTestAssignmentExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!112);
  link artifact monticoregrammar -> @(TestAssignmentExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!37);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$AssignmentExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$AssignmentExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$DecPrefixExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$DecPrefixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$IncPrefixExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$IncPrefixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$MinusPrefixExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$MinusPrefixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$PlusPrefixExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$PlusPrefixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!74);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!112);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestAssignmentExpressionsVisitor.class);
  link artifact monticoregrammar -> @(testcardinality!2);
  link artifact monticoregrammar -> @(_ast!119);
  link artifact monticoregrammar -> @(ASTConstantsTestCardinality.class);
  link artifact monticoregrammar -> @(ASTTestCardinalityNode.class);
  link artifact monticoregrammar -> @(TestCardinalityLiterals.class);
  link artifact monticoregrammar -> @(TestCardinalityMill.class);
  link artifact monticoregrammar -> @(TestCardinalityNodeFactory.class);
  link artifact monticoregrammar -> @(TestCardinalityPackage$Literals.class);
  link artifact monticoregrammar -> @(TestCardinalityPackage.class);
  link artifact monticoregrammar -> @(TestCardinalityPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!113);
  link artifact monticoregrammar -> @(TestCardinalityASTTestCardinalityNodeCoCo.class);
  link artifact monticoregrammar -> @(TestCardinalityCoCoChecker.class);
  link artifact monticoregrammar -> @(TestCardinalityTestCardinalityPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!113);
  link artifact monticoregrammar -> @(TestCardinality2OD.class);
  link artifact monticoregrammar -> @(_parser!38);
  link artifact monticoregrammar -> @(TestCardinalityAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrLexer.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrListener.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$CardinalityContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$Cardinality_eofContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestCardinalityAntlrParser.class);
  link artifact monticoregrammar -> @(TestCardinalityParser.class);
  link artifact monticoregrammar -> @(_visitor!113);
  link artifact monticoregrammar -> @(TestCardinalityDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestCardinalityInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestCardinalityParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestCardinalityVisitor.class);
  link artifact monticoregrammar -> @(testcommonexpressions!2);
  link artifact monticoregrammar -> @(_ast!120);
  link artifact monticoregrammar -> @(ASTConstantsTestCommonExpressions.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!2);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!3);
  link artifact monticoregrammar -> @(ASTTestCommonExpressionsNode.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsMill.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!114);
  link artifact monticoregrammar -> @(TestCommonExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsASTTestCommonExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsTestCommonExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!114);
  link artifact monticoregrammar -> @(TestCommonExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!39);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$ArgumentsContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$Arguments_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$BooleanNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$BooleanNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$BracketExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$BracketExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$InfixExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$InfixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$LogicalNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$LogicalNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!75);
  link artifact monticoregrammar -> @(TestCommonExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!114);
  link artifact monticoregrammar -> @(TestCommonExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestCommonExpressionsVisitor.class);
  link artifact monticoregrammar -> @(testcompleteness!2);
  link artifact monticoregrammar -> @(_ast!121);
  link artifact monticoregrammar -> @(ASTCompletenessList$CompletenessListBuilder.class);
  link artifact monticoregrammar -> @(ASTCompletenessList.class);
  link artifact monticoregrammar -> @(ASTConstantsTestCompleteness.class);
  link artifact monticoregrammar -> @(ASTTestCompletenessNode.class);
  link artifact monticoregrammar -> @(TestCompletenessLiterals.class);
  link artifact monticoregrammar -> @(TestCompletenessMill.class);
  link artifact monticoregrammar -> @(TestCompletenessNodeFactory.class);
  link artifact monticoregrammar -> @(TestCompletenessPackage$Literals.class);
  link artifact monticoregrammar -> @(TestCompletenessPackage.class);
  link artifact monticoregrammar -> @(TestCompletenessPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!115);
  link artifact monticoregrammar -> @(TestCompletenessASTCompletenessListCoCo.class);
  link artifact monticoregrammar -> @(TestCompletenessASTTestCompletenessNodeCoCo.class);
  link artifact monticoregrammar -> @(TestCompletenessCoCoChecker.class);
  link artifact monticoregrammar -> @(TestCompletenessTestCompletenessPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!115);
  link artifact monticoregrammar -> @(TestCompleteness2OD.class);
  link artifact monticoregrammar -> @(_parser!40);
  link artifact monticoregrammar -> @(TestCompletenessAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrLexer.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrListener.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser$CompletenessContext.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser$CompletenessListContext.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser$CompletenessList_eofContext.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser$Completeness_eofContext.class);
  link artifact monticoregrammar -> @(TestCompletenessAntlrParser.class);
  link artifact monticoregrammar -> @(TestCompletenessParser.class);
  link artifact monticoregrammar -> @(_symboltable!76);
  link artifact monticoregrammar -> @(TestCompletenessLanguage.class);
  link artifact monticoregrammar -> @(TestCompletenessModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!115);
  link artifact monticoregrammar -> @(TestCompletenessDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestCompletenessInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestCompletenessParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestCompletenessVisitor.class);
  link artifact monticoregrammar -> @(testjavaclassexpressions!2);
  link artifact monticoregrammar -> @(_ast!122);
  link artifact monticoregrammar -> @(ASTConstantsTestJavaClassExpressions.class);
  link artifact monticoregrammar -> @(ASTELiteral$ELiteralBuilder.class);
  link artifact monticoregrammar -> @(ASTELiteral.class);
  link artifact monticoregrammar -> @(ASTEReturnType$EReturnTypeBuilder.class);
  link artifact monticoregrammar -> @(ASTEReturnType.class);
  link artifact monticoregrammar -> @(ASTEType$ETypeBuilder.class);
  link artifact monticoregrammar -> @(ASTEType.class);
  link artifact monticoregrammar -> @(ASTETypeArguments$ETypeArgumentsBuilder.class);
  link artifact monticoregrammar -> @(ASTETypeArguments.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!3);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!4);
  link artifact monticoregrammar -> @(ASTTestJavaClassExpressionsNode.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsMill.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!116);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTELiteralCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTEReturnTypeCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTETypeArgumentsCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTETypeCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsASTTestJavaClassExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsTestJavaClassExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!116);
  link artifact monticoregrammar -> @(TestJavaClassExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!41);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ArgumentsContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$Arguments_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$BooleanNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$BooleanNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$BracketExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$BracketExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ClassExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ClassExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ELiteralContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ELiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$EReturnTypeContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$EReturnType_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ETypeArgumentsContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ETypeArguments_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ETypeContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$EType_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$GenericInvocationSuffixContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$GenericInvocationSuffix_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$InfixExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$InfixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$LiteralExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$LiteralExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$LogicalNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$LogicalNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$NameExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$NameExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimarySuperExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$PrimarySuperExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$SuperSuffixContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$SuperSuffix_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$TypeCastExpressionContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser$TypeCastExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!77);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!116);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestJavaClassExpressionsVisitor.class);
  link artifact monticoregrammar -> @(testmcbasictypes1!2);
  link artifact monticoregrammar -> @(_ast!123);
  link artifact monticoregrammar -> @(ASTCharTypeList$CharTypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTCharTypeList.class);
  link artifact monticoregrammar -> @(ASTConstantsTestMCBasicTypes1.class);
  link artifact monticoregrammar -> @(ASTImportStatementList$ImportStatementListBuilder.class);
  link artifact monticoregrammar -> @(ASTImportStatementList.class);
  link artifact monticoregrammar -> @(ASTNameAsReferenceTypeList$NameAsReferenceTypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTNameAsReferenceTypeList.class);
  link artifact monticoregrammar -> @(ASTPrimitiveTypeList$PrimitiveTypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimitiveTypeList.class);
  link artifact monticoregrammar -> @(ASTQualifiedNameList$QualifiedNameListBuilder.class);
  link artifact monticoregrammar -> @(ASTQualifiedNameList.class);
  link artifact monticoregrammar -> @(ASTReturnTypeList$ReturnTypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTReturnTypeList.class);
  link artifact monticoregrammar -> @(ASTTestMCBasicTypes1Node.class);
  link artifact monticoregrammar -> @(ASTTypeList$TypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTTypeList.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Literals.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Mill.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1NodeFactory.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Package$Literals.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Package.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1PackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!117);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTCharTypeListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTImportStatementListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTNameAsReferenceTypeListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTPrimitiveTypeListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTQualifiedNameListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTReturnTypeListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTTestMCBasicTypes1NodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ASTTypeListCoCo.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1CoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1TestMCBasicTypes1PackageCoCo.class);
  link artifact monticoregrammar -> @(_od!117);
  link artifact monticoregrammar -> @(TestMCBasicTypes12OD.class);
  link artifact monticoregrammar -> @(_parser!42);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrListener.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$BooleanTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$BooleanType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ByteTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ByteType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$CharTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$CharTypeListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$CharTypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$CharType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$DoubleTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$DoubleType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$FloatTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$FloatType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ImportStatementContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ImportStatementListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ImportStatementList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ImportStatement_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$IntTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$IntType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$LongTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$LongType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$NameAsReferenceTypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$NameAsReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$PrimitiveTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$PrimitiveTypeListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$PrimitiveTypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$PrimitiveType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$QualifiedNameContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$QualifiedNameListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$QualifiedNameList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$QualifiedName_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReturnTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReturnTypeListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReturnTypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ReturnType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ShortTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$ShortType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$TypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$TypeListContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$TypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$Type_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$VoidTypeContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser$VoidType_eofContext.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1AntlrParser.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Parser.class);
  link artifact monticoregrammar -> @(_symboltable!78);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Language.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!117);
  link artifact monticoregrammar -> @(TestMCBasicTypes1DelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1InheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1ParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCBasicTypes1Visitor.class);
  link artifact monticoregrammar -> @(testmccommon!2);
  link artifact monticoregrammar -> @(_ast!124);
  link artifact monticoregrammar -> @(ASTA$ABuilder.class);
  link artifact monticoregrammar -> @(ASTA.class!9);
  link artifact monticoregrammar -> @(ASTConstantsTestMCCommon.class);
  link artifact monticoregrammar -> @(ASTTestMCCommonNode.class);
  link artifact monticoregrammar -> @(TestMCCommonLiterals.class);
  link artifact monticoregrammar -> @(TestMCCommonMill.class);
  link artifact monticoregrammar -> @(TestMCCommonNodeFactory.class);
  link artifact monticoregrammar -> @(TestMCCommonPackage$Literals.class);
  link artifact monticoregrammar -> @(TestMCCommonPackage.class);
  link artifact monticoregrammar -> @(TestMCCommonPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!118);
  link artifact monticoregrammar -> @(TestMCCommonASTACoCo.class);
  link artifact monticoregrammar -> @(TestMCCommonASTTestMCCommonNodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCCommonCoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCCommonTestMCCommonPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!118);
  link artifact monticoregrammar -> @(TestMCCommon2OD.class);
  link artifact monticoregrammar -> @(_parser!43);
  link artifact monticoregrammar -> @(TestMCCommonAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrListener.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$AContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$A_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$CardinalityContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Cardinality_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$CompletenessContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Completeness_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$ModifierContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Modifier_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$StereotypeContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$Stereotype_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$StereoValueContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$StereoValue_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCCommonAntlrParser.class);
  link artifact monticoregrammar -> @(TestMCCommonParser.class);
  link artifact monticoregrammar -> @(_symboltable!79);
  link artifact monticoregrammar -> @(TestMCCommonLanguage.class);
  link artifact monticoregrammar -> @(TestMCCommonModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!118);
  link artifact monticoregrammar -> @(TestMCCommonDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCCommonInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCCommonParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCCommonVisitor.class);
  link artifact monticoregrammar -> @(testmchexnumbers!2);
  link artifact monticoregrammar -> @(_ast!125);
  link artifact monticoregrammar -> @(ASTConstantsTestMCHexNumbers.class);
  link artifact monticoregrammar -> @(ASTTestMCHexNumbersNode.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersLiterals.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersMill.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersNodeFactory.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersPackage$Literals.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersPackage.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!119);
  link artifact monticoregrammar -> @(TestMCHexNumbersASTTestMCHexNumbersNodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersCoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersTestMCHexNumbersPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!119);
  link artifact monticoregrammar -> @(TestMCHexNumbers2OD.class);
  link artifact monticoregrammar -> @(_parser!44);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrListener.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$HexadecimalContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$Hexadecimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$HexIntegerContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$HexInteger_eofContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersAntlrParser.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersParser.class);
  link artifact monticoregrammar -> @(_visitor!119);
  link artifact monticoregrammar -> @(TestMCHexNumbersDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCHexNumbersVisitor.class);
  link artifact monticoregrammar -> @(testmcliterals!2);
  link artifact monticoregrammar -> @(_ast!126);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiterals.class);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsNode.class);
  link artifact monticoregrammar -> @(TestMCLiteralsLiterals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsMill.class);
  link artifact monticoregrammar -> @(TestMCLiteralsNodeFactory.class);
  link artifact monticoregrammar -> @(TestMCLiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsPackage.class);
  link artifact monticoregrammar -> @(TestMCLiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!120);
  link artifact monticoregrammar -> @(TestMCLiteralsASTTestMCLiteralsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCLiteralsTestMCLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!120);
  link artifact monticoregrammar -> @(TestMCLiterals2OD.class);
  link artifact monticoregrammar -> @(_parser!45);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$FloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$IntLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$LiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$Literal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$LongLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NatLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NullLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedNatLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedNatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsAntlrParser.class);
  link artifact monticoregrammar -> @(TestMCLiteralsParser.class);
  link artifact monticoregrammar -> @(_visitor!120);
  link artifact monticoregrammar -> @(TestMCLiteralsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsVisitor.class);
  link artifact monticoregrammar -> @(testmcliteralsv2!2);
  link artifact monticoregrammar -> @(_ast!127);
  link artifact monticoregrammar -> @(ASTAnyToken$AnyTokenBuilder.class);
  link artifact monticoregrammar -> @(ASTAnyToken.class);
  link artifact monticoregrammar -> @(ASTAnyTokenList$AnyTokenListBuilder.class);
  link artifact monticoregrammar -> @(ASTAnyTokenList.class);
  link artifact monticoregrammar -> @(ASTBTest$BTestBuilder.class);
  link artifact monticoregrammar -> @(ASTBTest.class);
  link artifact monticoregrammar -> @(ASTCharList$CharListBuilder.class);
  link artifact monticoregrammar -> @(ASTCharList.class);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiteralsV2.class);
  link artifact monticoregrammar -> @(ASTDecimalList$DecimalListBuilder.class);
  link artifact monticoregrammar -> @(ASTDecimalList.class);
  link artifact monticoregrammar -> @(ASTIntegerList$IntegerListBuilder.class);
  link artifact monticoregrammar -> @(ASTIntegerList.class);
  link artifact monticoregrammar -> @(ASTStringList$StringListBuilder.class);
  link artifact monticoregrammar -> @(ASTStringList.class);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsV2Node.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Literals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Mill.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2NodeFactory.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Package$Literals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Package.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2PackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!121);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTAnyTokenCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTAnyTokenListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTBTestCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTCharListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTDecimalListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTIntegerListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTStringListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ASTTestMCLiteralsV2NodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2CoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2TestMCLiteralsV2PackageCoCo.class);
  link artifact monticoregrammar -> @(_od!121);
  link artifact monticoregrammar -> @(TestMCLiteralsV22OD.class);
  link artifact monticoregrammar -> @(_parser!46);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$AnyTokenContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$AnyTokenListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$AnyTokenList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$AnyToken_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$BTestContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$BTest_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$CharListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$CharList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$DecimalListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$DecimalList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$IntegerListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$IntegerList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$StringListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$StringList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2AntlrParser.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Parser.class);
  link artifact monticoregrammar -> @(_symboltable!80);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Language.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!121);
  link artifact monticoregrammar -> @(TestMCLiteralsV2DelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2InheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2ParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV2Visitor.class);
  link artifact monticoregrammar -> @(testmcliteralsv3!2);
  link artifact monticoregrammar -> @(_ast!128);
  link artifact monticoregrammar -> @(ASTAnyToken$AnyTokenBuilder.class!2);
  link artifact monticoregrammar -> @(ASTAnyToken.class!2);
  link artifact monticoregrammar -> @(ASTAnyTokenList$AnyTokenListBuilder.class!2);
  link artifact monticoregrammar -> @(ASTAnyTokenList.class!2);
  link artifact monticoregrammar -> @(ASTConstantsTestMCLiteralsV3.class);
  link artifact monticoregrammar -> @(ASTDecimalList$DecimalListBuilder.class!2);
  link artifact monticoregrammar -> @(ASTDecimalList.class!2);
  link artifact monticoregrammar -> @(ASTIntegerList$IntegerListBuilder.class!2);
  link artifact monticoregrammar -> @(ASTIntegerList.class!2);
  link artifact monticoregrammar -> @(ASTNumberList$NumberListBuilder.class);
  link artifact monticoregrammar -> @(ASTNumberList.class);
  link artifact monticoregrammar -> @(ASTTestMCLiteralsV3Node.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Literals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Mill.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3NodeFactory.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Package$Literals.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Package.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3PackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!122);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTAnyTokenCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTAnyTokenListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTDecimalListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTIntegerListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTNumberListCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ASTTestMCLiteralsV3NodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3CoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3TestMCLiteralsV3PackageCoCo.class);
  link artifact monticoregrammar -> @(_od!122);
  link artifact monticoregrammar -> @(TestMCLiteralsV32OD.class);
  link artifact monticoregrammar -> @(_parser!47);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrListener.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$AnyTokenContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$AnyTokenListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$AnyTokenList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$AnyToken_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$DecimalListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$DecimalList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$HexadecimalContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$Hexadecimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$HexIntegerContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$HexInteger_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$IntegerListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$IntegerList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$NumberListContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$NumberList_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3AntlrParser.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Parser.class);
  link artifact monticoregrammar -> @(_symboltable!81);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Language.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!122);
  link artifact monticoregrammar -> @(TestMCLiteralsV3DelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3InheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3ParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCLiteralsV3Visitor.class);
  link artifact monticoregrammar -> @(testmcnumbers!2);
  link artifact monticoregrammar -> @(_ast!129);
  link artifact monticoregrammar -> @(ASTConstantsTestMCNumbers.class);
  link artifact monticoregrammar -> @(ASTTestMCNumbersNode.class);
  link artifact monticoregrammar -> @(TestMCNumbersLiterals.class);
  link artifact monticoregrammar -> @(TestMCNumbersMill.class);
  link artifact monticoregrammar -> @(TestMCNumbersNodeFactory.class);
  link artifact monticoregrammar -> @(TestMCNumbersPackage$Literals.class);
  link artifact monticoregrammar -> @(TestMCNumbersPackage.class);
  link artifact monticoregrammar -> @(TestMCNumbersPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!123);
  link artifact monticoregrammar -> @(TestMCNumbersASTTestMCNumbersNodeCoCo.class);
  link artifact monticoregrammar -> @(TestMCNumbersCoCoChecker.class);
  link artifact monticoregrammar -> @(TestMCNumbersTestMCNumbersPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!123);
  link artifact monticoregrammar -> @(TestMCNumbers2OD.class);
  link artifact monticoregrammar -> @(_parser!48);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrLexer.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrListener.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$DecimalContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$Decimal_eofContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$IntegerContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$Integer_eofContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$NumberContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser$Number_eofContext.class);
  link artifact monticoregrammar -> @(TestMCNumbersAntlrParser.class);
  link artifact monticoregrammar -> @(TestMCNumbersParser.class);
  link artifact monticoregrammar -> @(_visitor!123);
  link artifact monticoregrammar -> @(TestMCNumbersDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestMCNumbersInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestMCNumbersParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestMCNumbersVisitor.class);
  link artifact monticoregrammar -> @(testoclexpressions!2);
  link artifact monticoregrammar -> @(_ast!130);
  link artifact monticoregrammar -> @(ASTConstantsTestOCLExpressions.class);
  link artifact monticoregrammar -> @(ASTEDeclaration$EDeclarationBuilder.class);
  link artifact monticoregrammar -> @(ASTEDeclaration.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!4);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!5);
  link artifact monticoregrammar -> @(ASTPrimaryNestedExpression$PrimaryNestedExpressionBuilder.class);
  link artifact monticoregrammar -> @(ASTPrimaryNestedExpression.class);
  link artifact monticoregrammar -> @(ASTTestOCLExpressionsNode.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsMill.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!124);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTEDeclarationCoCo.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTPrimaryNestedExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsASTTestOCLExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsTestOCLExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!124);
  link artifact monticoregrammar -> @(TestOCLExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!49);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$AnyExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$AnyExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$CardinalityContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Cardinality_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$CompletenessContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Completeness_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ComplexArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ComplexArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ComplexReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ComplexReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$EDeclarationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$EDeclaration_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ExistsExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ExistsExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$FloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ForallExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ForallExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IfThenElseExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IfThenElseExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ImportStatementContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ImportStatement_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$InExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$InExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IntLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IterateExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$IterateExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LetDeclarationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LetDeclaration_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LetinExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LetinExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Literal_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LongLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ModifierContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Modifier_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$NullLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$NumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLArgumentQualificationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLArgumentQualification_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLArrayQualificationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLArrayQualification_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLAtPreQualificationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLAtPreQualification_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLCollectionItemContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLCollectionItem_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyleContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionEnumerationStyle_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyleContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionExpressionStyle_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionItemContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionItem_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionPrimaryContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLComprehensionPrimary_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLDefinedPrimaryContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLDefinedPrimary_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLIsNewPrimaryContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLIsNewPrimary_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLPrimaryContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLPrimary_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLQualificationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLQualification_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLQualifiedPrimaryContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLQualifiedPrimary_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLTransitivQualificationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$OCLTransitivQualification_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ParenthizedExpressionContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ParenthizedExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimaryNestedExpressionContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimaryNestedExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimitiveArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimitiveArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimitiveTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$PrimitiveType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$QualifiedNameContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$QualifiedName_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ReturnTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$ReturnType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SimpleReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$SimpleReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$StereotypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Stereotype_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$StereoValueContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$StereoValue_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeArgumentContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeArgumentsContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeArguments_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeArgument_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeCastExpressionContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeCastExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeIfExprContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeIfExpr_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeParametersContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeParameters_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeVariableDeclarationContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$TypeVariableDeclaration_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$Type_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$VoidTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$VoidType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$WildcardTypeContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser$WildcardType_eofContext.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!82);
  link artifact monticoregrammar -> @(TestOCLExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!124);
  link artifact monticoregrammar -> @(TestOCLExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestOCLExpressionsVisitor.class);
  link artifact monticoregrammar -> @(testsetexpressions!2);
  link artifact monticoregrammar -> @(_ast!131);
  link artifact monticoregrammar -> @(ASTConstantsTestSetExpressions.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!5);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!6);
  link artifact monticoregrammar -> @(ASTTestSetExpressionsNode.class);
  link artifact monticoregrammar -> @(TestSetExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestSetExpressionsMill.class);
  link artifact monticoregrammar -> @(TestSetExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestSetExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestSetExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestSetExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!125);
  link artifact monticoregrammar -> @(TestSetExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestSetExpressionsASTTestSetExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestSetExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestSetExpressionsTestSetExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!125);
  link artifact monticoregrammar -> @(TestSetExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!50);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$ArgumentsContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$Arguments_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$BooleanNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$BooleanNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$BracketExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$BracketExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$InfixExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$InfixExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$IntersectionExpressionPrefixContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$IntersectionExpressionPrefix_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$LogicalNotExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$LogicalNotExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetAndExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetAndExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetOrExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetOrExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetXOrExpressionContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$SetXOrExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$UnionExpressionPrefixContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser$UnionExpressionPrefix_eofContext.class);
  link artifact monticoregrammar -> @(TestSetExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestSetExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!83);
  link artifact monticoregrammar -> @(TestSetExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestSetExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!125);
  link artifact monticoregrammar -> @(TestSetExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestSetExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestSetExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestSetExpressionsVisitor.class);
  link artifact monticoregrammar -> @(testshiftexpressions!2);
  link artifact monticoregrammar -> @(_ast!132);
  link artifact monticoregrammar -> @(ASTConstantsTestShiftExpressions.class);
  link artifact monticoregrammar -> @(ASTPrimaryExpression$PrimaryExpressionBuilder.class!6);
  link artifact monticoregrammar -> @(ASTPrimaryExpression.class!7);
  link artifact monticoregrammar -> @(ASTTestShiftExpressionsNode.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsLiterals.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsMill.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsNodeFactory.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsPackage.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!126);
  link artifact monticoregrammar -> @(TestShiftExpressionsASTPrimaryExpressionCoCo.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsASTTestShiftExpressionsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsTestShiftExpressionsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!126);
  link artifact monticoregrammar -> @(TestShiftExpressions2OD.class);
  link artifact monticoregrammar -> @(_parser!51);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrListener.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$ExpressionContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$Expression_eofContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$PrimaryExpressionContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$PrimaryExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$PrimaryThisExpressionContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$PrimaryThisExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$ShiftExpressionContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser$ShiftExpression_eofContext.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsAntlrParser.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsParser.class);
  link artifact monticoregrammar -> @(_symboltable!84);
  link artifact monticoregrammar -> @(TestShiftExpressionsLanguage.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!126);
  link artifact monticoregrammar -> @(TestShiftExpressionsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestShiftExpressionsVisitor.class);
  link artifact monticoregrammar -> @(teststringliterals!2);
  link artifact monticoregrammar -> @(_ast!133);
  link artifact monticoregrammar -> @(ASTCharLiteralList$CharLiteralListBuilder.class);
  link artifact monticoregrammar -> @(ASTCharLiteralList.class);
  link artifact monticoregrammar -> @(ASTConstantsTestStringLiterals.class);
  link artifact monticoregrammar -> @(ASTStringLiteralList$StringLiteralListBuilder.class);
  link artifact monticoregrammar -> @(ASTStringLiteralList.class);
  link artifact monticoregrammar -> @(ASTTestStringLiteralsNode.class);
  link artifact monticoregrammar -> @(TestStringLiteralsLiterals.class);
  link artifact monticoregrammar -> @(TestStringLiteralsMill.class);
  link artifact monticoregrammar -> @(TestStringLiteralsNodeFactory.class);
  link artifact monticoregrammar -> @(TestStringLiteralsPackage$Literals.class);
  link artifact monticoregrammar -> @(TestStringLiteralsPackage.class);
  link artifact monticoregrammar -> @(TestStringLiteralsPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!127);
  link artifact monticoregrammar -> @(TestStringLiteralsASTCharLiteralListCoCo.class);
  link artifact monticoregrammar -> @(TestStringLiteralsASTStringLiteralListCoCo.class);
  link artifact monticoregrammar -> @(TestStringLiteralsASTTestStringLiteralsNodeCoCo.class);
  link artifact monticoregrammar -> @(TestStringLiteralsCoCoChecker.class);
  link artifact monticoregrammar -> @(TestStringLiteralsTestStringLiteralsPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!127);
  link artifact monticoregrammar -> @(TestStringLiterals2OD.class);
  link artifact monticoregrammar -> @(_parser!52);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrLexer.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrListener.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$CharLiteralListContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$CharLiteralList_eofContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$StringLiteralListContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$StringLiteralList_eofContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestStringLiteralsAntlrParser.class);
  link artifact monticoregrammar -> @(TestStringLiteralsParser.class);
  link artifact monticoregrammar -> @(_symboltable!85);
  link artifact monticoregrammar -> @(TestStringLiteralsLanguage.class);
  link artifact monticoregrammar -> @(TestStringLiteralsModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!127);
  link artifact monticoregrammar -> @(TestStringLiteralsDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestStringLiteralsInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestStringLiteralsParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestStringLiteralsVisitor.class);
  link artifact monticoregrammar -> @(testumlmodifier!2);
  link artifact monticoregrammar -> @(_ast!134);
  link artifact monticoregrammar -> @(ASTA$ABuilder.class!2);
  link artifact monticoregrammar -> @(ASTA.class!10);
  link artifact monticoregrammar -> @(ASTConstantsTestUMLModifier.class);
  link artifact monticoregrammar -> @(ASTTestUMLModifierNode.class);
  link artifact monticoregrammar -> @(TestUMLModifierLiterals.class);
  link artifact monticoregrammar -> @(TestUMLModifierMill.class);
  link artifact monticoregrammar -> @(TestUMLModifierNodeFactory.class);
  link artifact monticoregrammar -> @(TestUMLModifierPackage$Literals.class);
  link artifact monticoregrammar -> @(TestUMLModifierPackage.class);
  link artifact monticoregrammar -> @(TestUMLModifierPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!128);
  link artifact monticoregrammar -> @(TestUMLModifierASTACoCo.class);
  link artifact monticoregrammar -> @(TestUMLModifierASTTestUMLModifierNodeCoCo.class);
  link artifact monticoregrammar -> @(TestUMLModifierCoCoChecker.class);
  link artifact monticoregrammar -> @(TestUMLModifierTestUMLModifierPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!128);
  link artifact monticoregrammar -> @(TestUMLModifier2OD.class);
  link artifact monticoregrammar -> @(_parser!53);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrLexer.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrListener.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$AContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$A_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$ModifierContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$Modifier_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$StereotypeContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$Stereotype_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$StereoValueContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$StereoValue_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLModifierAntlrParser.class);
  link artifact monticoregrammar -> @(TestUMLModifierParser.class);
  link artifact monticoregrammar -> @(_symboltable!86);
  link artifact monticoregrammar -> @(TestUMLModifierLanguage.class);
  link artifact monticoregrammar -> @(TestUMLModifierModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!128);
  link artifact monticoregrammar -> @(TestUMLModifierDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestUMLModifierInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestUMLModifierParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestUMLModifierVisitor.class);
  link artifact monticoregrammar -> @(testumlstereotype!2);
  link artifact monticoregrammar -> @(_ast!135);
  link artifact monticoregrammar -> @(ASTConstantsTestUMLStereotype.class);
  link artifact monticoregrammar -> @(ASTStereotypeList$StereotypeListBuilder.class);
  link artifact monticoregrammar -> @(ASTStereotypeList.class);
  link artifact monticoregrammar -> @(ASTStereoValueList$StereoValueListBuilder.class);
  link artifact monticoregrammar -> @(ASTStereoValueList.class);
  link artifact monticoregrammar -> @(ASTTestUMLStereotypeNode.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeLiterals.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeMill.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeNodeFactory.class);
  link artifact monticoregrammar -> @(TestUMLStereotypePackage$Literals.class);
  link artifact monticoregrammar -> @(TestUMLStereotypePackage.class);
  link artifact monticoregrammar -> @(TestUMLStereotypePackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!129);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTStereotypeListCoCo.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTStereoValueListCoCo.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeASTTestUMLStereotypeNodeCoCo.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeCoCoChecker.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeTestUMLStereotypePackageCoCo.class);
  link artifact monticoregrammar -> @(_od!129);
  link artifact monticoregrammar -> @(TestUMLStereotype2OD.class);
  link artifact monticoregrammar -> @(_parser!54);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrLexer.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrListener.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereotypeContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereotypeListContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereotypeList_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$Stereotype_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereoValueContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereoValueListContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereoValueList_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StereoValue_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeAntlrParser.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeParser.class);
  link artifact monticoregrammar -> @(_symboltable!87);
  link artifact monticoregrammar -> @(TestUMLStereotypeLanguage.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeModelLoader.class);
  link artifact monticoregrammar -> @(_visitor!129);
  link artifact monticoregrammar -> @(TestUMLStereotypeDelegatorVisitor.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeInheritanceVisitor.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeParentAwareVisitor.class);
  link artifact monticoregrammar -> @(TestUMLStereotypeVisitor.class);
  link artifact monticoregrammar -> @(types!20);
  link artifact monticoregrammar -> @(ComplexArrayTypesTest.class);
  link artifact monticoregrammar -> @(ComplexQualifiedTypesTest.class);
  link artifact monticoregrammar -> @(NestedTypeArgumentsTest.class);
  link artifact monticoregrammar -> @(NestedTypeParametersTest.class);
  link artifact monticoregrammar -> @(PrimitiveArrayTypesTest.class);
  link artifact monticoregrammar -> @(PrimitiveTypesTest.class);
  link artifact monticoregrammar -> @(ReturnTypesTest.class);
  link artifact monticoregrammar -> @(testtypes!3);
  link artifact monticoregrammar -> @(_ast!136);
  link artifact monticoregrammar -> @(ASTConstantsTestTypes.class!2);
  link artifact monticoregrammar -> @(ASTTestTypesNode.class!2);
  link artifact monticoregrammar -> @(TestTypesLiterals.class!2);
  link artifact monticoregrammar -> @(TestTypesMill.class!2);
  link artifact monticoregrammar -> @(TestTypesNodeFactory.class!2);
  link artifact monticoregrammar -> @(TestTypesPackage$Literals.class);
  link artifact monticoregrammar -> @(TestTypesPackage.class);
  link artifact monticoregrammar -> @(TestTypesPackageImpl.class);
  link artifact monticoregrammar -> @(_cocos!130);
  link artifact monticoregrammar -> @(TestTypesASTTestTypesNodeCoCo.class!2);
  link artifact monticoregrammar -> @(TestTypesCoCoChecker.class!2);
  link artifact monticoregrammar -> @(TestTypesTestTypesPackageCoCo.class);
  link artifact monticoregrammar -> @(_od!130);
  link artifact monticoregrammar -> @(TestTypes2OD.class!2);
  link artifact monticoregrammar -> @(_parser!55);
  link artifact monticoregrammar -> @(TestTypesAntlrBaseListener.class);
  link artifact monticoregrammar -> @(TestTypesAntlrLexer.class);
  link artifact monticoregrammar -> @(TestTypesAntlrListener.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$CharLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ComplexArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ComplexArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ComplexReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ComplexReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$FloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ImportStatementContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ImportStatement_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$IntLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$LiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$Literal_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$LongLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$NullLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$NumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$PrimitiveArrayTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$PrimitiveArrayType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$PrimitiveTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$PrimitiveType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$QualifiedNameContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$QualifiedName_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ReturnTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$ReturnType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SimpleReferenceTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$SimpleReferenceType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$StringLiteralContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeArgumentContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeArgumentsContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeArguments_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeArgument_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeParametersContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeParameters_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeVariableDeclarationContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$TypeVariableDeclaration_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$Type_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$VoidTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$VoidType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$WildcardTypeContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser$WildcardType_eofContext.class);
  link artifact monticoregrammar -> @(TestTypesAntlrParser.class);
  link artifact monticoregrammar -> @(TestTypesParser.class);
  link artifact monticoregrammar -> @(_visitor!130);
  link artifact monticoregrammar -> @(TestTypesDelegatorVisitor.class!2);
  link artifact monticoregrammar -> @(TestTypesInheritanceVisitor.class!2);
  link artifact monticoregrammar -> @(TestTypesParentAwareVisitor.class!2);
  link artifact monticoregrammar -> @(TestTypesVisitor.class!2);
  link artifact monticoregrammar -> @(TypeArgumentsTest.class);
  link artifact monticoregrammar -> @(TypeParametersTest.class);
  link artifact monticoregrammar -> @(TypesTestHelper.class);
  link artifact monticoregrammar -> @(WildcardTypesTest.class);
  link artifact monticoregenerator -> @(monticore-generator);
  link artifact monticoregenerator -> @(it);
  link artifact monticoregenerator -> @(src!6);
  link artifact monticoregenerator -> @(main!6);
  link artifact monticoregenerator -> @(grammars);
  link artifact monticoregenerator -> @(mc);
  link artifact monticoregenerator -> @(common);
  link artifact monticoregenerator -> @(embedding);
  link artifact monticoregenerator -> @(external);
  link artifact monticoregenerator -> @(transitive);
  link artifact monticoregenerator -> @(examples);
  link artifact monticoregenerator -> @(automaton!4);
  link artifact monticoregenerator -> @(input);
  link artifact monticoregenerator -> @(renaming);
  link artifact monticoregenerator -> @(cartesian);
  link artifact monticoregenerator -> @(lwc);
  link artifact monticoregenerator -> @(edl);
  link artifact monticoregenerator -> @(odl);
  link artifact monticoregenerator -> @(msc);
  link artifact monticoregenerator -> @(petrinet);
  link artifact monticoregenerator -> @(polar);
  link artifact monticoregenerator -> @(robot);
  link artifact monticoregenerator -> @(feature);
  link artifact monticoregenerator -> @(abc);
  link artifact monticoregenerator -> @(abstractgrammar);
  link artifact monticoregenerator -> @(abstractprod);
  link artifact monticoregenerator -> @(addkeywords);
  link artifact monticoregenerator -> @(astcomparison);
  link artifact monticoregenerator -> @(astident);
  link artifact monticoregenerator -> @(astprod);
  link artifact monticoregenerator -> @(aststring);
  link artifact monticoregenerator -> @(automaton!5);
  link artifact monticoregenerator -> @(classgenwithingrammar);
  link artifact monticoregenerator -> @(cocochecker);
  link artifact monticoregenerator -> @(comments);
  link artifact monticoregenerator -> @(compilationunit);
  link artifact monticoregenerator -> @(constantsshortform);
  link artifact monticoregenerator -> @(delete);
  link artifact monticoregenerator -> @(dsltoolstandalone);
  link artifact monticoregenerator -> @(embedding!2);
  link artifact monticoregenerator -> @(inner);
  link artifact monticoregenerator -> @(outer);
  link artifact monticoregenerator -> @(example);
  link artifact monticoregenerator -> @(nointerface);
  link artifact monticoregenerator -> @(useinterface);
  link artifact monticoregenerator -> @(expression);
  link artifact monticoregenerator -> @(fautomaton);
  link artifact monticoregenerator -> @(action);
  link artifact monticoregenerator -> @(automaton!6);
  link artifact monticoregenerator -> @(automatonwithaction);
  link artifact monticoregenerator -> @(followoption);
  link artifact monticoregenerator -> @(grammarinherit);
  link artifact monticoregenerator -> @(sub);
  link artifact monticoregenerator -> @(sup);
  link artifact monticoregenerator -> @(hwc);
  link artifact monticoregenerator -> @(inheritence);
  link artifact monticoregenerator -> @(interfaces);
  link artifact monticoregenerator -> @(javasql);
  link artifact monticoregenerator -> @(java!7);
  link artifact monticoregenerator -> @(javasql!2);
  link artifact monticoregenerator -> @(sql);
  link artifact monticoregenerator -> @(lexerformat);
  link artifact monticoregenerator -> @(linepreprocess);
  link artifact monticoregenerator -> @(astrules);
  link artifact monticoregenerator -> @(embedding!3);
  link artifact monticoregenerator -> @(synpred);
  link artifact monticoregenerator -> @(synpred_llk);
  link artifact monticoregenerator -> @(list);
  link artifact monticoregenerator -> @(listrule);
  link artifact monticoregenerator -> @(mcenum);
  link artifact monticoregenerator -> @(namecollision);
  link artifact monticoregenerator -> @(newcomments);
  link artifact monticoregenerator -> @(python3);
  link artifact monticoregenerator -> @(semanticpredicate);
  link artifact monticoregenerator -> @(sourcepositions);
  link artifact monticoregenerator -> @(symboltable);
  link artifact monticoregenerator -> @(visitor);
  link artifact monticoregenerator -> @(inheritance);
  link artifact monticoregenerator -> @(wiki);
  link artifact monticoregenerator -> @(grammar);
  link artifact monticoregenerator -> @(concepts);
  link artifact monticoregenerator -> @(antlr!2);
  link artifact monticoregenerator -> @(attributes);
  link artifact monticoregenerator -> @(texteditor!2);
  link artifact monticoregenerator -> @(texteditoringrammar);
  link artifact monticoregenerator -> @(visualoutline);
  link artifact monticoregenerator -> @(lexicals);
  link artifact monticoregenerator -> @(literals);
  link artifact monticoregenerator -> @(types);
  link artifact monticoregenerator -> @(lang);
  link artifact monticoregenerator -> @(org);
  link artifact monticoregenerator -> @(moflon);
  link artifact monticoregenerator -> @(nest);
  link artifact monticoregenerator -> @(commons);
  link artifact monticoregenerator -> @(nestml);
  link artifact monticoregenerator -> @(spl);
  link artifact monticoregenerator -> @(java!8);
  link artifact monticoregenerator -> @(mc!2);
  link artifact monticoregenerator -> @(embedding!4);
  link artifact monticoregenerator -> @(composite);
  link artifact monticoregenerator -> @(_symboltable!3);
  link artifact monticoregenerator -> @(CompositeLanguage.java);
  link artifact monticoregenerator -> @(CompositeModelLoader.java);
  link artifact monticoregenerator -> @(CompositeSymbolTableCreator.java);
  link artifact monticoregenerator -> @(SimpleCompositeSymbolTableCreator.java);
  link artifact monticoregenerator -> @(Text2ContentAdapter.java);
  link artifact monticoregenerator -> @(Text2ContentResolvingFilter.java);
  link artifact monticoregenerator -> @(embedded);
  link artifact monticoregenerator -> @(_symboltable!4);
  link artifact monticoregenerator -> @(EmbeddedLanguage.java);
  link artifact monticoregenerator -> @(EmbeddedSymbolTableCreator.java);
  link artifact monticoregenerator -> @(external!2);
  link artifact monticoregenerator -> @(composite!2);
  link artifact monticoregenerator -> @(_symboltable!5);
  link artifact monticoregenerator -> @(CompositeLanguage.java!2);
  link artifact monticoregenerator -> @(CompositeModelLoader.java!2);
  link artifact monticoregenerator -> @(CompositeSymbolTableCreator.java!2);
  link artifact monticoregenerator -> @(Text2ContentAdapter.java!2);
  link artifact monticoregenerator -> @(Text2ContentResolvingFilter.java!2);
  link artifact monticoregenerator -> @(embedded!2);
  link artifact monticoregenerator -> @(_symboltable!6);
  link artifact monticoregenerator -> @(EmbeddedLanguage.java!2);
  link artifact monticoregenerator -> @(EmbeddedSymbolTableCreator.java!2);
  link artifact monticoregenerator -> @(host);
  link artifact monticoregenerator -> @(_symboltable!7);
  link artifact monticoregenerator -> @(ContentKind.java);
  link artifact monticoregenerator -> @(ContentResolvingFilter.java);
  link artifact monticoregenerator -> @(ContentSymbol.java);
  link artifact monticoregenerator -> @(ContentSymbolReference.java);
  link artifact monticoregenerator -> @(HostKind.java);
  link artifact monticoregenerator -> @(HostLanguage.java);
  link artifact monticoregenerator -> @(HostModelLoader.java);
  link artifact monticoregenerator -> @(HostModelNameCalculator.java);
  link artifact monticoregenerator -> @(HostResolvingFilter.java);
  link artifact monticoregenerator -> @(HostSymbol.java);
  link artifact monticoregenerator -> @(HostSymbolMill.java);
  link artifact monticoregenerator -> @(HostSymbolReference.java);
  link artifact monticoregenerator -> @(HostSymbolTableCreator.java);
  link artifact monticoregenerator -> @(host!2);
  link artifact monticoregenerator -> @(_symboltable!8);
  link artifact monticoregenerator -> @(HostLanguage.java!2);
  link artifact monticoregenerator -> @(HostSymbolTableCreator.java!2);
  link artifact monticoregenerator -> @(transitive!2);
  link artifact monticoregenerator -> @(transcomposite);
  link artifact monticoregenerator -> @(_symboltable!9);
  link artifact monticoregenerator -> @(TransCompositeLanguage.java);
  link artifact monticoregenerator -> @(TransCompositeModelLoader.java);
  link artifact monticoregenerator -> @(TransCompositeSymbolTableCreator.java);
  link artifact monticoregenerator -> @(transhost);
  link artifact monticoregenerator -> @(_symboltable!10);
  link artifact monticoregenerator -> @(TransHostLanguage.java);
  link artifact monticoregenerator -> @(TransHostModelLoader.java);
  link artifact monticoregenerator -> @(TransHostSymbolTableCreator.java);
  link artifact monticoregenerator -> @(examples!2);
  link artifact monticoregenerator -> @(automaton!7);
  link artifact monticoregenerator -> @(automaton!8);
  link artifact monticoregenerator -> @(_symboltable!11);
  link artifact monticoregenerator -> @(AutomatonLanguage.java!2);
  link artifact monticoregenerator -> @(AutomatonSymbolTableCreator.java);
  link artifact monticoregenerator -> @(coord);
  link artifact monticoregenerator -> @(cartesian!2);
  link artifact monticoregenerator -> @(prettyprint);
  link artifact monticoregenerator -> @(CartesianPrettyPrinterConcreteVisitor.java);
  link artifact monticoregenerator -> @(polar!2);
  link artifact monticoregenerator -> @(prettyprint!2);
  link artifact monticoregenerator -> @(PolarPrettyPrinterConcreteVisitor.java);
  link artifact monticoregenerator -> @(transform);
  link artifact monticoregenerator -> @(CartesianToPolar.java);
  link artifact monticoregenerator -> @(Mirror.java);
  link artifact monticoregenerator -> @(feature!2);
  link artifact monticoregenerator -> @(hwc!2);
  link artifact monticoregenerator -> @(statechartdsl);
  link artifact monticoregenerator -> @(_ast!5);
  link artifact monticoregenerator -> @(ASTState.java!3);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!3);
  link artifact monticoregenerator -> @(ASTStatechart.java);
  link artifact monticoregenerator -> @(ASTStatechartDSLNode.java);
  link artifact monticoregenerator -> @(MyTransitionBuilder.java);
  link artifact monticoregenerator -> @(StatechartDSLMill.java);
  link artifact monticoregenerator -> @(StatechartDSLNodeFactory.java);
  link artifact monticoregenerator -> @(tagging1);
  link artifact monticoregenerator -> @(_ast!6);
  link artifact monticoregenerator -> @(ASTTag.java);
  link artifact monticoregenerator -> @(ASTTaggingUnit.java);
  link artifact monticoregenerator -> @(tagging2);
  link artifact monticoregenerator -> @(_ast!7);
  link artifact monticoregenerator -> @(ASTScope.java);
  link artifact monticoregenerator -> @(ASTTagElement.java);
  link artifact monticoregenerator -> @(ASTTaggingUnit.java!2);
  link artifact monticoregenerator -> @(visitor!2);
  link artifact monticoregenerator -> @(SubConcreteVisitor.java);
  link artifact monticoregenerator -> @(grammars!2);
  link artifact monticoregenerator -> @(TestGrammarPrinter.java);
  link artifact monticoregenerator -> @(resources!6);
  link artifact monticoregenerator -> @(test!2);
  link artifact monticoregenerator -> @(java!9);
  link artifact monticoregenerator -> @(mc!3);
  link artifact monticoregenerator -> @(ast);
  link artifact monticoregenerator -> @(ASTBuilderTest.java);
  link artifact monticoregenerator -> @(ConcreteVisitorTest.java);
  link artifact monticoregenerator -> @(TestVisitor.java);
  link artifact monticoregenerator -> @(embedding!5);
  link artifact monticoregenerator -> @(CompositeTest.java);
  link artifact monticoregenerator -> @(EmbeddedTest.java);
  link artifact monticoregenerator -> @(external!3);
  link artifact monticoregenerator -> @(CompositeTest.java!2);
  link artifact monticoregenerator -> @(EmbeddedTest.java!2);
  link artifact monticoregenerator -> @(HostTest.java);
  link artifact monticoregenerator -> @(HostTest.java!2);
  link artifact monticoregenerator -> @(transitive!3);
  link artifact monticoregenerator -> @(TransCompositeTest.java);
  link artifact monticoregenerator -> @(TransHostTest.java);
  link artifact monticoregenerator -> @(emf!3);
  link artifact monticoregenerator -> @(emethods);
  link artifact monticoregenerator -> @(EGeterSeterTest.java);
  link artifact monticoregenerator -> @(FeatureIDConversionTest.java);
  link artifact monticoregenerator -> @(eobjects);
  link artifact monticoregenerator -> @(CreateEObjectsTest.java);
  link artifact monticoregenerator -> @(epackage);
  link artifact monticoregenerator -> @(IDTest.java);
  link artifact monticoregenerator -> @(MetaObjectTest.java);
  link artifact monticoregenerator -> @(etools);
  link artifact monticoregenerator -> @(EcoreUtilTest.java);
  link artifact monticoregenerator -> @(EmfDiffTest.java);
  link artifact monticoregenerator -> @(modularity);
  link artifact monticoregenerator -> @(ExternalTest.java);
  link artifact monticoregenerator -> @(serialization);
  link artifact monticoregenerator -> @(ASTInstanceSerialDeserialTest.java);
  link artifact monticoregenerator -> @(ASTModelSerialDeserialTest.java);
  link artifact monticoregenerator -> @(examples!3);
  link artifact monticoregenerator -> @(automaton!9);
  link artifact monticoregenerator -> @(TestAutomaton.java);
  link artifact monticoregenerator -> @(coord!2);
  link artifact monticoregenerator -> @(TestCoordinates.java);
  link artifact monticoregenerator -> @(lwc!2);
  link artifact monticoregenerator -> @(TestEDL.java);
  link artifact monticoregenerator -> @(TestODL.java);
  link artifact monticoregenerator -> @(feature!3);
  link artifact monticoregenerator -> @(abc!2);
  link artifact monticoregenerator -> @(EmbedTest.java);
  link artifact monticoregenerator -> @(abstractgrammar!2);
  link artifact monticoregenerator -> @(AbstractGrammarTest.java);
  link artifact monticoregenerator -> @(abstractprod!2);
  link artifact monticoregenerator -> @(AbstractProdTest.java);
  link artifact monticoregenerator -> @(addkeywords!2);
  link artifact monticoregenerator -> @(AddKeywordsTest.java);
  link artifact monticoregenerator -> @(ast!2);
  link artifact monticoregenerator -> @(GeneratedAstClassesTest.java);
  link artifact monticoregenerator -> @(ParserForInterfaceTest.java);
  link artifact monticoregenerator -> @(ParserTest.java);
  link artifact monticoregenerator -> @(astident!2);
  link artifact monticoregenerator -> @(TestASTIdent.java);
  link artifact monticoregenerator -> @(astlist);
  link artifact monticoregenerator -> @(TestLists.java);
  link artifact monticoregenerator -> @(aststring!2);
  link artifact monticoregenerator -> @(TestASTStringParser.java);
  link artifact monticoregenerator -> @(automaton!10);
  link artifact monticoregenerator -> @(SubclassParsingTest.java);
  link artifact monticoregenerator -> @(classgenwithingrammar!2);
  link artifact monticoregenerator -> @(ParserTest.java!2);
  link artifact monticoregenerator -> @(cocochecker!2);
  link artifact monticoregenerator -> @(CoCoCheckerTest.java);
  link artifact monticoregenerator -> @(comments!2);
  link artifact monticoregenerator -> @(CommentsTest.java);
  link artifact monticoregenerator -> @(CommentTest.java);
  link artifact monticoregenerator -> @(CommentTypesTest.java);
  link artifact monticoregenerator -> @(compilationunit!2);
  link artifact monticoregenerator -> @(ParserTest.java!3);
  link artifact monticoregenerator -> @(constantsshortform!2);
  link artifact monticoregenerator -> @(ConstantsShortFormTest.java);
  link artifact monticoregenerator -> @(embedding!6);
  link artifact monticoregenerator -> @(EmbeddingTest.java);
  link artifact monticoregenerator -> @(EmbedTest.java!2);
  link artifact monticoregenerator -> @(expression!2);
  link artifact monticoregenerator -> @(Expression2Test.java);
  link artifact monticoregenerator -> @(Expression3Test.java);
  link artifact monticoregenerator -> @(Expression4Test.java);
  link artifact monticoregenerator -> @(Expression5Test.java);
  link artifact monticoregenerator -> @(ExpressionTest.java);
  link artifact monticoregenerator -> @(followoption!2);
  link artifact monticoregenerator -> @(FollowOptionTest.java);
  link artifact monticoregenerator -> @(grammarinherit!2);
  link artifact monticoregenerator -> @(TestGrammarInherit.java);
  link artifact monticoregenerator -> @(hwc!3);
  link artifact monticoregenerator -> @(BuildersTest.java);
  link artifact monticoregenerator -> @(HWAstTest.java);
  link artifact monticoregenerator -> @(inheritence!2);
  link artifact monticoregenerator -> @(CloneInheritenceTest.java);
  link artifact monticoregenerator -> @(InheritenceTest.java);
  link artifact monticoregenerator -> @(interfaces!2);
  link artifact monticoregenerator -> @(InterfacesTest.java);
  link artifact monticoregenerator -> @(javasql!3);
  link artifact monticoregenerator -> @(JavaSQLTest.java);
  link artifact monticoregenerator -> @(lexerformat!2);
  link artifact monticoregenerator -> @(KleenePlusTest.java);
  link artifact monticoregenerator -> @(LexerTest.java);
  link artifact monticoregenerator -> @(LexRulesOrderTest.java);
  link artifact monticoregenerator -> @(linepreprocess!2);
  link artifact monticoregenerator -> @(embedding!7);
  link artifact monticoregenerator -> @(AutomatonOverallParserTest.java);
  link artifact monticoregenerator -> @(listrule!2);
  link artifact monticoregenerator -> @(ListRuleTest.java);
  link artifact monticoregenerator -> @(mcenum!2);
  link artifact monticoregenerator -> @(EnumTest.java);
  link artifact monticoregenerator -> @(options);
  link artifact monticoregenerator -> @(MultipleOptionTest.java);
  link artifact monticoregenerator -> @(semanticpredicate!2);
  link artifact monticoregenerator -> @(SemPredWithInterfaceParserTest.java);
  link artifact monticoregenerator -> @(sourcepositions!2);
  link artifact monticoregenerator -> @(ExpressionSourcePositionsTest.java);
  link artifact monticoregenerator -> @(statechart);
  link artifact monticoregenerator -> @(SCTest.java);
  link artifact monticoregenerator -> @(symboltable!2);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo1Test.java);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo2Test.java);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo3Test.java);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo4Test.java);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo5Test.java);
  link artifact monticoregenerator -> @(AutomatonWithSTInfo6Test.java);
  link artifact monticoregenerator -> @(visitor!3);
  link artifact monticoregenerator -> @(inheritance!2);
  link artifact monticoregenerator -> @(delegator);
  link artifact monticoregenerator -> @(CommonVisitorTest.java);
  link artifact monticoregenerator -> @(ComposeSimpleAndInheritanceTest.java);
  link artifact monticoregenerator -> @(ComposeSimpleTest.java);
  link artifact monticoregenerator -> @(InheritanceBVisitor.java);
  link artifact monticoregenerator -> @(InheritanceCVisitor.java);
  link artifact monticoregenerator -> @(MissingRealThisAVisitor.java);
  link artifact monticoregenerator -> @(SimpleAVisitor.java);
  link artifact monticoregenerator -> @(SimpleBVisitor.java);
  link artifact monticoregenerator -> @(SimpleCVisitor.java);
  link artifact monticoregenerator -> @(VisitorTest.java);
  link artifact monticoregenerator -> @(VisitorTest.java!2);
  link artifact monticoregenerator -> @(wiki!2);
  link artifact monticoregenerator -> @(WikiTest.java);
  link artifact monticoregenerator -> @(GeneratorIntegrationsTest.java);
  link artifact monticoregenerator -> @(grammar!2);
  link artifact monticoregenerator -> @(MCParserTest.java);
  link artifact monticoregenerator -> @(testinputs);
  link artifact monticoregenerator -> @(GrammarsForTestsProvider.java);
  link artifact monticoregenerator -> @(resources!7);
  link artifact monticoregenerator -> @(examples!4);
  link artifact monticoregenerator -> @(automaton!11);
  link artifact monticoregenerator -> @(coord!3);
  link artifact monticoregenerator -> @(embedding!8);
  link artifact monticoregenerator -> @(fautomaton!2);
  link artifact monticoregenerator -> @(fautomatondoc);
  link artifact monticoregenerator -> @(lwc!3);
  link artifact monticoregenerator -> @(edl!2);
  link artifact monticoregenerator -> @(odl!2);
  link artifact monticoregenerator -> @(msc!2);
  link artifact monticoregenerator -> @(composition);
  link artifact monticoregenerator -> @(petrinet!2);
  link artifact monticoregenerator -> @(robot!2);
  link artifact monticoregenerator -> @(basicmoves);
  link artifact monticoregenerator -> @(statechart!2);
  link artifact monticoregenerator -> @(mc!4);
  link artifact monticoregenerator -> @(embedding!9);
  link artifact monticoregenerator -> @(transitive!4);
  link artifact monticoregenerator -> @(emf!4);
  link artifact monticoregenerator -> @(diff);
  link artifact monticoregenerator -> @(grammar!3);
  link artifact monticoregenerator -> @(test_ast);
  link artifact monticoregenerator -> @(java!10);
  link artifact monticoregenerator -> @(mc!5);
  link artifact monticoregenerator -> @(feature!4);
  link artifact monticoregenerator -> @(ast!3);
  link artifact monticoregenerator -> @(ASTTest.java);
  link artifact monticoregenerator -> @(astlist!2);
  link artifact monticoregenerator -> @(CollectionTest.java);
  link artifact monticoregenerator -> @(src!7);
  link artifact monticoregenerator -> @(main!7);
  link artifact monticoregenerator -> @(grammars!3);
  link artifact monticoregenerator -> @(de!12);
  link artifact monticoregenerator -> @(monticore!12);
  link artifact monticoregenerator -> @(grammar!4);
  link artifact monticoregenerator -> @(concepts!2);
  link artifact monticoregenerator -> @(antlr!3);
  link artifact monticoregenerator -> @(java!11);
  link artifact monticoregenerator -> @(de!13);
  link artifact monticoregenerator -> @(monticore!13);
  link artifact monticoregenerator -> @(codegen);
  link artifact monticoregenerator -> @(cd2java);
  link artifact monticoregenerator -> @(ast!4);
  link artifact monticoregenerator -> @(AstAdditionalAttributes.java);
  link artifact monticoregenerator -> @(AstAdditionalMethods.java);
  link artifact monticoregenerator -> @(AstGenerator.java);
  link artifact monticoregenerator -> @(AstGeneratorHelper.java);
  link artifact monticoregenerator -> @(AstListMethods.java);
  link artifact monticoregenerator -> @(CdDecorator.java);
  link artifact monticoregenerator -> @(ast_emf);
  link artifact monticoregenerator -> @(AstEmfGeneratorHelper.java);
  link artifact monticoregenerator -> @(CdEmfDecorator.java);
  link artifact monticoregenerator -> @(EmfAttribute.java);
  link artifact monticoregenerator -> @(cocos);
  link artifact monticoregenerator -> @(CoCoGenerator.java);
  link artifact monticoregenerator -> @(CoCoGeneratorHelper.java);
  link artifact monticoregenerator -> @(od);
  link artifact monticoregenerator -> @(ODGenerator.java);
  link artifact monticoregenerator -> @(types!2);
  link artifact monticoregenerator -> @(TypeResolverGenerator.java);
  link artifact monticoregenerator -> @(TypeResolverGeneratorHelper.java);
  link artifact monticoregenerator -> @(visitor!4);
  link artifact monticoregenerator -> @(VisitorGenerator.java);
  link artifact monticoregenerator -> @(VisitorGeneratorHelper.java);
  link artifact monticoregenerator -> @(GeneratorHelper.java);
  link artifact monticoregenerator -> @(mc2cd);
  link artifact monticoregenerator -> @(AttributeCategory.java);
  link artifact monticoregenerator -> @(manipul);
  link artifact monticoregenerator -> @(AddAttributesOfExtendedInterfacesManipulation.java);
  link artifact monticoregenerator -> @(BaseInterfaceAddingManipulation.java);
  link artifact monticoregenerator -> @(CDManipulation.java);
  link artifact monticoregenerator -> @(JavaAndCdConformNameManipulation.java);
  link artifact monticoregenerator -> @(ListInitializingManipulation.java);
  link artifact monticoregenerator -> @(RemoveRedundantAttributesManipulation.java);
  link artifact monticoregenerator -> @(RemoveRedundantSupertypesManipulation.java);
  link artifact monticoregenerator -> @(VisibilityManipulation.java);
  link artifact monticoregenerator -> @(MC2CDStereotypes.java);
  link artifact monticoregenerator -> @(MC2CDTransformation.java);
  link artifact monticoregenerator -> @(MCGrammarSymbolTableHelper.java);
  link artifact monticoregenerator -> @(TransformationHelper.java);
  link artifact monticoregenerator -> @(transl);
  link artifact monticoregenerator -> @(AbstractProdModifierTranslation.java);
  link artifact monticoregenerator -> @(ASTRuleInheritanceTranslation.java);
  link artifact monticoregenerator -> @(ConstantsTranslation.java);
  link artifact monticoregenerator -> @(ConstantTypeTranslation.java);
  link artifact monticoregenerator -> @(CreateConstantAttributeTranslation.java);
  link artifact monticoregenerator -> @(creation);
  link artifact monticoregenerator -> @(AbstractProdsToCDClasses.java);
  link artifact monticoregenerator -> @(ASTRulesToCDClassesAndCDInterfaces.java);
  link artifact monticoregenerator -> @(AttributeInASTsToCDAttributes.java);
  link artifact monticoregenerator -> @(CDASTCreator.java);
  link artifact monticoregenerator -> @(ClassProdsToCDClasses.java);
  link artifact monticoregenerator -> @(EnumProdsToCDEnums.java);
  link artifact monticoregenerator -> @(ExternalProdsToCDInterfaces.java);
  link artifact monticoregenerator -> @(GrammarToCDDefinition.java);
  link artifact monticoregenerator -> @(InterfaceProdsToCDInterfaces.java);
  link artifact monticoregenerator -> @(NonTerminalsToCDAttributes.java);
  link artifact monticoregenerator -> @(TerminalsToCDAttributes.java);
  link artifact monticoregenerator -> @(EnumTranslation.java);
  link artifact monticoregenerator -> @(ExtendsTranslation.java);
  link artifact monticoregenerator -> @(ExternalImplementationTranslation.java);
  link artifact monticoregenerator -> @(ImplementsTranslation.java);
  link artifact monticoregenerator -> @(InheritedAttributesTranslation.java);
  link artifact monticoregenerator -> @(MC2CDTranslation.java);
  link artifact monticoregenerator -> @(MethodTranslation.java);
  link artifact monticoregenerator -> @(MultiplicityTranslation.java);
  link artifact monticoregenerator -> @(NameTranslation.java);
  link artifact monticoregenerator -> @(NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.java);
  link artifact monticoregenerator -> @(OverridingClassProdTranslation.java);
  link artifact monticoregenerator -> @(PackageTranslation.java);
  link artifact monticoregenerator -> @(ReferenceTypeTranslation.java);
  link artifact monticoregenerator -> @(RemoveOverriddenAttributesTranslation.java);
  link artifact monticoregenerator -> @(StarImportSuperGrammarTranslation.java);
  link artifact monticoregenerator -> @(parser);
  link artifact monticoregenerator -> @(antlr!4);
  link artifact monticoregenerator -> @(AntlrTool.java);
  link artifact monticoregenerator -> @(ASTConstructionActions.java);
  link artifact monticoregenerator -> @(AttributeCardinalityConstraint.java);
  link artifact monticoregenerator -> @(Grammar2Antlr.java);
  link artifact monticoregenerator -> @(SourcePositionActions.java);
  link artifact monticoregenerator -> @(Languages.java);
  link artifact monticoregenerator -> @(ParserGenerator.java);
  link artifact monticoregenerator -> @(ParserGeneratorHelper.java);
  link artifact monticoregenerator -> @(symboltable!3);
  link artifact monticoregenerator -> @(CommonModelingLanguageGenerator.java);
  link artifact monticoregenerator -> @(CommonModelLoaderGenerator.java);
  link artifact monticoregenerator -> @(CommonModelNameCalculatorGenerator.java);
  link artifact monticoregenerator -> @(CommonResolvingFilterGenerator.java);
  link artifact monticoregenerator -> @(CommonScopeSpanningSymbolGenerator.java);
  link artifact monticoregenerator -> @(CommonSymbolGenerator.java);
  link artifact monticoregenerator -> @(CommonSymbolKindGenerator.java);
  link artifact monticoregenerator -> @(CommonSymbolMillGenerator.java);
  link artifact monticoregenerator -> @(CommonSymbolReferenceGenerator.java);
  link artifact monticoregenerator -> @(CommonSymbolTableCreatorGenerator.java);
  link artifact monticoregenerator -> @(ModelingLanguageGenerator.java);
  link artifact monticoregenerator -> @(ModelLoaderGenerator.java);
  link artifact monticoregenerator -> @(ModelNameCalculatorGenerator.java);
  link artifact monticoregenerator -> @(ResolvingFilterGenerator.java);
  link artifact monticoregenerator -> @(ScopeSpanningSymbolGenerator.java);
  link artifact monticoregenerator -> @(SymbolGenerator.java);
  link artifact monticoregenerator -> @(SymbolKindGenerator.java);
  link artifact monticoregenerator -> @(SymbolMillGenerator.java);
  link artifact monticoregenerator -> @(SymbolReferenceGenerator.java);
  link artifact monticoregenerator -> @(SymbolTableCreatorGenerator.java);
  link artifact monticoregenerator -> @(SymbolTableGenerator.java);
  link artifact monticoregenerator -> @(SymbolTableGeneratorBuilder.java);
  link artifact monticoregenerator -> @(SymbolTableGeneratorHelper.java);
  link artifact monticoregenerator -> @(grammar!5);
  link artifact monticoregenerator -> @(cocos!2);
  link artifact monticoregenerator -> @(AbstractNTNotExtendInterfaceOrExternalNTs.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendOrAstextendNTOrClass.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOneNTOrClass.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyImplementInterfaceNTs.java);
  link artifact monticoregenerator -> @(AbstractNTWithoutExtensionOnlyInComponentGrammar.java);
  link artifact monticoregenerator -> @(ASTRuleAndNTUseSameAttrNameForDiffNTs.java);
  link artifact monticoregenerator -> @(AttributeNameLowerCase.java);
  link artifact monticoregenerator -> @(DuplicatedEnumConstant.java);
  link artifact monticoregenerator -> @(DuplicatedSymbolDefinitionInProd.java);
  link artifact monticoregenerator -> @(ExternalNTOnlyInComponentGrammar.java);
  link artifact monticoregenerator -> @(GrammarCoCos.java);
  link artifact monticoregenerator -> @(GrammarInheritanceCycle.java);
  link artifact monticoregenerator -> @(GrammarNameUpperCase.java);
  link artifact monticoregenerator -> @(InterfaceNTOnlyExtendInterfaceNTs.java);
  link artifact monticoregenerator -> @(InterfaceNTWithoutImplementationOnlyInComponentGrammar.java);
  link artifact monticoregenerator -> @(KeywordAlternativeName.java);
  link artifact monticoregenerator -> @(KeywordInvalidName.java);
  link artifact monticoregenerator -> @(LeftRecursiveRulesInBlock.java);
  link artifact monticoregenerator -> @(LexNTsNotEmpty.java);
  link artifact monticoregenerator -> @(LexNTsOnlyUseLexNTs.java);
  link artifact monticoregenerator -> @(MultipleASTRules.java);
  link artifact monticoregenerator -> @(NoASTExtendsForClasses.java);
  link artifact monticoregenerator -> @(NoASTRuleForEnumNTs.java);
  link artifact monticoregenerator -> @(NoNTInheritanceCycle.java);
  link artifact monticoregenerator -> @(NTAndASTRuleExtendType.java);
  link artifact monticoregenerator -> @(NTDefinedByAtmostOneProduction.java);
  link artifact monticoregenerator -> @(NTForASTRuleExists.java);
  link artifact monticoregenerator -> @(NTNotExtendInterfaceOrExternalNTs.java);
  link artifact monticoregenerator -> @(NTOnlyExtendOrAstextendNTOrClass.java);
  link artifact monticoregenerator -> @(NTOnlyExtendsOneNTOrClass.java);
  link artifact monticoregenerator -> @(NTOnlyImplementInterfaceNTs.java);
  link artifact monticoregenerator -> @(NTUniqueIgnoreCase.java);
  link artifact monticoregenerator -> @(OverridingAbstractNTs.java);
  link artifact monticoregenerator -> @(OverridingAbstractNTsHaveNoSuperRules.java);
  link artifact monticoregenerator -> @(OverridingEnumNTs.java);
  link artifact monticoregenerator -> @(OverridingInterfaceNTs.java);
  link artifact monticoregenerator -> @(OverridingLexNTs.java);
  link artifact monticoregenerator -> @(OverridingNTs.java);
  link artifact monticoregenerator -> @(OverridingNTsHaveNoSuperRules.java);
  link artifact monticoregenerator -> @(ProdAndExtendedProdUseSameAttrNameForDiffNTs.java);
  link artifact monticoregenerator -> @(ProdAndOverriddenProdUseSameAttrNameForDiffNTs.java);
  link artifact monticoregenerator -> @(ProdStartsWithCapital.java);
  link artifact monticoregenerator -> @(ProdWithExtensionMustNotBeOverridden.java);
  link artifact monticoregenerator -> @(ReferencedNTNotDefined.java);
  link artifact monticoregenerator -> @(SubrulesUseInterfaceNTs.java);
  link artifact monticoregenerator -> @(SymbolWithoutName.java);
  link artifact monticoregenerator -> @(TerminalEmptyString.java);
  link artifact monticoregenerator -> @(UsedLexNTNotDefined.java);
  link artifact monticoregenerator -> @(UsedNTNotDefined.java);
  link artifact monticoregenerator -> @(DirectLeftRecursionDetector.java);
  link artifact monticoregenerator -> @(grammar!6);
  link artifact monticoregenerator -> @(_ast!8);
  link artifact monticoregenerator -> @(ASTGenericType.java);
  link artifact monticoregenerator -> @(ASTProd.java);
  link artifact monticoregenerator -> @(HelperGrammar.java);
  link artifact monticoregenerator -> @(LexNamer.java);
  link artifact monticoregenerator -> @(MCGrammarInfo.java);
  link artifact monticoregenerator -> @(Multiplicity.java);
  link artifact monticoregenerator -> @(PredicatePair.java);
  link artifact monticoregenerator -> @(prettyprint!3);
  link artifact monticoregenerator -> @(AntlrPrettyPrinter.java);
  link artifact monticoregenerator -> @(GrammarPrettyPrinter.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPrettyPrinter.java);
  link artifact monticoregenerator -> @(RegExpBuilder.java);
  link artifact monticoregenerator -> @(symboltable!4);
  link artifact monticoregenerator -> @(MCGrammarScope.java);
  link artifact monticoregenerator -> @(MCGrammarSymbol.java);
  link artifact monticoregenerator -> @(MCGrammarSymbolReference.java);
  link artifact monticoregenerator -> @(MCProdAttributeSymbol.java);
  link artifact monticoregenerator -> @(MCProdComponentSymbol.java);
  link artifact monticoregenerator -> @(MCProdOrTypeReference.java);
  link artifact monticoregenerator -> @(MCProdSymbol.java);
  link artifact monticoregenerator -> @(MCProdSymbolReference.java);
  link artifact monticoregenerator -> @(MontiCoreGrammarLanguage.java);
  link artifact monticoregenerator -> @(MontiCoreGrammarModelLoader.java);
  link artifact monticoregenerator -> @(MontiCoreGrammarSymbolTableCreator.java);
  link artifact monticoregenerator -> @(transformation);
  link artifact monticoregenerator -> @(GrammarTransformer.java);
  link artifact monticoregenerator -> @(RuleComponentListFinder.java);
  link artifact monticoregenerator -> @(GrammarWithConcepts2OD.java);
  link artifact monticoregenerator -> @(MontiCoreConfiguration.java);
  link artifact monticoregenerator -> @(MontiCoreGrammarLanguageFamily.java);
  link artifact monticoregenerator -> @(MontiCoreNodeIdentifierHelper.java);
  link artifact monticoregenerator -> @(MontiCoreReports.java);
  link artifact monticoregenerator -> @(MontiCoreScript.java);
  link artifact monticoregenerator -> @(ODReporter.java);
  link artifact monticoregenerator -> @(parser!2);
  link artifact monticoregenerator -> @(MCGrammarParser.java);
  link artifact monticoregenerator -> @(resources!8);
  link artifact monticoregenerator -> @(ast!5);
  link artifact monticoregenerator -> @(additionalmethods);
  link artifact monticoregenerator -> @(Accept.ftl);
  link artifact monticoregenerator -> @(AcceptSuper.ftl);
  link artifact monticoregenerator -> @(DeepCloneWithParameters.ftl);
  link artifact monticoregenerator -> @(DeepEqualsWithComments.ftl);
  link artifact monticoregenerator -> @(DeepEqualsWithOrder.ftl);
  link artifact monticoregenerator -> @(EqualAttributes.ftl);
  link artifact monticoregenerator -> @(EqualsWithComments.ftl);
  link artifact monticoregenerator -> @(Get.ftl);
  link artifact monticoregenerator -> @(GetChildren.ftl);
  link artifact monticoregenerator -> @(GetOpt.ftl);
  link artifact monticoregenerator -> @(GetReferencedNode.ftl);
  link artifact monticoregenerator -> @(GetReferencedSymbol.ftl);
  link artifact monticoregenerator -> @(IsPresent.ftl);
  link artifact monticoregenerator -> @(ListAttributeMethod.ftl);
  link artifact monticoregenerator -> @(RemoveChild.ftl);
  link artifact monticoregenerator -> @(Set.ftl);
  link artifact monticoregenerator -> @(SetAbsent.ftl);
  link artifact monticoregenerator -> @(SetOpt.ftl);
  link artifact monticoregenerator -> @(AstBuilder.ftl);
  link artifact monticoregenerator -> @(AstBuilderAttributeSetter.ftl);
  link artifact monticoregenerator -> @(AstClass.ftl);
  link artifact monticoregenerator -> @(ASTConstantsClass.ftl);
  link artifact monticoregenerator -> @(AstEnum.ftl);
  link artifact monticoregenerator -> @(AstExtendedInterfaces.ftl);
  link artifact monticoregenerator -> @(AstImports.ftl);
  link artifact monticoregenerator -> @(AstInterface.ftl);
  link artifact monticoregenerator -> @(AstInterfaceContent.ftl);
  link artifact monticoregenerator -> @(AstMill.ftl);
  link artifact monticoregenerator -> @(AstMillBuilderMethod.ftl);
  link artifact monticoregenerator -> @(ASTMillDelegateMethod.ftl);
  link artifact monticoregenerator -> @(AstMillForSuper.ftl);
  link artifact monticoregenerator -> @(ASTMillInitMethod.ftl);
  link artifact monticoregenerator -> @(ASTNodeBase.ftl);
  link artifact monticoregenerator -> @(AstNodeFactory.ftl);
  link artifact monticoregenerator -> @(AstSuperInterfaces.ftl);
  link artifact monticoregenerator -> @(AstSuperTypes.ftl);
  link artifact monticoregenerator -> @(Attribute.ftl);
  link artifact monticoregenerator -> @(BuilderAttribute.ftl);
  link artifact monticoregenerator -> @(BuilderConstructorParametersDeclaration.ftl);
  link artifact monticoregenerator -> @(Class.ftl);
  link artifact monticoregenerator -> @(ClassContent.ftl);
  link artifact monticoregenerator -> @(ClassMethod.ftl);
  link artifact monticoregenerator -> @(Constant.ftl);
  link artifact monticoregenerator -> @(Constructor.ftl);
  link artifact monticoregenerator -> @(ConstructorAttributesSetter.ftl);
  link artifact monticoregenerator -> @(ConstructorParametersDeclaration.ftl);
  link artifact monticoregenerator -> @(ConstructorParametersDeclaration2.ftl);
  link artifact monticoregenerator -> @(EmptyMethodBody.ftl);
  link artifact monticoregenerator -> @(ErrorIfNull.ftl);
  link artifact monticoregenerator -> @(factorymethods);
  link artifact monticoregenerator -> @(Create.ftl);
  link artifact monticoregenerator -> @(CreateDelegate.ftl);
  link artifact monticoregenerator -> @(CreateWithParams.ftl);
  link artifact monticoregenerator -> @(CreateWithParamsDelegate.ftl);
  link artifact monticoregenerator -> @(DoCreate.ftl);
  link artifact monticoregenerator -> @(DoCreateWithParams.ftl);
  link artifact monticoregenerator -> @(ErrorIfNull.ftl!2);
  link artifact monticoregenerator -> @(Interface.ftl);
  link artifact monticoregenerator -> @(ParametersDeclaration.ftl);
  link artifact monticoregenerator -> @(ast_emf!2);
  link artifact monticoregenerator -> @(additionalmethods!2);
  link artifact monticoregenerator -> @(EGet.ftl);
  link artifact monticoregenerator -> @(EIsSet.ftl);
  link artifact monticoregenerator -> @(ESet.ftl);
  link artifact monticoregenerator -> @(EStructuralFeature.ftl);
  link artifact monticoregenerator -> @(EToString.ftl);
  link artifact monticoregenerator -> @(EUnset.ftl);
  link artifact monticoregenerator -> @(Set.ftl!2);
  link artifact monticoregenerator -> @(AstEImports.ftl);
  link artifact monticoregenerator -> @(AstNodeFactory.ftl!2);
  link artifact monticoregenerator -> @(EConstantsEnum.ftl);
  link artifact monticoregenerator -> @(EFactory.ftl);
  link artifact monticoregenerator -> @(EPackage.ftl);
  link artifact monticoregenerator -> @(EPackageImpl.ftl);
  link artifact monticoregenerator -> @(epackagemethods);
  link artifact monticoregenerator -> @(CreatePackageContents.ftl);
  link artifact monticoregenerator -> @(InitializePackageContents.ftl);
  link artifact monticoregenerator -> @(cocos!3);
  link artifact monticoregenerator -> @(CoCoChecker.ftl);
  link artifact monticoregenerator -> @(CoCoInterface.ftl);
  link artifact monticoregenerator -> @(de!14);
  link artifact monticoregenerator -> @(monticore!14);
  link artifact monticoregenerator -> @(od!2);
  link artifact monticoregenerator -> @(DiagramVisitor.ftl);
  link artifact monticoregenerator -> @(parser!3);
  link artifact monticoregenerator -> @(LexerMember.ftl);
  link artifact monticoregenerator -> @(MCParser.ftl);
  link artifact monticoregenerator -> @(MCParserMethods.ftl);
  link artifact monticoregenerator -> @(Parser.ftl);
  link artifact monticoregenerator -> @(ParserHeader.ftl);
  link artifact monticoregenerator -> @(symboltable!5);
  link artifact monticoregenerator -> @(mill);
  link artifact monticoregenerator -> @(Attribute.ftl!2);
  link artifact monticoregenerator -> @(Method.ftl);
  link artifact monticoregenerator -> @(ModelingLanguage.ftl);
  link artifact monticoregenerator -> @(ModelLoader.ftl);
  link artifact monticoregenerator -> @(ModelNameCalculator.ftl);
  link artifact monticoregenerator -> @(ResolvingFilter.ftl);
  link artifact monticoregenerator -> @(Scope.ftl);
  link artifact monticoregenerator -> @(ScopeSpanningSymbol.ftl);
  link artifact monticoregenerator -> @(Symbol.ftl);
  link artifact monticoregenerator -> @(SymbolBuilder.ftl);
  link artifact monticoregenerator -> @(SymbolInterface.ftl);
  link artifact monticoregenerator -> @(SymbolKind.ftl);
  link artifact monticoregenerator -> @(SymbolMill.ftl);
  link artifact monticoregenerator -> @(SymbolReference.ftl);
  link artifact monticoregenerator -> @(symbols);
  link artifact monticoregenerator -> @(GetAstNodeMethod.ftl);
  link artifact monticoregenerator -> @(KindConstantDeclaration.ftl);
  link artifact monticoregenerator -> @(SymbolTableCreator.ftl);
  link artifact monticoregenerator -> @(symboltablecreators);
  link artifact monticoregenerator -> @(EndVisitMethod.ftl);
  link artifact monticoregenerator -> @(InitializeSymbol.ftl);
  link artifact monticoregenerator -> @(ScopeMethods.ftl);
  link artifact monticoregenerator -> @(ScopeSpanningSymbolMethods.ftl);
  link artifact monticoregenerator -> @(SetEnclosingScopeOfNodes.ftl);
  link artifact monticoregenerator -> @(SymbolMethods.ftl);
  link artifact monticoregenerator -> @(types!3);
  link artifact monticoregenerator -> @(TypeResolver.ftl);
  link artifact monticoregenerator -> @(visitor!5);
  link artifact monticoregenerator -> @(DelegatorVisitor.ftl);
  link artifact monticoregenerator -> @(InheritanceVisitor.ftl);
  link artifact monticoregenerator -> @(ParentAwareVisitor.ftl);
  link artifact monticoregenerator -> @(SimpleVisitor.ftl);
  link artifact monticoregenerator -> @(test!3);
  link artifact monticoregenerator -> @(java!12);
  link artifact monticoregenerator -> @(de!15);
  link artifact monticoregenerator -> @(monticore!15);
  link artifact monticoregenerator -> @(codegen!2);
  link artifact monticoregenerator -> @(AstDependentGeneratorTest.java);
  link artifact monticoregenerator -> @(cd2java!2);
  link artifact monticoregenerator -> @(ast!6);
  link artifact monticoregenerator -> @(AstGeneratorTest.java);
  link artifact monticoregenerator -> @(CdDecoratorTest.java);
  link artifact monticoregenerator -> @(cocos!4);
  link artifact monticoregenerator -> @(CoCoGeneratorTest.java);
  link artifact monticoregenerator -> @(emf!5);
  link artifact monticoregenerator -> @(ASTNodeTest.java);
  link artifact monticoregenerator -> @(GrammarDiffsTest.java);
  link artifact monticoregenerator -> @(GrammarSerDeserTest.java);
  link artifact monticoregenerator -> @(GeneratorTest.java);
  link artifact monticoregenerator -> @(mc2cd!2);
  link artifact monticoregenerator -> @(manipul!2);
  link artifact monticoregenerator -> @(RemoveRedundantReferencesManipulationTest.java);
  link artifact monticoregenerator -> @(PrettyPrintingTranslation.java);
  link artifact monticoregenerator -> @(TestHelper.java);
  link artifact monticoregenerator -> @(transl!2);
  link artifact monticoregenerator -> @(AbstractProdTest.java!2);
  link artifact monticoregenerator -> @(AstRuleInheritanceTest.java);
  link artifact monticoregenerator -> @(AstRuleTest.java);
  link artifact monticoregenerator -> @(AttributeInASTMultiplicityTest.java);
  link artifact monticoregenerator -> @(AttributeInASTOverridingTest.java);
  link artifact monticoregenerator -> @(AttributeInASTTypeTest.java);
  link artifact monticoregenerator -> @(ConstantTest.java);
  link artifact monticoregenerator -> @(DirectLeftRecursionDetectorTest.java);
  link artifact monticoregenerator -> @(EnumProdTest.java);
  link artifact monticoregenerator -> @(ExternalImplementationTest.java);
  link artifact monticoregenerator -> @(InheritanceTest.java);
  link artifact monticoregenerator -> @(InheritedNonTerminalsTest.java);
  link artifact monticoregenerator -> @(InterfaceProdTest.java);
  link artifact monticoregenerator -> @(NonTerminalMultiplicityTest.java);
  link artifact monticoregenerator -> @(OverridingClassProdTest.java);
  link artifact monticoregenerator -> @(StarImportSuperGrammarTest.java);
  link artifact monticoregenerator -> @(TerminalWithUsageNameTest.java);
  link artifact monticoregenerator -> @(TokenMultiplicityTest.java);
  link artifact monticoregenerator -> @(TokenTypeTest.java);
  link artifact monticoregenerator -> @(UsageNameTest.java);
  link artifact monticoregenerator -> @(parser!4);
  link artifact monticoregenerator -> @(MCGrammarParserTest.java);
  link artifact monticoregenerator -> @(ParserGeneratorTest.java);
  link artifact monticoregenerator -> @(prettyprint!4);
  link artifact monticoregenerator -> @(MCGrammarPrettyPrinterTest.java);
  link artifact monticoregenerator -> @(symboltable!6);
  link artifact monticoregenerator -> @(SymbolTableGeneratorTest.java);
  link artifact monticoregenerator -> @(types!4);
  link artifact monticoregenerator -> @(TypeResolverGeneratorTest.java);
  link artifact monticoregenerator -> @(grammar!7);
  link artifact monticoregenerator -> @(cocos!5);
  link artifact monticoregenerator -> @(AbstractNTNotExtendInterfaceOrExternalNTsTest.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOneNTOrClassTest.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.java);
  link artifact monticoregenerator -> @(AbstractNTOnlyImplementInterfaceNTsTest.java);
  link artifact monticoregenerator -> @(AbstractNTWithoutExtensionOnlyInComponentGrammarTest.java);
  link artifact monticoregenerator -> @(ASTRuleAndNTUseSameAttrNameForDiffNTsTest.java);
  link artifact monticoregenerator -> @(AttributeNameForNTDuplicatedTest.java);
  link artifact monticoregenerator -> @(AttributeNameLowerCaseTest.java);
  link artifact monticoregenerator -> @(CocoTest.java);
  link artifact monticoregenerator -> @(DuplicatedEnumConstantTest.java);
  link artifact monticoregenerator -> @(DuplicatedSymbolDefinitionInProdTest.java);
  link artifact monticoregenerator -> @(ExternalNTOnlyInComponentGrammarTest.java);
  link artifact monticoregenerator -> @(GrammarInheritanceCycleTest.java);
  link artifact monticoregenerator -> @(GrammarNameEqualsFileNameTest.java);
  link artifact monticoregenerator -> @(GrammarNameUpperCaseTest.java);
  link artifact monticoregenerator -> @(InterfaceNTOnlyExtendInterfaceNTsTest.java);
  link artifact monticoregenerator -> @(InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.java);
  link artifact monticoregenerator -> @(KeywordAlternativeNameTest.java);
  link artifact monticoregenerator -> @(KeywordInvalidNameTest.java);
  link artifact monticoregenerator -> @(LeftRecursiveRulesInBlockTest.java);
  link artifact monticoregenerator -> @(LexNTsNotEmptyTest.java);
  link artifact monticoregenerator -> @(LexNTsOnlyUseLexNTsTest.java);
  link artifact monticoregenerator -> @(MultipleASTRulesTest.java);
  link artifact monticoregenerator -> @(NoASTExtendsForClassesTest.java);
  link artifact monticoregenerator -> @(NoASTRuleForEnumNTsTest.java);
  link artifact monticoregenerator -> @(NoNTInheritanceCycleTest.java);
  link artifact monticoregenerator -> @(NTAndASTRuleExtendTypeTest.java);
  link artifact monticoregenerator -> @(NTDefinedByAtmostOneProductionTest.java);
  link artifact monticoregenerator -> @(NTForASTRuleExistsTest.java);
  link artifact monticoregenerator -> @(NTNotExtendInterfaceOrExternalNTsTest.java);
  link artifact monticoregenerator -> @(NTOnlyExtendsOneNTOrClassTest.java);
  link artifact monticoregenerator -> @(NTOnlyExtendsOrAstextendsNTOrClassTest.java);
  link artifact monticoregenerator -> @(NTOnlyImplementInterfaceNTsTest.java);
  link artifact monticoregenerator -> @(NTUniqueIgnoreCaseTest.java);
  link artifact monticoregenerator -> @(OverridingAbstractNTsHaveNoSuperRulesTest.java);
  link artifact monticoregenerator -> @(OverridingAbstractNTsTest.java);
  link artifact monticoregenerator -> @(OverridingEnumNTsTest.java);
  link artifact monticoregenerator -> @(OverridingInterfaceNTsTest.java);
  link artifact monticoregenerator -> @(OverridingLexNTsTest.java);
  link artifact monticoregenerator -> @(OverridingNTsHaveNoSuperRulesTest.java);
  link artifact monticoregenerator -> @(OverridingNTsTest.java);
  link artifact monticoregenerator -> @(ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.java);
  link artifact monticoregenerator -> @(ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.java);
  link artifact monticoregenerator -> @(ProdStartsWithCapitalTest.java);
  link artifact monticoregenerator -> @(ProdWithExtensionMustNotBeOverriddenTest.java);
  link artifact monticoregenerator -> @(ReferencedNTNotDefinedTest.java);
  link artifact monticoregenerator -> @(SubrulesUseInterfaceNTsTest.java);
  link artifact monticoregenerator -> @(SymbolWithoutNameTest.java);
  link artifact monticoregenerator -> @(TerminalEmptyStringTest.java);
  link artifact monticoregenerator -> @(UsedLexNTNotDefinedTest.java);
  link artifact monticoregenerator -> @(UsedNTNotDefinedTest.java);
  link artifact monticoregenerator -> @(symboltable!7);
  link artifact monticoregenerator -> @(MontiCoreGrammarSymbolTableCreatorTest.java);
  link artifact monticoregenerator -> @(GrammarGlobalScopeTestFactory.java);
  link artifact monticoregenerator -> @(MCGrammarLanguageFamilySymbolTableTest.java);
  link artifact monticoregenerator -> @(MontiCoreScriptTest.java);
  link artifact monticoregenerator -> @(resources!9);
  link artifact monticoregenerator -> @(cocos!6);
  link artifact monticoregenerator -> @(invalid);
  link artifact monticoregenerator -> @(A0276);
  link artifact monticoregenerator -> @(A0277);
  link artifact monticoregenerator -> @(A0278);
  link artifact monticoregenerator -> @(A2025);
  link artifact monticoregenerator -> @(A2026);
  link artifact monticoregenerator -> @(A2030);
  link artifact monticoregenerator -> @(A2031);
  link artifact monticoregenerator -> @(A2102);
  link artifact monticoregenerator -> @(A2103);
  link artifact monticoregenerator -> @(A2106);
  link artifact monticoregenerator -> @(A2107);
  link artifact monticoregenerator -> @(A2116);
  link artifact monticoregenerator -> @(A4001);
  link artifact monticoregenerator -> @(A4002);
  link artifact monticoregenerator -> @(A4003);
  link artifact monticoregenerator -> @(A4004);
  link artifact monticoregenerator -> @(A4005);
  link artifact monticoregenerator -> @(A4006);
  link artifact monticoregenerator -> @(A4007);
  link artifact monticoregenerator -> @(A4008);
  link artifact monticoregenerator -> @(A4009);
  link artifact monticoregenerator -> @(A4010);
  link artifact monticoregenerator -> @(A4011);
  link artifact monticoregenerator -> @(A4012);
  link artifact monticoregenerator -> @(A4013);
  link artifact monticoregenerator -> @(A4014);
  link artifact monticoregenerator -> @(A4015);
  link artifact monticoregenerator -> @(A4016);
  link artifact monticoregenerator -> @(A4017);
  link artifact monticoregenerator -> @(A4018);
  link artifact monticoregenerator -> @(A4019);
  link artifact monticoregenerator -> @(A4020);
  link artifact monticoregenerator -> @(A4021);
  link artifact monticoregenerator -> @(A4022);
  link artifact monticoregenerator -> @(A4023);
  link artifact monticoregenerator -> @(A4024);
  link artifact monticoregenerator -> @(A4025);
  link artifact monticoregenerator -> @(A4026);
  link artifact monticoregenerator -> @(A4027);
  link artifact monticoregenerator -> @(A4028);
  link artifact monticoregenerator -> @(A4029);
  link artifact monticoregenerator -> @(A4030);
  link artifact monticoregenerator -> @(A4031);
  link artifact monticoregenerator -> @(A4032);
  link artifact monticoregenerator -> @(A4033);
  link artifact monticoregenerator -> @(A4041);
  link artifact monticoregenerator -> @(A4047);
  link artifact monticoregenerator -> @(A4054);
  link artifact monticoregenerator -> @(A4056);
  link artifact monticoregenerator -> @(A4058);
  link artifact monticoregenerator -> @(A4097);
  link artifact monticoregenerator -> @(valid);
  link artifact monticoregenerator -> @(enum);
  link artifact monticoregenerator -> @(de!16);
  link artifact monticoregenerator -> @(monticore!16);
  link artifact monticoregenerator -> @(emf!6);
  link artifact monticoregenerator -> @(expression!3);
  link artifact monticoregenerator -> @(fautomaton!3);
  link artifact monticoregenerator -> @(action!2);
  link artifact monticoregenerator -> @(automaton!12);
  link artifact monticoregenerator -> @(automatonwithaction!2);
  link artifact monticoregenerator -> @(groovy);
  link artifact monticoregenerator -> @(inherited);
  link artifact monticoregenerator -> @(sub!2);
  link artifact monticoregenerator -> @(subsub);
  link artifact monticoregenerator -> @(interfaces!3);
  link artifact monticoregenerator -> @(script);
  link artifact monticoregenerator -> @(statechart!3);
  link artifact monticoregenerator -> @(sub!3);
  link artifact monticoregenerator -> @(symboltable!8);
  link artifact monticoregenerator -> @(visitors);
  link artifact monticoregenerator -> @(mc!6);
  link artifact monticoregenerator -> @(grammars!4);
  link artifact monticoregenerator -> @(common!2);
  link artifact monticoregenerator -> @(concepts!3);
  link artifact monticoregenerator -> @(antlr!5);
  link artifact monticoregenerator -> @(attributes!2);
  link artifact monticoregenerator -> @(texteditor!3);
  link artifact monticoregenerator -> @(texteditoringrammar!2);
  link artifact monticoregenerator -> @(visualoutline!2);
  link artifact monticoregenerator -> @(lexicals!2);
  link artifact monticoregenerator -> @(literals!2);
  link artifact monticoregenerator -> @(types!5);
  link artifact monticoregenerator -> @(robot!3);
  link artifact monticoregenerator -> @(mc2cdtransformation);
  link artifact monticoregenerator -> @(super);
  link artifact monticoregenerator -> @(target!3);
  link artifact monticoregenerator -> @(classes!3);
  link artifact monticoregenerator -> @(ast!7);
  link artifact monticoregenerator -> @(additionalmethods!3);
  link artifact monticoregenerator -> @(Accept.ftl!2);
  link artifact monticoregenerator -> @(AcceptSuper.ftl!2);
  link artifact monticoregenerator -> @(DeepCloneWithParameters.ftl!2);
  link artifact monticoregenerator -> @(DeepEqualsWithComments.ftl!2);
  link artifact monticoregenerator -> @(DeepEqualsWithOrder.ftl!2);
  link artifact monticoregenerator -> @(EqualAttributes.ftl!2);
  link artifact monticoregenerator -> @(EqualsWithComments.ftl!2);
  link artifact monticoregenerator -> @(Get.ftl!2);
  link artifact monticoregenerator -> @(GetChildren.ftl!2);
  link artifact monticoregenerator -> @(GetOpt.ftl!2);
  link artifact monticoregenerator -> @(GetReferencedNode.ftl!2);
  link artifact monticoregenerator -> @(GetReferencedSymbol.ftl!2);
  link artifact monticoregenerator -> @(IsPresent.ftl!2);
  link artifact monticoregenerator -> @(ListAttributeMethod.ftl!2);
  link artifact monticoregenerator -> @(RemoveChild.ftl!2);
  link artifact monticoregenerator -> @(Set.ftl!3);
  link artifact monticoregenerator -> @(SetAbsent.ftl!2);
  link artifact monticoregenerator -> @(SetOpt.ftl!2);
  link artifact monticoregenerator -> @(AstBuilder.ftl!2);
  link artifact monticoregenerator -> @(AstBuilderAttributeSetter.ftl!2);
  link artifact monticoregenerator -> @(AstClass.ftl!2);
  link artifact monticoregenerator -> @(ASTConstantsClass.ftl!2);
  link artifact monticoregenerator -> @(AstEnum.ftl!2);
  link artifact monticoregenerator -> @(AstExtendedInterfaces.ftl!2);
  link artifact monticoregenerator -> @(AstImports.ftl!2);
  link artifact monticoregenerator -> @(AstInterface.ftl!2);
  link artifact monticoregenerator -> @(AstInterfaceContent.ftl!2);
  link artifact monticoregenerator -> @(AstMill.ftl!2);
  link artifact monticoregenerator -> @(AstMillBuilderMethod.ftl!2);
  link artifact monticoregenerator -> @(ASTMillDelegateMethod.ftl!2);
  link artifact monticoregenerator -> @(AstMillForSuper.ftl!2);
  link artifact monticoregenerator -> @(ASTMillInitMethod.ftl!2);
  link artifact monticoregenerator -> @(ASTNodeBase.ftl!2);
  link artifact monticoregenerator -> @(AstNodeFactory.ftl!3);
  link artifact monticoregenerator -> @(AstSuperInterfaces.ftl!2);
  link artifact monticoregenerator -> @(AstSuperTypes.ftl!2);
  link artifact monticoregenerator -> @(Attribute.ftl!3);
  link artifact monticoregenerator -> @(BuilderAttribute.ftl!2);
  link artifact monticoregenerator -> @(BuilderConstructorParametersDeclaration.ftl!2);
  link artifact monticoregenerator -> @(Class.ftl!2);
  link artifact monticoregenerator -> @(ClassContent.ftl!2);
  link artifact monticoregenerator -> @(ClassMethod.ftl!2);
  link artifact monticoregenerator -> @(Constant.ftl!2);
  link artifact monticoregenerator -> @(Constructor.ftl!2);
  link artifact monticoregenerator -> @(ConstructorAttributesSetter.ftl!2);
  link artifact monticoregenerator -> @(ConstructorParametersDeclaration.ftl!2);
  link artifact monticoregenerator -> @(ConstructorParametersDeclaration2.ftl!2);
  link artifact monticoregenerator -> @(EmptyMethodBody.ftl!2);
  link artifact monticoregenerator -> @(ErrorIfNull.ftl!3);
  link artifact monticoregenerator -> @(factorymethods!2);
  link artifact monticoregenerator -> @(Create.ftl!2);
  link artifact monticoregenerator -> @(CreateDelegate.ftl!2);
  link artifact monticoregenerator -> @(CreateWithParams.ftl!2);
  link artifact monticoregenerator -> @(CreateWithParamsDelegate.ftl!2);
  link artifact monticoregenerator -> @(DoCreate.ftl!2);
  link artifact monticoregenerator -> @(DoCreateWithParams.ftl!2);
  link artifact monticoregenerator -> @(ErrorIfNull.ftl!4);
  link artifact monticoregenerator -> @(Interface.ftl!2);
  link artifact monticoregenerator -> @(ParametersDeclaration.ftl!2);
  link artifact monticoregenerator -> @(ast_emf!3);
  link artifact monticoregenerator -> @(additionalmethods!4);
  link artifact monticoregenerator -> @(EGet.ftl!2);
  link artifact monticoregenerator -> @(EIsSet.ftl!2);
  link artifact monticoregenerator -> @(ESet.ftl!2);
  link artifact monticoregenerator -> @(EStructuralFeature.ftl!2);
  link artifact monticoregenerator -> @(EToString.ftl!2);
  link artifact monticoregenerator -> @(EUnset.ftl!2);
  link artifact monticoregenerator -> @(Set.ftl!4);
  link artifact monticoregenerator -> @(AstEImports.ftl!2);
  link artifact monticoregenerator -> @(AstNodeFactory.ftl!4);
  link artifact monticoregenerator -> @(EConstantsEnum.ftl!2);
  link artifact monticoregenerator -> @(EFactory.ftl!2);
  link artifact monticoregenerator -> @(EPackage.ftl!2);
  link artifact monticoregenerator -> @(EPackageImpl.ftl!2);
  link artifact monticoregenerator -> @(epackagemethods!2);
  link artifact monticoregenerator -> @(CreatePackageContents.ftl!2);
  link artifact monticoregenerator -> @(InitializePackageContents.ftl!2);
  link artifact monticoregenerator -> @(cocos!7);
  link artifact monticoregenerator -> @(CoCoChecker.ftl!2);
  link artifact monticoregenerator -> @(CoCoInterface.ftl!2);
  link artifact monticoregenerator -> @(de!17);
  link artifact monticoregenerator -> @(monticore!17);
  link artifact monticoregenerator -> @(codegen!3);
  link artifact monticoregenerator -> @(cd2java!3);
  link artifact monticoregenerator -> @(ast!8);
  link artifact monticoregenerator -> @(AstAdditionalAttributes.class);
  link artifact monticoregenerator -> @(AstAdditionalMethods.class);
  link artifact monticoregenerator -> @(AstGenerator.class);
  link artifact monticoregenerator -> @(AstGeneratorHelper$1.class);
  link artifact monticoregenerator -> @(AstGeneratorHelper$2.class);
  link artifact monticoregenerator -> @(AstGeneratorHelper$Cd2JavaTypeConverter.class);
  link artifact monticoregenerator -> @(AstGeneratorHelper.class);
  link artifact monticoregenerator -> @(AstListMethods.class);
  link artifact monticoregenerator -> @(CdDecorator.class);
  link artifact monticoregenerator -> @(ast_emf!4);
  link artifact monticoregenerator -> @(AstEmfGeneratorHelper$1.class);
  link artifact monticoregenerator -> @(AstEmfGeneratorHelper$2.class);
  link artifact monticoregenerator -> @(AstEmfGeneratorHelper.class);
  link artifact monticoregenerator -> @(CdEmfDecorator$ETypeCollector.class);
  link artifact monticoregenerator -> @(CdEmfDecorator.class);
  link artifact monticoregenerator -> @(EmfAttribute.class);
  link artifact monticoregenerator -> @(cocos!8);
  link artifact monticoregenerator -> @(CoCoGenerator.class);
  link artifact monticoregenerator -> @(CoCoGeneratorHelper.class);
  link artifact monticoregenerator -> @(od!3);
  link artifact monticoregenerator -> @(ODGenerator.class);
  link artifact monticoregenerator -> @(types!6);
  link artifact monticoregenerator -> @(TypeResolverGenerator.class);
  link artifact monticoregenerator -> @(TypeResolverGeneratorHelper.class);
  link artifact monticoregenerator -> @(visitor!6);
  link artifact monticoregenerator -> @(VisitorGenerator.class);
  link artifact monticoregenerator -> @(VisitorGeneratorHelper.class);
  link artifact monticoregenerator -> @(GeneratorHelper.class);
  link artifact monticoregenerator -> @(mc2cd!3);
  link artifact monticoregenerator -> @(AttributeCategory.class);
  link artifact monticoregenerator -> @(manipul!3);
  link artifact monticoregenerator -> @(AddAttributesOfExtendedInterfacesManipulation.class);
  link artifact monticoregenerator -> @(BaseInterfaceAddingManipulation.class);
  link artifact monticoregenerator -> @(CDManipulation.class);
  link artifact monticoregenerator -> @(JavaAndCdConformNameManipulation.class);
  link artifact monticoregenerator -> @(ListInitializingManipulation.class);
  link artifact monticoregenerator -> @(RemoveRedundantAttributesManipulation.class);
  link artifact monticoregenerator -> @(RemoveRedundantSupertypesManipulation.class);
  link artifact monticoregenerator -> @(VisibilityManipulation.class);
  link artifact monticoregenerator -> @(MC2CDStereotypes.class);
  link artifact monticoregenerator -> @(MC2CDTransformation.class);
  link artifact monticoregenerator -> @(MCGrammarSymbolTableHelper.class);
  link artifact monticoregenerator -> @(TransformationHelper.class);
  link artifact monticoregenerator -> @(transl!3);
  link artifact monticoregenerator -> @(AbstractProdModifierTranslation.class);
  link artifact monticoregenerator -> @(ASTRuleInheritanceTranslation.class);
  link artifact monticoregenerator -> @(ConstantsTranslation.class);
  link artifact monticoregenerator -> @(ConstantTypeTranslation.class);
  link artifact monticoregenerator -> @(CreateConstantAttributeTranslation.class);
  link artifact monticoregenerator -> @(creation!2);
  link artifact monticoregenerator -> @(AbstractProdsToCDClasses.class);
  link artifact monticoregenerator -> @(ASTRulesToCDClassesAndCDInterfaces.class);
  link artifact monticoregenerator -> @(AttributeInASTsToCDAttributes.class);
  link artifact monticoregenerator -> @(CDASTCreator.class);
  link artifact monticoregenerator -> @(ClassProdsToCDClasses.class);
  link artifact monticoregenerator -> @(EnumProdsToCDEnums.class);
  link artifact monticoregenerator -> @(ExternalProdsToCDInterfaces.class);
  link artifact monticoregenerator -> @(GrammarToCDDefinition.class);
  link artifact monticoregenerator -> @(InterfaceProdsToCDInterfaces.class);
  link artifact monticoregenerator -> @(NonTerminalsToCDAttributes.class);
  link artifact monticoregenerator -> @(TerminalsToCDAttributes.class);
  link artifact monticoregenerator -> @(EnumTranslation.class);
  link artifact monticoregenerator -> @(ExtendsTranslation.class);
  link artifact monticoregenerator -> @(ExternalImplementationTranslation.class);
  link artifact monticoregenerator -> @(ImplementsTranslation.class);
  link artifact monticoregenerator -> @(InheritedAttributesTranslation.class);
  link artifact monticoregenerator -> @(MC2CDTranslation.class);
  link artifact monticoregenerator -> @(MethodTranslation.class);
  link artifact monticoregenerator -> @(MultiplicityTranslation.class);
  link artifact monticoregenerator -> @(NameTranslation.class);
  link artifact monticoregenerator -> @(NonTerminalsWithSymbolReferenceToCDAttributeStereotypes.class);
  link artifact monticoregenerator -> @(OverridingClassProdTranslation.class);
  link artifact monticoregenerator -> @(PackageTranslation.class);
  link artifact monticoregenerator -> @(ReferenceTypeTranslation.class);
  link artifact monticoregenerator -> @(RemoveOverriddenAttributesTranslation.class);
  link artifact monticoregenerator -> @(StarImportSuperGrammarTranslation.class);
  link artifact monticoregenerator -> @(parser!5);
  link artifact monticoregenerator -> @(antlr!6);
  link artifact monticoregenerator -> @(AntlrTool.class);
  link artifact monticoregenerator -> @(ASTConstructionActions.class);
  link artifact monticoregenerator -> @(AttributeCardinalityConstraint.class);
  link artifact monticoregenerator -> @(Grammar2Antlr$NodePair.class);
  link artifact monticoregenerator -> @(Grammar2Antlr.class);
  link artifact monticoregenerator -> @(SourcePositionActions.class);
  link artifact monticoregenerator -> @(Languages.class);
  link artifact monticoregenerator -> @(ParserGenerator.class);
  link artifact monticoregenerator -> @(ParserGeneratorHelper.class);
  link artifact monticoregenerator -> @(symboltable!9);
  link artifact monticoregenerator -> @(CommonModelingLanguageGenerator.class);
  link artifact monticoregenerator -> @(CommonModelLoaderGenerator.class);
  link artifact monticoregenerator -> @(CommonModelNameCalculatorGenerator.class);
  link artifact monticoregenerator -> @(CommonResolvingFilterGenerator.class);
  link artifact monticoregenerator -> @(CommonScopeSpanningSymbolGenerator.class);
  link artifact monticoregenerator -> @(CommonSymbolGenerator.class);
  link artifact monticoregenerator -> @(CommonSymbolKindGenerator.class);
  link artifact monticoregenerator -> @(CommonSymbolMillGenerator.class);
  link artifact monticoregenerator -> @(CommonSymbolReferenceGenerator.class);
  link artifact monticoregenerator -> @(CommonSymbolTableCreatorGenerator.class);
  link artifact monticoregenerator -> @(ModelingLanguageGenerator.class);
  link artifact monticoregenerator -> @(ModelLoaderGenerator.class);
  link artifact monticoregenerator -> @(ModelNameCalculatorGenerator.class);
  link artifact monticoregenerator -> @(ResolvingFilterGenerator.class);
  link artifact monticoregenerator -> @(ScopeSpanningSymbolGenerator.class);
  link artifact monticoregenerator -> @(SymbolGenerator.class);
  link artifact monticoregenerator -> @(SymbolKindGenerator.class);
  link artifact monticoregenerator -> @(SymbolMillGenerator.class);
  link artifact monticoregenerator -> @(SymbolReferenceGenerator.class);
  link artifact monticoregenerator -> @(SymbolTableCreatorGenerator.class);
  link artifact monticoregenerator -> @(SymbolTableGenerator.class);
  link artifact monticoregenerator -> @(SymbolTableGeneratorBuilder.class);
  link artifact monticoregenerator -> @(SymbolTableGeneratorHelper.class);
  link artifact monticoregenerator -> @(grammar!8);
  link artifact monticoregenerator -> @(cocos!9);
  link artifact monticoregenerator -> @(AbstractNTNotExtendInterfaceOrExternalNTs.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendOrAstextendNTOrClass.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOneNTOrClass.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyImplementInterfaceNTs.class);
  link artifact monticoregenerator -> @(AbstractNTWithoutExtensionOnlyInComponentGrammar.class);
  link artifact monticoregenerator -> @(ASTRuleAndNTUseSameAttrNameForDiffNTs.class);
  link artifact monticoregenerator -> @(AttributeNameLowerCase.class);
  link artifact monticoregenerator -> @(DuplicatedEnumConstant.class);
  link artifact monticoregenerator -> @(DuplicatedSymbolDefinitionInProd.class);
  link artifact monticoregenerator -> @(ExternalNTOnlyInComponentGrammar.class);
  link artifact monticoregenerator -> @(GrammarCoCos.class);
  link artifact monticoregenerator -> @(GrammarInheritanceCycle.class);
  link artifact monticoregenerator -> @(GrammarNameUpperCase.class);
  link artifact monticoregenerator -> @(InterfaceNTOnlyExtendInterfaceNTs.class);
  link artifact monticoregenerator -> @(InterfaceNTWithoutImplementationOnlyInComponentGrammar.class);
  link artifact monticoregenerator -> @(KeywordAlternativeName.class);
  link artifact monticoregenerator -> @(KeywordInvalidName.class);
  link artifact monticoregenerator -> @(LeftRecursiveRulesInBlock.class);
  link artifact monticoregenerator -> @(LexNTsNotEmpty.class);
  link artifact monticoregenerator -> @(LexNTsOnlyUseLexNTs.class);
  link artifact monticoregenerator -> @(MultipleASTRules.class);
  link artifact monticoregenerator -> @(NoASTExtendsForClasses.class);
  link artifact monticoregenerator -> @(NoASTRuleForEnumNTs.class);
  link artifact monticoregenerator -> @(NoNTInheritanceCycle.class);
  link artifact monticoregenerator -> @(NTAndASTRuleExtendType.class);
  link artifact monticoregenerator -> @(NTDefinedByAtmostOneProduction.class);
  link artifact monticoregenerator -> @(NTForASTRuleExists.class);
  link artifact monticoregenerator -> @(NTNotExtendInterfaceOrExternalNTs.class);
  link artifact monticoregenerator -> @(NTOnlyExtendOrAstextendNTOrClass.class);
  link artifact monticoregenerator -> @(NTOnlyExtendsOneNTOrClass.class);
  link artifact monticoregenerator -> @(NTOnlyImplementInterfaceNTs.class);
  link artifact monticoregenerator -> @(NTUniqueIgnoreCase.class);
  link artifact monticoregenerator -> @(OverridingAbstractNTs.class);
  link artifact monticoregenerator -> @(OverridingAbstractNTsHaveNoSuperRules.class);
  link artifact monticoregenerator -> @(OverridingEnumNTs.class);
  link artifact monticoregenerator -> @(OverridingInterfaceNTs.class);
  link artifact monticoregenerator -> @(OverridingLexNTs.class);
  link artifact monticoregenerator -> @(OverridingNTs.class);
  link artifact monticoregenerator -> @(OverridingNTsHaveNoSuperRules.class);
  link artifact monticoregenerator -> @(ProdAndExtendedProdUseSameAttrNameForDiffNTs.class);
  link artifact monticoregenerator -> @(ProdAndOverriddenProdUseSameAttrNameForDiffNTs.class);
  link artifact monticoregenerator -> @(ProdStartsWithCapital.class);
  link artifact monticoregenerator -> @(ProdWithExtensionMustNotBeOverridden.class);
  link artifact monticoregenerator -> @(ReferencedNTNotDefined.class);
  link artifact monticoregenerator -> @(SubrulesUseInterfaceNTs.class);
  link artifact monticoregenerator -> @(SymbolWithoutName.class);
  link artifact monticoregenerator -> @(TerminalEmptyString.class);
  link artifact monticoregenerator -> @(UsedLexNTNotDefined.class);
  link artifact monticoregenerator -> @(UsedNTNotDefined.class);
  link artifact monticoregenerator -> @(concepts!4);
  link artifact monticoregenerator -> @(antlr!7);
  link artifact monticoregenerator -> @(antlr!8);
  link artifact monticoregenerator -> @(_ast!9);
  link artifact monticoregenerator -> @(AntlrLiterals.class);
  link artifact monticoregenerator -> @(AntlrMill.class);
  link artifact monticoregenerator -> @(AntlrNodeFactory.class);
  link artifact monticoregenerator -> @(AntlrPackage$Literals.class);
  link artifact monticoregenerator -> @(AntlrPackage.class);
  link artifact monticoregenerator -> @(AntlrPackageImpl.class);
  link artifact monticoregenerator -> @(ASTAntlrLexerAction$AntlrLexerActionBuilder.class);
  link artifact monticoregenerator -> @(ASTAntlrLexerAction.class);
  link artifact monticoregenerator -> @(ASTAntlrNode.class);
  link artifact monticoregenerator -> @(ASTAntlrParserAction$AntlrParserActionBuilder.class);
  link artifact monticoregenerator -> @(ASTAntlrParserAction.class);
  link artifact monticoregenerator -> @(ASTConceptAntlr$ConceptAntlrBuilder.class);
  link artifact monticoregenerator -> @(ASTConceptAntlr.class);
  link artifact monticoregenerator -> @(ASTConstantsAntlr.class);
  link artifact monticoregenerator -> @(ASTJavaCodeExt.class);
  link artifact monticoregenerator -> @(_cocos!3);
  link artifact monticoregenerator -> @(AntlrAntlrPackageCoCo.class);
  link artifact monticoregenerator -> @(AntlrASTAntlrLexerActionCoCo.class);
  link artifact monticoregenerator -> @(AntlrASTAntlrNodeCoCo.class);
  link artifact monticoregenerator -> @(AntlrASTAntlrParserActionCoCo.class);
  link artifact monticoregenerator -> @(AntlrASTConceptAntlrCoCo.class);
  link artifact monticoregenerator -> @(AntlrASTJavaCodeExtCoCo.class);
  link artifact monticoregenerator -> @(AntlrCoCoChecker.class);
  link artifact monticoregenerator -> @(_od!3);
  link artifact monticoregenerator -> @(Antlr2OD.class);
  link artifact monticoregenerator -> @(_symboltable!12);
  link artifact monticoregenerator -> @(AntlrLanguage.class);
  link artifact monticoregenerator -> @(AntlrModelLoader.class);
  link artifact monticoregenerator -> @(_visitor!3);
  link artifact monticoregenerator -> @(AntlrDelegatorVisitor.class);
  link artifact monticoregenerator -> @(AntlrInheritanceVisitor.class);
  link artifact monticoregenerator -> @(AntlrParentAwareVisitor.class);
  link artifact monticoregenerator -> @(AntlrVisitor.class);
  link artifact monticoregenerator -> @(DirectLeftRecursionDetector.class);
  link artifact monticoregenerator -> @(grammar!9);
  link artifact monticoregenerator -> @(_ast!10);
  link artifact monticoregenerator -> @(ASTAbstractProd$AbstractProdBuilder.class);
  link artifact monticoregenerator -> @(ASTAbstractProd.class);
  link artifact monticoregenerator -> @(ASTActionExt.class);
  link artifact monticoregenerator -> @(ASTAlt$AltBuilder.class);
  link artifact monticoregenerator -> @(ASTAlt.class);
  link artifact monticoregenerator -> @(ASTAntlrOption$AntlrOptionBuilder.class);
  link artifact monticoregenerator -> @(ASTAntlrOption.class);
  link artifact monticoregenerator -> @(ASTAnything$AnythingBuilder.class);
  link artifact monticoregenerator -> @(ASTAnything.class);
  link artifact monticoregenerator -> @(ASTASTRule$ASTRuleBuilder.class);
  link artifact monticoregenerator -> @(ASTASTRule.class);
  link artifact monticoregenerator -> @(ASTAttributeInAST$AttributeInASTBuilder.class);
  link artifact monticoregenerator -> @(ASTAttributeInAST.class);
  link artifact monticoregenerator -> @(ASTBlock$BlockBuilder.class);
  link artifact monticoregenerator -> @(ASTBlock.class);
  link artifact monticoregenerator -> @(ASTCard$CardBuilder.class);
  link artifact monticoregenerator -> @(ASTCard.class);
  link artifact monticoregenerator -> @(ASTClassProd$ClassProdBuilder.class);
  link artifact monticoregenerator -> @(ASTClassProd.class);
  link artifact monticoregenerator -> @(ASTConcept$ConceptBuilder.class);
  link artifact monticoregenerator -> @(ASTConcept.class);
  link artifact monticoregenerator -> @(ASTConstant$ConstantBuilder.class);
  link artifact monticoregenerator -> @(ASTConstant.class);
  link artifact monticoregenerator -> @(ASTConstantGroup$ConstantGroupBuilder.class);
  link artifact monticoregenerator -> @(ASTConstantGroup.class);
  link artifact monticoregenerator -> @(ASTConstantsGrammar.class);
  link artifact monticoregenerator -> @(ASTEnumProd$EnumProdBuilder.class);
  link artifact monticoregenerator -> @(ASTEnumProd.class);
  link artifact monticoregenerator -> @(ASTEof$EofBuilder.class);
  link artifact monticoregenerator -> @(ASTEof.class);
  link artifact monticoregenerator -> @(ASTExpressionPredicateExt.class);
  link artifact monticoregenerator -> @(ASTExternalProd$ExternalProdBuilder.class);
  link artifact monticoregenerator -> @(ASTExternalProd.class);
  link artifact monticoregenerator -> @(ASTFollowOption$FollowOptionBuilder.class);
  link artifact monticoregenerator -> @(ASTFollowOption.class);
  link artifact monticoregenerator -> @(ASTGenericType.class);
  link artifact monticoregenerator -> @(ASTGenericTypeTOP$GenericTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTGenericTypeTOP.class);
  link artifact monticoregenerator -> @(ASTGrammarNode.class);
  link artifact monticoregenerator -> @(ASTGrammarOption$GrammarOptionBuilder.class);
  link artifact monticoregenerator -> @(ASTGrammarOption.class);
  link artifact monticoregenerator -> @(ASTGrammarReference$GrammarReferenceBuilder.class);
  link artifact monticoregenerator -> @(ASTGrammarReference.class);
  link artifact monticoregenerator -> @(ASTInterfaceProd$InterfaceProdBuilder.class);
  link artifact monticoregenerator -> @(ASTInterfaceProd.class);
  link artifact monticoregenerator -> @(ASTITerminal.class);
  link artifact monticoregenerator -> @(ASTLexActionOrPredicate$LexActionOrPredicateBuilder.class);
  link artifact monticoregenerator -> @(ASTLexActionOrPredicate.class);
  link artifact monticoregenerator -> @(ASTLexAlt$LexAltBuilder.class);
  link artifact monticoregenerator -> @(ASTLexAlt.class);
  link artifact monticoregenerator -> @(ASTLexAnyChar$LexAnyCharBuilder.class);
  link artifact monticoregenerator -> @(ASTLexAnyChar.class);
  link artifact monticoregenerator -> @(ASTLexBlock$LexBlockBuilder.class);
  link artifact monticoregenerator -> @(ASTLexBlock.class);
  link artifact monticoregenerator -> @(ASTLexChar$LexCharBuilder.class);
  link artifact monticoregenerator -> @(ASTLexChar.class);
  link artifact monticoregenerator -> @(ASTLexCharRange$LexCharRangeBuilder.class);
  link artifact monticoregenerator -> @(ASTLexCharRange.class);
  link artifact monticoregenerator -> @(ASTLexComponent.class);
  link artifact monticoregenerator -> @(ASTLexNonTerminal$LexNonTerminalBuilder.class);
  link artifact monticoregenerator -> @(ASTLexNonTerminal.class);
  link artifact monticoregenerator -> @(ASTLexOption$LexOptionBuilder.class);
  link artifact monticoregenerator -> @(ASTLexOption.class);
  link artifact monticoregenerator -> @(ASTLexProd$LexProdBuilder.class);
  link artifact monticoregenerator -> @(ASTLexProd.class);
  link artifact monticoregenerator -> @(ASTLexSimpleIteration$LexSimpleIterationBuilder.class);
  link artifact monticoregenerator -> @(ASTLexSimpleIteration.class);
  link artifact monticoregenerator -> @(ASTLexString$LexStringBuilder.class);
  link artifact monticoregenerator -> @(ASTLexString.class);
  link artifact monticoregenerator -> @(ASTMCAnything$MCAnythingBuilder.class);
  link artifact monticoregenerator -> @(ASTMCAnything.class);
  link artifact monticoregenerator -> @(ASTMCConceptExt.class);
  link artifact monticoregenerator -> @(ASTMCGrammar$MCGrammarBuilder.class);
  link artifact monticoregenerator -> @(ASTMCGrammar.class);
  link artifact monticoregenerator -> @(ASTMCImportStatement$MCImportStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTMCImportStatement.class);
  link artifact monticoregenerator -> @(ASTMethod$MethodBuilder.class);
  link artifact monticoregenerator -> @(ASTMethod.class);
  link artifact monticoregenerator -> @(ASTMethodParameter$MethodParameterBuilder.class);
  link artifact monticoregenerator -> @(ASTMethodParameter.class);
  link artifact monticoregenerator -> @(ASTNonTerminal$NonTerminalBuilder.class);
  link artifact monticoregenerator -> @(ASTNonTerminal.class);
  link artifact monticoregenerator -> @(ASTNonTerminalSeparator$NonTerminalSeparatorBuilder.class);
  link artifact monticoregenerator -> @(ASTNonTerminalSeparator.class);
  link artifact monticoregenerator -> @(ASTOption$OptionBuilder.class);
  link artifact monticoregenerator -> @(ASTOption.class);
  link artifact monticoregenerator -> @(ASTOptionValue$OptionValueBuilder.class);
  link artifact monticoregenerator -> @(ASTOptionValue.class);
  link artifact monticoregenerator -> @(ASTParserProd.class);
  link artifact monticoregenerator -> @(ASTProd.class);
  link artifact monticoregenerator -> @(ASTProdTOP.class);
  link artifact monticoregenerator -> @(ASTRuleComponent.class);
  link artifact monticoregenerator -> @(ASTRuleReference$RuleReferenceBuilder.class);
  link artifact monticoregenerator -> @(ASTRuleReference.class);
  link artifact monticoregenerator -> @(ASTSemanticpredicateOrAction$SemanticpredicateOrActionBuilder.class);
  link artifact monticoregenerator -> @(ASTSemanticpredicateOrAction.class);
  link artifact monticoregenerator -> @(ASTStartRule$StartRuleBuilder.class);
  link artifact monticoregenerator -> @(ASTStartRule.class);
  link artifact monticoregenerator -> @(ASTSymbolDefinition$SymbolDefinitionBuilder.class);
  link artifact monticoregenerator -> @(ASTSymbolDefinition.class);
  link artifact monticoregenerator -> @(ASTTerminal$TerminalBuilder.class);
  link artifact monticoregenerator -> @(ASTTerminal.class);
  link artifact monticoregenerator -> @(GrammarLiterals.class);
  link artifact monticoregenerator -> @(GrammarMill.class);
  link artifact monticoregenerator -> @(GrammarNodeFactory.class);
  link artifact monticoregenerator -> @(GrammarPackage$Literals.class);
  link artifact monticoregenerator -> @(GrammarPackage.class);
  link artifact monticoregenerator -> @(GrammarPackageImpl.class);
  link artifact monticoregenerator -> @(_cocos!4);
  link artifact monticoregenerator -> @(GrammarASTAbstractProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTActionExtCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTAltCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTAntlrOptionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTAnythingCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTASTRuleCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTAttributeInASTCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTBlockCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTCardCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTClassProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTConceptCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTConstantCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTConstantGroupCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTEnumProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTEofCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTExpressionPredicateExtCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTExternalProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTFollowOptionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTGenericTypeCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTGrammarNodeCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTGrammarOptionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTGrammarReferenceCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTInterfaceProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTITerminalCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexActionOrPredicateCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexAltCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexAnyCharCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexBlockCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexCharCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexCharRangeCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexComponentCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexNonTerminalCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexOptionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexSimpleIterationCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTLexStringCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMCAnythingCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMCConceptExtCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMCGrammarCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMCImportStatementCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMethodCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTMethodParameterCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTNonTerminalCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTNonTerminalSeparatorCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTOptionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTOptionValueCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTParserProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTProdCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTRuleComponentCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTRuleReferenceCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTSemanticpredicateOrActionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTStartRuleCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTSymbolDefinitionCoCo.class);
  link artifact monticoregenerator -> @(GrammarASTTerminalCoCo.class);
  link artifact monticoregenerator -> @(GrammarCoCoChecker.class);
  link artifact monticoregenerator -> @(GrammarGrammarPackageCoCo.class);
  link artifact monticoregenerator -> @(_od!4);
  link artifact monticoregenerator -> @(Grammar2OD.class);
  link artifact monticoregenerator -> @(_symboltable!13);
  link artifact monticoregenerator -> @(GrammarLanguage.class);
  link artifact monticoregenerator -> @(GrammarModelLoader.class);
  link artifact monticoregenerator -> @(_visitor!4);
  link artifact monticoregenerator -> @(GrammarDelegatorVisitor.class);
  link artifact monticoregenerator -> @(GrammarInheritanceVisitor.class);
  link artifact monticoregenerator -> @(GrammarParentAwareVisitor.class);
  link artifact monticoregenerator -> @(GrammarVisitor.class);
  link artifact monticoregenerator -> @(grammar_withconcepts);
  link artifact monticoregenerator -> @(_ast!11);
  link artifact monticoregenerator -> @(ASTAction$ActionBuilder.class);
  link artifact monticoregenerator -> @(ASTAction.class);
  link artifact monticoregenerator -> @(ASTConstantsGrammar_WithConcepts.class);
  link artifact monticoregenerator -> @(ASTExpressionPredicate$ExpressionPredicateBuilder.class);
  link artifact monticoregenerator -> @(ASTExpressionPredicate.class);
  link artifact monticoregenerator -> @(ASTGrammar_WithConceptsNode.class);
  link artifact monticoregenerator -> @(ASTJavaCode$JavaCodeBuilder.class);
  link artifact monticoregenerator -> @(ASTJavaCode.class);
  link artifact monticoregenerator -> @(ASTMCConcept$MCConceptBuilder.class);
  link artifact monticoregenerator -> @(ASTMCConcept.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsLiterals.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsMill.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsNodeFactory.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPackage$Literals.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPackage.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPackageImpl.class);
  link artifact monticoregenerator -> @(_cocos!5);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTActionCoCo.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTExpressionPredicateCoCo.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTJavaCodeCoCo.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTMCConceptCoCo.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsCoCoChecker.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.class);
  link artifact monticoregenerator -> @(_od!5);
  link artifact monticoregenerator -> @(Grammar_WithConcepts2OD.class);
  link artifact monticoregenerator -> @(_parser!3);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrBaseListener.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrLexer.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrListener.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AbstractProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AbstractProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ActionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Action_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AltContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Alt_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationArgumentsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationArguments_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationConstantContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationConstant_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationMethodContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationMethod_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationPairArgumentsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationPairArguments_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnnotationTypeElementDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Annotation_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnonymousClassContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnonymousClass_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrLexerActionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrLexerAction_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrOptionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrOption_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrParserActionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AntlrParserAction_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AnythingContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Anything_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArgumentsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Arguments_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayCreatorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayCreator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionByExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionByExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionByInitializer_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifierContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayDimensionSpecifier_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayInitializerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayInitializer_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ArrayType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AssertStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AssertStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ASTRuleContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ASTRule_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ASTStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ASTStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AttributeInASTContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$AttributeInAST_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BlockContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BlockStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BlockStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Block_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BooleanLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BooleanLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BooleanNotExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BooleanNotExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BracketExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BracketExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BreakStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$BreakStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CardContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Card_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchClauseContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchClause_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchExceptionsHandlerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchExceptionsHandler_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CatchType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CharLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CharLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBlockContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBlock_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBodyDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBodyDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassCreatorRestContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassCreatorRest_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassMemberDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassMemberDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ClassProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CommonForControlContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CommonForControl_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CompilationUnitContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CompilationUnit_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ComplexArrayTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ComplexArrayType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ComplexReferenceTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ComplexReferenceType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConceptAntlrContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConceptAntlr_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConceptContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Concept_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantDeclaratorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantDeclarator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabelContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantExpressionSwitchLabel_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantGroupContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstantGroup_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Constant_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstructorBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstructorBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstructorDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ConstructorDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ContinueStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ContinueStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CreatedNameContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CreatedName_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CreatorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CreatorExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$CreatorExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Creator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DeclaratorIdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DeclaratorId_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DefaultSwitchLabelContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DefaultSwitchLabel_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DefaultValueContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DefaultValue_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DoubleLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DoubleLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DoWhileStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$DoWhileStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValueArrayInitializerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValueArrayInitializer_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValueContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValueOrExprContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValueOrExpr_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValuePairContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValuePair_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ElementValue_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EmptyDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EmptyDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EmptyStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EmptyStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnhancedForControlContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnhancedForControl_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumConstantDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumConstantDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabelContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumConstantSwitchLabel_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EnumProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$EofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Eof_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExceptionHandlerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExceptionHandler_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExpressionPredicateContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExpressionPredicate_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExpressionStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExpressionStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Expression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExternalProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ExternalProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FieldDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FieldDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FinallyBlockContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandlerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FinallyBlockOnlyHandler_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FinallyBlock_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FloatLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FloatLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FollowOptionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FollowOption_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForControlContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForControl_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForInitByExpressionsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForInitByExpressions_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForInitContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForInit_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParameterContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParameterListingContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParameterListing_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParametersContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParameters_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$FormalParameter_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ForStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GenericInvocationSuffixContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GenericInvocationSuffix_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GenericTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GenericType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GrammarOptionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GrammarOption_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GrammarReferenceContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$GrammarReference_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgumentContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IdentifierAndTypeArgument_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IfStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IfStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ImportDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ImportDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ImportStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ImportStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InnerCreatorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InnerCreator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceBodyDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceBodyDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceMemberDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceMemberDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceMethodDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceMethodDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$InterfaceProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IntLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$IntLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ITerminalContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ITerminal_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$JavaBlockContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$JavaBlock_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$JavaCodeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$JavaCode_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LabeledStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LabeledStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LastFormalParameterContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LastFormalParameter_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexActionOrPredicateContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexActionOrPredicate_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexAltContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexAlt_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexAnyCharContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexAnyChar_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexBlockContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexBlock_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexCharContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexCharRangeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexCharRange_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexChar_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexComponentContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexComponent_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexNonTerminalContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexNonTerminal_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexOptionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexOption_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexSimpleIterationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexSimpleIteration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexStringContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LexString_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LiteralExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LiteralExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Literal_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LocalVariableDeclarationStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LocalVariableDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LogicalNotExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LogicalNotExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LongLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$LongLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCAnythingContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCAnything_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCConceptContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCConcept_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCGrammarContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCGrammar_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCImportStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MCImportStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodBodyContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodBody_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodParameterContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodParameter_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodSignatureContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$MethodSignature_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Method_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ModifierContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Modifier_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NameExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NameExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NonTerminalContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NonTerminalSeparatorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NonTerminalSeparator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NonTerminal_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NullLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NullLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NumericLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$NumericLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$OptionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$OptionValueContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$OptionValue_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Option_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PackageDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PackageDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ParserProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ParserProd_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrefixExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrefixExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimaryGenericInvocationExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimarySuperExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimarySuperExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimaryThisExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimaryThisExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveArrayTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveArrayType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveModifierContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveModifier_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$PrimitiveType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ProdContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Prod_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$QualifiedNameContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$QualifiedName_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReferenceTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReferenceType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ResourceContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Resource_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReturnStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReturnStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReturnTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ReturnType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$RuleComponentContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$RuleComponent_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$RuleReferenceContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$RuleReference_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$R__throwsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$R__throws_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SemanticpredicateOrActionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SemanticpredicateOrAction_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedDoubleLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedDoubleLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedFloatLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedFloatLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedIntLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedIntLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedLongLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedLongLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedNumericLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SignedNumericLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SimpleReferenceTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SimpleReferenceType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$StartRuleContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$StartRule_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$StatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Statement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$StringLiteralContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$StringLiteral_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SuperSuffixContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SuperSuffix_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroupContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchBlockStatementGroup_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchLabelContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchLabel_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SwitchStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SymbolDefinitionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SymbolDefinition_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SynchronizedStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$SynchronizedStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TerminalContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Terminal_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ThrowStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$ThrowStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TryStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TryStatementWithResourcesContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TryStatementWithResources_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TryStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeArgumentContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeArgumentsContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeArguments_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeArgument_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeCastExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeCastExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeParametersContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeParameters_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeVariableDeclarationContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$TypeVariableDeclaration_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$Type_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableDeclaratorContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableDeclarator_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableInitializerContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableInitializer_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableInititializerOrExpressionContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VariableInititializerOrExpression_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VoidTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$VoidType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$WhileStatementContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$WhileStatement_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$WildcardTypeContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser$WildcardType_eofContext.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsParser.class);
  link artifact monticoregenerator -> @(_symboltable!14);
  link artifact monticoregenerator -> @(Grammar_WithConceptsLanguage.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsModelLoader.class);
  link artifact monticoregenerator -> @(_visitor!5);
  link artifact monticoregenerator -> @(Grammar_WithConceptsDelegatorVisitor.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsInheritanceVisitor.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsParentAwareVisitor.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsVisitor.class);
  link artifact monticoregenerator -> @(HelperGrammar.class);
  link artifact monticoregenerator -> @(LexNamer.class);
  link artifact monticoregenerator -> @(MCGrammarInfo.class);
  link artifact monticoregenerator -> @(Multiplicity.class);
  link artifact monticoregenerator -> @(PredicatePair.class);
  link artifact monticoregenerator -> @(prettyprint!5);
  link artifact monticoregenerator -> @(AntlrPrettyPrinter.class);
  link artifact monticoregenerator -> @(GrammarPrettyPrinter.class);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPrettyPrinter.class);
  link artifact monticoregenerator -> @(RegExpBuilder.class);
  link artifact monticoregenerator -> @(symboltable!10);
  link artifact monticoregenerator -> @(MCGrammarScope.class);
  link artifact monticoregenerator -> @(MCGrammarSymbol$EssentialMCGrammarKind.class);
  link artifact monticoregenerator -> @(MCGrammarSymbol.class);
  link artifact monticoregenerator -> @(MCGrammarSymbolReference.class);
  link artifact monticoregenerator -> @(MCProdAttributeSymbol$MCProdAttributeKind.class);
  link artifact monticoregenerator -> @(MCProdAttributeSymbol.class);
  link artifact monticoregenerator -> @(MCProdComponentSymbol$MCProdComponentKind.class);
  link artifact monticoregenerator -> @(MCProdComponentSymbol.class);
  link artifact monticoregenerator -> @(MCProdOrTypeReference.class);
  link artifact monticoregenerator -> @(MCProdSymbol$MCProdKind.class);
  link artifact monticoregenerator -> @(MCProdSymbol.class);
  link artifact monticoregenerator -> @(MCProdSymbolReference.class);
  link artifact monticoregenerator -> @(MontiCoreGrammarLanguage.class);
  link artifact monticoregenerator -> @(MontiCoreGrammarModelLoader.class);
  link artifact monticoregenerator -> @(MontiCoreGrammarSymbolTableCreator.class);
  link artifact monticoregenerator -> @(transformation!2);
  link artifact monticoregenerator -> @(GrammarTransformer.class);
  link artifact monticoregenerator -> @(RuleComponentListFinder.class);
  link artifact monticoregenerator -> @(GrammarWithConcepts2OD.class);
  link artifact monticoregenerator -> @(MontiCoreConfiguration$Options.class);
  link artifact monticoregenerator -> @(MontiCoreConfiguration.class);
  link artifact monticoregenerator -> @(MontiCoreGrammarLanguageFamily.class);
  link artifact monticoregenerator -> @(MontiCoreNodeIdentifierHelper.class);
  link artifact monticoregenerator -> @(MontiCoreReports.class);
  link artifact monticoregenerator -> @(MontiCoreScript$Runner.class);
  link artifact monticoregenerator -> @(MontiCoreScript.class);
  link artifact monticoregenerator -> @(ODReporter.class);
  link artifact monticoregenerator -> @(od!4);
  link artifact monticoregenerator -> @(DiagramVisitor.ftl!2);
  link artifact monticoregenerator -> @(parser!6);
  link artifact monticoregenerator -> @(LexerMember.ftl!2);
  link artifact monticoregenerator -> @(MCGrammarParser.class);
  link artifact monticoregenerator -> @(MCParser.ftl!2);
  link artifact monticoregenerator -> @(MCParserMethods.ftl!2);
  link artifact monticoregenerator -> @(Parser.ftl!2);
  link artifact monticoregenerator -> @(ParserHeader.ftl!2);
  link artifact monticoregenerator -> @(symboltable!11);
  link artifact monticoregenerator -> @(mill!2);
  link artifact monticoregenerator -> @(Attribute.ftl!4);
  link artifact monticoregenerator -> @(Method.ftl!2);
  link artifact monticoregenerator -> @(ModelingLanguage.ftl!2);
  link artifact monticoregenerator -> @(ModelLoader.ftl!2);
  link artifact monticoregenerator -> @(ModelNameCalculator.ftl!2);
  link artifact monticoregenerator -> @(ResolvingFilter.ftl!2);
  link artifact monticoregenerator -> @(Scope.ftl!2);
  link artifact monticoregenerator -> @(ScopeSpanningSymbol.ftl!2);
  link artifact monticoregenerator -> @(Symbol.ftl!2);
  link artifact monticoregenerator -> @(SymbolBuilder.ftl!2);
  link artifact monticoregenerator -> @(SymbolInterface.ftl!2);
  link artifact monticoregenerator -> @(SymbolKind.ftl!2);
  link artifact monticoregenerator -> @(SymbolMill.ftl!2);
  link artifact monticoregenerator -> @(SymbolReference.ftl!2);
  link artifact monticoregenerator -> @(symbols!2);
  link artifact monticoregenerator -> @(GetAstNodeMethod.ftl!2);
  link artifact monticoregenerator -> @(KindConstantDeclaration.ftl!2);
  link artifact monticoregenerator -> @(SymbolTableCreator.ftl!2);
  link artifact monticoregenerator -> @(symboltablecreators!2);
  link artifact monticoregenerator -> @(EndVisitMethod.ftl!2);
  link artifact monticoregenerator -> @(InitializeSymbol.ftl!2);
  link artifact monticoregenerator -> @(ScopeMethods.ftl!2);
  link artifact monticoregenerator -> @(ScopeSpanningSymbolMethods.ftl!2);
  link artifact monticoregenerator -> @(SetEnclosingScopeOfNodes.ftl!2);
  link artifact monticoregenerator -> @(SymbolMethods.ftl!2);
  link artifact monticoregenerator -> @(types!7);
  link artifact monticoregenerator -> @(TypeResolver.ftl!2);
  link artifact monticoregenerator -> @(visitor!7);
  link artifact monticoregenerator -> @(DelegatorVisitor.ftl!2);
  link artifact monticoregenerator -> @(InheritanceVisitor.ftl!2);
  link artifact monticoregenerator -> @(ParentAwareVisitor.ftl!2);
  link artifact monticoregenerator -> @(SimpleVisitor.ftl!2);
  link artifact monticoregenerator -> @(generated-sources!3);
  link artifact monticoregenerator -> @(annotations!3);
  link artifact monticoregenerator -> @(monticore!18);
  link artifact monticoregenerator -> @(codetocompile);
  link artifact monticoregenerator -> @(automaton!13);
  link artifact monticoregenerator -> @(_ast!12);
  link artifact monticoregenerator -> @(ASTAutomaton.class);
  link artifact monticoregenerator -> @(ASTAutomaton.java!3);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.class);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!3);
  link artifact monticoregenerator -> @(ASTAutomatonNode.class);
  link artifact monticoregenerator -> @(ASTAutomatonNode.java!2);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton.class);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton.java!2);
  link artifact monticoregenerator -> @(ASTState.class);
  link artifact monticoregenerator -> @(ASTState.java!4);
  link artifact monticoregenerator -> @(ASTStateBuilder.class);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!4);
  link artifact monticoregenerator -> @(ASTTransition.class);
  link artifact monticoregenerator -> @(ASTTransition.java!3);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!3);
  link artifact monticoregenerator -> @(AutomatonLiterals.class);
  link artifact monticoregenerator -> @(AutomatonLiterals.java!2);
  link artifact monticoregenerator -> @(AutomatonMill.class);
  link artifact monticoregenerator -> @(AutomatonMill.java!2);
  link artifact monticoregenerator -> @(AutomatonNodeFactory.class);
  link artifact monticoregenerator -> @(AutomatonNodeFactory.java!2);
  link artifact monticoregenerator -> @(_cocos!6);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonCoCo.class);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonCoCo.java!2);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonNodeCoCo.class);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonNodeCoCo.java!2);
  link artifact monticoregenerator -> @(AutomatonASTStateCoCo.class);
  link artifact monticoregenerator -> @(AutomatonASTStateCoCo.java!2);
  link artifact monticoregenerator -> @(AutomatonASTTransitionCoCo.class);
  link artifact monticoregenerator -> @(AutomatonASTTransitionCoCo.java!2);
  link artifact monticoregenerator -> @(AutomatonCoCoChecker.class);
  link artifact monticoregenerator -> @(AutomatonCoCoChecker.java!2);
  link artifact monticoregenerator -> @(_od!6);
  link artifact monticoregenerator -> @(Automaton2OD.class);
  link artifact monticoregenerator -> @(Automaton2OD.java!2);
  link artifact monticoregenerator -> @(_parser!4);
  link artifact monticoregenerator -> @(AutomatonAntlrBaseListener.class);
  link artifact monticoregenerator -> @(AutomatonAntlrBaseListener.java!2);
  link artifact monticoregenerator -> @(AutomatonAntlrLexer.class);
  link artifact monticoregenerator -> @(AutomatonAntlrLexer.java!2);
  link artifact monticoregenerator -> @(AutomatonAntlrListener.class);
  link artifact monticoregenerator -> @(AutomatonAntlrListener.java!2);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$AutomatonContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$Automaton_eofContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$StateContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$State_eofContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$TransitionContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser$Transition_eofContext.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser.class);
  link artifact monticoregenerator -> @(AutomatonAntlrParser.java!2);
  link artifact monticoregenerator -> @(AutomatonParser.class);
  link artifact monticoregenerator -> @(AutomatonParser.java!2);
  link artifact monticoregenerator -> @(_visitor!6);
  link artifact monticoregenerator -> @(AutomatonDelegatorVisitor.class);
  link artifact monticoregenerator -> @(AutomatonDelegatorVisitor.java!2);
  link artifact monticoregenerator -> @(AutomatonInheritanceVisitor.class);
  link artifact monticoregenerator -> @(AutomatonInheritanceVisitor.java!2);
  link artifact monticoregenerator -> @(AutomatonParentAwareVisitor.class);
  link artifact monticoregenerator -> @(AutomatonParentAwareVisitor.java!2);
  link artifact monticoregenerator -> @(AutomatonVisitor.class);
  link artifact monticoregenerator -> @(AutomatonVisitor.java!2);
  link artifact monticoregenerator -> @(de!18);
  link artifact monticoregenerator -> @(monticore!19);
  link artifact monticoregenerator -> @(action!3);
  link artifact monticoregenerator -> @(_ast!13);
  link artifact monticoregenerator -> @(ActionLiterals.class);
  link artifact monticoregenerator -> @(ActionLiterals.java);
  link artifact monticoregenerator -> @(ActionMill.class);
  link artifact monticoregenerator -> @(ActionMill.java);
  link artifact monticoregenerator -> @(ActionNodeFactory.class);
  link artifact monticoregenerator -> @(ActionNodeFactory.java);
  link artifact monticoregenerator -> @(ASTA.class);
  link artifact monticoregenerator -> @(ASTA.java);
  link artifact monticoregenerator -> @(ASTABuilder.class);
  link artifact monticoregenerator -> @(ASTABuilder.java);
  link artifact monticoregenerator -> @(ASTActionNode.class);
  link artifact monticoregenerator -> @(ASTActionNode.java);
  link artifact monticoregenerator -> @(ASTConstantsAction.class);
  link artifact monticoregenerator -> @(ASTConstantsAction.java);
  link artifact monticoregenerator -> @(_cocos!7);
  link artifact monticoregenerator -> @(ActionASTACoCo.class);
  link artifact monticoregenerator -> @(ActionASTACoCo.java);
  link artifact monticoregenerator -> @(ActionASTActionNodeCoCo.class);
  link artifact monticoregenerator -> @(ActionASTActionNodeCoCo.java);
  link artifact monticoregenerator -> @(ActionCoCoChecker.class);
  link artifact monticoregenerator -> @(ActionCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!7);
  link artifact monticoregenerator -> @(Action2OD.class);
  link artifact monticoregenerator -> @(Action2OD.java);
  link artifact monticoregenerator -> @(_parser!5);
  link artifact monticoregenerator -> @(ActionAntlrBaseListener.class);
  link artifact monticoregenerator -> @(ActionAntlrBaseListener.java);
  link artifact monticoregenerator -> @(ActionAntlrLexer.class);
  link artifact monticoregenerator -> @(ActionAntlrLexer.java);
  link artifact monticoregenerator -> @(ActionAntlrListener.class);
  link artifact monticoregenerator -> @(ActionAntlrListener.java);
  link artifact monticoregenerator -> @(ActionAntlrParser$AContext.class);
  link artifact monticoregenerator -> @(ActionAntlrParser$A_eofContext.class);
  link artifact monticoregenerator -> @(ActionAntlrParser$Name2Context.class);
  link artifact monticoregenerator -> @(ActionAntlrParser$NameContext.class);
  link artifact monticoregenerator -> @(ActionAntlrParser.class);
  link artifact monticoregenerator -> @(ActionAntlrParser.java);
  link artifact monticoregenerator -> @(ActionParser.class);
  link artifact monticoregenerator -> @(ActionParser.java);
  link artifact monticoregenerator -> @(_visitor!7);
  link artifact monticoregenerator -> @(ActionDelegatorVisitor.class);
  link artifact monticoregenerator -> @(ActionDelegatorVisitor.java);
  link artifact monticoregenerator -> @(ActionInheritanceVisitor.class);
  link artifact monticoregenerator -> @(ActionInheritanceVisitor.java);
  link artifact monticoregenerator -> @(ActionParentAwareVisitor.class);
  link artifact monticoregenerator -> @(ActionParentAwareVisitor.java);
  link artifact monticoregenerator -> @(ActionVisitor.class);
  link artifact monticoregenerator -> @(ActionVisitor.java);
  link artifact monticoregenerator -> @(astattributes);
  link artifact monticoregenerator -> @(_ast!14);
  link artifact monticoregenerator -> @(ASTA.class!2);
  link artifact monticoregenerator -> @(ASTA.java!2);
  link artifact monticoregenerator -> @(ASTABuilder.class!2);
  link artifact monticoregenerator -> @(ASTABuilder.java!2);
  link artifact monticoregenerator -> @(ASTAstAttributesNode.class);
  link artifact monticoregenerator -> @(ASTAstAttributesNode.java);
  link artifact monticoregenerator -> @(AstAttributesLiterals.class);
  link artifact monticoregenerator -> @(AstAttributesLiterals.java);
  link artifact monticoregenerator -> @(AstAttributesMill.class);
  link artifact monticoregenerator -> @(AstAttributesMill.java);
  link artifact monticoregenerator -> @(AstAttributesNodeFactory.class);
  link artifact monticoregenerator -> @(AstAttributesNodeFactory.java);
  link artifact monticoregenerator -> @(ASTB.class);
  link artifact monticoregenerator -> @(ASTB.java);
  link artifact monticoregenerator -> @(ASTBBuilder.class);
  link artifact monticoregenerator -> @(ASTBBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsAstAttributes.class);
  link artifact monticoregenerator -> @(ASTConstantsAstAttributes.java);
  link artifact monticoregenerator -> @(ASTTransformationStructure.class);
  link artifact monticoregenerator -> @(ASTTransformationStructure.java);
  link artifact monticoregenerator -> @(ASTTransformationStructureBuilder.class);
  link artifact monticoregenerator -> @(ASTTransformationStructureBuilder.java);
  link artifact monticoregenerator -> @(_cocos!8);
  link artifact monticoregenerator -> @(AstAttributesASTACoCo.java);
  link artifact monticoregenerator -> @(AstAttributesASTAstAttributesNodeCoCo.java);
  link artifact monticoregenerator -> @(AstAttributesASTBCoCo.java);
  link artifact monticoregenerator -> @(AstAttributesASTTransformationStructureCoCo.java);
  link artifact monticoregenerator -> @(AstAttributesCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!8);
  link artifact monticoregenerator -> @(AstAttributes2OD.java);
  link artifact monticoregenerator -> @(_visitor!8);
  link artifact monticoregenerator -> @(AstAttributesDelegatorVisitor.java);
  link artifact monticoregenerator -> @(AstAttributesInheritanceVisitor.java);
  link artifact monticoregenerator -> @(AstAttributesParentAwareVisitor.java);
  link artifact monticoregenerator -> @(AstAttributesVisitor.class);
  link artifact monticoregenerator -> @(AstAttributesVisitor.java);
  link artifact monticoregenerator -> @(astmethods);
  link artifact monticoregenerator -> @(_ast!15);
  link artifact monticoregenerator -> @(ASTA.class!3);
  link artifact monticoregenerator -> @(ASTA.java!3);
  link artifact monticoregenerator -> @(ASTABuilder.class!3);
  link artifact monticoregenerator -> @(ASTABuilder.java!3);
  link artifact monticoregenerator -> @(ASTAstMethodsNode.class);
  link artifact monticoregenerator -> @(ASTAstMethodsNode.java);
  link artifact monticoregenerator -> @(ASTB.class!2);
  link artifact monticoregenerator -> @(ASTB.java!2);
  link artifact monticoregenerator -> @(ASTBBuilder.class!2);
  link artifact monticoregenerator -> @(ASTBBuilder.java!2);
  link artifact monticoregenerator -> @(ASTC.class);
  link artifact monticoregenerator -> @(ASTC.java);
  link artifact monticoregenerator -> @(ASTCBuilder.class);
  link artifact monticoregenerator -> @(ASTCBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsAstMethods.class);
  link artifact monticoregenerator -> @(ASTConstantsAstMethods.java);
  link artifact monticoregenerator -> @(AstMethodsLiterals.class);
  link artifact monticoregenerator -> @(AstMethodsLiterals.java);
  link artifact monticoregenerator -> @(AstMethodsMill.class);
  link artifact monticoregenerator -> @(AstMethodsMill.java);
  link artifact monticoregenerator -> @(AstMethodsNodeFactory.class);
  link artifact monticoregenerator -> @(AstMethodsNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!9);
  link artifact monticoregenerator -> @(AstMethodsASTACoCo.java);
  link artifact monticoregenerator -> @(AstMethodsASTAstMethodsNodeCoCo.java);
  link artifact monticoregenerator -> @(AstMethodsASTBCoCo.java);
  link artifact monticoregenerator -> @(AstMethodsASTCCoCo.java);
  link artifact monticoregenerator -> @(AstMethodsCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!9);
  link artifact monticoregenerator -> @(AstMethods2OD.java);
  link artifact monticoregenerator -> @(_visitor!9);
  link artifact monticoregenerator -> @(AstMethodsDelegatorVisitor.java);
  link artifact monticoregenerator -> @(AstMethodsInheritanceVisitor.java);
  link artifact monticoregenerator -> @(AstMethodsParentAwareVisitor.java);
  link artifact monticoregenerator -> @(AstMethodsVisitor.class);
  link artifact monticoregenerator -> @(AstMethodsVisitor.java);
  link artifact monticoregenerator -> @(cdattributes);
  link artifact monticoregenerator -> @(_ast!16);
  link artifact monticoregenerator -> @(ASTA.class!4);
  link artifact monticoregenerator -> @(ASTA.java!4);
  link artifact monticoregenerator -> @(ASTABuilder.class!4);
  link artifact monticoregenerator -> @(ASTABuilder.java!4);
  link artifact monticoregenerator -> @(ASTB.class!3);
  link artifact monticoregenerator -> @(ASTB.java!3);
  link artifact monticoregenerator -> @(ASTBBuilder.class!3);
  link artifact monticoregenerator -> @(ASTBBuilder.java!3);
  link artifact monticoregenerator -> @(ASTC.class!2);
  link artifact monticoregenerator -> @(ASTC.java!2);
  link artifact monticoregenerator -> @(ASTCBuilder.class!2);
  link artifact monticoregenerator -> @(ASTCBuilder.java!2);
  link artifact monticoregenerator -> @(ASTCD.class);
  link artifact monticoregenerator -> @(ASTCD.java);
  link artifact monticoregenerator -> @(ASTCdAttributesNode.class);
  link artifact monticoregenerator -> @(ASTCdAttributesNode.java);
  link artifact monticoregenerator -> @(ASTCDBuilder.class);
  link artifact monticoregenerator -> @(ASTCDBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsCdAttributes.class);
  link artifact monticoregenerator -> @(ASTConstantsCdAttributes.java);
  link artifact monticoregenerator -> @(ASTD.class);
  link artifact monticoregenerator -> @(ASTD.java);
  link artifact monticoregenerator -> @(ASTDBuilder.class);
  link artifact monticoregenerator -> @(ASTDBuilder.java);
  link artifact monticoregenerator -> @(CdAttributesLiterals.class);
  link artifact monticoregenerator -> @(CdAttributesLiterals.java);
  link artifact monticoregenerator -> @(CdAttributesMill.class);
  link artifact monticoregenerator -> @(CdAttributesMill.java);
  link artifact monticoregenerator -> @(CdAttributesNodeFactory.class);
  link artifact monticoregenerator -> @(CdAttributesNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!10);
  link artifact monticoregenerator -> @(CdAttributesASTACoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTACoCo.java);
  link artifact monticoregenerator -> @(CdAttributesASTBCoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTBCoCo.java);
  link artifact monticoregenerator -> @(CdAttributesASTCCoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTCCoCo.java);
  link artifact monticoregenerator -> @(CdAttributesASTCdAttributesNodeCoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTCdAttributesNodeCoCo.java);
  link artifact monticoregenerator -> @(CdAttributesASTCDCoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTCDCoCo.java);
  link artifact monticoregenerator -> @(CdAttributesASTDCoCo.class);
  link artifact monticoregenerator -> @(CdAttributesASTDCoCo.java);
  link artifact monticoregenerator -> @(CdAttributesCoCoChecker.class);
  link artifact monticoregenerator -> @(CdAttributesCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!10);
  link artifact monticoregenerator -> @(CdAttributes2OD.class);
  link artifact monticoregenerator -> @(CdAttributes2OD.java);
  link artifact monticoregenerator -> @(_parser!6);
  link artifact monticoregenerator -> @(CdAttributesAntlrBaseListener.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrBaseListener.java);
  link artifact monticoregenerator -> @(CdAttributesAntlrLexer.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrLexer.java);
  link artifact monticoregenerator -> @(CdAttributesAntlrListener.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrListener.java);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$AContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$A_eofContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$BContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$B_eofContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$CContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$CDContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$CD_eofContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$C_eofContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$DContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser$D_eofContext.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser.class);
  link artifact monticoregenerator -> @(CdAttributesAntlrParser.java);
  link artifact monticoregenerator -> @(CdAttributesParser.class);
  link artifact monticoregenerator -> @(CdAttributesParser.java);
  link artifact monticoregenerator -> @(_visitor!10);
  link artifact monticoregenerator -> @(CdAttributesDelegatorVisitor.class);
  link artifact monticoregenerator -> @(CdAttributesDelegatorVisitor.java);
  link artifact monticoregenerator -> @(CdAttributesInheritanceVisitor.class);
  link artifact monticoregenerator -> @(CdAttributesInheritanceVisitor.java);
  link artifact monticoregenerator -> @(CdAttributesParentAwareVisitor.class);
  link artifact monticoregenerator -> @(CdAttributesParentAwareVisitor.java);
  link artifact monticoregenerator -> @(CdAttributesVisitor.class);
  link artifact monticoregenerator -> @(CdAttributesVisitor.java);
  link artifact monticoregenerator -> @(emf!7);
  link artifact monticoregenerator -> @(automaton!14);
  link artifact monticoregenerator -> @(_ast!17);
  link artifact monticoregenerator -> @(ASTAutomaton.class!2);
  link artifact monticoregenerator -> @(ASTAutomaton.java!4);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.class!2);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!4);
  link artifact monticoregenerator -> @(ASTAutomatonNode.class!2);
  link artifact monticoregenerator -> @(ASTAutomatonNode.java!3);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton.class!2);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton.java!3);
  link artifact monticoregenerator -> @(ASTState.class!2);
  link artifact monticoregenerator -> @(ASTState.java!5);
  link artifact monticoregenerator -> @(ASTStateBuilder.class!2);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!5);
  link artifact monticoregenerator -> @(ASTTransition.class!2);
  link artifact monticoregenerator -> @(ASTTransition.java!4);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class!2);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!4);
  link artifact monticoregenerator -> @(AutomatonLiterals.class!2);
  link artifact monticoregenerator -> @(AutomatonLiterals.java!3);
  link artifact monticoregenerator -> @(AutomatonMill.class!2);
  link artifact monticoregenerator -> @(AutomatonMill.java!3);
  link artifact monticoregenerator -> @(AutomatonNodeFactory.class!2);
  link artifact monticoregenerator -> @(AutomatonNodeFactory.java!3);
  link artifact monticoregenerator -> @(_cocos!11);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonCoCo.class!2);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonCoCo.java!3);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonNodeCoCo.class!2);
  link artifact monticoregenerator -> @(AutomatonASTAutomatonNodeCoCo.java!3);
  link artifact monticoregenerator -> @(AutomatonASTStateCoCo.class!2);
  link artifact monticoregenerator -> @(AutomatonASTStateCoCo.java!3);
  link artifact monticoregenerator -> @(AutomatonASTTransitionCoCo.class!2);
  link artifact monticoregenerator -> @(AutomatonASTTransitionCoCo.java!3);
  link artifact monticoregenerator -> @(AutomatonCoCoChecker.class!2);
  link artifact monticoregenerator -> @(AutomatonCoCoChecker.java!3);
  link artifact monticoregenerator -> @(_od!11);
  link artifact monticoregenerator -> @(Automaton2OD.class!2);
  link artifact monticoregenerator -> @(Automaton2OD.java!3);
  link artifact monticoregenerator -> @(_visitor!11);
  link artifact monticoregenerator -> @(AutomatonDelegatorVisitor.class!2);
  link artifact monticoregenerator -> @(AutomatonDelegatorVisitor.java!3);
  link artifact monticoregenerator -> @(AutomatonInheritanceVisitor.class!2);
  link artifact monticoregenerator -> @(AutomatonInheritanceVisitor.java!3);
  link artifact monticoregenerator -> @(AutomatonParentAwareVisitor.class!2);
  link artifact monticoregenerator -> @(AutomatonParentAwareVisitor.java!3);
  link artifact monticoregenerator -> @(AutomatonVisitor.class!2);
  link artifact monticoregenerator -> @(AutomatonVisitor.java!3);
  link artifact monticoregenerator -> @(automaton2);
  link artifact monticoregenerator -> @(_ast!18);
  link artifact monticoregenerator -> @(ASTAction.class!2);
  link artifact monticoregenerator -> @(ASTAction.java);
  link artifact monticoregenerator -> @(ASTActionBuilder.class);
  link artifact monticoregenerator -> @(ASTActionBuilder.java);
  link artifact monticoregenerator -> @(ASTAutomaton.class!3);
  link artifact monticoregenerator -> @(ASTAutomaton.java!5);
  link artifact monticoregenerator -> @(ASTAutomaton2Node.class);
  link artifact monticoregenerator -> @(ASTAutomaton2Node.java);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.class!3);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!5);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton2.class);
  link artifact monticoregenerator -> @(ASTConstantsAutomaton2.java);
  link artifact monticoregenerator -> @(ASTState.class!3);
  link artifact monticoregenerator -> @(ASTState.java!6);
  link artifact monticoregenerator -> @(ASTStateBuilder.class!3);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!6);
  link artifact monticoregenerator -> @(ASTTransition.class!3);
  link artifact monticoregenerator -> @(ASTTransition.java!5);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class!3);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!5);
  link artifact monticoregenerator -> @(Automaton2Literals.class);
  link artifact monticoregenerator -> @(Automaton2Literals.java);
  link artifact monticoregenerator -> @(Automaton2Mill.class);
  link artifact monticoregenerator -> @(Automaton2Mill.java);
  link artifact monticoregenerator -> @(Automaton2NodeFactory.class);
  link artifact monticoregenerator -> @(Automaton2NodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!12);
  link artifact monticoregenerator -> @(Automaton2ASTActionCoCo.class);
  link artifact monticoregenerator -> @(Automaton2ASTActionCoCo.java);
  link artifact monticoregenerator -> @(Automaton2ASTAutomaton2NodeCoCo.class);
  link artifact monticoregenerator -> @(Automaton2ASTAutomaton2NodeCoCo.java);
  link artifact monticoregenerator -> @(Automaton2ASTAutomatonCoCo.class);
  link artifact monticoregenerator -> @(Automaton2ASTAutomatonCoCo.java);
  link artifact monticoregenerator -> @(Automaton2ASTStateCoCo.class);
  link artifact monticoregenerator -> @(Automaton2ASTStateCoCo.java);
  link artifact monticoregenerator -> @(Automaton2ASTTransitionCoCo.class);
  link artifact monticoregenerator -> @(Automaton2ASTTransitionCoCo.java);
  link artifact monticoregenerator -> @(Automaton2CoCoChecker.class);
  link artifact monticoregenerator -> @(Automaton2CoCoChecker.java);
  link artifact monticoregenerator -> @(_od!12);
  link artifact monticoregenerator -> @(Automaton22OD.class);
  link artifact monticoregenerator -> @(Automaton22OD.java);
  link artifact monticoregenerator -> @(_visitor!12);
  link artifact monticoregenerator -> @(Automaton2DelegatorVisitor.class);
  link artifact monticoregenerator -> @(Automaton2DelegatorVisitor.java);
  link artifact monticoregenerator -> @(Automaton2InheritanceVisitor.class);
  link artifact monticoregenerator -> @(Automaton2InheritanceVisitor.java);
  link artifact monticoregenerator -> @(Automaton2ParentAwareVisitor.class);
  link artifact monticoregenerator -> @(Automaton2ParentAwareVisitor.java);
  link artifact monticoregenerator -> @(Automaton2Visitor.class);
  link artifact monticoregenerator -> @(Automaton2Visitor.java);
  link artifact monticoregenerator -> @(expression!4);
  link artifact monticoregenerator -> @(expression!5);
  link artifact monticoregenerator -> @(_ast!19);
  link artifact monticoregenerator -> @(ASTConstantsExpression.class);
  link artifact monticoregenerator -> @(ASTConstantsExpression.java);
  link artifact monticoregenerator -> @(ASTExpr.class);
  link artifact monticoregenerator -> @(ASTExpr.java);
  link artifact monticoregenerator -> @(ASTExprBuilder.class);
  link artifact monticoregenerator -> @(ASTExprBuilder.java);
  link artifact monticoregenerator -> @(ASTExpressionNode.class);
  link artifact monticoregenerator -> @(ASTExpressionNode.java);
  link artifact monticoregenerator -> @(ExpressionLiterals.class);
  link artifact monticoregenerator -> @(ExpressionLiterals.java);
  link artifact monticoregenerator -> @(ExpressionMill.class);
  link artifact monticoregenerator -> @(ExpressionMill.java);
  link artifact monticoregenerator -> @(ExpressionNodeFactory.class);
  link artifact monticoregenerator -> @(ExpressionNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!13);
  link artifact monticoregenerator -> @(ExpressionASTExprCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTExprCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTExpressionNodeCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTExpressionNodeCoCo.java);
  link artifact monticoregenerator -> @(ExpressionCoCoChecker.class);
  link artifact monticoregenerator -> @(ExpressionCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!13);
  link artifact monticoregenerator -> @(Expression2OD.class);
  link artifact monticoregenerator -> @(Expression2OD.java);
  link artifact monticoregenerator -> @(_parser!7);
  link artifact monticoregenerator -> @(ExpressionAntlrBaseListener.class);
  link artifact monticoregenerator -> @(ExpressionAntlrBaseListener.java);
  link artifact monticoregenerator -> @(ExpressionAntlrLexer.class);
  link artifact monticoregenerator -> @(ExpressionAntlrLexer.java);
  link artifact monticoregenerator -> @(ExpressionAntlrListener.class);
  link artifact monticoregenerator -> @(ExpressionAntlrListener.java);
  link artifact monticoregenerator -> @(ExpressionAntlrParser$ExprContext.class);
  link artifact monticoregenerator -> @(ExpressionAntlrParser$Expr_eofContext.class);
  link artifact monticoregenerator -> @(ExpressionAntlrParser.class);
  link artifact monticoregenerator -> @(ExpressionAntlrParser.java);
  link artifact monticoregenerator -> @(ExpressionParser.class);
  link artifact monticoregenerator -> @(ExpressionParser.java);
  link artifact monticoregenerator -> @(_visitor!13);
  link artifact monticoregenerator -> @(ExpressionDelegatorVisitor.class);
  link artifact monticoregenerator -> @(ExpressionDelegatorVisitor.java);
  link artifact monticoregenerator -> @(ExpressionInheritanceVisitor.class);
  link artifact monticoregenerator -> @(ExpressionInheritanceVisitor.java);
  link artifact monticoregenerator -> @(ExpressionParentAwareVisitor.class);
  link artifact monticoregenerator -> @(ExpressionParentAwareVisitor.java);
  link artifact monticoregenerator -> @(ExpressionVisitor.class);
  link artifact monticoregenerator -> @(ExpressionVisitor.java);
  link artifact monticoregenerator -> @(fautomaton!4);
  link artifact monticoregenerator -> @(action!4);
  link artifact monticoregenerator -> @(expression!6);
  link artifact monticoregenerator -> @(_ast!20);
  link artifact monticoregenerator -> @(ASTAssignment.class);
  link artifact monticoregenerator -> @(ASTAssignment.java);
  link artifact monticoregenerator -> @(ASTAssignmentBuilder.class);
  link artifact monticoregenerator -> @(ASTAssignmentBuilder.java);
  link artifact monticoregenerator -> @(ASTComplexAssigment.class);
  link artifact monticoregenerator -> @(ASTComplexAssigment.java);
  link artifact monticoregenerator -> @(ASTComplexAssigmentBuilder.class);
  link artifact monticoregenerator -> @(ASTComplexAssigmentBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsExpression.class!2);
  link artifact monticoregenerator -> @(ASTConstantsExpression.java!2);
  link artifact monticoregenerator -> @(ASTDecreaseExpression.class);
  link artifact monticoregenerator -> @(ASTDecreaseExpression.java);
  link artifact monticoregenerator -> @(ASTDecreaseExpressionBuilder.class);
  link artifact monticoregenerator -> @(ASTDecreaseExpressionBuilder.java);
  link artifact monticoregenerator -> @(ASTExpression.class);
  link artifact monticoregenerator -> @(ASTExpression.java);
  link artifact monticoregenerator -> @(ASTExpressionNode.class!2);
  link artifact monticoregenerator -> @(ASTExpressionNode.java!2);
  link artifact monticoregenerator -> @(ASTIncreaseExpression.class);
  link artifact monticoregenerator -> @(ASTIncreaseExpression.java);
  link artifact monticoregenerator -> @(ASTIncreaseExpressionBuilder.class);
  link artifact monticoregenerator -> @(ASTIncreaseExpressionBuilder.java);
  link artifact monticoregenerator -> @(ASTValue.class);
  link artifact monticoregenerator -> @(ASTValue.java);
  link artifact monticoregenerator -> @(ExpressionLiterals.class!2);
  link artifact monticoregenerator -> @(ExpressionLiterals.java!2);
  link artifact monticoregenerator -> @(ExpressionMill.class!2);
  link artifact monticoregenerator -> @(ExpressionMill.java!2);
  link artifact monticoregenerator -> @(ExpressionNodeFactory.class!2);
  link artifact monticoregenerator -> @(ExpressionNodeFactory.java!2);
  link artifact monticoregenerator -> @(_cocos!14);
  link artifact monticoregenerator -> @(ExpressionASTAssignmentCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTAssignmentCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTComplexAssigmentCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTComplexAssigmentCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTDecreaseExpressionCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTDecreaseExpressionCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTExpressionCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTExpressionCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTExpressionNodeCoCo.class!2);
  link artifact monticoregenerator -> @(ExpressionASTExpressionNodeCoCo.java!2);
  link artifact monticoregenerator -> @(ExpressionASTIncreaseExpressionCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTIncreaseExpressionCoCo.java);
  link artifact monticoregenerator -> @(ExpressionASTValueCoCo.class);
  link artifact monticoregenerator -> @(ExpressionASTValueCoCo.java);
  link artifact monticoregenerator -> @(ExpressionCoCoChecker.class!2);
  link artifact monticoregenerator -> @(ExpressionCoCoChecker.java!2);
  link artifact monticoregenerator -> @(_od!14);
  link artifact monticoregenerator -> @(Expression2OD.class!2);
  link artifact monticoregenerator -> @(Expression2OD.java!2);
  link artifact monticoregenerator -> @(_visitor!14);
  link artifact monticoregenerator -> @(ExpressionDelegatorVisitor.class!2);
  link artifact monticoregenerator -> @(ExpressionDelegatorVisitor.java!2);
  link artifact monticoregenerator -> @(ExpressionInheritanceVisitor.class!2);
  link artifact monticoregenerator -> @(ExpressionInheritanceVisitor.java!2);
  link artifact monticoregenerator -> @(ExpressionParentAwareVisitor.class!2);
  link artifact monticoregenerator -> @(ExpressionParentAwareVisitor.java!2);
  link artifact monticoregenerator -> @(ExpressionVisitor.class!2);
  link artifact monticoregenerator -> @(ExpressionVisitor.java!2);
  link artifact monticoregenerator -> @(automaton!15);
  link artifact monticoregenerator -> @(flatautomaton);
  link artifact monticoregenerator -> @(_ast!21);
  link artifact monticoregenerator -> @(ASTA0.java);
  link artifact monticoregenerator -> @(ASTA1.java);
  link artifact monticoregenerator -> @(ASTAutomaton.java!6);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!6);
  link artifact monticoregenerator -> @(ASTB0.java);
  link artifact monticoregenerator -> @(ASTB1.java);
  link artifact monticoregenerator -> @(ASTC0.java);
  link artifact monticoregenerator -> @(ASTC1.java);
  link artifact monticoregenerator -> @(ASTConstantsFlatAutomaton.java);
  link artifact monticoregenerator -> @(ASTFlatAutomatonNode.java);
  link artifact monticoregenerator -> @(ASTM.java);
  link artifact monticoregenerator -> @(ASTMBuilder.java);
  link artifact monticoregenerator -> @(ASTP.java);
  link artifact monticoregenerator -> @(ASTP1.java);
  link artifact monticoregenerator -> @(ASTP1Builder.java);
  link artifact monticoregenerator -> @(ASTPBuilder.java);
  link artifact monticoregenerator -> @(ASTState.java!7);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!7);
  link artifact monticoregenerator -> @(ASTTransition.java!6);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!6);
  link artifact monticoregenerator -> @(FlatAutomatonLiterals.java);
  link artifact monticoregenerator -> @(FlatAutomatonMill.java);
  link artifact monticoregenerator -> @(FlatAutomatonNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!15);
  link artifact monticoregenerator -> @(FlatAutomatonASTA0CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTA1CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTAutomatonCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTB0CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTB1CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTC0CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTC1CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTFlatAutomatonNodeCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTMCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTP1CoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTPCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTStateCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonASTTransitionCoCo.java);
  link artifact monticoregenerator -> @(FlatAutomatonCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!15);
  link artifact monticoregenerator -> @(FlatAutomaton2OD.java);
  link artifact monticoregenerator -> @(_visitor!15);
  link artifact monticoregenerator -> @(FlatAutomatonDelegatorVisitor.java);
  link artifact monticoregenerator -> @(FlatAutomatonInheritanceVisitor.java);
  link artifact monticoregenerator -> @(FlatAutomatonParentAwareVisitor.java);
  link artifact monticoregenerator -> @(FlatAutomatonVisitor.java);
  link artifact monticoregenerator -> @(automatonwithaction!3);
  link artifact monticoregenerator -> @(actionautomaton);
  link artifact monticoregenerator -> @(_ast!22);
  link artifact monticoregenerator -> @(ActionAutomatonLiterals.java);
  link artifact monticoregenerator -> @(ActionAutomatonMill.java);
  link artifact monticoregenerator -> @(ActionAutomatonNodeFactory.java);
  link artifact monticoregenerator -> @(ASTA2.java);
  link artifact monticoregenerator -> @(ASTA2Builder.java);
  link artifact monticoregenerator -> @(ASTActionAutomatonNode.java);
  link artifact monticoregenerator -> @(ASTActionExt.java);
  link artifact monticoregenerator -> @(ASTAutomaton.java!7);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!7);
  link artifact monticoregenerator -> @(ASTConstantsActionAutomaton.java);
  link artifact monticoregenerator -> @(ASTCounter.java);
  link artifact monticoregenerator -> @(ASTCounterBuilder.java);
  link artifact monticoregenerator -> @(FlatAutomatonMillForActionAutomaton.java);
  link artifact monticoregenerator -> @(_cocos!16);
  link artifact monticoregenerator -> @(ActionAutomatonASTA2CoCo.java);
  link artifact monticoregenerator -> @(ActionAutomatonASTActionAutomatonNodeCoCo.java);
  link artifact monticoregenerator -> @(ActionAutomatonASTActionExtCoCo.java);
  link artifact monticoregenerator -> @(ActionAutomatonASTAutomatonCoCo.java);
  link artifact monticoregenerator -> @(ActionAutomatonASTCounterCoCo.java);
  link artifact monticoregenerator -> @(ActionAutomatonCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!16);
  link artifact monticoregenerator -> @(ActionAutomaton2OD.java);
  link artifact monticoregenerator -> @(_visitor!16);
  link artifact monticoregenerator -> @(ActionAutomatonDelegatorVisitor.java);
  link artifact monticoregenerator -> @(ActionAutomatonInheritanceVisitor.java);
  link artifact monticoregenerator -> @(ActionAutomatonParentAwareVisitor.java);
  link artifact monticoregenerator -> @(ActionAutomatonVisitor.java);
  link artifact monticoregenerator -> @(featuredsl);
  link artifact monticoregenerator -> @(_ast!23);
  link artifact monticoregenerator -> @(ASTA.class!5);
  link artifact monticoregenerator -> @(ASTA.java!5);
  link artifact monticoregenerator -> @(ASTABuilder.class!5);
  link artifact monticoregenerator -> @(ASTABuilder.java!5);
  link artifact monticoregenerator -> @(ASTAutomaton.class!4);
  link artifact monticoregenerator -> @(ASTAutomaton.java!8);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.class!4);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!8);
  link artifact monticoregenerator -> @(ASTB.class!4);
  link artifact monticoregenerator -> @(ASTB.java!4);
  link artifact monticoregenerator -> @(ASTBBuilder.class!4);
  link artifact monticoregenerator -> @(ASTBBuilder.java!4);
  link artifact monticoregenerator -> @(ASTC.class!3);
  link artifact monticoregenerator -> @(ASTC.java!3);
  link artifact monticoregenerator -> @(ASTCBuilder.class!3);
  link artifact monticoregenerator -> @(ASTCBuilder.java!3);
  link artifact monticoregenerator -> @(ASTClassProd.class!2);
  link artifact monticoregenerator -> @(ASTClassProd.java);
  link artifact monticoregenerator -> @(ASTClassProdBuilder.class);
  link artifact monticoregenerator -> @(ASTClassProdBuilder.java);
  link artifact monticoregenerator -> @(ASTClassRule.class);
  link artifact monticoregenerator -> @(ASTClassRule.java);
  link artifact monticoregenerator -> @(ASTClassRuleBuilder.class);
  link artifact monticoregenerator -> @(ASTClassRuleBuilder.java);
  link artifact monticoregenerator -> @(ASTComplexname.class);
  link artifact monticoregenerator -> @(ASTComplexname.java);
  link artifact monticoregenerator -> @(ASTComplexnameBuilder.class);
  link artifact monticoregenerator -> @(ASTComplexnameBuilder.java);
  link artifact monticoregenerator -> @(ASTConstants.class);
  link artifact monticoregenerator -> @(ASTConstants.java);
  link artifact monticoregenerator -> @(ASTConstantsBuilder.class);
  link artifact monticoregenerator -> @(ASTConstantsBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsFeatureDSL.class);
  link artifact monticoregenerator -> @(ASTConstantsFeatureDSL.java);
  link artifact monticoregenerator -> @(ASTExtraComponent.class);
  link artifact monticoregenerator -> @(ASTExtraComponent.java);
  link artifact monticoregenerator -> @(ASTFeatureDSLNode.class);
  link artifact monticoregenerator -> @(ASTFeatureDSLNode.java);
  link artifact monticoregenerator -> @(ASTFile.class);
  link artifact monticoregenerator -> @(ASTFile.java);
  link artifact monticoregenerator -> @(ASTFileBuilder.class);
  link artifact monticoregenerator -> @(ASTFileBuilder.java);
  link artifact monticoregenerator -> @(ASTInterfaceRule.class);
  link artifact monticoregenerator -> @(ASTInterfaceRule.java);
  link artifact monticoregenerator -> @(ASTInterfacewithspicelevel.class);
  link artifact monticoregenerator -> @(ASTInterfacewithspicelevel.java);
  link artifact monticoregenerator -> @(ASTSpices1.class);
  link artifact monticoregenerator -> @(ASTSpices1.java);
  link artifact monticoregenerator -> @(ASTSpices1Builder.class);
  link artifact monticoregenerator -> @(ASTSpices1Builder.java);
  link artifact monticoregenerator -> @(ASTSpices2.class);
  link artifact monticoregenerator -> @(ASTSpices2.java);
  link artifact monticoregenerator -> @(ASTSpices2Builder.class);
  link artifact monticoregenerator -> @(ASTSpices2Builder.java);
  link artifact monticoregenerator -> @(ASTSpices3.class);
  link artifact monticoregenerator -> @(ASTSpices3.java);
  link artifact monticoregenerator -> @(ASTSpices3Builder.class);
  link artifact monticoregenerator -> @(ASTSpices3Builder.java);
  link artifact monticoregenerator -> @(ASTSpices4.class);
  link artifact monticoregenerator -> @(ASTSpices4.java);
  link artifact monticoregenerator -> @(ASTSpices4Builder.class);
  link artifact monticoregenerator -> @(ASTSpices4Builder.java);
  link artifact monticoregenerator -> @(ASTSpices5.class);
  link artifact monticoregenerator -> @(ASTSpices5.java);
  link artifact monticoregenerator -> @(ASTSpices5Builder.class);
  link artifact monticoregenerator -> @(ASTSpices5Builder.java);
  link artifact monticoregenerator -> @(ASTState.class!4);
  link artifact monticoregenerator -> @(ASTState.java!8);
  link artifact monticoregenerator -> @(ASTStateBuilder.class!4);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!8);
  link artifact monticoregenerator -> @(ASTStereotype.class);
  link artifact monticoregenerator -> @(ASTStereotype.java);
  link artifact monticoregenerator -> @(ASTStereotypeBuilder.class);
  link artifact monticoregenerator -> @(ASTStereotypeBuilder.java);
  link artifact monticoregenerator -> @(ASTSubClassRule.class);
  link artifact monticoregenerator -> @(ASTSubClassRule.java);
  link artifact monticoregenerator -> @(ASTSubClassRuleBuilder.class);
  link artifact monticoregenerator -> @(ASTSubClassRuleBuilder.java);
  link artifact monticoregenerator -> @(ASTTestOptions.class);
  link artifact monticoregenerator -> @(ASTTestOptions.java);
  link artifact monticoregenerator -> @(ASTTestOptionsBuilder.class);
  link artifact monticoregenerator -> @(ASTTestOptionsBuilder.java);
  link artifact monticoregenerator -> @(ASTTransition.class!4);
  link artifact monticoregenerator -> @(ASTTransition.java!7);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class!4);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!7);
  link artifact monticoregenerator -> @(ASTX.class);
  link artifact monticoregenerator -> @(ASTX.java);
  link artifact monticoregenerator -> @(ASTXBuilder.class);
  link artifact monticoregenerator -> @(ASTXBuilder.java);
  link artifact monticoregenerator -> @(FeatureDSLLiterals.class);
  link artifact monticoregenerator -> @(FeatureDSLLiterals.java);
  link artifact monticoregenerator -> @(FeatureDSLMill.class);
  link artifact monticoregenerator -> @(FeatureDSLMill.java);
  link artifact monticoregenerator -> @(FeatureDSLNodeFactory.class);
  link artifact monticoregenerator -> @(FeatureDSLNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!17);
  link artifact monticoregenerator -> @(FeatureDSLASTACoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTAutomatonCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTBCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTCCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTClassProdCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTClassRuleCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTComplexnameCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTConstantsCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTExtraComponentCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTFeatureDSLNodeCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTFileCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTInterfaceRuleCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTInterfacewithspicelevelCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSpices1CoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSpices2CoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSpices3CoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSpices4CoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSpices5CoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTStateCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTStereotypeCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTSubClassRuleCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTTestOptionsCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTTransitionCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLASTXCoCo.java);
  link artifact monticoregenerator -> @(FeatureDSLCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!17);
  link artifact monticoregenerator -> @(FeatureDSL2OD.java);
  link artifact monticoregenerator -> @(_visitor!17);
  link artifact monticoregenerator -> @(FeatureDSLDelegatorVisitor.java);
  link artifact monticoregenerator -> @(FeatureDSLInheritanceVisitor.java);
  link artifact monticoregenerator -> @(FeatureDSLParentAwareVisitor.java);
  link artifact monticoregenerator -> @(FeatureDSLVisitor.class);
  link artifact monticoregenerator -> @(FeatureDSLVisitor.java);
  link artifact monticoregenerator -> @(helloworld);
  link artifact monticoregenerator -> @(_ast!24);
  link artifact monticoregenerator -> @(ASTConstantsHelloWorld.class);
  link artifact monticoregenerator -> @(ASTConstantsHelloWorld.java);
  link artifact monticoregenerator -> @(ASTHelloWorld.class);
  link artifact monticoregenerator -> @(ASTHelloWorld.java);
  link artifact monticoregenerator -> @(ASTHelloWorldBuilder.class);
  link artifact monticoregenerator -> @(ASTHelloWorldBuilder.java);
  link artifact monticoregenerator -> @(ASTHelloWorldNode.class);
  link artifact monticoregenerator -> @(ASTHelloWorldNode.java);
  link artifact monticoregenerator -> @(HelloWorldLiterals.class);
  link artifact monticoregenerator -> @(HelloWorldLiterals.java);
  link artifact monticoregenerator -> @(HelloWorldMill.class);
  link artifact monticoregenerator -> @(HelloWorldMill.java);
  link artifact monticoregenerator -> @(HelloWorldNodeFactory.class);
  link artifact monticoregenerator -> @(HelloWorldNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!18);
  link artifact monticoregenerator -> @(HelloWorldASTHelloWorldCoCo.class);
  link artifact monticoregenerator -> @(HelloWorldASTHelloWorldCoCo.java);
  link artifact monticoregenerator -> @(HelloWorldASTHelloWorldNodeCoCo.class);
  link artifact monticoregenerator -> @(HelloWorldASTHelloWorldNodeCoCo.java);
  link artifact monticoregenerator -> @(HelloWorldCoCoChecker.class);
  link artifact monticoregenerator -> @(HelloWorldCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!18);
  link artifact monticoregenerator -> @(HelloWorld2OD.class);
  link artifact monticoregenerator -> @(HelloWorld2OD.java);
  link artifact monticoregenerator -> @(_parser!8);
  link artifact monticoregenerator -> @(HelloWorldAntlrBaseListener.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrBaseListener.java);
  link artifact monticoregenerator -> @(HelloWorldAntlrLexer.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrLexer.java);
  link artifact monticoregenerator -> @(HelloWorldAntlrListener.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrListener.java);
  link artifact monticoregenerator -> @(HelloWorldAntlrParser$HelloWorldContext.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrParser$HelloWorld_eofContext.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrParser.class);
  link artifact monticoregenerator -> @(HelloWorldAntlrParser.java);
  link artifact monticoregenerator -> @(HelloWorldParser.class);
  link artifact monticoregenerator -> @(HelloWorldParser.java);
  link artifact monticoregenerator -> @(_visitor!18);
  link artifact monticoregenerator -> @(HelloWorldDelegatorVisitor.class);
  link artifact monticoregenerator -> @(HelloWorldDelegatorVisitor.java);
  link artifact monticoregenerator -> @(HelloWorldInheritanceVisitor.class);
  link artifact monticoregenerator -> @(HelloWorldInheritanceVisitor.java);
  link artifact monticoregenerator -> @(HelloWorldParentAwareVisitor.class);
  link artifact monticoregenerator -> @(HelloWorldParentAwareVisitor.java);
  link artifact monticoregenerator -> @(HelloWorldVisitor.class);
  link artifact monticoregenerator -> @(HelloWorldVisitor.java);
  link artifact monticoregenerator -> @(inherited!2);
  link artifact monticoregenerator -> @(sub!4);
  link artifact monticoregenerator -> @(subgrammar);
  link artifact monticoregenerator -> @(_ast!25);
  link artifact monticoregenerator -> @(ASTA.class!6);
  link artifact monticoregenerator -> @(ASTA.java!6);
  link artifact monticoregenerator -> @(ASTABuilder.class!6);
  link artifact monticoregenerator -> @(ASTABuilder.java!6);
  link artifact monticoregenerator -> @(ASTB.class!5);
  link artifact monticoregenerator -> @(ASTB.java!5);
  link artifact monticoregenerator -> @(ASTBBuilder.class!5);
  link artifact monticoregenerator -> @(ASTBBuilder.java!5);
  link artifact monticoregenerator -> @(ASTConstantsSubgrammar.class);
  link artifact monticoregenerator -> @(ASTConstantsSubgrammar.java);
  link artifact monticoregenerator -> @(ASTD.class!2);
  link artifact monticoregenerator -> @(ASTD.java!2);
  link artifact monticoregenerator -> @(ASTDBuilder.class!2);
  link artifact monticoregenerator -> @(ASTDBuilder.java!2);
  link artifact monticoregenerator -> @(ASTL.class);
  link artifact monticoregenerator -> @(ASTL.java);
  link artifact monticoregenerator -> @(ASTLBuilder.class);
  link artifact monticoregenerator -> @(ASTLBuilder.java);
  link artifact monticoregenerator -> @(ASTM.class);
  link artifact monticoregenerator -> @(ASTM.java!2);
  link artifact monticoregenerator -> @(ASTMBuilder.class);
  link artifact monticoregenerator -> @(ASTMBuilder.java!2);
  link artifact monticoregenerator -> @(ASTN.class);
  link artifact monticoregenerator -> @(ASTN.java);
  link artifact monticoregenerator -> @(ASTNBuilder.class);
  link artifact monticoregenerator -> @(ASTNBuilder.java);
  link artifact monticoregenerator -> @(ASTO.class);
  link artifact monticoregenerator -> @(ASTO.java);
  link artifact monticoregenerator -> @(ASTOBuilder.class);
  link artifact monticoregenerator -> @(ASTOBuilder.java);
  link artifact monticoregenerator -> @(ASTSubgrammarNode.class);
  link artifact monticoregenerator -> @(ASTSubgrammarNode.java);
  link artifact monticoregenerator -> @(SubgrammarLiterals.class);
  link artifact monticoregenerator -> @(SubgrammarLiterals.java);
  link artifact monticoregenerator -> @(SubgrammarMill.class);
  link artifact monticoregenerator -> @(SubgrammarMill.java);
  link artifact monticoregenerator -> @(SubgrammarNodeFactory.class);
  link artifact monticoregenerator -> @(SubgrammarNodeFactory.java);
  link artifact monticoregenerator -> @(SupergrammarMillForSubgrammar.class);
  link artifact monticoregenerator -> @(SupergrammarMillForSubgrammar.java);
  link artifact monticoregenerator -> @(_cocos!19);
  link artifact monticoregenerator -> @(SubgrammarASTACoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTACoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTBCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTBCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTDCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTDCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTLCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTLCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTMCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTMCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTNCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTNCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTOCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTOCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarASTSubgrammarNodeCoCo.class);
  link artifact monticoregenerator -> @(SubgrammarASTSubgrammarNodeCoCo.java);
  link artifact monticoregenerator -> @(SubgrammarCoCoChecker.class);
  link artifact monticoregenerator -> @(SubgrammarCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!19);
  link artifact monticoregenerator -> @(Subgrammar2OD.class);
  link artifact monticoregenerator -> @(Subgrammar2OD.java);
  link artifact monticoregenerator -> @(_parser!9);
  link artifact monticoregenerator -> @(SubgrammarAntlrBaseListener.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrBaseListener.java);
  link artifact monticoregenerator -> @(SubgrammarAntlrLexer.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrLexer.java);
  link artifact monticoregenerator -> @(SubgrammarAntlrListener.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrListener.java);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$AContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$A_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$BContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$B_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$DContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$D_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$GContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$G_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$JContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$J_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$KContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$K_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$LContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$L_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$MContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$M_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$NContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$N_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$OContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$O_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$XContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$X_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$YContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser$Y_eofContext.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser.class);
  link artifact monticoregenerator -> @(SubgrammarAntlrParser.java);
  link artifact monticoregenerator -> @(SubgrammarParser.class);
  link artifact monticoregenerator -> @(SubgrammarParser.java);
  link artifact monticoregenerator -> @(_visitor!19);
  link artifact monticoregenerator -> @(SubgrammarDelegatorVisitor.class);
  link artifact monticoregenerator -> @(SubgrammarDelegatorVisitor.java);
  link artifact monticoregenerator -> @(SubgrammarInheritanceVisitor.class);
  link artifact monticoregenerator -> @(SubgrammarInheritanceVisitor.java);
  link artifact monticoregenerator -> @(SubgrammarParentAwareVisitor.class);
  link artifact monticoregenerator -> @(SubgrammarParentAwareVisitor.java);
  link artifact monticoregenerator -> @(SubgrammarVisitor.class);
  link artifact monticoregenerator -> @(SubgrammarVisitor.java);
  link artifact monticoregenerator -> @(supergrammar);
  link artifact monticoregenerator -> @(_ast!26);
  link artifact monticoregenerator -> @(ASTConstantsSupergrammar.class);
  link artifact monticoregenerator -> @(ASTConstantsSupergrammar.java);
  link artifact monticoregenerator -> @(ASTG.class);
  link artifact monticoregenerator -> @(ASTG.java);
  link artifact monticoregenerator -> @(ASTJ.class);
  link artifact monticoregenerator -> @(ASTJ.java);
  link artifact monticoregenerator -> @(ASTJBuilder.class);
  link artifact monticoregenerator -> @(ASTJBuilder.java);
  link artifact monticoregenerator -> @(ASTK.class);
  link artifact monticoregenerator -> @(ASTK.java);
  link artifact monticoregenerator -> @(ASTKBuilder.class);
  link artifact monticoregenerator -> @(ASTKBuilder.java);
  link artifact monticoregenerator -> @(ASTN.class!2);
  link artifact monticoregenerator -> @(ASTN.java!2);
  link artifact monticoregenerator -> @(ASTNBuilder.class!2);
  link artifact monticoregenerator -> @(ASTNBuilder.java!2);
  link artifact monticoregenerator -> @(ASTSupergrammarNode.class);
  link artifact monticoregenerator -> @(ASTSupergrammarNode.java);
  link artifact monticoregenerator -> @(ASTX.class!2);
  link artifact monticoregenerator -> @(ASTX.java!2);
  link artifact monticoregenerator -> @(ASTXBuilder.class!2);
  link artifact monticoregenerator -> @(ASTXBuilder.java!2);
  link artifact monticoregenerator -> @(ASTY.class);
  link artifact monticoregenerator -> @(ASTY.java);
  link artifact monticoregenerator -> @(ASTYBuilder.class);
  link artifact monticoregenerator -> @(ASTYBuilder.java);
  link artifact monticoregenerator -> @(SupergrammarLiterals.class);
  link artifact monticoregenerator -> @(SupergrammarLiterals.java);
  link artifact monticoregenerator -> @(SupergrammarMill.class);
  link artifact monticoregenerator -> @(SupergrammarMill.java);
  link artifact monticoregenerator -> @(SupergrammarNodeFactory.class);
  link artifact monticoregenerator -> @(SupergrammarNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!20);
  link artifact monticoregenerator -> @(SupergrammarASTGCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTGCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTJCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTJCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTKCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTKCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTNCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTNCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTSupergrammarNodeCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTSupergrammarNodeCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTXCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTXCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarASTYCoCo.class);
  link artifact monticoregenerator -> @(SupergrammarASTYCoCo.java);
  link artifact monticoregenerator -> @(SupergrammarCoCoChecker.class);
  link artifact monticoregenerator -> @(SupergrammarCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!20);
  link artifact monticoregenerator -> @(Supergrammar2OD.class);
  link artifact monticoregenerator -> @(Supergrammar2OD.java);
  link artifact monticoregenerator -> @(_visitor!20);
  link artifact monticoregenerator -> @(SupergrammarDelegatorVisitor.class);
  link artifact monticoregenerator -> @(SupergrammarDelegatorVisitor.java);
  link artifact monticoregenerator -> @(SupergrammarInheritanceVisitor.class);
  link artifact monticoregenerator -> @(SupergrammarInheritanceVisitor.java);
  link artifact monticoregenerator -> @(SupergrammarParentAwareVisitor.class);
  link artifact monticoregenerator -> @(SupergrammarParentAwareVisitor.java);
  link artifact monticoregenerator -> @(SupergrammarVisitor.class);
  link artifact monticoregenerator -> @(SupergrammarVisitor.java);
  link artifact monticoregenerator -> @(interfaceattributes);
  link artifact monticoregenerator -> @(_ast!27);
  link artifact monticoregenerator -> @(ASTActionExt.class!2);
  link artifact monticoregenerator -> @(ASTActionExt.java!2);
  link artifact monticoregenerator -> @(ASTClassProd.class!3);
  link artifact monticoregenerator -> @(ASTClassProd.java!2);
  link artifact monticoregenerator -> @(ASTClassProdBuilder.class!2);
  link artifact monticoregenerator -> @(ASTClassProdBuilder.java!2);
  link artifact monticoregenerator -> @(ASTConstantsInterfaceAttributes.class);
  link artifact monticoregenerator -> @(ASTConstantsInterfaceAttributes.java);
  link artifact monticoregenerator -> @(ASTInterfaceAttributesNode.class);
  link artifact monticoregenerator -> @(ASTInterfaceAttributesNode.java);
  link artifact monticoregenerator -> @(ASTLexProd.class!2);
  link artifact monticoregenerator -> @(ASTLexProd.java);
  link artifact monticoregenerator -> @(ASTLexProdBuilder.class);
  link artifact monticoregenerator -> @(ASTLexProdBuilder.java);
  link artifact monticoregenerator -> @(ASTMCGrammar.class!2);
  link artifact monticoregenerator -> @(ASTMCGrammar.java);
  link artifact monticoregenerator -> @(ASTMCGrammarBuilder.class);
  link artifact monticoregenerator -> @(ASTMCGrammarBuilder.java);
  link artifact monticoregenerator -> @(ASTParserProd.class!2);
  link artifact monticoregenerator -> @(ASTParserProd.java);
  link artifact monticoregenerator -> @(ASTProd.class!2);
  link artifact monticoregenerator -> @(ASTProd.java!2);
  link artifact monticoregenerator -> @(InterfaceAttributesLiterals.class);
  link artifact monticoregenerator -> @(InterfaceAttributesLiterals.java);
  link artifact monticoregenerator -> @(InterfaceAttributesMill.class);
  link artifact monticoregenerator -> @(InterfaceAttributesMill.java);
  link artifact monticoregenerator -> @(InterfaceAttributesNodeFactory.class);
  link artifact monticoregenerator -> @(InterfaceAttributesNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!21);
  link artifact monticoregenerator -> @(InterfaceAttributesASTActionExtCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTActionExtCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTClassProdCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTClassProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTInterfaceAttributesNodeCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTInterfaceAttributesNodeCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTLexProdCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTLexProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTMCGrammarCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTMCGrammarCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTParserProdCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTParserProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesASTProdCoCo.class);
  link artifact monticoregenerator -> @(InterfaceAttributesASTProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceAttributesCoCoChecker.class);
  link artifact monticoregenerator -> @(InterfaceAttributesCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!21);
  link artifact monticoregenerator -> @(InterfaceAttributes2OD.class);
  link artifact monticoregenerator -> @(InterfaceAttributes2OD.java);
  link artifact monticoregenerator -> @(_visitor!21);
  link artifact monticoregenerator -> @(InterfaceAttributesDelegatorVisitor.class);
  link artifact monticoregenerator -> @(InterfaceAttributesDelegatorVisitor.java);
  link artifact monticoregenerator -> @(InterfaceAttributesInheritanceVisitor.class);
  link artifact monticoregenerator -> @(InterfaceAttributesInheritanceVisitor.java);
  link artifact monticoregenerator -> @(InterfaceAttributesParentAwareVisitor.class);
  link artifact monticoregenerator -> @(InterfaceAttributesParentAwareVisitor.java);
  link artifact monticoregenerator -> @(InterfaceAttributesVisitor.class);
  link artifact monticoregenerator -> @(InterfaceAttributesVisitor.java);
  link artifact monticoregenerator -> @(interfacerules);
  link artifact monticoregenerator -> @(_ast!28);
  link artifact monticoregenerator -> @(ASTAProd.class);
  link artifact monticoregenerator -> @(ASTAProd.java);
  link artifact monticoregenerator -> @(ASTAProdBuilder.class);
  link artifact monticoregenerator -> @(ASTAProdBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsInterfaceRules.class);
  link artifact monticoregenerator -> @(ASTConstantsInterfaceRules.java);
  link artifact monticoregenerator -> @(ASTInterfaceRulesNode.class);
  link artifact monticoregenerator -> @(ASTInterfaceRulesNode.java);
  link artifact monticoregenerator -> @(ASTIProd.class);
  link artifact monticoregenerator -> @(ASTIProd.java);
  link artifact monticoregenerator -> @(ASTProd.class!3);
  link artifact monticoregenerator -> @(ASTProd.java!3);
  link artifact monticoregenerator -> @(ASTProdBuilder.class);
  link artifact monticoregenerator -> @(ASTProdBuilder.java);
  link artifact monticoregenerator -> @(InterfaceRulesLiterals.class);
  link artifact monticoregenerator -> @(InterfaceRulesLiterals.java);
  link artifact monticoregenerator -> @(InterfaceRulesMill.class);
  link artifact monticoregenerator -> @(InterfaceRulesMill.java);
  link artifact monticoregenerator -> @(InterfaceRulesNodeFactory.class);
  link artifact monticoregenerator -> @(InterfaceRulesNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!22);
  link artifact monticoregenerator -> @(InterfaceRulesASTAProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceRulesASTInterfaceRulesNodeCoCo.java);
  link artifact monticoregenerator -> @(InterfaceRulesASTIProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceRulesASTProdCoCo.java);
  link artifact monticoregenerator -> @(InterfaceRulesCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!22);
  link artifact monticoregenerator -> @(InterfaceRules2OD.java);
  link artifact monticoregenerator -> @(_visitor!22);
  link artifact monticoregenerator -> @(InterfaceRulesDelegatorVisitor.java);
  link artifact monticoregenerator -> @(InterfaceRulesInheritanceVisitor.java);
  link artifact monticoregenerator -> @(InterfaceRulesParentAwareVisitor.java);
  link artifact monticoregenerator -> @(InterfaceRulesVisitor.class);
  link artifact monticoregenerator -> @(InterfaceRulesVisitor.java);
  link artifact monticoregenerator -> @(interfaces!4);
  link artifact monticoregenerator -> @(sub!5);
  link artifact monticoregenerator -> @(_ast!29);
  link artifact monticoregenerator -> @(ASTA.class!7);
  link artifact monticoregenerator -> @(ASTA.java!7);
  link artifact monticoregenerator -> @(ASTABuilder.class!7);
  link artifact monticoregenerator -> @(ASTABuilder.java!7);
  link artifact monticoregenerator -> @(ASTConstantsSub.class);
  link artifact monticoregenerator -> @(ASTConstantsSub.java);
  link artifact monticoregenerator -> @(ASTI.class);
  link artifact monticoregenerator -> @(ASTI.java);
  link artifact monticoregenerator -> @(ASTSubNode.class);
  link artifact monticoregenerator -> @(ASTSubNode.java);
  link artifact monticoregenerator -> @(SubLiterals.class);
  link artifact monticoregenerator -> @(SubLiterals.java);
  link artifact monticoregenerator -> @(SubMill.class);
  link artifact monticoregenerator -> @(SubMill.java);
  link artifact monticoregenerator -> @(SubNodeFactory.class);
  link artifact monticoregenerator -> @(SubNodeFactory.java);
  link artifact monticoregenerator -> @(SupMillForSub.class);
  link artifact monticoregenerator -> @(SupMillForSub.java);
  link artifact monticoregenerator -> @(_cocos!23);
  link artifact monticoregenerator -> @(SubASTACoCo.java);
  link artifact monticoregenerator -> @(SubASTICoCo.java);
  link artifact monticoregenerator -> @(SubASTSubNodeCoCo.java);
  link artifact monticoregenerator -> @(SubCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!23);
  link artifact monticoregenerator -> @(Sub2OD.java);
  link artifact monticoregenerator -> @(_parser!10);
  link artifact monticoregenerator -> @(SubAntlrBaseListener.java);
  link artifact monticoregenerator -> @(SubAntlrLexer.java);
  link artifact monticoregenerator -> @(SubAntlrListener.java);
  link artifact monticoregenerator -> @(SubAntlrParser.java);
  link artifact monticoregenerator -> @(SubParser.java);
  link artifact monticoregenerator -> @(_visitor!23);
  link artifact monticoregenerator -> @(SubDelegatorVisitor.java);
  link artifact monticoregenerator -> @(SubInheritanceVisitor.java);
  link artifact monticoregenerator -> @(SubParentAwareVisitor.java);
  link artifact monticoregenerator -> @(SubVisitor.class);
  link artifact monticoregenerator -> @(SubVisitor.java);
  link artifact monticoregenerator -> @(sup!2);
  link artifact monticoregenerator -> @(_ast!30);
  link artifact monticoregenerator -> @(ASTA.class!8);
  link artifact monticoregenerator -> @(ASTA.java!8);
  link artifact monticoregenerator -> @(ASTABuilder.class!8);
  link artifact monticoregenerator -> @(ASTABuilder.java!8);
  link artifact monticoregenerator -> @(ASTB.class!6);
  link artifact monticoregenerator -> @(ASTB.java!6);
  link artifact monticoregenerator -> @(ASTBBuilder.class!6);
  link artifact monticoregenerator -> @(ASTBBuilder.java!6);
  link artifact monticoregenerator -> @(ASTConstantsSup.class);
  link artifact monticoregenerator -> @(ASTConstantsSup.java);
  link artifact monticoregenerator -> @(ASTSupNode.class);
  link artifact monticoregenerator -> @(ASTSupNode.java);
  link artifact monticoregenerator -> @(SupLiterals.class);
  link artifact monticoregenerator -> @(SupLiterals.java);
  link artifact monticoregenerator -> @(SupMill.class);
  link artifact monticoregenerator -> @(SupMill.java);
  link artifact monticoregenerator -> @(SupNodeFactory.class);
  link artifact monticoregenerator -> @(SupNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!24);
  link artifact monticoregenerator -> @(SupASTACoCo.java);
  link artifact monticoregenerator -> @(SupASTBCoCo.java);
  link artifact monticoregenerator -> @(SupASTSupNodeCoCo.java);
  link artifact monticoregenerator -> @(SupCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!24);
  link artifact monticoregenerator -> @(Sup2OD.java);
  link artifact monticoregenerator -> @(_parser!11);
  link artifact monticoregenerator -> @(SupAntlrBaseListener.java);
  link artifact monticoregenerator -> @(SupAntlrLexer.java);
  link artifact monticoregenerator -> @(SupAntlrListener.java);
  link artifact monticoregenerator -> @(SupAntlrParser.java);
  link artifact monticoregenerator -> @(SupParser.java);
  link artifact monticoregenerator -> @(_visitor!24);
  link artifact monticoregenerator -> @(SupDelegatorVisitor.java);
  link artifact monticoregenerator -> @(SupInheritanceVisitor.java);
  link artifact monticoregenerator -> @(SupParentAwareVisitor.java);
  link artifact monticoregenerator -> @(SupVisitor.class);
  link artifact monticoregenerator -> @(SupVisitor.java);
  link artifact monticoregenerator -> @(statechart!4);
  link artifact monticoregenerator -> @(statechart!5);
  link artifact monticoregenerator -> @(_ast!31);
  link artifact monticoregenerator -> @(ASTAbstractAnything.class);
  link artifact monticoregenerator -> @(ASTAbstractAnything.java);
  link artifact monticoregenerator -> @(ASTAbstractAnythingBuilder.class);
  link artifact monticoregenerator -> @(ASTAbstractAnythingBuilder.java);
  link artifact monticoregenerator -> @(ASTArgument.class);
  link artifact monticoregenerator -> @(ASTArgument.java);
  link artifact monticoregenerator -> @(ASTArgumentBuilder.class);
  link artifact monticoregenerator -> @(ASTArgumentBuilder.java);
  link artifact monticoregenerator -> @(ASTBlockStatementExt.class);
  link artifact monticoregenerator -> @(ASTBlockStatementExt.java);
  link artifact monticoregenerator -> @(ASTClassbodyExt.class);
  link artifact monticoregenerator -> @(ASTClassbodyExt.java);
  link artifact monticoregenerator -> @(ASTCode.class);
  link artifact monticoregenerator -> @(ASTCode.java);
  link artifact monticoregenerator -> @(ASTCodeBuilder.class);
  link artifact monticoregenerator -> @(ASTCodeBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsStatechart.class);
  link artifact monticoregenerator -> @(ASTConstantsStatechart.java);
  link artifact monticoregenerator -> @(ASTEntryAction.class);
  link artifact monticoregenerator -> @(ASTEntryAction.java);
  link artifact monticoregenerator -> @(ASTEntryActionBuilder.class);
  link artifact monticoregenerator -> @(ASTEntryActionBuilder.java);
  link artifact monticoregenerator -> @(ASTExitAction.class);
  link artifact monticoregenerator -> @(ASTExitAction.java);
  link artifact monticoregenerator -> @(ASTExitActionBuilder.class);
  link artifact monticoregenerator -> @(ASTExitActionBuilder.java);
  link artifact monticoregenerator -> @(ASTExpressionExt.class);
  link artifact monticoregenerator -> @(ASTExpressionExt.java);
  link artifact monticoregenerator -> @(ASTSCStructure.class);
  link artifact monticoregenerator -> @(ASTSCStructure.java);
  link artifact monticoregenerator -> @(ASTState.class!5);
  link artifact monticoregenerator -> @(ASTState.java!9);
  link artifact monticoregenerator -> @(ASTStateBuilder.class!5);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!9);
  link artifact monticoregenerator -> @(ASTStatechart.class);
  link artifact monticoregenerator -> @(ASTStatechart.java!2);
  link artifact monticoregenerator -> @(ASTStatechartBuilder.class);
  link artifact monticoregenerator -> @(ASTStatechartBuilder.java);
  link artifact monticoregenerator -> @(ASTStatechartNode.class);
  link artifact monticoregenerator -> @(ASTStatechartNode.java);
  link artifact monticoregenerator -> @(ASTTransition.class!5);
  link artifact monticoregenerator -> @(ASTTransition.java!8);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class!5);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!8);
  link artifact monticoregenerator -> @(StatechartLiterals.class);
  link artifact monticoregenerator -> @(StatechartLiterals.java);
  link artifact monticoregenerator -> @(StatechartMill.class);
  link artifact monticoregenerator -> @(StatechartMill.java);
  link artifact monticoregenerator -> @(StatechartNodeFactory.class);
  link artifact monticoregenerator -> @(StatechartNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!25);
  link artifact monticoregenerator -> @(StatechartASTAbstractAnythingCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTAbstractAnythingCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTArgumentCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTArgumentCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTBlockStatementExtCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTBlockStatementExtCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTClassbodyExtCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTClassbodyExtCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTCodeCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTCodeCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTEntryActionCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTEntryActionCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTExitActionCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTExitActionCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTExpressionExtCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTExpressionExtCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTSCStructureCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTSCStructureCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTStatechartCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTStatechartCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTStatechartNodeCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTStatechartNodeCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTStateCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTStateCoCo.java);
  link artifact monticoregenerator -> @(StatechartASTTransitionCoCo.class);
  link artifact monticoregenerator -> @(StatechartASTTransitionCoCo.java);
  link artifact monticoregenerator -> @(StatechartCoCoChecker.class);
  link artifact monticoregenerator -> @(StatechartCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!25);
  link artifact monticoregenerator -> @(Statechart2OD.class);
  link artifact monticoregenerator -> @(Statechart2OD.java);
  link artifact monticoregenerator -> @(_visitor!25);
  link artifact monticoregenerator -> @(StatechartDelegatorVisitor.class);
  link artifact monticoregenerator -> @(StatechartDelegatorVisitor.java);
  link artifact monticoregenerator -> @(StatechartInheritanceVisitor.class);
  link artifact monticoregenerator -> @(StatechartInheritanceVisitor.java);
  link artifact monticoregenerator -> @(StatechartParentAwareVisitor.class);
  link artifact monticoregenerator -> @(StatechartParentAwareVisitor.java);
  link artifact monticoregenerator -> @(StatechartVisitor.class);
  link artifact monticoregenerator -> @(StatechartVisitor.java);
  link artifact monticoregenerator -> @(sub!6);
  link artifact monticoregenerator -> @(substatechart);
  link artifact monticoregenerator -> @(_ast!32);
  link artifact monticoregenerator -> @(ASTConstantsSubStatechart.class);
  link artifact monticoregenerator -> @(ASTConstantsSubStatechart.java);
  link artifact monticoregenerator -> @(ASTFirst.class);
  link artifact monticoregenerator -> @(ASTFirst.java);
  link artifact monticoregenerator -> @(ASTFirstBuilder.class);
  link artifact monticoregenerator -> @(ASTFirstBuilder.java);
  link artifact monticoregenerator -> @(ASTSecond.class);
  link artifact monticoregenerator -> @(ASTSecond.java);
  link artifact monticoregenerator -> @(ASTSecondBuilder.class);
  link artifact monticoregenerator -> @(ASTSecondBuilder.java);
  link artifact monticoregenerator -> @(ASTSubStatechartNode.class);
  link artifact monticoregenerator -> @(ASTSubStatechartNode.java);
  link artifact monticoregenerator -> @(SubStatechartLiterals.class);
  link artifact monticoregenerator -> @(SubStatechartLiterals.java);
  link artifact monticoregenerator -> @(SubStatechartMill.class);
  link artifact monticoregenerator -> @(SubStatechartMill.java);
  link artifact monticoregenerator -> @(SubStatechartNodeFactory.class);
  link artifact monticoregenerator -> @(SubStatechartNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!26);
  link artifact monticoregenerator -> @(SubStatechartASTFirstCoCo.class);
  link artifact monticoregenerator -> @(SubStatechartASTFirstCoCo.java);
  link artifact monticoregenerator -> @(SubStatechartASTSecondCoCo.class);
  link artifact monticoregenerator -> @(SubStatechartASTSecondCoCo.java);
  link artifact monticoregenerator -> @(SubStatechartASTSubStatechartNodeCoCo.class);
  link artifact monticoregenerator -> @(SubStatechartASTSubStatechartNodeCoCo.java);
  link artifact monticoregenerator -> @(SubStatechartCoCoChecker.class);
  link artifact monticoregenerator -> @(SubStatechartCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!26);
  link artifact monticoregenerator -> @(SubStatechart2OD.class);
  link artifact monticoregenerator -> @(SubStatechart2OD.java);
  link artifact monticoregenerator -> @(_visitor!26);
  link artifact monticoregenerator -> @(SubStatechartDelegatorVisitor.class);
  link artifact monticoregenerator -> @(SubStatechartDelegatorVisitor.java);
  link artifact monticoregenerator -> @(SubStatechartInheritanceVisitor.class);
  link artifact monticoregenerator -> @(SubStatechartInheritanceVisitor.java);
  link artifact monticoregenerator -> @(SubStatechartParentAwareVisitor.class);
  link artifact monticoregenerator -> @(SubStatechartParentAwareVisitor.java);
  link artifact monticoregenerator -> @(SubStatechartVisitor.class);
  link artifact monticoregenerator -> @(SubStatechartVisitor.java);
  link artifact monticoregenerator -> @(symboltable!12);
  link artifact monticoregenerator -> @(grammarwithsymboltableinfo);
  link artifact monticoregenerator -> @(_ast!33);
  link artifact monticoregenerator -> @(ASTAutomaton.class!5);
  link artifact monticoregenerator -> @(ASTAutomaton.java!9);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.class!5);
  link artifact monticoregenerator -> @(ASTAutomatonBuilder.java!9);
  link artifact monticoregenerator -> @(ASTConstantsGrammarWithSymbolTableInfo.class);
  link artifact monticoregenerator -> @(ASTConstantsGrammarWithSymbolTableInfo.java);
  link artifact monticoregenerator -> @(ASTGrammarWithSymbolTableInfoNode.class);
  link artifact monticoregenerator -> @(ASTGrammarWithSymbolTableInfoNode.java);
  link artifact monticoregenerator -> @(ASTState.class!6);
  link artifact monticoregenerator -> @(ASTState.java!10);
  link artifact monticoregenerator -> @(ASTStateBuilder.class!6);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!10);
  link artifact monticoregenerator -> @(ASTTransition.class!6);
  link artifact monticoregenerator -> @(ASTTransition.java!9);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.class!6);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!9);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoLiterals.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoLiterals.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoMill.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoMill.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoNodeFactory.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!27);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTAutomatonCoCo.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTAutomatonCoCo.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTGrammarWithSymbolTableInfoNodeCoCo.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTStateCoCo.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTStateCoCo.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTTransitionCoCo.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoASTTransitionCoCo.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoCoCoChecker.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!27);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfo2OD.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfo2OD.java);
  link artifact monticoregenerator -> @(_parser!12);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrBaseListener.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrBaseListener.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrLexer.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrLexer.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrListener.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrListener.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$AutomatonContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$Automaton_eofContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$StateContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$State_eofContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$TransitionContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser$Transition_eofContext.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoAntlrParser.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoParser.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoParser.java);
  link artifact monticoregenerator -> @(_symboltable!15);
  link artifact monticoregenerator -> @(AutomatonKind.class);
  link artifact monticoregenerator -> @(AutomatonKind.java);
  link artifact monticoregenerator -> @(AutomatonResolvingFilter.class);
  link artifact monticoregenerator -> @(AutomatonResolvingFilter.java);
  link artifact monticoregenerator -> @(AutomatonScope.class);
  link artifact monticoregenerator -> @(AutomatonScope.java);
  link artifact monticoregenerator -> @(AutomatonSymbol$AutomatonSymbolBuilder.class);
  link artifact monticoregenerator -> @(AutomatonSymbol.class);
  link artifact monticoregenerator -> @(AutomatonSymbol.java);
  link artifact monticoregenerator -> @(AutomatonSymbolReference.class);
  link artifact monticoregenerator -> @(AutomatonSymbolReference.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoLanguage.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoLanguage.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoModelLoader.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoModelLoader.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoModelNameCalculator.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoModelNameCalculator.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoSymbolMill.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoSymbolMill.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoSymbolTableCreator.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoSymbolTableCreator.java);
  link artifact monticoregenerator -> @(StateKind.class);
  link artifact monticoregenerator -> @(StateKind.java);
  link artifact monticoregenerator -> @(StateResolvingFilter.class);
  link artifact monticoregenerator -> @(StateResolvingFilter.java);
  link artifact monticoregenerator -> @(StateSymbol$StateSymbolBuilder.class);
  link artifact monticoregenerator -> @(StateSymbol.class);
  link artifact monticoregenerator -> @(StateSymbol.java);
  link artifact monticoregenerator -> @(StateSymbolReference.class);
  link artifact monticoregenerator -> @(StateSymbolReference.java);
  link artifact monticoregenerator -> @(_visitor!27);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoDelegatorVisitor.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoDelegatorVisitor.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoInheritanceVisitor.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoInheritanceVisitor.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoParentAwareVisitor.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoParentAwareVisitor.java);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoVisitor.class);
  link artifact monticoregenerator -> @(GrammarWithSymbolTableInfoVisitor.java);
  link artifact monticoregenerator -> @(visitors!2);
  link artifact monticoregenerator -> @(a);
  link artifact monticoregenerator -> @(_ast!34);
  link artifact monticoregenerator -> @(ALiterals.java);
  link artifact monticoregenerator -> @(AMill.java);
  link artifact monticoregenerator -> @(ANodeFactory.java);
  link artifact monticoregenerator -> @(ASTANode.java);
  link artifact monticoregenerator -> @(ASTConstantsA.java);
  link artifact monticoregenerator -> @(ASTI.java!2);
  link artifact monticoregenerator -> @(ASTJ.java!2);
  link artifact monticoregenerator -> @(ASTP.java!2);
  link artifact monticoregenerator -> @(ASTPBuilder.java!2);
  link artifact monticoregenerator -> @(ASTX.java!3);
  link artifact monticoregenerator -> @(ASTXBuilder.java!3);
  link artifact monticoregenerator -> @(_cocos!28);
  link artifact monticoregenerator -> @(AASTANodeCoCo.java);
  link artifact monticoregenerator -> @(AASTICoCo.java);
  link artifact monticoregenerator -> @(AASTJCoCo.java);
  link artifact monticoregenerator -> @(AASTPCoCo.java);
  link artifact monticoregenerator -> @(AASTXCoCo.java);
  link artifact monticoregenerator -> @(ACoCoChecker.java);
  link artifact monticoregenerator -> @(_od!28);
  link artifact monticoregenerator -> @(A2OD.java);
  link artifact monticoregenerator -> @(_visitor!28);
  link artifact monticoregenerator -> @(ADelegatorVisitor.java);
  link artifact monticoregenerator -> @(AInheritanceVisitor.java);
  link artifact monticoregenerator -> @(AParentAwareVisitor.java);
  link artifact monticoregenerator -> @(AVisitor.java);
  link artifact monticoregenerator -> @(b);
  link artifact monticoregenerator -> @(_ast!35);
  link artifact monticoregenerator -> @(ASTBNode.java);
  link artifact monticoregenerator -> @(ASTConstantsB.java);
  link artifact monticoregenerator -> @(ASTY.java!2);
  link artifact monticoregenerator -> @(ASTYBuilder.java!2);
  link artifact monticoregenerator -> @(BLiterals.java);
  link artifact monticoregenerator -> @(BMill.java);
  link artifact monticoregenerator -> @(BNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!29);
  link artifact monticoregenerator -> @(BASTBNodeCoCo.java);
  link artifact monticoregenerator -> @(BASTYCoCo.java);
  link artifact monticoregenerator -> @(BCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!29);
  link artifact monticoregenerator -> @(B2OD.java);
  link artifact monticoregenerator -> @(_visitor!29);
  link artifact monticoregenerator -> @(BDelegatorVisitor.java);
  link artifact monticoregenerator -> @(BInheritanceVisitor.java);
  link artifact monticoregenerator -> @(BParentAwareVisitor.java);
  link artifact monticoregenerator -> @(BVisitor.java);
  link artifact monticoregenerator -> @(c);
  link artifact monticoregenerator -> @(_ast!36);
  link artifact monticoregenerator -> @(ASTCNode.java);
  link artifact monticoregenerator -> @(ASTConstantsC.java);
  link artifact monticoregenerator -> @(ASTZ.java);
  link artifact monticoregenerator -> @(ASTZBuilder.java);
  link artifact monticoregenerator -> @(CLiterals.java);
  link artifact monticoregenerator -> @(CMill.java);
  link artifact monticoregenerator -> @(CNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!30);
  link artifact monticoregenerator -> @(CASTCNodeCoCo.java);
  link artifact monticoregenerator -> @(CASTZCoCo.java);
  link artifact monticoregenerator -> @(CCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!30);
  link artifact monticoregenerator -> @(C2OD.java);
  link artifact monticoregenerator -> @(_visitor!30);
  link artifact monticoregenerator -> @(CDelegatorVisitor.java);
  link artifact monticoregenerator -> @(CInheritanceVisitor.java);
  link artifact monticoregenerator -> @(CParentAwareVisitor.java);
  link artifact monticoregenerator -> @(CVisitor.java);
  link artifact monticoregenerator -> @(mc!7);
  link artifact monticoregenerator -> @(grammars!5);
  link artifact monticoregenerator -> @(common!3);
  link artifact monticoregenerator -> @(testcommon);
  link artifact monticoregenerator -> @(_ast!37);
  link artifact monticoregenerator -> @(ASTCardinality.class);
  link artifact monticoregenerator -> @(ASTCardinality.java);
  link artifact monticoregenerator -> @(ASTCardinalityBuilder.class);
  link artifact monticoregenerator -> @(ASTCardinalityBuilder.java);
  link artifact monticoregenerator -> @(ASTCompleteness.class);
  link artifact monticoregenerator -> @(ASTCompleteness.java);
  link artifact monticoregenerator -> @(ASTCompletenessBuilder.class);
  link artifact monticoregenerator -> @(ASTCompletenessBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsTestCommon.class);
  link artifact monticoregenerator -> @(ASTConstantsTestCommon.java);
  link artifact monticoregenerator -> @(ASTModifier.class);
  link artifact monticoregenerator -> @(ASTModifier.java);
  link artifact monticoregenerator -> @(ASTModifierBuilder.class);
  link artifact monticoregenerator -> @(ASTModifierBuilder.java);
  link artifact monticoregenerator -> @(ASTStereotype.class!2);
  link artifact monticoregenerator -> @(ASTStereotype.java!2);
  link artifact monticoregenerator -> @(ASTStereotypeBuilder.class!2);
  link artifact monticoregenerator -> @(ASTStereotypeBuilder.java!2);
  link artifact monticoregenerator -> @(ASTStereoValue.class);
  link artifact monticoregenerator -> @(ASTStereoValue.java);
  link artifact monticoregenerator -> @(ASTStereoValueBuilder.class);
  link artifact monticoregenerator -> @(ASTStereoValueBuilder.java);
  link artifact monticoregenerator -> @(ASTTestCommonNode.class);
  link artifact monticoregenerator -> @(ASTTestCommonNode.java);
  link artifact monticoregenerator -> @(TestCommonLiterals.class);
  link artifact monticoregenerator -> @(TestCommonLiterals.java);
  link artifact monticoregenerator -> @(TestCommonMill.class);
  link artifact monticoregenerator -> @(TestCommonMill.java);
  link artifact monticoregenerator -> @(TestCommonNodeFactory.class);
  link artifact monticoregenerator -> @(TestCommonNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!31);
  link artifact monticoregenerator -> @(TestCommonASTCardinalityCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTCardinalityCoCo.java);
  link artifact monticoregenerator -> @(TestCommonASTCompletenessCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTCompletenessCoCo.java);
  link artifact monticoregenerator -> @(TestCommonASTModifierCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTModifierCoCo.java);
  link artifact monticoregenerator -> @(TestCommonASTStereotypeCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTStereotypeCoCo.java);
  link artifact monticoregenerator -> @(TestCommonASTStereoValueCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTStereoValueCoCo.java);
  link artifact monticoregenerator -> @(TestCommonASTTestCommonNodeCoCo.class);
  link artifact monticoregenerator -> @(TestCommonASTTestCommonNodeCoCo.java);
  link artifact monticoregenerator -> @(TestCommonCoCoChecker.class);
  link artifact monticoregenerator -> @(TestCommonCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!31);
  link artifact monticoregenerator -> @(TestCommon2OD.class);
  link artifact monticoregenerator -> @(TestCommon2OD.java);
  link artifact monticoregenerator -> @(_visitor!31);
  link artifact monticoregenerator -> @(TestCommonDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestCommonDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestCommonInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestCommonInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestCommonParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestCommonParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestCommonVisitor.class);
  link artifact monticoregenerator -> @(TestCommonVisitor.java);
  link artifact monticoregenerator -> @(lexicals!3);
  link artifact monticoregenerator -> @(testlexicals);
  link artifact monticoregenerator -> @(_ast!38);
  link artifact monticoregenerator -> @(ASTConstantsTestLexicals.class);
  link artifact monticoregenerator -> @(ASTConstantsTestLexicals.java);
  link artifact monticoregenerator -> @(ASTTestLexicalsNode.class);
  link artifact monticoregenerator -> @(ASTTestLexicalsNode.java);
  link artifact monticoregenerator -> @(TestLexicalsLiterals.class);
  link artifact monticoregenerator -> @(TestLexicalsLiterals.java);
  link artifact monticoregenerator -> @(TestLexicalsMill.class);
  link artifact monticoregenerator -> @(TestLexicalsMill.java);
  link artifact monticoregenerator -> @(TestLexicalsNodeFactory.class);
  link artifact monticoregenerator -> @(TestLexicalsNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!32);
  link artifact monticoregenerator -> @(TestLexicalsASTTestLexicalsNodeCoCo.class);
  link artifact monticoregenerator -> @(TestLexicalsASTTestLexicalsNodeCoCo.java);
  link artifact monticoregenerator -> @(TestLexicalsCoCoChecker.class);
  link artifact monticoregenerator -> @(TestLexicalsCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!32);
  link artifact monticoregenerator -> @(TestLexicals2OD.class);
  link artifact monticoregenerator -> @(TestLexicals2OD.java);
  link artifact monticoregenerator -> @(_visitor!32);
  link artifact monticoregenerator -> @(TestLexicalsDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestLexicalsDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestLexicalsInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestLexicalsInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestLexicalsParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestLexicalsParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestLexicalsVisitor.class);
  link artifact monticoregenerator -> @(TestLexicalsVisitor.java);
  link artifact monticoregenerator -> @(literals!3);
  link artifact monticoregenerator -> @(testliterals);
  link artifact monticoregenerator -> @(_ast!39);
  link artifact monticoregenerator -> @(ASTBooleanLiteral.class);
  link artifact monticoregenerator -> @(ASTBooleanLiteral.java);
  link artifact monticoregenerator -> @(ASTBooleanLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTBooleanLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTCharLiteral.class);
  link artifact monticoregenerator -> @(ASTCharLiteral.java);
  link artifact monticoregenerator -> @(ASTCharLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTCharLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsTestLiterals.class);
  link artifact monticoregenerator -> @(ASTConstantsTestLiterals.java);
  link artifact monticoregenerator -> @(ASTDoubleLiteral.class);
  link artifact monticoregenerator -> @(ASTDoubleLiteral.java);
  link artifact monticoregenerator -> @(ASTDoubleLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTDoubleLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTFloatLiteral.class);
  link artifact monticoregenerator -> @(ASTFloatLiteral.java);
  link artifact monticoregenerator -> @(ASTFloatLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTFloatLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTIntLiteral.class);
  link artifact monticoregenerator -> @(ASTIntLiteral.java);
  link artifact monticoregenerator -> @(ASTIntLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTIntLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTLiteral.class);
  link artifact monticoregenerator -> @(ASTLiteral.java);
  link artifact monticoregenerator -> @(ASTLongLiteral.class);
  link artifact monticoregenerator -> @(ASTLongLiteral.java);
  link artifact monticoregenerator -> @(ASTLongLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTLongLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTNullLiteral.class);
  link artifact monticoregenerator -> @(ASTNullLiteral.java);
  link artifact monticoregenerator -> @(ASTNullLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTNullLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTNumericLiteral.class);
  link artifact monticoregenerator -> @(ASTNumericLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedDoubleLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedDoubleLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedDoubleLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTSignedDoubleLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTSignedFloatLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedFloatLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedFloatLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTSignedFloatLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTSignedIntLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedIntLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedIntLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTSignedIntLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTSignedLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedLongLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedLongLiteral.java);
  link artifact monticoregenerator -> @(ASTSignedLongLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTSignedLongLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTSignedNumericLiteral.class);
  link artifact monticoregenerator -> @(ASTSignedNumericLiteral.java);
  link artifact monticoregenerator -> @(ASTStringLiteral.class);
  link artifact monticoregenerator -> @(ASTStringLiteral.java);
  link artifact monticoregenerator -> @(ASTStringLiteralBuilder.class);
  link artifact monticoregenerator -> @(ASTStringLiteralBuilder.java);
  link artifact monticoregenerator -> @(ASTTestLiteralsNode.class);
  link artifact monticoregenerator -> @(ASTTestLiteralsNode.java);
  link artifact monticoregenerator -> @(TestLiteralsLiterals.class);
  link artifact monticoregenerator -> @(TestLiteralsLiterals.java);
  link artifact monticoregenerator -> @(TestLiteralsMill.class);
  link artifact monticoregenerator -> @(TestLiteralsMill.java);
  link artifact monticoregenerator -> @(TestLiteralsNodeFactory.class);
  link artifact monticoregenerator -> @(TestLiteralsNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!33);
  link artifact monticoregenerator -> @(TestLiteralsASTBooleanLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTBooleanLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTCharLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTCharLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTDoubleLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTDoubleLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTFloatLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTFloatLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTIntLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTIntLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTLongLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTLongLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTNullLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTNullLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTNumericLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTNumericLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedDoubleLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedDoubleLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedFloatLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedFloatLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedIntLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedIntLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedLongLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedLongLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedNumericLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTSignedNumericLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTStringLiteralCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTStringLiteralCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsASTTestLiteralsNodeCoCo.class);
  link artifact monticoregenerator -> @(TestLiteralsASTTestLiteralsNodeCoCo.java);
  link artifact monticoregenerator -> @(TestLiteralsCoCoChecker.class);
  link artifact monticoregenerator -> @(TestLiteralsCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!33);
  link artifact monticoregenerator -> @(TestLiterals2OD.class);
  link artifact monticoregenerator -> @(TestLiterals2OD.java);
  link artifact monticoregenerator -> @(_visitor!33);
  link artifact monticoregenerator -> @(TestLiteralsDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestLiteralsDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestLiteralsInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestLiteralsInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestLiteralsParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestLiteralsParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestLiteralsVisitor.class);
  link artifact monticoregenerator -> @(TestLiteralsVisitor.java);
  link artifact monticoregenerator -> @(testjavadsl);
  link artifact monticoregenerator -> @(_ast!40);
  link artifact monticoregenerator -> @(ASTAnnotation.class);
  link artifact monticoregenerator -> @(ASTAnnotation.java);
  link artifact monticoregenerator -> @(ASTAnnotationArguments.class);
  link artifact monticoregenerator -> @(ASTAnnotationArguments.java);
  link artifact monticoregenerator -> @(ASTAnnotationBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationConstant.class);
  link artifact monticoregenerator -> @(ASTAnnotationConstant.java);
  link artifact monticoregenerator -> @(ASTAnnotationConstantBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationConstantBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationMethod.class);
  link artifact monticoregenerator -> @(ASTAnnotationMethod.java);
  link artifact monticoregenerator -> @(ASTAnnotationMethodBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationMethodBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationPairArguments.class);
  link artifact monticoregenerator -> @(ASTAnnotationPairArguments.java);
  link artifact monticoregenerator -> @(ASTAnnotationPairArgumentsBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationPairArgumentsBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationTypeBody.class);
  link artifact monticoregenerator -> @(ASTAnnotationTypeBody.java);
  link artifact monticoregenerator -> @(ASTAnnotationTypeBodyBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationTypeBodyBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationTypeDeclaration.class);
  link artifact monticoregenerator -> @(ASTAnnotationTypeDeclaration.java);
  link artifact monticoregenerator -> @(ASTAnnotationTypeDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTAnnotationTypeDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTAnnotationTypeElementDeclaration.class);
  link artifact monticoregenerator -> @(ASTAnnotationTypeElementDeclaration.java);
  link artifact monticoregenerator -> @(ASTAnonymousClass.class);
  link artifact monticoregenerator -> @(ASTAnonymousClass.java);
  link artifact monticoregenerator -> @(ASTAnonymousClassBuilder.class);
  link artifact monticoregenerator -> @(ASTAnonymousClassBuilder.java);
  link artifact monticoregenerator -> @(ASTArguments.class);
  link artifact monticoregenerator -> @(ASTArguments.java);
  link artifact monticoregenerator -> @(ASTArgumentsBuilder.class);
  link artifact monticoregenerator -> @(ASTArgumentsBuilder.java);
  link artifact monticoregenerator -> @(ASTArrayCreator.class);
  link artifact monticoregenerator -> @(ASTArrayCreator.java);
  link artifact monticoregenerator -> @(ASTArrayCreatorBuilder.class);
  link artifact monticoregenerator -> @(ASTArrayCreatorBuilder.java);
  link artifact monticoregenerator -> @(ASTArrayDimensionByExpression.class);
  link artifact monticoregenerator -> @(ASTArrayDimensionByExpression.java);
  link artifact monticoregenerator -> @(ASTArrayDimensionByExpressionBuilder.class);
  link artifact monticoregenerator -> @(ASTArrayDimensionByExpressionBuilder.java);
  link artifact monticoregenerator -> @(ASTArrayDimensionByInitializer.class);
  link artifact monticoregenerator -> @(ASTArrayDimensionByInitializer.java);
  link artifact monticoregenerator -> @(ASTArrayDimensionByInitializerBuilder.class);
  link artifact monticoregenerator -> @(ASTArrayDimensionByInitializerBuilder.java);
  link artifact monticoregenerator -> @(ASTArrayDimensionSpecifier.class);
  link artifact monticoregenerator -> @(ASTArrayDimensionSpecifier.java);
  link artifact monticoregenerator -> @(ASTArrayInitializer.class);
  link artifact monticoregenerator -> @(ASTArrayInitializer.java);
  link artifact monticoregenerator -> @(ASTArrayInitializerBuilder.class);
  link artifact monticoregenerator -> @(ASTArrayInitializerBuilder.java);
  link artifact monticoregenerator -> @(ASTAssertStatement.class);
  link artifact monticoregenerator -> @(ASTAssertStatement.java);
  link artifact monticoregenerator -> @(ASTAssertStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTAssertStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTBlockStatement.class);
  link artifact monticoregenerator -> @(ASTBlockStatement.java);
  link artifact monticoregenerator -> @(ASTBreakStatement.class);
  link artifact monticoregenerator -> @(ASTBreakStatement.java);
  link artifact monticoregenerator -> @(ASTBreakStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTBreakStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTCatchClause.class);
  link artifact monticoregenerator -> @(ASTCatchClause.java);
  link artifact monticoregenerator -> @(ASTCatchClauseBuilder.class);
  link artifact monticoregenerator -> @(ASTCatchClauseBuilder.java);
  link artifact monticoregenerator -> @(ASTCatchExceptionsHandler.class);
  link artifact monticoregenerator -> @(ASTCatchExceptionsHandler.java);
  link artifact monticoregenerator -> @(ASTCatchExceptionsHandlerBuilder.class);
  link artifact monticoregenerator -> @(ASTCatchExceptionsHandlerBuilder.java);
  link artifact monticoregenerator -> @(ASTCatchType.class);
  link artifact monticoregenerator -> @(ASTCatchType.java);
  link artifact monticoregenerator -> @(ASTCatchTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTCatchTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTClassBlock.class);
  link artifact monticoregenerator -> @(ASTClassBlock.java);
  link artifact monticoregenerator -> @(ASTClassBlockBuilder.class);
  link artifact monticoregenerator -> @(ASTClassBlockBuilder.java);
  link artifact monticoregenerator -> @(ASTClassBody.class);
  link artifact monticoregenerator -> @(ASTClassBody.java);
  link artifact monticoregenerator -> @(ASTClassBodyBuilder.class);
  link artifact monticoregenerator -> @(ASTClassBodyBuilder.java);
  link artifact monticoregenerator -> @(ASTClassBodyDeclaration.class);
  link artifact monticoregenerator -> @(ASTClassBodyDeclaration.java);
  link artifact monticoregenerator -> @(ASTClassCreatorRest.class);
  link artifact monticoregenerator -> @(ASTClassCreatorRest.java);
  link artifact monticoregenerator -> @(ASTClassCreatorRestBuilder.class);
  link artifact monticoregenerator -> @(ASTClassCreatorRestBuilder.java);
  link artifact monticoregenerator -> @(ASTClassDeclaration.class);
  link artifact monticoregenerator -> @(ASTClassDeclaration.java);
  link artifact monticoregenerator -> @(ASTClassDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTClassDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTClassMemberDeclaration.class);
  link artifact monticoregenerator -> @(ASTClassMemberDeclaration.java);
  link artifact monticoregenerator -> @(ASTClassOrInterfaceType.class);
  link artifact monticoregenerator -> @(ASTClassOrInterfaceType.java);
  link artifact monticoregenerator -> @(ASTClassOrInterfaceTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTClassOrInterfaceTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTCommonForControl.class);
  link artifact monticoregenerator -> @(ASTCommonForControl.java);
  link artifact monticoregenerator -> @(ASTCommonForControlBuilder.class);
  link artifact monticoregenerator -> @(ASTCommonForControlBuilder.java);
  link artifact monticoregenerator -> @(ASTCompilationUnit.class);
  link artifact monticoregenerator -> @(ASTCompilationUnit.java);
  link artifact monticoregenerator -> @(ASTCompilationUnitBuilder.class);
  link artifact monticoregenerator -> @(ASTCompilationUnitBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantDeclarator.class);
  link artifact monticoregenerator -> @(ASTConstantDeclarator.java);
  link artifact monticoregenerator -> @(ASTConstantDeclaratorBuilder.class);
  link artifact monticoregenerator -> @(ASTConstantDeclaratorBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantExpressionSwitchLabel.class);
  link artifact monticoregenerator -> @(ASTConstantExpressionSwitchLabel.java);
  link artifact monticoregenerator -> @(ASTConstantExpressionSwitchLabelBuilder.class);
  link artifact monticoregenerator -> @(ASTConstantExpressionSwitchLabelBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsTestJavaDSL.class);
  link artifact monticoregenerator -> @(ASTConstantsTestJavaDSL.java);
  link artifact monticoregenerator -> @(ASTConstDeclaration.class);
  link artifact monticoregenerator -> @(ASTConstDeclaration.java);
  link artifact monticoregenerator -> @(ASTConstDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTConstDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTConstructorBody.class);
  link artifact monticoregenerator -> @(ASTConstructorBody.java);
  link artifact monticoregenerator -> @(ASTConstructorDeclaration.class);
  link artifact monticoregenerator -> @(ASTConstructorDeclaration.java);
  link artifact monticoregenerator -> @(ASTConstructorDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTConstructorDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTContinueStatement.class);
  link artifact monticoregenerator -> @(ASTContinueStatement.java);
  link artifact monticoregenerator -> @(ASTContinueStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTContinueStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTCreatedName.class);
  link artifact monticoregenerator -> @(ASTCreatedName.java);
  link artifact monticoregenerator -> @(ASTCreatedNameBuilder.class);
  link artifact monticoregenerator -> @(ASTCreatedNameBuilder.java);
  link artifact monticoregenerator -> @(ASTCreator.class);
  link artifact monticoregenerator -> @(ASTCreator.java);
  link artifact monticoregenerator -> @(ASTDeclaratorId.class);
  link artifact monticoregenerator -> @(ASTDeclaratorId.java);
  link artifact monticoregenerator -> @(ASTDeclaratorIdBuilder.class);
  link artifact monticoregenerator -> @(ASTDeclaratorIdBuilder.java);
  link artifact monticoregenerator -> @(ASTDefaultSwitchLabel.class);
  link artifact monticoregenerator -> @(ASTDefaultSwitchLabel.java);
  link artifact monticoregenerator -> @(ASTDefaultSwitchLabelBuilder.class);
  link artifact monticoregenerator -> @(ASTDefaultSwitchLabelBuilder.java);
  link artifact monticoregenerator -> @(ASTDefaultValue.class);
  link artifact monticoregenerator -> @(ASTDefaultValue.java);
  link artifact monticoregenerator -> @(ASTDefaultValueBuilder.class);
  link artifact monticoregenerator -> @(ASTDefaultValueBuilder.java);
  link artifact monticoregenerator -> @(ASTDoWhileStatement.class);
  link artifact monticoregenerator -> @(ASTDoWhileStatement.java);
  link artifact monticoregenerator -> @(ASTDoWhileStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTDoWhileStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTElementValue.class);
  link artifact monticoregenerator -> @(ASTElementValue.java);
  link artifact monticoregenerator -> @(ASTElementValueArrayInitializer.class);
  link artifact monticoregenerator -> @(ASTElementValueArrayInitializer.java);
  link artifact monticoregenerator -> @(ASTElementValueArrayInitializerBuilder.class);
  link artifact monticoregenerator -> @(ASTElementValueArrayInitializerBuilder.java);
  link artifact monticoregenerator -> @(ASTElementValuePair.class);
  link artifact monticoregenerator -> @(ASTElementValuePair.java);
  link artifact monticoregenerator -> @(ASTElementValuePairBuilder.class);
  link artifact monticoregenerator -> @(ASTElementValuePairBuilder.java);
  link artifact monticoregenerator -> @(ASTEmptyDeclaration.class);
  link artifact monticoregenerator -> @(ASTEmptyDeclaration.java);
  link artifact monticoregenerator -> @(ASTEmptyDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTEmptyDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTEmptyStatement.class);
  link artifact monticoregenerator -> @(ASTEmptyStatement.java);
  link artifact monticoregenerator -> @(ASTEmptyStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTEmptyStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTEnhancedForControl.class);
  link artifact monticoregenerator -> @(ASTEnhancedForControl.java);
  link artifact monticoregenerator -> @(ASTEnhancedForControlBuilder.class);
  link artifact monticoregenerator -> @(ASTEnhancedForControlBuilder.java);
  link artifact monticoregenerator -> @(ASTEnumBody.class);
  link artifact monticoregenerator -> @(ASTEnumBody.java);
  link artifact monticoregenerator -> @(ASTEnumBodyBuilder.class);
  link artifact monticoregenerator -> @(ASTEnumBodyBuilder.java);
  link artifact monticoregenerator -> @(ASTEnumConstantDeclaration.class);
  link artifact monticoregenerator -> @(ASTEnumConstantDeclaration.java);
  link artifact monticoregenerator -> @(ASTEnumConstantDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTEnumConstantDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTEnumConstantSwitchLabel.class);
  link artifact monticoregenerator -> @(ASTEnumConstantSwitchLabel.java);
  link artifact monticoregenerator -> @(ASTEnumConstantSwitchLabelBuilder.class);
  link artifact monticoregenerator -> @(ASTEnumConstantSwitchLabelBuilder.java);
  link artifact monticoregenerator -> @(ASTEnumDeclaration.class);
  link artifact monticoregenerator -> @(ASTEnumDeclaration.java);
  link artifact monticoregenerator -> @(ASTEnumDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTEnumDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTExceptionHandler.class);
  link artifact monticoregenerator -> @(ASTExceptionHandler.java);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocation.class);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocation.java);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationBuilder.class);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationBuilder.java);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationSuffix.class);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationSuffix.java);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationSuffixBuilder.class);
  link artifact monticoregenerator -> @(ASTExplicitGenericInvocationSuffixBuilder.java);
  link artifact monticoregenerator -> @(ASTExpression.class!2);
  link artifact monticoregenerator -> @(ASTExpression.java!2);
  link artifact monticoregenerator -> @(ASTExpressionBuilder.class);
  link artifact monticoregenerator -> @(ASTExpressionBuilder.java);
  link artifact monticoregenerator -> @(ASTExpressionStatement.class);
  link artifact monticoregenerator -> @(ASTExpressionStatement.java);
  link artifact monticoregenerator -> @(ASTExpressionStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTExpressionStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTFieldDeclaration.class);
  link artifact monticoregenerator -> @(ASTFieldDeclaration.java);
  link artifact monticoregenerator -> @(ASTFieldDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTFieldDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTFinallyBlock.class);
  link artifact monticoregenerator -> @(ASTFinallyBlock.java);
  link artifact monticoregenerator -> @(ASTFinallyBlockOnlyHandler.class);
  link artifact monticoregenerator -> @(ASTFinallyBlockOnlyHandler.java);
  link artifact monticoregenerator -> @(ASTFinallyBlockOnlyHandlerBuilder.class);
  link artifact monticoregenerator -> @(ASTFinallyBlockOnlyHandlerBuilder.java);
  link artifact monticoregenerator -> @(ASTForControl.class);
  link artifact monticoregenerator -> @(ASTForControl.java);
  link artifact monticoregenerator -> @(ASTForInit.class);
  link artifact monticoregenerator -> @(ASTForInit.java);
  link artifact monticoregenerator -> @(ASTForInitByExpressions.class);
  link artifact monticoregenerator -> @(ASTForInitByExpressions.java);
  link artifact monticoregenerator -> @(ASTForInitByExpressionsBuilder.class);
  link artifact monticoregenerator -> @(ASTForInitByExpressionsBuilder.java);
  link artifact monticoregenerator -> @(ASTFormalParameter.class);
  link artifact monticoregenerator -> @(ASTFormalParameter.java);
  link artifact monticoregenerator -> @(ASTFormalParameterBuilder.class);
  link artifact monticoregenerator -> @(ASTFormalParameterBuilder.java);
  link artifact monticoregenerator -> @(ASTFormalParameterListing.class);
  link artifact monticoregenerator -> @(ASTFormalParameterListing.java);
  link artifact monticoregenerator -> @(ASTFormalParameterListingBuilder.class);
  link artifact monticoregenerator -> @(ASTFormalParameterListingBuilder.java);
  link artifact monticoregenerator -> @(ASTFormalParameters.class);
  link artifact monticoregenerator -> @(ASTFormalParameters.java);
  link artifact monticoregenerator -> @(ASTFormalParametersBuilder.class);
  link artifact monticoregenerator -> @(ASTFormalParametersBuilder.java);
  link artifact monticoregenerator -> @(ASTForStatement.class);
  link artifact monticoregenerator -> @(ASTForStatement.java);
  link artifact monticoregenerator -> @(ASTForStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTForStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTIdentifierAndTypeArgument.class);
  link artifact monticoregenerator -> @(ASTIdentifierAndTypeArgument.java);
  link artifact monticoregenerator -> @(ASTIdentifierAndTypeArgumentBuilder.class);
  link artifact monticoregenerator -> @(ASTIdentifierAndTypeArgumentBuilder.java);
  link artifact monticoregenerator -> @(ASTIfStatement.class);
  link artifact monticoregenerator -> @(ASTIfStatement.java);
  link artifact monticoregenerator -> @(ASTIfStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTIfStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTImportDeclaration.class);
  link artifact monticoregenerator -> @(ASTImportDeclaration.java);
  link artifact monticoregenerator -> @(ASTImportDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTImportDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTInnerCreator.class);
  link artifact monticoregenerator -> @(ASTInnerCreator.java);
  link artifact monticoregenerator -> @(ASTInnerCreatorBuilder.class);
  link artifact monticoregenerator -> @(ASTInnerCreatorBuilder.java);
  link artifact monticoregenerator -> @(ASTInterfaceBody.class);
  link artifact monticoregenerator -> @(ASTInterfaceBody.java);
  link artifact monticoregenerator -> @(ASTInterfaceBodyBuilder.class);
  link artifact monticoregenerator -> @(ASTInterfaceBodyBuilder.java);
  link artifact monticoregenerator -> @(ASTInterfaceBodyDeclaration.class);
  link artifact monticoregenerator -> @(ASTInterfaceBodyDeclaration.java);
  link artifact monticoregenerator -> @(ASTInterfaceDeclaration.class);
  link artifact monticoregenerator -> @(ASTInterfaceDeclaration.java);
  link artifact monticoregenerator -> @(ASTInterfaceDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTInterfaceDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTInterfaceMemberDeclaration.class);
  link artifact monticoregenerator -> @(ASTInterfaceMemberDeclaration.java);
  link artifact monticoregenerator -> @(ASTInterfaceMethodDeclaration.class);
  link artifact monticoregenerator -> @(ASTInterfaceMethodDeclaration.java);
  link artifact monticoregenerator -> @(ASTInterfaceMethodDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTInterfaceMethodDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTJavaBlock.class);
  link artifact monticoregenerator -> @(ASTJavaBlock.java);
  link artifact monticoregenerator -> @(ASTJavaBlockBuilder.class);
  link artifact monticoregenerator -> @(ASTJavaBlockBuilder.java);
  link artifact monticoregenerator -> @(ASTLabeledStatement.class);
  link artifact monticoregenerator -> @(ASTLabeledStatement.java);
  link artifact monticoregenerator -> @(ASTLabeledStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTLabeledStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTLastFormalParameter.class);
  link artifact monticoregenerator -> @(ASTLastFormalParameter.java);
  link artifact monticoregenerator -> @(ASTLastFormalParameterBuilder.class);
  link artifact monticoregenerator -> @(ASTLastFormalParameterBuilder.java);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclaration.class);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclaration.java);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationStatement.class);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationStatement.java);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTLocalVariableDeclarationStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTMethodBody.class);
  link artifact monticoregenerator -> @(ASTMethodBody.java);
  link artifact monticoregenerator -> @(ASTMethodDeclaration.class);
  link artifact monticoregenerator -> @(ASTMethodDeclaration.java);
  link artifact monticoregenerator -> @(ASTMethodDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTMethodDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTMethodSignature.class);
  link artifact monticoregenerator -> @(ASTMethodSignature.java);
  link artifact monticoregenerator -> @(ASTMethodSignatureBuilder.class);
  link artifact monticoregenerator -> @(ASTMethodSignatureBuilder.java);
  link artifact monticoregenerator -> @(ASTModifier.class!2);
  link artifact monticoregenerator -> @(ASTModifier.java!2);
  link artifact monticoregenerator -> @(ASTPackageDeclaration.class);
  link artifact monticoregenerator -> @(ASTPackageDeclaration.java);
  link artifact monticoregenerator -> @(ASTPackageDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTPackageDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTPrimaryExpression.class);
  link artifact monticoregenerator -> @(ASTPrimaryExpression.java);
  link artifact monticoregenerator -> @(ASTPrimaryExpressionBuilder.class);
  link artifact monticoregenerator -> @(ASTPrimaryExpressionBuilder.java);
  link artifact monticoregenerator -> @(ASTPrimitiveModifier.class);
  link artifact monticoregenerator -> @(ASTPrimitiveModifier.java);
  link artifact monticoregenerator -> @(ASTPrimitiveModifierBuilder.class);
  link artifact monticoregenerator -> @(ASTPrimitiveModifierBuilder.java);
  link artifact monticoregenerator -> @(ASTResource.class);
  link artifact monticoregenerator -> @(ASTResource.java);
  link artifact monticoregenerator -> @(ASTResourceBuilder.class);
  link artifact monticoregenerator -> @(ASTResourceBuilder.java);
  link artifact monticoregenerator -> @(ASTReturnStatement.class);
  link artifact monticoregenerator -> @(ASTReturnStatement.java);
  link artifact monticoregenerator -> @(ASTReturnStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTReturnStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTStatement.class);
  link artifact monticoregenerator -> @(ASTStatement.java);
  link artifact monticoregenerator -> @(ASTSuperSuffix.class);
  link artifact monticoregenerator -> @(ASTSuperSuffix.java);
  link artifact monticoregenerator -> @(ASTSuperSuffixBuilder.class);
  link artifact monticoregenerator -> @(ASTSuperSuffixBuilder.java);
  link artifact monticoregenerator -> @(ASTSwitchBlockStatementGroup.class);
  link artifact monticoregenerator -> @(ASTSwitchBlockStatementGroup.java);
  link artifact monticoregenerator -> @(ASTSwitchBlockStatementGroupBuilder.class);
  link artifact monticoregenerator -> @(ASTSwitchBlockStatementGroupBuilder.java);
  link artifact monticoregenerator -> @(ASTSwitchLabel.class);
  link artifact monticoregenerator -> @(ASTSwitchLabel.java);
  link artifact monticoregenerator -> @(ASTSwitchStatement.class);
  link artifact monticoregenerator -> @(ASTSwitchStatement.java);
  link artifact monticoregenerator -> @(ASTSwitchStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTSwitchStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTSynchronizedStatement.class);
  link artifact monticoregenerator -> @(ASTSynchronizedStatement.java);
  link artifact monticoregenerator -> @(ASTSynchronizedStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTSynchronizedStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTTestJavaDSLNode.class);
  link artifact monticoregenerator -> @(ASTTestJavaDSLNode.java);
  link artifact monticoregenerator -> @(ASTThrows.class);
  link artifact monticoregenerator -> @(ASTThrows.java);
  link artifact monticoregenerator -> @(ASTThrowsBuilder.class);
  link artifact monticoregenerator -> @(ASTThrowsBuilder.java);
  link artifact monticoregenerator -> @(ASTThrowStatement.class);
  link artifact monticoregenerator -> @(ASTThrowStatement.java);
  link artifact monticoregenerator -> @(ASTThrowStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTThrowStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTTryStatement.class);
  link artifact monticoregenerator -> @(ASTTryStatement.java);
  link artifact monticoregenerator -> @(ASTTryStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTTryStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTTryStatementWithResources.class);
  link artifact monticoregenerator -> @(ASTTryStatementWithResources.java);
  link artifact monticoregenerator -> @(ASTTryStatementWithResourcesBuilder.class);
  link artifact monticoregenerator -> @(ASTTryStatementWithResourcesBuilder.java);
  link artifact monticoregenerator -> @(ASTTypeDeclaration.class);
  link artifact monticoregenerator -> @(ASTTypeDeclaration.java);
  link artifact monticoregenerator -> @(ASTVariableDeclarator.class);
  link artifact monticoregenerator -> @(ASTVariableDeclarator.java);
  link artifact monticoregenerator -> @(ASTVariableDeclaratorBuilder.class);
  link artifact monticoregenerator -> @(ASTVariableDeclaratorBuilder.java);
  link artifact monticoregenerator -> @(ASTVariableInitializer.class);
  link artifact monticoregenerator -> @(ASTVariableInitializer.java);
  link artifact monticoregenerator -> @(ASTWhileStatement.class);
  link artifact monticoregenerator -> @(ASTWhileStatement.java);
  link artifact monticoregenerator -> @(ASTWhileStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTWhileStatementBuilder.java);
  link artifact monticoregenerator -> @(TestJavaDSLLiterals.class);
  link artifact monticoregenerator -> @(TestJavaDSLLiterals.java);
  link artifact monticoregenerator -> @(TestJavaDSLMill.class);
  link artifact monticoregenerator -> @(TestJavaDSLMill.java);
  link artifact monticoregenerator -> @(TestJavaDSLNodeFactory.class);
  link artifact monticoregenerator -> @(TestJavaDSLNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!34);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationArgumentsCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationArgumentsCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationConstantCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationConstantCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationMethodCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationMethodCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationPairArgumentsCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationPairArgumentsCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnnotationTypeElementDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnonymousClassCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAnonymousClassCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArgumentsCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArgumentsCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayCreatorCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayCreatorCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionByExpressionCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionByExpressionCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionByInitializerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionByInitializerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionSpecifierCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayDimensionSpecifierCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayInitializerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTArrayInitializerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTAssertStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTAssertStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTBlockStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTBlockStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTBreakStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTBreakStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchClauseCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchClauseCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchExceptionsHandlerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchExceptionsHandlerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchTypeCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCatchTypeCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBlockCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBlockCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBodyDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassBodyDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassCreatorRestCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassCreatorRestCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassMemberDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassMemberDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassOrInterfaceTypeCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTClassOrInterfaceTypeCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCommonForControlCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCommonForControlCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCompilationUnitCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCompilationUnitCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstantDeclaratorCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstantDeclaratorCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstantExpressionSwitchLabelCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstantExpressionSwitchLabelCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstructorBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstructorBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstructorDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTConstructorDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTContinueStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTContinueStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCreatedNameCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCreatedNameCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTCreatorCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTCreatorCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTDeclaratorIdCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTDeclaratorIdCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTDefaultSwitchLabelCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTDefaultSwitchLabelCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTDefaultValueCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTDefaultValueCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTDoWhileStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTDoWhileStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValueArrayInitializerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValueArrayInitializerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValueCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValueCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValuePairCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTElementValuePairCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEmptyDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEmptyDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEmptyStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEmptyStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnhancedForControlCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnhancedForControlCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumConstantDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumConstantDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumConstantSwitchLabelCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumConstantSwitchLabelCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTEnumDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTExceptionHandlerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTExceptionHandlerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTExplicitGenericInvocationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTExplicitGenericInvocationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTExplicitGenericInvocationSuffixCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTExpressionCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTExpressionCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTExpressionStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTExpressionStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFieldDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFieldDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFinallyBlockCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFinallyBlockCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFinallyBlockOnlyHandlerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTForControlCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTForControlCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTForInitByExpressionsCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTForInitByExpressionsCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTForInitCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTForInitCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParameterCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParameterCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParameterListingCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParameterListingCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParametersCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTFormalParametersCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTForStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTForStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTIdentifierAndTypeArgumentCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTIdentifierAndTypeArgumentCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTIfStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTIfStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTImportDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTImportDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInnerCreatorCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInnerCreatorCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceBodyDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceBodyDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceMemberDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceMemberDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceMethodDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTInterfaceMethodDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTJavaBlockCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTJavaBlockCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTLabeledStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTLabeledStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTLastFormalParameterCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTLastFormalParameterCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTLocalVariableDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTLocalVariableDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTLocalVariableDeclarationStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTLocalVariableDeclarationStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodBodyCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodBodyCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodSignatureCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTMethodSignatureCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTModifierCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTModifierCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTPackageDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTPackageDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTPrimaryExpressionCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTPrimaryExpressionCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTPrimitiveModifierCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTPrimitiveModifierCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTResourceCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTResourceCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTReturnStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTReturnStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTSuperSuffixCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTSuperSuffixCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchBlockStatementGroupCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchBlockStatementGroupCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchLabelCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchLabelCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTSwitchStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTSynchronizedStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTSynchronizedStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTTestJavaDSLNodeCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTTestJavaDSLNodeCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTThrowsCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTThrowsCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTThrowStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTThrowStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTTryStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTTryStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTTryStatementWithResourcesCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTTryStatementWithResourcesCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTTypeDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTTypeDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTVariableDeclaratorCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTVariableDeclaratorCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTVariableInitializerCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTVariableInitializerCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLASTWhileStatementCoCo.class);
  link artifact monticoregenerator -> @(TestJavaDSLASTWhileStatementCoCo.java);
  link artifact monticoregenerator -> @(TestJavaDSLCoCoChecker.class);
  link artifact monticoregenerator -> @(TestJavaDSLCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!34);
  link artifact monticoregenerator -> @(TestJavaDSL2OD.class);
  link artifact monticoregenerator -> @(TestJavaDSL2OD.java);
  link artifact monticoregenerator -> @(_visitor!34);
  link artifact monticoregenerator -> @(TestJavaDSLDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestJavaDSLDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestJavaDSLInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestJavaDSLInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestJavaDSLParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestJavaDSLParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestJavaDSLVisitor.class);
  link artifact monticoregenerator -> @(TestJavaDSLVisitor.java);
  link artifact monticoregenerator -> @(testod);
  link artifact monticoregenerator -> @(_ast!41);
  link artifact monticoregenerator -> @(ASTConstantsTestOD.class);
  link artifact monticoregenerator -> @(ASTConstantsTestOD.java);
  link artifact monticoregenerator -> @(ASTODAttribute.class);
  link artifact monticoregenerator -> @(ASTODAttribute.java);
  link artifact monticoregenerator -> @(ASTODAttributeBuilder.class);
  link artifact monticoregenerator -> @(ASTODAttributeBuilder.java);
  link artifact monticoregenerator -> @(ASTODCommonObject.class);
  link artifact monticoregenerator -> @(ASTODCommonObject.java);
  link artifact monticoregenerator -> @(ASTODCompilationUnit.class);
  link artifact monticoregenerator -> @(ASTODCompilationUnit.java);
  link artifact monticoregenerator -> @(ASTODCompilationUnitBuilder.class);
  link artifact monticoregenerator -> @(ASTODCompilationUnitBuilder.java);
  link artifact monticoregenerator -> @(ASTODDefinition.class);
  link artifact monticoregenerator -> @(ASTODDefinition.java);
  link artifact monticoregenerator -> @(ASTODDefinitionBuilder.class);
  link artifact monticoregenerator -> @(ASTODDefinitionBuilder.java);
  link artifact monticoregenerator -> @(ASTODElement.class);
  link artifact monticoregenerator -> @(ASTODElement.java);
  link artifact monticoregenerator -> @(ASTODElementBuilder.class);
  link artifact monticoregenerator -> @(ASTODElementBuilder.java);
  link artifact monticoregenerator -> @(ASTODInnerLink.class);
  link artifact monticoregenerator -> @(ASTODInnerLink.java);
  link artifact monticoregenerator -> @(ASTODInnerLinkBuilder.class);
  link artifact monticoregenerator -> @(ASTODInnerLinkBuilder.java);
  link artifact monticoregenerator -> @(ASTODInnerObject.class);
  link artifact monticoregenerator -> @(ASTODInnerObject.java);
  link artifact monticoregenerator -> @(ASTODInnerObjectBuilder.class);
  link artifact monticoregenerator -> @(ASTODInnerObjectBuilder.java);
  link artifact monticoregenerator -> @(ASTODLink.class);
  link artifact monticoregenerator -> @(ASTODLink.java);
  link artifact monticoregenerator -> @(ASTODLinkBuilder.class);
  link artifact monticoregenerator -> @(ASTODLinkBuilder.java);
  link artifact monticoregenerator -> @(ASTODLinkQualifier.class);
  link artifact monticoregenerator -> @(ASTODLinkQualifier.java);
  link artifact monticoregenerator -> @(ASTODLinkQualifierBuilder.class);
  link artifact monticoregenerator -> @(ASTODLinkQualifierBuilder.java);
  link artifact monticoregenerator -> @(ASTODObject.class);
  link artifact monticoregenerator -> @(ASTODObject.java);
  link artifact monticoregenerator -> @(ASTODObjectBuilder.class);
  link artifact monticoregenerator -> @(ASTODObjectBuilder.java);
  link artifact monticoregenerator -> @(ASTODValueCollection.class);
  link artifact monticoregenerator -> @(ASTODValueCollection.java);
  link artifact monticoregenerator -> @(ASTODValueCollectionBuilder.class);
  link artifact monticoregenerator -> @(ASTODValueCollectionBuilder.java);
  link artifact monticoregenerator -> @(ASTTestODNode.class);
  link artifact monticoregenerator -> @(ASTTestODNode.java);
  link artifact monticoregenerator -> @(ASTValue.class!2);
  link artifact monticoregenerator -> @(ASTValue.java!2);
  link artifact monticoregenerator -> @(ASTValueBuilder.class);
  link artifact monticoregenerator -> @(ASTValueBuilder.java);
  link artifact monticoregenerator -> @(ASTVersion.class);
  link artifact monticoregenerator -> @(ASTVersion.java);
  link artifact monticoregenerator -> @(ASTVersionBuilder.class);
  link artifact monticoregenerator -> @(ASTVersionBuilder.java);
  link artifact monticoregenerator -> @(TestODLiterals.class);
  link artifact monticoregenerator -> @(TestODLiterals.java);
  link artifact monticoregenerator -> @(TestODMill.class);
  link artifact monticoregenerator -> @(TestODMill.java);
  link artifact monticoregenerator -> @(TestODNodeFactory.class);
  link artifact monticoregenerator -> @(TestODNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!35);
  link artifact monticoregenerator -> @(TestODASTODAttributeCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODAttributeCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODCommonObjectCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODCommonObjectCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODCompilationUnitCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODCompilationUnitCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODDefinitionCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODDefinitionCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODElementCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODElementCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODInnerLinkCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODInnerLinkCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODInnerObjectCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODInnerObjectCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODLinkCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODLinkCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODLinkQualifierCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODLinkQualifierCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODObjectCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODObjectCoCo.java);
  link artifact monticoregenerator -> @(TestODASTODValueCollectionCoCo.class);
  link artifact monticoregenerator -> @(TestODASTODValueCollectionCoCo.java);
  link artifact monticoregenerator -> @(TestODASTTestODNodeCoCo.class);
  link artifact monticoregenerator -> @(TestODASTTestODNodeCoCo.java);
  link artifact monticoregenerator -> @(TestODASTValueCoCo.class);
  link artifact monticoregenerator -> @(TestODASTValueCoCo.java);
  link artifact monticoregenerator -> @(TestODASTVersionCoCo.class);
  link artifact monticoregenerator -> @(TestODASTVersionCoCo.java);
  link artifact monticoregenerator -> @(TestODCoCoChecker.class);
  link artifact monticoregenerator -> @(TestODCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!35);
  link artifact monticoregenerator -> @(TestOD2OD.class);
  link artifact monticoregenerator -> @(TestOD2OD.java);
  link artifact monticoregenerator -> @(_visitor!35);
  link artifact monticoregenerator -> @(TestODDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestODDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestODInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestODInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestODParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestODParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestODVisitor.class);
  link artifact monticoregenerator -> @(TestODVisitor.java);
  link artifact monticoregenerator -> @(types!8);
  link artifact monticoregenerator -> @(testtypes);
  link artifact monticoregenerator -> @(_ast!42);
  link artifact monticoregenerator -> @(ASTArrayType.class);
  link artifact monticoregenerator -> @(ASTArrayType.java);
  link artifact monticoregenerator -> @(ASTArrayTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTArrayTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTComplexArrayType.class);
  link artifact monticoregenerator -> @(ASTComplexArrayType.java);
  link artifact monticoregenerator -> @(ASTComplexArrayTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTComplexArrayTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTComplexReferenceType.class);
  link artifact monticoregenerator -> @(ASTComplexReferenceType.java);
  link artifact monticoregenerator -> @(ASTComplexReferenceTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTComplexReferenceTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTConstantsTestTypes.class);
  link artifact monticoregenerator -> @(ASTConstantsTestTypes.java);
  link artifact monticoregenerator -> @(ASTImportStatement.class);
  link artifact monticoregenerator -> @(ASTImportStatement.java);
  link artifact monticoregenerator -> @(ASTImportStatementBuilder.class);
  link artifact monticoregenerator -> @(ASTImportStatementBuilder.java);
  link artifact monticoregenerator -> @(ASTPrimitiveArrayType.class);
  link artifact monticoregenerator -> @(ASTPrimitiveArrayType.java);
  link artifact monticoregenerator -> @(ASTPrimitiveArrayTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTPrimitiveArrayTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTPrimitiveType.class);
  link artifact monticoregenerator -> @(ASTPrimitiveType.java);
  link artifact monticoregenerator -> @(ASTPrimitiveTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTPrimitiveTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTQualifiedName.class);
  link artifact monticoregenerator -> @(ASTQualifiedName.java);
  link artifact monticoregenerator -> @(ASTQualifiedNameBuilder.class);
  link artifact monticoregenerator -> @(ASTQualifiedNameBuilder.java);
  link artifact monticoregenerator -> @(ASTReferenceType.class);
  link artifact monticoregenerator -> @(ASTReferenceType.java);
  link artifact monticoregenerator -> @(ASTReturnType.class);
  link artifact monticoregenerator -> @(ASTReturnType.java);
  link artifact monticoregenerator -> @(ASTSimpleReferenceType.class);
  link artifact monticoregenerator -> @(ASTSimpleReferenceType.java);
  link artifact monticoregenerator -> @(ASTSimpleReferenceTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTSimpleReferenceTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTTestTypesNode.class);
  link artifact monticoregenerator -> @(ASTTestTypesNode.java);
  link artifact monticoregenerator -> @(ASTType.class);
  link artifact monticoregenerator -> @(ASTType.java);
  link artifact monticoregenerator -> @(ASTTypeArgument.class);
  link artifact monticoregenerator -> @(ASTTypeArgument.java);
  link artifact monticoregenerator -> @(ASTTypeArguments.class);
  link artifact monticoregenerator -> @(ASTTypeArguments.java);
  link artifact monticoregenerator -> @(ASTTypeArgumentsBuilder.class);
  link artifact monticoregenerator -> @(ASTTypeArgumentsBuilder.java);
  link artifact monticoregenerator -> @(ASTTypeParameters.class);
  link artifact monticoregenerator -> @(ASTTypeParameters.java);
  link artifact monticoregenerator -> @(ASTTypeParametersBuilder.class);
  link artifact monticoregenerator -> @(ASTTypeParametersBuilder.java);
  link artifact monticoregenerator -> @(ASTTypeVariableDeclaration.class);
  link artifact monticoregenerator -> @(ASTTypeVariableDeclaration.java);
  link artifact monticoregenerator -> @(ASTTypeVariableDeclarationBuilder.class);
  link artifact monticoregenerator -> @(ASTTypeVariableDeclarationBuilder.java);
  link artifact monticoregenerator -> @(ASTVoidType.class);
  link artifact monticoregenerator -> @(ASTVoidType.java);
  link artifact monticoregenerator -> @(ASTVoidTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTVoidTypeBuilder.java);
  link artifact monticoregenerator -> @(ASTWildcardType.class);
  link artifact monticoregenerator -> @(ASTWildcardType.java);
  link artifact monticoregenerator -> @(ASTWildcardTypeBuilder.class);
  link artifact monticoregenerator -> @(ASTWildcardTypeBuilder.java);
  link artifact monticoregenerator -> @(TestTypesLiterals.class);
  link artifact monticoregenerator -> @(TestTypesLiterals.java);
  link artifact monticoregenerator -> @(TestTypesMill.class);
  link artifact monticoregenerator -> @(TestTypesMill.java);
  link artifact monticoregenerator -> @(TestTypesNodeFactory.class);
  link artifact monticoregenerator -> @(TestTypesNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!36);
  link artifact monticoregenerator -> @(TestTypesASTArrayTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTArrayTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTComplexArrayTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTComplexArrayTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTComplexReferenceTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTComplexReferenceTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTImportStatementCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTImportStatementCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTPrimitiveArrayTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTPrimitiveArrayTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTPrimitiveTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTPrimitiveTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTQualifiedNameCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTQualifiedNameCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTReferenceTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTReferenceTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTReturnTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTReturnTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTSimpleReferenceTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTSimpleReferenceTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTestTypesNodeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTestTypesNodeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTypeArgumentCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTypeArgumentCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTypeArgumentsCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTypeArgumentsCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTypeParametersCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTypeParametersCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTTypeVariableDeclarationCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTTypeVariableDeclarationCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTVoidTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTVoidTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesASTWildcardTypeCoCo.class);
  link artifact monticoregenerator -> @(TestTypesASTWildcardTypeCoCo.java);
  link artifact monticoregenerator -> @(TestTypesCoCoChecker.class);
  link artifact monticoregenerator -> @(TestTypesCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!36);
  link artifact monticoregenerator -> @(TestTypes2OD.class);
  link artifact monticoregenerator -> @(TestTypes2OD.java);
  link artifact monticoregenerator -> @(_visitor!36);
  link artifact monticoregenerator -> @(TestTypesDelegatorVisitor.class);
  link artifact monticoregenerator -> @(TestTypesDelegatorVisitor.java);
  link artifact monticoregenerator -> @(TestTypesInheritanceVisitor.class);
  link artifact monticoregenerator -> @(TestTypesInheritanceVisitor.java);
  link artifact monticoregenerator -> @(TestTypesParentAwareVisitor.class);
  link artifact monticoregenerator -> @(TestTypesParentAwareVisitor.java);
  link artifact monticoregenerator -> @(TestTypesVisitor.class);
  link artifact monticoregenerator -> @(TestTypesVisitor.java);
  link artifact monticoregenerator -> @(robot!4);
  link artifact monticoregenerator -> @(robotdsl);
  link artifact monticoregenerator -> @(_ast!43);
  link artifact monticoregenerator -> @(ASTConstantsRobotDSL.class);
  link artifact monticoregenerator -> @(ASTConstantsRobotDSL.java);
  link artifact monticoregenerator -> @(ASTDirection.class);
  link artifact monticoregenerator -> @(ASTDirection.java);
  link artifact monticoregenerator -> @(ASTIteration.class);
  link artifact monticoregenerator -> @(ASTIteration.java);
  link artifact monticoregenerator -> @(ASTIterationBuilder.class);
  link artifact monticoregenerator -> @(ASTIterationBuilder.java);
  link artifact monticoregenerator -> @(ASTMovement.class);
  link artifact monticoregenerator -> @(ASTMovement.java);
  link artifact monticoregenerator -> @(ASTProcedureReference.class);
  link artifact monticoregenerator -> @(ASTProcedureReference.java);
  link artifact monticoregenerator -> @(ASTProcedureReferenceBuilder.class);
  link artifact monticoregenerator -> @(ASTProcedureReferenceBuilder.java);
  link artifact monticoregenerator -> @(ASTQualifiedName.class!2);
  link artifact monticoregenerator -> @(ASTQualifiedName.java!2);
  link artifact monticoregenerator -> @(ASTQualifiedNameBuilder.class!2);
  link artifact monticoregenerator -> @(ASTQualifiedNameBuilder.java!2);
  link artifact monticoregenerator -> @(ASTRobotDSLNode.class);
  link artifact monticoregenerator -> @(ASTRobotDSLNode.java);
  link artifact monticoregenerator -> @(ASTRobotProcedure.class);
  link artifact monticoregenerator -> @(ASTRobotProcedure.java);
  link artifact monticoregenerator -> @(ASTRobotProcedureBuilder.class);
  link artifact monticoregenerator -> @(ASTRobotProcedureBuilder.java);
  link artifact monticoregenerator -> @(ASTSimpleMove.class);
  link artifact monticoregenerator -> @(ASTSimpleMove.java);
  link artifact monticoregenerator -> @(ASTSimpleMoveBuilder.class);
  link artifact monticoregenerator -> @(ASTSimpleMoveBuilder.java);
  link artifact monticoregenerator -> @(RobotDSLLiterals.class);
  link artifact monticoregenerator -> @(RobotDSLLiterals.java);
  link artifact monticoregenerator -> @(RobotDSLMill.class);
  link artifact monticoregenerator -> @(RobotDSLMill.java);
  link artifact monticoregenerator -> @(RobotDSLNodeFactory.class);
  link artifact monticoregenerator -> @(RobotDSLNodeFactory.java);
  link artifact monticoregenerator -> @(_cocos!37);
  link artifact monticoregenerator -> @(RobotDSLASTIterationCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTMovementCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTProcedureReferenceCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTQualifiedNameCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTRobotDSLNodeCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTRobotProcedureCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLASTSimpleMoveCoCo.java);
  link artifact monticoregenerator -> @(RobotDSLCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!37);
  link artifact monticoregenerator -> @(RobotDSL2OD.java);
  link artifact monticoregenerator -> @(_visitor!37);
  link artifact monticoregenerator -> @(RobotDSLDelegatorVisitor.java);
  link artifact monticoregenerator -> @(RobotDSLInheritanceVisitor.java);
  link artifact monticoregenerator -> @(RobotDSLParentAwareVisitor.java);
  link artifact monticoregenerator -> @(RobotDSLVisitor.class);
  link artifact monticoregenerator -> @(RobotDSLVisitor.java);
  link artifact monticoregenerator -> @(sourcecode);
  link artifact monticoregenerator -> @(de!19);
  link artifact monticoregenerator -> @(monticore!20);
  link artifact monticoregenerator -> @(grammar!10);
  link artifact monticoregenerator -> @(concepts!5);
  link artifact monticoregenerator -> @(antlr!9);
  link artifact monticoregenerator -> @(antlr!10);
  link artifact monticoregenerator -> @(_ast!44);
  link artifact monticoregenerator -> @(AntlrLiterals.java);
  link artifact monticoregenerator -> @(AntlrMill.java);
  link artifact monticoregenerator -> @(AntlrNodeFactory.java);
  link artifact monticoregenerator -> @(AntlrPackage.java);
  link artifact monticoregenerator -> @(AntlrPackageImpl.java);
  link artifact monticoregenerator -> @(ASTAntlrLexerAction.java);
  link artifact monticoregenerator -> @(ASTAntlrNode.java);
  link artifact monticoregenerator -> @(ASTAntlrParserAction.java);
  link artifact monticoregenerator -> @(ASTConceptAntlr.java);
  link artifact monticoregenerator -> @(ASTConstantsAntlr.java);
  link artifact monticoregenerator -> @(ASTJavaCodeExt.java);
  link artifact monticoregenerator -> @(_cocos!38);
  link artifact monticoregenerator -> @(AntlrAntlrPackageCoCo.java);
  link artifact monticoregenerator -> @(AntlrASTAntlrLexerActionCoCo.java);
  link artifact monticoregenerator -> @(AntlrASTAntlrNodeCoCo.java);
  link artifact monticoregenerator -> @(AntlrASTAntlrParserActionCoCo.java);
  link artifact monticoregenerator -> @(AntlrASTConceptAntlrCoCo.java);
  link artifact monticoregenerator -> @(AntlrASTJavaCodeExtCoCo.java);
  link artifact monticoregenerator -> @(AntlrCoCoChecker.java);
  link artifact monticoregenerator -> @(_od!38);
  link artifact monticoregenerator -> @(Antlr2OD.java);
  link artifact monticoregenerator -> @(_symboltable!16);
  link artifact monticoregenerator -> @(AntlrLanguage.java);
  link artifact monticoregenerator -> @(AntlrModelLoader.java);
  link artifact monticoregenerator -> @(_visitor!38);
  link artifact monticoregenerator -> @(AntlrDelegatorVisitor.java);
  link artifact monticoregenerator -> @(AntlrInheritanceVisitor.java);
  link artifact monticoregenerator -> @(AntlrParentAwareVisitor.java);
  link artifact monticoregenerator -> @(AntlrVisitor.java);
  link artifact monticoregenerator -> @(grammar!11);
  link artifact monticoregenerator -> @(_ast!45);
  link artifact monticoregenerator -> @(ASTAbstractProd.java);
  link artifact monticoregenerator -> @(ASTActionExt.java!3);
  link artifact monticoregenerator -> @(ASTAlt.java);
  link artifact monticoregenerator -> @(ASTAntlrOption.java);
  link artifact monticoregenerator -> @(ASTAnything.java);
  link artifact monticoregenerator -> @(ASTASTRule.java);
  link artifact monticoregenerator -> @(ASTAttributeInAST.java);
  link artifact monticoregenerator -> @(ASTBlock.java);
  link artifact monticoregenerator -> @(ASTCard.java);
  link artifact monticoregenerator -> @(ASTClassProd.java!3);
  link artifact monticoregenerator -> @(ASTConcept.java);
  link artifact monticoregenerator -> @(ASTConstant.java);
  link artifact monticoregenerator -> @(ASTConstantGroup.java);
  link artifact monticoregenerator -> @(ASTConstantsGrammar.java);
  link artifact monticoregenerator -> @(ASTEnumProd.java);
  link artifact monticoregenerator -> @(ASTEof.java);
  link artifact monticoregenerator -> @(ASTExpressionPredicateExt.java);
  link artifact monticoregenerator -> @(ASTExternalProd.java);
  link artifact monticoregenerator -> @(ASTFollowOption.java);
  link artifact monticoregenerator -> @(ASTGenericTypeTOP.java);
  link artifact monticoregenerator -> @(ASTGrammarNode.java);
  link artifact monticoregenerator -> @(ASTGrammarOption.java);
  link artifact monticoregenerator -> @(ASTGrammarReference.java);
  link artifact monticoregenerator -> @(ASTInterfaceProd.java);
  link artifact monticoregenerator -> @(ASTITerminal.java);
  link artifact monticoregenerator -> @(ASTLexActionOrPredicate.java);
  link artifact monticoregenerator -> @(ASTLexAlt.java);
  link artifact monticoregenerator -> @(ASTLexAnyChar.java);
  link artifact monticoregenerator -> @(ASTLexBlock.java);
  link artifact monticoregenerator -> @(ASTLexChar.java);
  link artifact monticoregenerator -> @(ASTLexCharRange.java);
  link artifact monticoregenerator -> @(ASTLexComponent.java);
  link artifact monticoregenerator -> @(ASTLexNonTerminal.java);
  link artifact monticoregenerator -> @(ASTLexOption.java);
  link artifact monticoregenerator -> @(ASTLexProd.java!2);
  link artifact monticoregenerator -> @(ASTLexSimpleIteration.java);
  link artifact monticoregenerator -> @(ASTLexString.java);
  link artifact monticoregenerator -> @(ASTMCAnything.java);
  link artifact monticoregenerator -> @(ASTMCConceptExt.java);
  link artifact monticoregenerator -> @(ASTMCGrammar.java!2);
  link artifact monticoregenerator -> @(ASTMCImportStatement.java);
  link artifact monticoregenerator -> @(ASTMethod.java);
  link artifact monticoregenerator -> @(ASTMethodParameter.java);
  link artifact monticoregenerator -> @(ASTNonTerminal.java);
  link artifact monticoregenerator -> @(ASTNonTerminalSeparator.java);
  link artifact monticoregenerator -> @(ASTOption.java);
  link artifact monticoregenerator -> @(ASTOptionValue.java);
  link artifact monticoregenerator -> @(ASTParserProd.java!2);
  link artifact monticoregenerator -> @(ASTProdTOP.java);
  link artifact monticoregenerator -> @(ASTRuleComponent.java);
  link artifact monticoregenerator -> @(ASTRuleReference.java);
  link artifact monticoregenerator -> @(ASTSemanticpredicateOrAction.java);
  link artifact monticoregenerator -> @(ASTStartRule.java);
  link artifact monticoregenerator -> @(ASTSymbolDefinition.java);
  link artifact monticoregenerator -> @(ASTTerminal.java);
  link artifact monticoregenerator -> @(GrammarLiterals.java);
  link artifact monticoregenerator -> @(GrammarMill.java);
  link artifact monticoregenerator -> @(GrammarNodeFactory.java);
  link artifact monticoregenerator -> @(GrammarPackage.java);
  link artifact monticoregenerator -> @(GrammarPackageImpl.java);
  link artifact monticoregenerator -> @(_cocos!39);
  link artifact monticoregenerator -> @(GrammarASTAbstractProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTActionExtCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTAltCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTAntlrOptionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTAnythingCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTASTRuleCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTAttributeInASTCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTBlockCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTCardCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTClassProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTConceptCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTConstantCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTConstantGroupCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTEnumProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTEofCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTExpressionPredicateExtCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTExternalProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTFollowOptionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTGenericTypeCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTGrammarNodeCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTGrammarOptionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTGrammarReferenceCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTInterfaceProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTITerminalCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexActionOrPredicateCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexAltCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexAnyCharCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexBlockCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexCharCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexCharRangeCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexComponentCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexNonTerminalCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexOptionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexSimpleIterationCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTLexStringCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMCAnythingCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMCConceptExtCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMCGrammarCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMCImportStatementCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMethodCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTMethodParameterCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTNonTerminalCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTNonTerminalSeparatorCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTOptionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTOptionValueCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTParserProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTProdCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTRuleComponentCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTRuleReferenceCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTSemanticpredicateOrActionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTStartRuleCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTSymbolDefinitionCoCo.java);
  link artifact monticoregenerator -> @(GrammarASTTerminalCoCo.java);
  link artifact monticoregenerator -> @(GrammarCoCoChecker.java);
  link artifact monticoregenerator -> @(GrammarGrammarPackageCoCo.java);
  link artifact monticoregenerator -> @(_od!39);
  link artifact monticoregenerator -> @(Grammar2OD.java);
  link artifact monticoregenerator -> @(_symboltable!17);
  link artifact monticoregenerator -> @(GrammarLanguage.java);
  link artifact monticoregenerator -> @(GrammarModelLoader.java);
  link artifact monticoregenerator -> @(_visitor!39);
  link artifact monticoregenerator -> @(GrammarDelegatorVisitor.java);
  link artifact monticoregenerator -> @(GrammarInheritanceVisitor.java);
  link artifact monticoregenerator -> @(GrammarParentAwareVisitor.java);
  link artifact monticoregenerator -> @(GrammarVisitor.java);
  link artifact monticoregenerator -> @(grammar_withconcepts!2);
  link artifact monticoregenerator -> @(_ast!46);
  link artifact monticoregenerator -> @(ASTAction.java!2);
  link artifact monticoregenerator -> @(ASTConstantsGrammar_WithConcepts.java);
  link artifact monticoregenerator -> @(ASTExpressionPredicate.java);
  link artifact monticoregenerator -> @(ASTGrammar_WithConceptsNode.java);
  link artifact monticoregenerator -> @(ASTJavaCode.java);
  link artifact monticoregenerator -> @(ASTMCConcept.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsLiterals.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsMill.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsNodeFactory.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPackage.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsPackageImpl.java);
  link artifact monticoregenerator -> @(_cocos!40);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTActionCoCo.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTExpressionPredicateCoCo.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTGrammar_WithConceptsNodeCoCo.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTJavaCodeCoCo.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsASTMCConceptCoCo.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsCoCoChecker.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsGrammar_WithConceptsPackageCoCo.java);
  link artifact monticoregenerator -> @(_od!40);
  link artifact monticoregenerator -> @(Grammar_WithConcepts2OD.java);
  link artifact monticoregenerator -> @(_parser!13);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrBaseListener.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrLexer.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrListener.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsAntlrParser.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsParser.java);
  link artifact monticoregenerator -> @(_symboltable!18);
  link artifact monticoregenerator -> @(Grammar_WithConceptsLanguage.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsModelLoader.java);
  link artifact monticoregenerator -> @(_visitor!40);
  link artifact monticoregenerator -> @(Grammar_WithConceptsDelegatorVisitor.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsInheritanceVisitor.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsParentAwareVisitor.java);
  link artifact monticoregenerator -> @(Grammar_WithConceptsVisitor.java);
  link artifact monticoregenerator -> @(reports!2);
  link artifact monticoregenerator -> @(de.monticore.grammar.concepts.antlr);
  link artifact monticoregenerator -> @(de.monticore.grammar);
  link artifact monticoregenerator -> @(de.monticore.grammar!2);
  link artifact monticoregenerator -> @(symboltable!13);
  link artifact monticoregenerator -> @(generated-test-sources!2);
  link artifact monticoregenerator -> @(de!20);
  link artifact monticoregenerator -> @(monticore!21);
  link artifact monticoregenerator -> @(statechart!6);
  link artifact monticoregenerator -> @(statechart!7);
  link artifact monticoregenerator -> @(_ast!47);
  link artifact monticoregenerator -> @(ASTAbstractAnything.java!2);
  link artifact monticoregenerator -> @(ASTAbstractAnythingBuilder.java!2);
  link artifact monticoregenerator -> @(ASTArgument.java!2);
  link artifact monticoregenerator -> @(ASTArgumentBuilder.java!2);
  link artifact monticoregenerator -> @(ASTBlockStatementExt.java!2);
  link artifact monticoregenerator -> @(ASTClassbodyExt.java!2);
  link artifact monticoregenerator -> @(ASTCode.java!2);
  link artifact monticoregenerator -> @(ASTCodeBuilder.java!2);
  link artifact monticoregenerator -> @(ASTConstantsStatechart.java!2);
  link artifact monticoregenerator -> @(ASTEntryAction.java!2);
  link artifact monticoregenerator -> @(ASTEntryActionBuilder.java!2);
  link artifact monticoregenerator -> @(ASTExitAction.java!2);
  link artifact monticoregenerator -> @(ASTExitActionBuilder.java!2);
  link artifact monticoregenerator -> @(ASTExpressionExt.java!2);
  link artifact monticoregenerator -> @(ASTSCStructure.java!2);
  link artifact monticoregenerator -> @(ASTState.java!11);
  link artifact monticoregenerator -> @(ASTStateBuilder.java!11);
  link artifact monticoregenerator -> @(ASTStatechart.java!3);
  link artifact monticoregenerator -> @(ASTStatechartBuilder.java!2);
  link artifact monticoregenerator -> @(ASTStatechartNode.java!2);
  link artifact monticoregenerator -> @(ASTTransition.java!10);
  link artifact monticoregenerator -> @(ASTTransitionBuilder.java!10);
  link artifact monticoregenerator -> @(StatechartLiterals.java!2);
  link artifact monticoregenerator -> @(StatechartMill.java!2);
  link artifact monticoregenerator -> @(StatechartNodeFactory.java!2);
  link artifact monticoregenerator -> @(StatechartPackage.java);
  link artifact monticoregenerator -> @(StatechartPackageImpl.java);
  link artifact monticoregenerator -> @(_cocos!41);
  link artifact monticoregenerator -> @(StatechartASTAbstractAnythingCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTArgumentCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTBlockStatementExtCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTClassbodyExtCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTCodeCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTEntryActionCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTExitActionCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTExpressionExtCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTSCStructureCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTStatechartCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTStatechartNodeCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTStateCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartASTTransitionCoCo.java!2);
  link artifact monticoregenerator -> @(StatechartCoCoChecker.java!2);
  link artifact monticoregenerator -> @(StatechartStatechartPackageCoCo.java);
  link artifact monticoregenerator -> @(_od!41);
  link artifact monticoregenerator -> @(Statechart2OD.java!2);
  link artifact monticoregenerator -> @(_symboltable!19);
  link artifact monticoregenerator -> @(StatechartLanguage.java);
  link artifact monticoregenerator -> @(StatechartModelLoader.java);
  link artifact monticoregenerator -> @(_visitor!41);
  link artifact monticoregenerator -> @(StatechartDelegatorVisitor.java!2);
  link artifact monticoregenerator -> @(StatechartInheritanceVisitor.java!2);
  link artifact monticoregenerator -> @(StatechartParentAwareVisitor.java!2);
  link artifact monticoregenerator -> @(StatechartVisitor.java!2);
  link artifact monticoregenerator -> @(emf!8);
  link artifact monticoregenerator -> @(modelinstances);
  link artifact monticoregenerator -> @(grammar!12);
  link artifact monticoregenerator -> @(models);
  link artifact monticoregenerator -> @(de!21);
  link artifact monticoregenerator -> @(monticore!22);
  link artifact monticoregenerator -> @(emf!9);
  link artifact monticoregenerator -> @(grammar!13);
  link artifact monticoregenerator -> @(grammar!14);
  link artifact monticoregenerator -> @(lexicals!4);
  link artifact monticoregenerator -> @(lexicals!5);
  link artifact monticoregenerator -> @(literals!4);
  link artifact monticoregenerator -> @(literals!5);
  link artifact monticoregenerator -> @(mc!8);
  link artifact monticoregenerator -> @(grammars!6);
  link artifact monticoregenerator -> @(lexicals!6);
  link artifact monticoregenerator -> @(testlexicals!2);
  link artifact monticoregenerator -> @(_ast!48);
  link artifact monticoregenerator -> @(ASTConstantsTestLexicals.java!2);
  link artifact monticoregenerator -> @(ASTTestLexicalsNode.java!2);
  link artifact monticoregenerator -> @(TestLexicalsLiterals.java!2);
  link artifact monticoregenerator -> @(TestLexicalsMill.java!2);
  link artifact monticoregenerator -> @(TestLexicalsNodeFactory.java!2);
  link artifact monticoregenerator -> @(TestLexicalsPackage.java);
  link artifact monticoregenerator -> @(TestLexicalsPackageImpl.java);
  link artifact monticoregenerator -> @(_cocos!42);
  link artifact monticoregenerator -> @(TestLexicalsASTTestLexicalsNodeCoCo.java!2);
  link artifact monticoregenerator -> @(TestLexicalsCoCoChecker.java!2);
  link artifact monticoregenerator -> @(TestLexicalsTestLexicalsPackageCoCo.java);
  link artifact monticoregenerator -> @(_od!42);
  link artifact monticoregenerator -> @(TestLexicals2OD.java!2);
  link artifact monticoregenerator -> @(_visitor!42);
  link artifact monticoregenerator -> @(TestLexicalsDelegatorVisitor.java!2);
  link artifact monticoregenerator -> @(TestLexicalsInheritanceVisitor.java!2);
  link artifact monticoregenerator -> @(TestLexicalsParentAwareVisitor.java!2);
  link artifact monticoregenerator -> @(TestLexicalsVisitor.java!2);
  link artifact monticoregenerator -> @(reports!3);
  link artifact monticoregenerator -> @(de.monticore.statechart);
  link artifact monticoregenerator -> @(mc.grammars.lexicals);
  link artifact monticoregenerator -> @(test-annotations!2);
  link artifact monticoregenerator -> @(maven-archiver!3);
  link artifact monticoregenerator -> @(maven-status!3);
  link artifact monticoregenerator -> @(maven-compiler-plugin!3);
  link artifact monticoregenerator -> @(compile!3);
  link artifact monticoregenerator -> @(default-compile!3);
  link artifact monticoregenerator -> @(testCompile!2);
  link artifact monticoregenerator -> @(default-testCompile!2);
  link artifact monticoregenerator -> @(monticore-generator-4.5.5.1-sources.jar);
  link artifact monticoregenerator -> @(monticore-generator-4.5.5.1.jar);
  link artifact monticoregenerator -> @(surefire-reports!2);
  link artifact monticoregenerator -> @(test-classes!2);
  link artifact monticoregenerator -> @(cocos!10);
  link artifact monticoregenerator -> @(invalid!2);
  link artifact monticoregenerator -> @(A0276!2);
  link artifact monticoregenerator -> @(A0277!2);
  link artifact monticoregenerator -> @(A0278!2);
  link artifact monticoregenerator -> @(A2025!2);
  link artifact monticoregenerator -> @(A2026!2);
  link artifact monticoregenerator -> @(A2030!2);
  link artifact monticoregenerator -> @(A2031!2);
  link artifact monticoregenerator -> @(A2102!2);
  link artifact monticoregenerator -> @(A2103!2);
  link artifact monticoregenerator -> @(A2106!2);
  link artifact monticoregenerator -> @(A2107!2);
  link artifact monticoregenerator -> @(A2116!2);
  link artifact monticoregenerator -> @(A4001!2);
  link artifact monticoregenerator -> @(A4002!2);
  link artifact monticoregenerator -> @(A4003!2);
  link artifact monticoregenerator -> @(A4004!2);
  link artifact monticoregenerator -> @(A4005!2);
  link artifact monticoregenerator -> @(A4006!2);
  link artifact monticoregenerator -> @(A4007!2);
  link artifact monticoregenerator -> @(A4008!2);
  link artifact monticoregenerator -> @(A4009!2);
  link artifact monticoregenerator -> @(A4010!2);
  link artifact monticoregenerator -> @(A4011!2);
  link artifact monticoregenerator -> @(A4012!2);
  link artifact monticoregenerator -> @(A4013!2);
  link artifact monticoregenerator -> @(A4014!2);
  link artifact monticoregenerator -> @(A4015!2);
  link artifact monticoregenerator -> @(A4016!2);
  link artifact monticoregenerator -> @(A4017!2);
  link artifact monticoregenerator -> @(A4018!2);
  link artifact monticoregenerator -> @(A4019!2);
  link artifact monticoregenerator -> @(A4020!2);
  link artifact monticoregenerator -> @(A4021!2);
  link artifact monticoregenerator -> @(A4022!2);
  link artifact monticoregenerator -> @(A4023!2);
  link artifact monticoregenerator -> @(A4024!2);
  link artifact monticoregenerator -> @(A4025!2);
  link artifact monticoregenerator -> @(A4026!2);
  link artifact monticoregenerator -> @(A4027!2);
  link artifact monticoregenerator -> @(A4028!2);
  link artifact monticoregenerator -> @(A4029!2);
  link artifact monticoregenerator -> @(A4030!2);
  link artifact monticoregenerator -> @(A4031!2);
  link artifact monticoregenerator -> @(A4032!2);
  link artifact monticoregenerator -> @(A4033!2);
  link artifact monticoregenerator -> @(A4041!2);
  link artifact monticoregenerator -> @(A4047!2);
  link artifact monticoregenerator -> @(A4054!2);
  link artifact monticoregenerator -> @(A4056!2);
  link artifact monticoregenerator -> @(A4058!2);
  link artifact monticoregenerator -> @(A4097!2);
  link artifact monticoregenerator -> @(valid!2);
  link artifact monticoregenerator -> @(enum!2);
  link artifact monticoregenerator -> @(de!22);
  link artifact monticoregenerator -> @(monticore!23);
  link artifact monticoregenerator -> @(codegen!4);
  link artifact monticoregenerator -> @(AstDependentGeneratorTest.class);
  link artifact monticoregenerator -> @(cd2java!4);
  link artifact monticoregenerator -> @(ast!9);
  link artifact monticoregenerator -> @(AstGeneratorTest.class);
  link artifact monticoregenerator -> @(CdDecoratorTest.class);
  link artifact monticoregenerator -> @(cocos!11);
  link artifact monticoregenerator -> @(CoCoGeneratorTest.class);
  link artifact monticoregenerator -> @(emf!10);
  link artifact monticoregenerator -> @(ASTNodeTest.class);
  link artifact monticoregenerator -> @(GrammarDiffsTest.class);
  link artifact monticoregenerator -> @(GrammarSerDeserTest.class);
  link artifact monticoregenerator -> @(GeneratorTest.class);
  link artifact monticoregenerator -> @(mc2cd!4);
  link artifact monticoregenerator -> @(manipul!4);
  link artifact monticoregenerator -> @(RemoveRedundantReferencesManipulationTest.class);
  link artifact monticoregenerator -> @(PrettyPrintingTranslation.class);
  link artifact monticoregenerator -> @(TestHelper.class);
  link artifact monticoregenerator -> @(transl!4);
  link artifact monticoregenerator -> @(AbstractProdTest.class);
  link artifact monticoregenerator -> @(AstRuleInheritanceTest.class);
  link artifact monticoregenerator -> @(AstRuleTest.class);
  link artifact monticoregenerator -> @(AttributeInASTMultiplicityTest.class);
  link artifact monticoregenerator -> @(AttributeInASTOverridingTest.class);
  link artifact monticoregenerator -> @(AttributeInASTTypeTest.class);
  link artifact monticoregenerator -> @(ConstantTest.class);
  link artifact monticoregenerator -> @(DirectLeftRecursionDetectorTest.class);
  link artifact monticoregenerator -> @(EnumProdTest.class);
  link artifact monticoregenerator -> @(ExternalImplementationTest.class);
  link artifact monticoregenerator -> @(InheritanceTest.class);
  link artifact monticoregenerator -> @(InheritedNonTerminalsTest.class);
  link artifact monticoregenerator -> @(InterfaceProdTest.class);
  link artifact monticoregenerator -> @(NonTerminalMultiplicityTest.class);
  link artifact monticoregenerator -> @(OverridingClassProdTest.class);
  link artifact monticoregenerator -> @(StarImportSuperGrammarTest.class);
  link artifact monticoregenerator -> @(TerminalWithUsageNameTest.class);
  link artifact monticoregenerator -> @(TokenMultiplicityTest.class);
  link artifact monticoregenerator -> @(TokenTypeTest.class);
  link artifact monticoregenerator -> @(UsageNameTest.class);
  link artifact monticoregenerator -> @(parser!7);
  link artifact monticoregenerator -> @(MCGrammarParserTest.class);
  link artifact monticoregenerator -> @(ParserGeneratorTest.class);
  link artifact monticoregenerator -> @(prettyprint!6);
  link artifact monticoregenerator -> @(MCGrammarPrettyPrinterTest.class);
  link artifact monticoregenerator -> @(symboltable!14);
  link artifact monticoregenerator -> @(SymbolTableGeneratorTest.class);
  link artifact monticoregenerator -> @(types!9);
  link artifact monticoregenerator -> @(TypeResolverGeneratorTest.class);
  link artifact monticoregenerator -> @(emf!11);
  link artifact monticoregenerator -> @(expression!7);
  link artifact monticoregenerator -> @(fautomaton!5);
  link artifact monticoregenerator -> @(action!5);
  link artifact monticoregenerator -> @(automaton!16);
  link artifact monticoregenerator -> @(automatonwithaction!4);
  link artifact monticoregenerator -> @(grammar!15);
  link artifact monticoregenerator -> @(cocos!12);
  link artifact monticoregenerator -> @(AbstractNTNotExtendInterfaceOrExternalNTsTest.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOneNTOrClassTest.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyExtendsOrAstextendsNTOrClassTest.class);
  link artifact monticoregenerator -> @(AbstractNTOnlyImplementInterfaceNTsTest.class);
  link artifact monticoregenerator -> @(AbstractNTWithoutExtensionOnlyInComponentGrammarTest.class);
  link artifact monticoregenerator -> @(ASTRuleAndNTUseSameAttrNameForDiffNTsTest.class);
  link artifact monticoregenerator -> @(AttributeNameForNTDuplicatedTest.class);
  link artifact monticoregenerator -> @(AttributeNameLowerCaseTest.class);
  link artifact monticoregenerator -> @(CocoTest.class);
  link artifact monticoregenerator -> @(DuplicatedEnumConstantTest.class);
  link artifact monticoregenerator -> @(DuplicatedSymbolDefinitionInProdTest.class);
  link artifact monticoregenerator -> @(ExternalNTOnlyInComponentGrammarTest.class);
  link artifact monticoregenerator -> @(GrammarInheritanceCycleTest.class);
  link artifact monticoregenerator -> @(GrammarNameEqualsFileNameTest.class);
  link artifact monticoregenerator -> @(GrammarNameUpperCaseTest.class);
  link artifact monticoregenerator -> @(InterfaceNTOnlyExtendInterfaceNTsTest.class);
  link artifact monticoregenerator -> @(InterfaceNTWithoutImplementationOnlyInComponentGrammarTest.class);
  link artifact monticoregenerator -> @(KeywordAlternativeNameTest.class);
  link artifact monticoregenerator -> @(KeywordInvalidNameTest.class);
  link artifact monticoregenerator -> @(LeftRecursiveRulesInBlockTest.class);
  link artifact monticoregenerator -> @(LexNTsNotEmptyTest.class);
  link artifact monticoregenerator -> @(LexNTsOnlyUseLexNTsTest.class);
  link artifact monticoregenerator -> @(MultipleASTRulesTest.class);
  link artifact monticoregenerator -> @(NoASTExtendsForClassesTest.class);
  link artifact monticoregenerator -> @(NoASTRuleForEnumNTsTest.class);
  link artifact monticoregenerator -> @(NoNTInheritanceCycleTest.class);
  link artifact monticoregenerator -> @(NTAndASTRuleExtendTypeTest.class);
  link artifact monticoregenerator -> @(NTDefinedByAtmostOneProductionTest.class);
  link artifact monticoregenerator -> @(NTForASTRuleExistsTest.class);
  link artifact monticoregenerator -> @(NTNotExtendInterfaceOrExternalNTsTest.class);
  link artifact monticoregenerator -> @(NTOnlyExtendsOneNTOrClassTest.class);
  link artifact monticoregenerator -> @(NTOnlyExtendsOrAstextendsNTOrClassTest.class);
  link artifact monticoregenerator -> @(NTOnlyImplementInterfaceNTsTest.class);
  link artifact monticoregenerator -> @(NTUniqueIgnoreCaseTest.class);
  link artifact monticoregenerator -> @(OverridingAbstractNTsHaveNoSuperRulesTest.class);
  link artifact monticoregenerator -> @(OverridingAbstractNTsTest.class);
  link artifact monticoregenerator -> @(OverridingEnumNTsTest.class);
  link artifact monticoregenerator -> @(OverridingInterfaceNTsTest.class);
  link artifact monticoregenerator -> @(OverridingLexNTsTest.class);
  link artifact monticoregenerator -> @(OverridingNTsHaveNoSuperRulesTest.class);
  link artifact monticoregenerator -> @(OverridingNTsTest.class);
  link artifact monticoregenerator -> @(ProdAndExtendedProdUseSameAttrNameForDiffNTsTest.class);
  link artifact monticoregenerator -> @(ProdAndOverriddenProdUseSameAttrNameForDiffNTsTest.class);
  link artifact monticoregenerator -> @(ProdStartsWithCapitalTest.class);
  link artifact monticoregenerator -> @(ProdWithExtensionMustNotBeOverriddenTest.class);
  link artifact monticoregenerator -> @(ReferencedNTNotDefinedTest.class);
  link artifact monticoregenerator -> @(SubrulesUseInterfaceNTsTest.class);
  link artifact monticoregenerator -> @(SymbolWithoutNameTest.class);
  link artifact monticoregenerator -> @(TerminalEmptyStringTest.class);
  link artifact monticoregenerator -> @(UsedLexNTNotDefinedTest.class);
  link artifact monticoregenerator -> @(UsedNTNotDefinedTest.class);
  link artifact monticoregenerator -> @(symboltable!15);
  link artifact monticoregenerator -> @(MontiCoreGrammarSymbolTableCreatorTest.class);
  link artifact monticoregenerator -> @(GrammarGlobalScopeTestFactory.class);
  link artifact monticoregenerator -> @(groovy!2);
  link artifact monticoregenerator -> @(inherited!3);
  link artifact monticoregenerator -> @(sub!7);
  link artifact monticoregenerator -> @(subsub!2);
  link artifact monticoregenerator -> @(interfaces!5);
  link artifact monticoregenerator -> @(MCGrammarLanguageFamilySymbolTableTest.class);
  link artifact monticoregenerator -> @(MontiCoreScriptTest.class);
  link artifact monticoregenerator -> @(script!2);
  link artifact monticoregenerator -> @(statechart!8);
  link artifact monticoregenerator -> @(sub!8);
  link artifact monticoregenerator -> @(symboltable!16);
  link artifact monticoregenerator -> @(visitors!3);
  link artifact monticoregenerator -> @(mc!9);
  link artifact monticoregenerator -> @(grammars!7);
  link artifact monticoregenerator -> @(common!4);
  link artifact monticoregenerator -> @(concepts!6);
  link artifact monticoregenerator -> @(antlr!11);
  link artifact monticoregenerator -> @(attributes!3);
  link artifact monticoregenerator -> @(texteditor!4);
  link artifact monticoregenerator -> @(texteditoringrammar!3);
  link artifact monticoregenerator -> @(visualoutline!3);
  link artifact monticoregenerator -> @(lexicals!7);
  link artifact monticoregenerator -> @(literals!6);
  link artifact monticoregenerator -> @(types!10);
  link artifact monticoregenerator -> @(robot!5);
  link artifact monticoregenerator -> @(mc2cdtransformation!2);
  link artifact monticoregenerator -> @(super!2);
  link artifact monticoreruntime -> @(monticore-runtime);
  link artifact monticoreruntime -> @(src!14);
  link artifact monticoreruntime -> @(main!14);
  link artifact monticoreruntime -> @(java!19);
  link artifact monticoreruntime -> @(de!36);
  link artifact monticoreruntime -> @(monticore!39);
  link artifact monticoreruntime -> @(AmbiguityException.java);
  link artifact monticoreruntime -> @(annotations!6);
  link artifact monticoreruntime -> @(Visit.java);
  link artifact monticoreruntime -> @(VisitAnnotations.java);
  link artifact monticoreruntime -> @(antlr4);
  link artifact monticoreruntime -> @(MCConcreteParser.java);
  link artifact monticoreruntime -> @(MCErrorListener.java);
  link artifact monticoreruntime -> @(MCLexer.java);
  link artifact monticoreruntime -> @(MCParser.java);
  link artifact monticoreruntime -> @(ast!10);
  link artifact monticoreruntime -> @(ASTCNode.java!2);
  link artifact monticoreruntime -> @(ASTNode.java);
  link artifact monticoreruntime -> @(ASTNodeNull.java);
  link artifact monticoreruntime -> @(Comment.java);
  link artifact monticoreruntime -> @(CompareNotSupportedException.java);
  link artifact monticoreruntime -> @(CommentExt.java);
  link artifact monticoreruntime -> @(CommonModelingLanguage.java);
  link artifact monticoreruntime -> @(CommonModelNameCalculator.java);
  link artifact monticoreruntime -> @(EmbeddingModelingLanguage.java);
  link artifact monticoreruntime -> @(EmptyModelNameCalculator.java);
  link artifact monticoreruntime -> @(generating);
  link artifact monticoreruntime -> @(GeneratorEngine.java);
  link artifact monticoreruntime -> @(GeneratorSetup.java);
  link artifact monticoreruntime -> @(templateengine);
  link artifact monticoreruntime -> @(CodeHookPoint.java);
  link artifact monticoreruntime -> @(freemarker);
  link artifact monticoreruntime -> @(FreeMarkerTemplateEngine.java);
  link artifact monticoreruntime -> @(MontiCoreFileTemplateLoader.java);
  link artifact monticoreruntime -> @(MontiCoreFreeMarkerException.java);
  link artifact monticoreruntime -> @(MontiCoreTemplateExceptionHandler.java);
  link artifact monticoreruntime -> @(MontiCoreTemplateLoader.java);
  link artifact monticoreruntime -> @(SimpleHashFactory.java);
  link artifact monticoreruntime -> @(GlobalExtensionManagement.java);
  link artifact monticoreruntime -> @(HookPoint.java);
  link artifact monticoreruntime -> @(ObjectFactory.java);
  link artifact monticoreruntime -> @(reporting!2);
  link artifact monticoreruntime -> @(artifacts);
  link artifact monticoreruntime -> @(ArtifactReporter.java);
  link artifact monticoreruntime -> @(formatter);
  link artifact monticoreruntime -> @(AFormatter.java);
  link artifact monticoreruntime -> @(GMLFormatter.java);
  link artifact monticoreruntime -> @(GVFormatter.java);
  link artifact monticoreruntime -> @(model!2);
  link artifact monticoreruntime -> @(APkg.java);
  link artifact monticoreruntime -> @(Element.java);
  link artifact monticoreruntime -> @(ElementFactory.java);
  link artifact monticoreruntime -> @(ElementType.java);
  link artifact monticoreruntime -> @(Pkg.java);
  link artifact monticoreruntime -> @(RootPkg.java);
  link artifact monticoreruntime -> @(ReportingNameHelper.java);
  link artifact monticoreruntime -> @(commons!2);
  link artifact monticoreruntime -> @(AReporter.java);
  link artifact monticoreruntime -> @(ASTNodeIdentHelper.java);
  link artifact monticoreruntime -> @(DefaultReportEventHandler.java);
  link artifact monticoreruntime -> @(IASTNodeIdentHelper.java);
  link artifact monticoreruntime -> @(IReportEventHandler.java);
  link artifact monticoreruntime -> @(Layouter.java);
  link artifact monticoreruntime -> @(MapUtil.java);
  link artifact monticoreruntime -> @(ObjectCountVisitor.java);
  link artifact monticoreruntime -> @(ReportCreator.java);
  link artifact monticoreruntime -> @(ReportingConstants.java);
  link artifact monticoreruntime -> @(ReportingHelper.java);
  link artifact monticoreruntime -> @(ReportingRepository.java);
  link artifact monticoreruntime -> @(ReportManager.java);
  link artifact monticoreruntime -> @(TreePrintVisitor.java);
  link artifact monticoreruntime -> @(reporter);
  link artifact monticoreruntime -> @(ArtifactGmlReporter.java);
  link artifact monticoreruntime -> @(ArtifactGVReporter.java);
  link artifact monticoreruntime -> @(DetailedReporter.java);
  link artifact monticoreruntime -> @(GeneratedFilesReporter.java);
  link artifact monticoreruntime -> @(HandWrittenCodeReporter.java);
  link artifact monticoreruntime -> @(HookPointReporter.java);
  link artifact monticoreruntime -> @(InputOutputFilesReporter.java);
  link artifact monticoreruntime -> @(InstantiationsReporter.java);
  link artifact monticoreruntime -> @(InvolvedFilesReporter.java);
  link artifact monticoreruntime -> @(NodeTreeDecoratedReporter.java);
  link artifact monticoreruntime -> @(NodeTreeReporter.java);
  link artifact monticoreruntime -> @(NodeTypesReporter.java);
  link artifact monticoreruntime -> @(SuccessfulReporter.java);
  link artifact monticoreruntime -> @(SummaryReporter.java);
  link artifact monticoreruntime -> @(SymbolTableReporter.java);
  link artifact monticoreruntime -> @(TemplatesReporter.java);
  link artifact monticoreruntime -> @(TemplateTreeReporter.java);
  link artifact monticoreruntime -> @(TransformationReporter.java);
  link artifact monticoreruntime -> @(VariablesReporter.java);
  link artifact monticoreruntime -> @(Reporting.java);
  link artifact monticoreruntime -> @(StringHookPoint.java);
  link artifact monticoreruntime -> @(TemplateController.java);
  link artifact monticoreruntime -> @(TemplateHookPoint.java);
  link artifact monticoreruntime -> @(TemplateStringHookPoint.java);
  link artifact monticoreruntime -> @(incremental);
  link artifact monticoreruntime -> @(IncrementalChecker.java);
  link artifact monticoreruntime -> @(io);
  link artifact monticoreruntime -> @(FileReaderWriter.java);
  link artifact monticoreruntime -> @(paths);
  link artifact monticoreruntime -> @(IterablePath.java);
  link artifact monticoreruntime -> @(ModelCoordinate.java);
  link artifact monticoreruntime -> @(ModelCoordinateImpl.java);
  link artifact monticoreruntime -> @(ModelCoordinates.java);
  link artifact monticoreruntime -> @(ModelPath.java);
  link artifact monticoreruntime -> @(ModelingLanguage.java);
  link artifact monticoreruntime -> @(ModelingLanguageFamily.java);
  link artifact monticoreruntime -> @(modelloader);
  link artifact monticoreruntime -> @(AstProvider.java);
  link artifact monticoreruntime -> @(FileBasedAstProvider.java);
  link artifact monticoreruntime -> @(ModelingLanguageModelLoader.java);
  link artifact monticoreruntime -> @(ModelNameCalculator.java);
  link artifact monticoreruntime -> @(MontiCoreConstants.java);
  link artifact monticoreruntime -> @(parsing);
  link artifact monticoreruntime -> @(Parser.java);
  link artifact monticoreruntime -> @(prettyprint!20);
  link artifact monticoreruntime -> @(AstPrettyPrinter.java);
  link artifact monticoreruntime -> @(CommentPrettyPrinter.java);
  link artifact monticoreruntime -> @(IndentPrinter.java);
  link artifact monticoreruntime -> @(symboltable!19);
  link artifact monticoreruntime -> @(ArtifactScope.java);
  link artifact monticoreruntime -> @(CommonScope.java);
  link artifact monticoreruntime -> @(CommonScopeSpanningSymbol.java);
  link artifact monticoreruntime -> @(CommonSymbol.java);
  link artifact monticoreruntime -> @(CommonSymbolTableCreator.java);
  link artifact monticoreruntime -> @(EnclosingScopeOfNodesInitializer.java);
  link artifact monticoreruntime -> @(GlobalScope.java);
  link artifact monticoreruntime -> @(ImportStatement.java);
  link artifact monticoreruntime -> @(modifiers);
  link artifact monticoreruntime -> @(AccessModifier.java);
  link artifact monticoreruntime -> @(BasicAccessModifier.java);
  link artifact monticoreruntime -> @(IncludesAccessModifierPredicate.java);
  link artifact monticoreruntime -> @(Modifier.java);
  link artifact monticoreruntime -> @(NoAccessModifier.java);
  link artifact monticoreruntime -> @(MutableScope.java);
  link artifact monticoreruntime -> @(names);
  link artifact monticoreruntime -> @(CommonQualifiedNamesCalculator.java);
  link artifact monticoreruntime -> @(QualifiedNamesCalculator.java);
  link artifact monticoreruntime -> @(references);
  link artifact monticoreruntime -> @(CommonSymbolReference.java);
  link artifact monticoreruntime -> @(SymbolReference.java);
  link artifact monticoreruntime -> @(resolving);
  link artifact monticoreruntime -> @(AdaptedResolvingFilter.java);
  link artifact monticoreruntime -> @(CommonAdaptedResolvingFilter.java);
  link artifact monticoreruntime -> @(CommonResolvingFilter.java);
  link artifact monticoreruntime -> @(ResolvedSeveralEntriesException.java);
  link artifact monticoreruntime -> @(ResolvingFilter.java);
  link artifact monticoreruntime -> @(ResolvingInfo.java);
  link artifact monticoreruntime -> @(SymbolAdapter.java);
  link artifact monticoreruntime -> @(TransitiveAdaptedResolvingFilter.java);
  link artifact monticoreruntime -> @(ResolvingConfiguration.java);
  link artifact monticoreruntime -> @(Scope.java);
  link artifact monticoreruntime -> @(Scopes.java);
  link artifact monticoreruntime -> @(ScopeSpanningSymbol.java);
  link artifact monticoreruntime -> @(serializing);
  link artifact monticoreruntime -> @(Serialization.java);
  link artifact monticoreruntime -> @(Symbol.java);
  link artifact monticoreruntime -> @(SymbolKind.java);
  link artifact monticoreruntime -> @(SymbolNameAndKindPredicate.java);
  link artifact monticoreruntime -> @(SymbolPredicate.java);
  link artifact monticoreruntime -> @(Symbols.java);
  link artifact monticoreruntime -> @(SymbolTableCreator.java);
  link artifact monticoreruntime -> @(types!21);
  link artifact monticoreruntime -> @(CommonJFieldSymbol.java);
  link artifact monticoreruntime -> @(CommonJMethodSymbol.java);
  link artifact monticoreruntime -> @(CommonJTypeScope.java);
  link artifact monticoreruntime -> @(CommonJTypeSymbol.java);
  link artifact monticoreruntime -> @(JAttributeSymbolKind.java);
  link artifact monticoreruntime -> @(JFieldSymbol.java);
  link artifact monticoreruntime -> @(JMethodSymbol.java);
  link artifact monticoreruntime -> @(JMethodSymbolKind.java);
  link artifact monticoreruntime -> @(JTypeSymbol.java);
  link artifact monticoreruntime -> @(JTypeSymbolKind.java);
  link artifact monticoreruntime -> @(Parameter.java);
  link artifact monticoreruntime -> @(references!2);
  link artifact monticoreruntime -> @(ActualTypeArgument.java);
  link artifact monticoreruntime -> @(CommonJTypeReference.java);
  link artifact monticoreruntime -> @(CommonTypeReference.java);
  link artifact monticoreruntime -> @(JTypeReference.java);
  link artifact monticoreruntime -> @(TypeReference.java);
  link artifact monticoreruntime -> @(TypeSymbol.java);
  link artifact monticoreruntime -> @(TypeSymbolKind.java);
  link artifact monticoreruntime -> @(visibility);
  link artifact monticoreruntime -> @(IsShadowedBySymbol.java);
  link artifact monticoreruntime -> @(ShadowsSymbol.java);
  link artifact monticoreruntime -> @(types!22);
  link artifact monticoreruntime -> @(TypeResolver.java);
  link artifact monticoreruntime -> @(utils);
  link artifact monticoreruntime -> @(ASTNodes.java);
  link artifact monticoreruntime -> @(ASTTraverser.java);
  link artifact monticoreruntime -> @(Link.java);
  link artifact monticoreruntime -> @(visitor!8);
  link artifact monticoreruntime -> @(CommonVisitor.java!2);
  link artifact monticoreruntime -> @(resources!18);
  link artifact monticoreruntime -> @(de!37);
  link artifact monticoreruntime -> @(monticore!40);
  link artifact monticoreruntime -> @(generating!2);
  link artifact monticoreruntime -> @(templateengine!2);
  link artifact monticoreruntime -> @(freemarker!2);
  link artifact monticoreruntime -> @(Aliases.ftl);
  link artifact monticoreruntime -> @(test!8);
  link artifact monticoreruntime -> @(java!20);
  link artifact monticoreruntime -> @(de!38);
  link artifact monticoreruntime -> @(monticore!41);
  link artifact monticoreruntime -> @(ast!11);
  link artifact monticoreruntime -> @(ASTCNodeMock.java);
  link artifact monticoreruntime -> @(ASTNodeMock.java);
  link artifact monticoreruntime -> @(cocos!14);
  link artifact monticoreruntime -> @(CocoCheckTest.java);
  link artifact monticoreruntime -> @(helper);
  link artifact monticoreruntime -> @(Assert.java);
  link artifact monticoreruntime -> @(generating!3);
  link artifact monticoreruntime -> @(GeneratorEngineMock.java);
  link artifact monticoreruntime -> @(GeneratorEngineTest.java);
  link artifact monticoreruntime -> @(templateengine!3);
  link artifact monticoreruntime -> @(CodeHookPointMock.java);
  link artifact monticoreruntime -> @(FreeMarkerTemplateEngineMock.java);
  link artifact monticoreruntime -> @(FreeMarkerTemplateMock.java);
  link artifact monticoreruntime -> @(GeneratorSetupMock.java);
  link artifact monticoreruntime -> @(GlobalExtensionManagementGlobalVarsTest.java);
  link artifact monticoreruntime -> @(ObjectFactoryTest.java);
  link artifact monticoreruntime -> @(reporting!3);
  link artifact monticoreruntime -> @(commons!3);
  link artifact monticoreruntime -> @(ReportingStringHelperTest.java);
  link artifact monticoreruntime -> @(TemplateAliasingTest.java);
  link artifact monticoreruntime -> @(TemplateControllerHookPointsTest.java);
  link artifact monticoreruntime -> @(TemplateControllerMock.java);
  link artifact monticoreruntime -> @(TemplateControllerSignatureUsageTest.java);
  link artifact monticoreruntime -> @(TemplateControllerTest.java);
  link artifact monticoreruntime -> @(TemplateLoggerTest.java);
  link artifact monticoreruntime -> @(templates!2);
  link artifact monticoreruntime -> @(A.ftl);
  link artifact monticoreruntime -> @(aliases);
  link artifact monticoreruntime -> @(GlobalListVars.ftl);
  link artifact monticoreruntime -> @(IncludeAlias.ftl);
  link artifact monticoreruntime -> @(IncludeArgsAndSignatureAlias.ftl);
  link artifact monticoreruntime -> @(LogAliases.ftl);
  link artifact monticoreruntime -> @(Plain.ftl);
  link artifact monticoreruntime -> @(SignatureAliasWithThreeParameters.ftl);
  link artifact monticoreruntime -> @(ArgumentsAreOnlyVisibleInIncludedTemplate.ftl);
  link artifact monticoreruntime -> @(B.ftl);
  link artifact monticoreruntime -> @(C.ftl);
  link artifact monticoreruntime -> @(GlobalListVars.ftl!2);
  link artifact monticoreruntime -> @(GlobalVars.ftl);
  link artifact monticoreruntime -> @(HelloWorld.ftl);
  link artifact monticoreruntime -> @(HookCall.ftl);
  link artifact monticoreruntime -> @(HowAreYou.ftl);
  link artifact monticoreruntime -> @(Log.ftl);
  link artifact monticoreruntime -> @(NestedSignatureCalls.ftl);
  link artifact monticoreruntime -> @(ParameterizedInclusionUsage.ftl);
  link artifact monticoreruntime -> @(PrintNameIfExists.ftl);
  link artifact monticoreruntime -> @(SignatureWithManyParameters.ftl);
  link artifact monticoreruntime -> @(SignatureWithOneParameter.ftl);
  link artifact monticoreruntime -> @(SignatureWithThreeParameters.ftl);
  link artifact monticoreruntime -> @(TestVariables4.ftl);
  link artifact monticoreruntime -> @(TopA.ftl);
  link artifact monticoreruntime -> @(TopStringHook.ftl);
  link artifact monticoreruntime -> @(TopTemplateHook.ftl);
  link artifact monticoreruntime -> @(TestConstants.java);
  link artifact monticoreruntime -> @(templates!3);
  link artifact monticoreruntime -> @(ClassProd.ftl);
  link artifact monticoreruntime -> @(First.ftl);
  link artifact monticoreruntime -> @(Grammar.ftl!3);
  link artifact monticoreruntime -> @(InterfaceProd.ftl);
  link artifact monticoreruntime -> @(Main.ftl!3);
  link artifact monticoreruntime -> @(MainClassProd.ftl);
  link artifact monticoreruntime -> @(MainGrammar.ftl);
  link artifact monticoreruntime -> @(MainInterfaceProd.ftl);
  link artifact monticoreruntime -> @(io!2);
  link artifact monticoreruntime -> @(FileReaderWriterMock.java);
  link artifact monticoreruntime -> @(FileReaderWriterTest.java);
  link artifact monticoreruntime -> @(paths!2);
  link artifact monticoreruntime -> @(IterablePathTest.java);
  link artifact monticoreruntime -> @(ModelCoordinateTest.java);
  link artifact monticoreruntime -> @(ModelPathTest.java);
  link artifact monticoreruntime -> @(modelloader!2);
  link artifact monticoreruntime -> @(ModelLoaderTest.java);
  link artifact monticoreruntime -> @(symboltable!20);
  link artifact monticoreruntime -> @(AdaptedResolvingTest.java);
  link artifact monticoreruntime -> @(ArtifactScopeTest.java);
  link artifact monticoreruntime -> @(GlobalScopeTest.java);
  link artifact monticoreruntime -> @(LanguageCompositionTest.java);
  link artifact monticoreruntime -> @(mocks);
  link artifact monticoreruntime -> @(asts);
  link artifact monticoreruntime -> @(ASTCompilationUnit.java!2);
  link artifact monticoreruntime -> @(ASTId.java);
  link artifact monticoreruntime -> @(ASTNodeMock.java!2);
  link artifact monticoreruntime -> @(ASTSymbol.java);
  link artifact monticoreruntime -> @(ASTSymbolReference.java);
  link artifact monticoreruntime -> @(grammar!16);
  link artifact monticoreruntime -> @(ASTProd.java!4);
  link artifact monticoreruntime -> @(ASTSymbolProd.java);
  link artifact monticoreruntime -> @(ASTSymbolProdReference.java);
  link artifact monticoreruntime -> @(CommonScopeMock.java);
  link artifact monticoreruntime -> @(languages);
  link artifact monticoreruntime -> @(edl!3);
  link artifact monticoreruntime -> @(asts!2);
  link artifact monticoreruntime -> @(ASTEntity.java);
  link artifact monticoreruntime -> @(ASTEntityEnd.java);
  link artifact monticoreruntime -> @(ASTProperty.java);
  link artifact monticoreruntime -> @(entity);
  link artifact monticoreruntime -> @(ActionScope.java);
  link artifact monticoreruntime -> @(ActionSymbol.java);
  link artifact monticoreruntime -> @(ActionSymbolKind.java);
  link artifact monticoreruntime -> @(asts!3);
  link artifact monticoreruntime -> @(ASTAction.java!3);
  link artifact monticoreruntime -> @(ASTActionEnd.java);
  link artifact monticoreruntime -> @(ASTEntity.java!2);
  link artifact monticoreruntime -> @(ASTEntityBase.java);
  link artifact monticoreruntime -> @(ASTEntityCompilationUnit.java);
  link artifact monticoreruntime -> @(ASTEntityEnd.java!2);
  link artifact monticoreruntime -> @(ASTProperty.java!2);
  link artifact monticoreruntime -> @(EntityLanguageVisitor.java);
  link artifact monticoreruntime -> @(cocos!15);
  link artifact monticoreruntime -> @(ContextCondition.java);
  link artifact monticoreruntime -> @(EntityASTActionCoCo.java);
  link artifact monticoreruntime -> @(EntityASTEntityCoCo.java);
  link artifact monticoreruntime -> @(EntityASTEntityCompilationUnitCoCo.java);
  link artifact monticoreruntime -> @(EntityASTPropertyCoCo.java);
  link artifact monticoreruntime -> @(EntityCoCoChecker.java);
  link artifact monticoreruntime -> @(PropertyNameMustStartWithLowerCase.java);
  link artifact monticoreruntime -> @(UniquePropertyNamesInEntity.java);
  link artifact monticoreruntime -> @(CommonEntityLanguageSymbolTableCreator.java);
  link artifact monticoreruntime -> @(EntityLanguage.java);
  link artifact monticoreruntime -> @(EntityLanguageCoCos.java);
  link artifact monticoreruntime -> @(EntityLanguageModelLoader.java);
  link artifact monticoreruntime -> @(EntityLanguageSymbolTableCreator.java);
  link artifact monticoreruntime -> @(EntityParserMock.java);
  link artifact monticoreruntime -> @(EntitySymbol.java);
  link artifact monticoreruntime -> @(EntitySymbolKind.java);
  link artifact monticoreruntime -> @(EntitySymbolReference.java);
  link artifact monticoreruntime -> @(PropertyPredicate.java);
  link artifact monticoreruntime -> @(PropertySymbol.java);
  link artifact monticoreruntime -> @(PropertySymbolKind.java);
  link artifact monticoreruntime -> @(extendedstatechart);
  link artifact monticoreruntime -> @(XStateChartKind.java);
  link artifact monticoreruntime -> @(XStateChartScope.java);
  link artifact monticoreruntime -> @(XStateChartSymbol.java);
  link artifact monticoreruntime -> @(XStateKind.java);
  link artifact monticoreruntime -> @(XStateSymbol.java);
  link artifact monticoreruntime -> @(JTypeSymbolMock.java);
  link artifact monticoreruntime -> @(ParserMock.java);
  link artifact monticoreruntime -> @(references!3);
  link artifact monticoreruntime -> @(PropertySymbolReference.java);
  link artifact monticoreruntime -> @(scandentity);
  link artifact monticoreruntime -> @(Action2StateAdapter.java);
  link artifact monticoreruntime -> @(Action2StateTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(CompositeScAndEntitySymbolTableCreator.java);
  link artifact monticoreruntime -> @(Entity2ScAdapter.java);
  link artifact monticoreruntime -> @(Entity2ScTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(Entity2StateAdapter.java);
  link artifact monticoreruntime -> @(Entity2StateTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(EntityEmbeddingScLanguage.java);
  link artifact monticoreruntime -> @(EntityEmbeddingScModelLoader.java);
  link artifact monticoreruntime -> @(Sc2ActionAdapter.java);
  link artifact monticoreruntime -> @(Sc2ActionTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(Sc2EntityAdapter.java);
  link artifact monticoreruntime -> @(Sc2EntityTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(ScAndEntityLanguageFamily.java);
  link artifact monticoreruntime -> @(State2EntityAdapter.java);
  link artifact monticoreruntime -> @(State2EntityTransitiveResolvingFilter.java);
  link artifact monticoreruntime -> @(statechart!9);
  link artifact monticoreruntime -> @(asts!4);
  link artifact monticoreruntime -> @(ASTState.java!12);
  link artifact monticoreruntime -> @(ASTStateChart.java);
  link artifact monticoreruntime -> @(ASTStateChartBase.java);
  link artifact monticoreruntime -> @(ASTStateChartCompilationUnit.java);
  link artifact monticoreruntime -> @(ASTStateChartEnd.java);
  link artifact monticoreruntime -> @(StateChartLanguageBaseVisitor.java);
  link artifact monticoreruntime -> @(CommonStateChartSymbolTableCreator.java);
  link artifact monticoreruntime -> @(StateChartKind.java);
  link artifact monticoreruntime -> @(StateChartLanguage.java);
  link artifact monticoreruntime -> @(StateChartLanguageModelLoader.java);
  link artifact monticoreruntime -> @(StateChartLanguageSymbolTableCreator.java);
  link artifact monticoreruntime -> @(StateChartParserMock.java);
  link artifact monticoreruntime -> @(StateChartScope.java);
  link artifact monticoreruntime -> @(StateChartSymbol.java);
  link artifact monticoreruntime -> @(StateKind.java!2);
  link artifact monticoreruntime -> @(StateSymbol.java!2);
  link artifact monticoreruntime -> @(ModifierTest.java);
  link artifact monticoreruntime -> @(NamesTest.java);
  link artifact monticoreruntime -> @(ReferencesTest.java);
  link artifact monticoreruntime -> @(ResolvingImportedScopesTest.java);
  link artifact monticoreruntime -> @(ResolvingTest.java);
  link artifact monticoreruntime -> @(ResolvingViaPredicateTest.java);
  link artifact monticoreruntime -> @(ScopeTest.java);
  link artifact monticoreruntime -> @(serializing!2);
  link artifact monticoreruntime -> @(cycle);
  link artifact monticoreruntime -> @(CycleA.java);
  link artifact monticoreruntime -> @(CycleB.java);
  link artifact monticoreruntime -> @(CycleC.java);
  link artifact monticoreruntime -> @(inheritance!3);
  link artifact monticoreruntime -> @(A.java);
  link artifact monticoreruntime -> @(B.java);
  link artifact monticoreruntime -> @(C.java);
  link artifact monticoreruntime -> @(samereferences);
  link artifact monticoreruntime -> @(RefA.java);
  link artifact monticoreruntime -> @(RefB.java);
  link artifact monticoreruntime -> @(RefC.java);
  link artifact monticoreruntime -> @(SerializationTest.java);
  link artifact monticoreruntime -> @(ShadowingTest.java);
  link artifact monticoreruntime -> @(SymbolKindTest.java);
  link artifact monticoreruntime -> @(SymbolTableCreatorTest.java);
  link artifact monticoreruntime -> @(SymbolTableTest.java);
  link artifact monticoreruntime -> @(resources!19);
  link artifact monticoreruntime -> @(de!39);
  link artifact monticoreruntime -> @(monticore!42);
  link artifact monticoreruntime -> @(parsing!2);
  link artifact monticoreruntime -> @(symboltable!21);
  link artifact monticoreruntime -> @(languagecomposition);
  link artifact monticoreruntime -> @(embedding!10);
  link artifact monticoreruntime -> @(family);
  link artifact monticoreruntime -> @(hwc!4);
  link artifact monticoreruntime -> @(test!9);
  link artifact monticoreruntime -> @(A.java!2);
  link artifact monticoreruntime -> @(modelloader!3);
  link artifact monticoreruntime -> @(modeljar.jar);
  link artifact monticoreruntime -> @(modelpath!2);
  link artifact monticoreruntime -> @(models!2);
  link artifact monticoreruntime -> @(modelpath2);
  link artifact monticoreruntime -> @(models!3);
  link artifact monticoreruntime -> @(modelpathtest);
  link artifact monticoreruntime -> @(path1);
  link artifact monticoreruntime -> @(path2);
  link artifact monticoreruntime -> @(paths!3);
  link artifact monticoreruntime -> @(1);
  link artifact monticoreruntime -> @(a!2);
  link artifact monticoreruntime -> @(AFile.ftl);
  link artifact monticoreruntime -> @(AFile.ftl!2);
  link artifact monticoreruntime -> @(2!2);
  link artifact monticoreruntime -> @(a!3);
  link artifact monticoreruntime -> @(AFile.ftl!3);
  link artifact monticoreruntime -> @(target!6);
  link artifact monticoreruntime -> @(classes!6);
  link artifact monticoreruntime -> @(de!40);
  link artifact monticoreruntime -> @(monticore!43);
  link artifact monticoreruntime -> @(AmbiguityException.class);
  link artifact monticoreruntime -> @(annotations!7);
  link artifact monticoreruntime -> @(Visit.class);
  link artifact monticoreruntime -> @(VisitAnnotations.class);
  link artifact monticoreruntime -> @(antlr4!2);
  link artifact monticoreruntime -> @(MCConcreteParser$ParserExecution.class);
  link artifact monticoreruntime -> @(MCConcreteParser.class);
  link artifact monticoreruntime -> @(MCErrorListener.class);
  link artifact monticoreruntime -> @(MCLexer.class);
  link artifact monticoreruntime -> @(MCParser.class);
  link artifact monticoreruntime -> @(ast!12);
  link artifact monticoreruntime -> @(ASTCNode.class);
  link artifact monticoreruntime -> @(ASTNode.class);
  link artifact monticoreruntime -> @(ASTNodeNull.class);
  link artifact monticoreruntime -> @(Comment.class);
  link artifact monticoreruntime -> @(CompareNotSupportedException.class);
  link artifact monticoreruntime -> @(CommentExt.class);
  link artifact monticoreruntime -> @(CommonModelingLanguage.class);
  link artifact monticoreruntime -> @(CommonModelNameCalculator.class);
  link artifact monticoreruntime -> @(EmbeddingModelingLanguage.class);
  link artifact monticoreruntime -> @(EmptyModelNameCalculator.class);
  link artifact monticoreruntime -> @(generating!4);
  link artifact monticoreruntime -> @(GeneratorEngine.class);
  link artifact monticoreruntime -> @(GeneratorSetup.class);
  link artifact monticoreruntime -> @(templateengine!4);
  link artifact monticoreruntime -> @(CodeHookPoint.class);
  link artifact monticoreruntime -> @(freemarker!3);
  link artifact monticoreruntime -> @(Aliases.ftl!2);
  link artifact monticoreruntime -> @(FreeMarkerTemplateEngine.class);
  link artifact monticoreruntime -> @(MontiCoreFileTemplateLoader.class);
  link artifact monticoreruntime -> @(MontiCoreFreeMarkerException.class);
  link artifact monticoreruntime -> @(MontiCoreTemplateExceptionHandler.class);
  link artifact monticoreruntime -> @(MontiCoreTemplateLoader.class);
  link artifact monticoreruntime -> @(SimpleHashFactory.class);
  link artifact monticoreruntime -> @(GlobalExtensionManagement.class);
  link artifact monticoreruntime -> @(HookPoint.class);
  link artifact monticoreruntime -> @(ObjectFactory.class);
  link artifact monticoreruntime -> @(reporting!4);
  link artifact monticoreruntime -> @(artifacts!2);
  link artifact monticoreruntime -> @(ArtifactReporter.class);
  link artifact monticoreruntime -> @(formatter!2);
  link artifact monticoreruntime -> @(AFormatter.class);
  link artifact monticoreruntime -> @(GMLFormatter$1.class);
  link artifact monticoreruntime -> @(GMLFormatter.class);
  link artifact monticoreruntime -> @(GVFormatter.class);
  link artifact monticoreruntime -> @(model!3);
  link artifact monticoreruntime -> @(APkg.class);
  link artifact monticoreruntime -> @(Element.class);
  link artifact monticoreruntime -> @(ElementFactory.class);
  link artifact monticoreruntime -> @(ElementType.class);
  link artifact monticoreruntime -> @(Pkg.class);
  link artifact monticoreruntime -> @(RootPkg.class);
  link artifact monticoreruntime -> @(ReportingNameHelper.class);
  link artifact monticoreruntime -> @(commons!4);
  link artifact monticoreruntime -> @(AReporter.class);
  link artifact monticoreruntime -> @(ASTNodeIdentHelper.class);
  link artifact monticoreruntime -> @(DefaultReportEventHandler.class);
  link artifact monticoreruntime -> @(IASTNodeIdentHelper.class);
  link artifact monticoreruntime -> @(IReportEventHandler.class);
  link artifact monticoreruntime -> @(Layouter.class);
  link artifact monticoreruntime -> @(MapUtil.class);
  link artifact monticoreruntime -> @(ObjectCountVisitor.class);
  link artifact monticoreruntime -> @(ReportCreator.class);
  link artifact monticoreruntime -> @(ReportingConstants.class);
  link artifact monticoreruntime -> @(ReportingHelper.class);
  link artifact monticoreruntime -> @(ReportingRepository$1.class);
  link artifact monticoreruntime -> @(ReportingRepository$Helper.class);
  link artifact monticoreruntime -> @(ReportingRepository.class);
  link artifact monticoreruntime -> @(ReportManager$ReportManagerFactory.class);
  link artifact monticoreruntime -> @(ReportManager.class);
  link artifact monticoreruntime -> @(TreePrintVisitor.class);
  link artifact monticoreruntime -> @(reporter!2);
  link artifact monticoreruntime -> @(ArtifactGmlReporter.class);
  link artifact monticoreruntime -> @(ArtifactGVReporter.class);
  link artifact monticoreruntime -> @(DetailedReporter.class);
  link artifact monticoreruntime -> @(GeneratedFilesReporter.class);
  link artifact monticoreruntime -> @(HandWrittenCodeReporter.class);
  link artifact monticoreruntime -> @(HookPointReporter.class);
  link artifact monticoreruntime -> @(InputOutputFilesReporter.class);
  link artifact monticoreruntime -> @(InstantiationsReporter.class);
  link artifact monticoreruntime -> @(InvolvedFilesReporter.class);
  link artifact monticoreruntime -> @(NodeTreeDecoratedReporter.class);
  link artifact monticoreruntime -> @(NodeTreeReporter.class);
  link artifact monticoreruntime -> @(NodeTypesReporter.class);
  link artifact monticoreruntime -> @(SuccessfulReporter.class);
  link artifact monticoreruntime -> @(SummaryReporter.class);
  link artifact monticoreruntime -> @(SymbolTableReporter.class);
  link artifact monticoreruntime -> @(TemplatesReporter.class);
  link artifact monticoreruntime -> @(TemplateTreeReporter.class);
  link artifact monticoreruntime -> @(TransformationReporter.class);
  link artifact monticoreruntime -> @(VariablesReporter.class);
  link artifact monticoreruntime -> @(Reporting.class);
  link artifact monticoreruntime -> @(StringHookPoint.class);
  link artifact monticoreruntime -> @(TemplateController.class);
  link artifact monticoreruntime -> @(TemplateHookPoint.class);
  link artifact monticoreruntime -> @(TemplateStringHookPoint.class);
  link artifact monticoreruntime -> @(incremental!2);
  link artifact monticoreruntime -> @(IncrementalChecker$1.class);
  link artifact monticoreruntime -> @(IncrementalChecker$InputOutputStory.class);
  link artifact monticoreruntime -> @(IncrementalChecker$InputStory.class);
  link artifact monticoreruntime -> @(IncrementalChecker.class);
  link artifact monticoreruntime -> @(io!3);
  link artifact monticoreruntime -> @(FileReaderWriter.class);
  link artifact monticoreruntime -> @(paths!4);
  link artifact monticoreruntime -> @(IterablePath.class);
  link artifact monticoreruntime -> @(ModelCoordinate.class);
  link artifact monticoreruntime -> @(ModelCoordinateImpl.class);
  link artifact monticoreruntime -> @(ModelCoordinates.class);
  link artifact monticoreruntime -> @(ModelPath.class);
  link artifact monticoreruntime -> @(ModelingLanguage.class);
  link artifact monticoreruntime -> @(ModelingLanguageFamily.class);
  link artifact monticoreruntime -> @(modelloader!4);
  link artifact monticoreruntime -> @(AstProvider.class);
  link artifact monticoreruntime -> @(FileBasedAstProvider.class);
  link artifact monticoreruntime -> @(ModelingLanguageModelLoader.class);
  link artifact monticoreruntime -> @(ModelNameCalculator.class);
  link artifact monticoreruntime -> @(MontiCoreConstants.class);
  link artifact monticoreruntime -> @(parsing!3);
  link artifact monticoreruntime -> @(Parser$1.class);
  link artifact monticoreruntime -> @(Parser.class);
  link artifact monticoreruntime -> @(prettyprint!21);
  link artifact monticoreruntime -> @(AstPrettyPrinter.class);
  link artifact monticoreruntime -> @(CommentPrettyPrinter.class);
  link artifact monticoreruntime -> @(IndentPrinter.class);
  link artifact monticoreruntime -> @(symboltable!22);
  link artifact monticoreruntime -> @(ArtifactScope.class);
  link artifact monticoreruntime -> @(CommonScope.class);
  link artifact monticoreruntime -> @(CommonScopeSpanningSymbol.class);
  link artifact monticoreruntime -> @(CommonSymbol.class);
  link artifact monticoreruntime -> @(CommonSymbolTableCreator.class);
  link artifact monticoreruntime -> @(EnclosingScopeOfNodesInitializer.class);
  link artifact monticoreruntime -> @(GlobalScope.class);
  link artifact monticoreruntime -> @(ImportStatement.class);
  link artifact monticoreruntime -> @(modifiers!2);
  link artifact monticoreruntime -> @(AccessModifier$1.class);
  link artifact monticoreruntime -> @(AccessModifier$AllInclusionAccessModifier.class);
  link artifact monticoreruntime -> @(AccessModifier.class);
  link artifact monticoreruntime -> @(BasicAccessModifier$1.class);
  link artifact monticoreruntime -> @(BasicAccessModifier$2.class);
  link artifact monticoreruntime -> @(BasicAccessModifier$3.class);
  link artifact monticoreruntime -> @(BasicAccessModifier$4.class);
  link artifact monticoreruntime -> @(BasicAccessModifier.class);
  link artifact monticoreruntime -> @(IncludesAccessModifierPredicate.class);
  link artifact monticoreruntime -> @(Modifier.class);
  link artifact monticoreruntime -> @(NoAccessModifier.class);
  link artifact monticoreruntime -> @(MutableScope.class);
  link artifact monticoreruntime -> @(names!2);
  link artifact monticoreruntime -> @(CommonQualifiedNamesCalculator.class);
  link artifact monticoreruntime -> @(QualifiedNamesCalculator.class);
  link artifact monticoreruntime -> @(references!4);
  link artifact monticoreruntime -> @(CommonSymbolReference.class);
  link artifact monticoreruntime -> @(SymbolReference.class);
  link artifact monticoreruntime -> @(resolving!2);
  link artifact monticoreruntime -> @(AdaptedResolvingFilter.class);
  link artifact monticoreruntime -> @(CommonAdaptedResolvingFilter.class);
  link artifact monticoreruntime -> @(CommonResolvingFilter.class);
  link artifact monticoreruntime -> @(ResolvedSeveralEntriesException.class);
  link artifact monticoreruntime -> @(ResolvingFilter.class);
  link artifact monticoreruntime -> @(ResolvingInfo.class);
  link artifact monticoreruntime -> @(SymbolAdapter.class);
  link artifact monticoreruntime -> @(TransitiveAdaptedResolvingFilter.class);
  link artifact monticoreruntime -> @(ResolvingConfiguration.class);
  link artifact monticoreruntime -> @(Scope.class);
  link artifact monticoreruntime -> @(Scopes.class);
  link artifact monticoreruntime -> @(ScopeSpanningSymbol.class);
  link artifact monticoreruntime -> @(serializing!3);
  link artifact monticoreruntime -> @(Serialization.class);
  link artifact monticoreruntime -> @(Symbol.class);
  link artifact monticoreruntime -> @(SymbolKind$1.class);
  link artifact monticoreruntime -> @(SymbolKind.class);
  link artifact monticoreruntime -> @(SymbolNameAndKindPredicate.class);
  link artifact monticoreruntime -> @(SymbolPredicate.class);
  link artifact monticoreruntime -> @(Symbols.class);
  link artifact monticoreruntime -> @(SymbolTableCreator.class);
  link artifact monticoreruntime -> @(types!23);
  link artifact monticoreruntime -> @(CommonJFieldSymbol.class);
  link artifact monticoreruntime -> @(CommonJMethodSymbol.class);
  link artifact monticoreruntime -> @(CommonJTypeScope.class);
  link artifact monticoreruntime -> @(CommonJTypeSymbol.class);
  link artifact monticoreruntime -> @(JAttributeSymbolKind.class);
  link artifact monticoreruntime -> @(JFieldSymbol.class);
  link artifact monticoreruntime -> @(JMethodSymbol.class);
  link artifact monticoreruntime -> @(JMethodSymbolKind.class);
  link artifact monticoreruntime -> @(JTypeSymbol.class);
  link artifact monticoreruntime -> @(JTypeSymbolKind.class);
  link artifact monticoreruntime -> @(Parameter.class);
  link artifact monticoreruntime -> @(references!5);
  link artifact monticoreruntime -> @(ActualTypeArgument.class);
  link artifact monticoreruntime -> @(CommonJTypeReference.class);
  link artifact monticoreruntime -> @(CommonTypeReference.class);
  link artifact monticoreruntime -> @(JTypeReference.class);
  link artifact monticoreruntime -> @(TypeReference.class);
  link artifact monticoreruntime -> @(TypeSymbol.class);
  link artifact monticoreruntime -> @(TypeSymbolKind.class);
  link artifact monticoreruntime -> @(visibility!2);
  link artifact monticoreruntime -> @(IsShadowedBySymbol.class);
  link artifact monticoreruntime -> @(ShadowsSymbol.class);
  link artifact monticoreruntime -> @(types!24);
  link artifact monticoreruntime -> @(TypeResolver.class);
  link artifact monticoreruntime -> @(utils!2);
  link artifact monticoreruntime -> @(ASTNodes.class);
  link artifact monticoreruntime -> @(ASTTraverser$Visitor.class);
  link artifact monticoreruntime -> @(ASTTraverser.class);
  link artifact monticoreruntime -> @(Link.class);
  link artifact monticoreruntime -> @(visitor!9);
  link artifact monticoreruntime -> @(CommonVisitor.class!2);
  link artifact monticoreruntime -> @(generated-sources!6);
  link artifact monticoreruntime -> @(annotations!8);
  link artifact monticoreruntime -> @(generated-test-sources!4);
  link artifact monticoreruntime -> @(test-annotations!4);
  link artifact monticoreruntime -> @(maven-archiver!6);
  link artifact monticoreruntime -> @(maven-status!6);
  link artifact monticoreruntime -> @(maven-compiler-plugin!6);
  link artifact monticoreruntime -> @(compile!6);
  link artifact monticoreruntime -> @(default-compile!6);
  link artifact monticoreruntime -> @(testCompile!4);
  link artifact monticoreruntime -> @(default-testCompile!4);
  link artifact monticoreruntime -> @(monticore-runtime-4.5.5.1-sources.jar);
  link artifact monticoreruntime -> @(monticore-runtime-4.5.5.1-tests.jar);
  link artifact monticoreruntime -> @(monticore-runtime-4.5.5.1.jar);
  link artifact monticoreruntime -> @(serialization!2);
  link artifact monticoreruntime -> @(surefire-reports!4);
  link artifact monticoreruntime -> @(test!10);
  link artifact monticoreruntime -> @(test-classes!4);
  link artifact monticoreruntime -> @(de!41);
  link artifact monticoreruntime -> @(monticore!44);
  link artifact monticoreruntime -> @(ast!13);
  link artifact monticoreruntime -> @(ASTCNodeMock.class);
  link artifact monticoreruntime -> @(ASTNodeMock.class);
  link artifact monticoreruntime -> @(cocos!16);
  link artifact monticoreruntime -> @(CocoCheckTest.class);
  link artifact monticoreruntime -> @(helper!2);
  link artifact monticoreruntime -> @(Assert.class);
  link artifact monticoreruntime -> @(generating!5);
  link artifact monticoreruntime -> @(GeneratorEngineMock.class);
  link artifact monticoreruntime -> @(GeneratorEngineTest.class);
  link artifact monticoreruntime -> @(templateengine!5);
  link artifact monticoreruntime -> @(CodeHookPointMock.class);
  link artifact monticoreruntime -> @(FreeMarkerTemplateEngineMock.class);
  link artifact monticoreruntime -> @(FreeMarkerTemplateMock.class);
  link artifact monticoreruntime -> @(GeneratorSetupMock.class);
  link artifact monticoreruntime -> @(GlobalExtensionManagementGlobalVarsTest.class);
  link artifact monticoreruntime -> @(ObjectFactoryTest.class);
  link artifact monticoreruntime -> @(reporting!5);
  link artifact monticoreruntime -> @(commons!5);
  link artifact monticoreruntime -> @(ReportingStringHelperTest.class);
  link artifact monticoreruntime -> @(TemplateAliasingTest.class);
  link artifact monticoreruntime -> @(TemplateControllerHookPointsTest.class);
  link artifact monticoreruntime -> @(TemplateControllerMock.class);
  link artifact monticoreruntime -> @(TemplateControllerSignatureUsageTest.class);
  link artifact monticoreruntime -> @(TemplateControllerTest.class);
  link artifact monticoreruntime -> @(TemplateLoggerTest.class);
  link artifact monticoreruntime -> @(templates!4);
  link artifact monticoreruntime -> @(A.ftl!2);
  link artifact monticoreruntime -> @(aliases!2);
  link artifact monticoreruntime -> @(GlobalListVars.ftl!3);
  link artifact monticoreruntime -> @(IncludeAlias.ftl!2);
  link artifact monticoreruntime -> @(IncludeArgsAndSignatureAlias.ftl!2);
  link artifact monticoreruntime -> @(LogAliases.ftl!2);
  link artifact monticoreruntime -> @(Plain.ftl!2);
  link artifact monticoreruntime -> @(SignatureAliasWithThreeParameters.ftl!2);
  link artifact monticoreruntime -> @(ArgumentsAreOnlyVisibleInIncludedTemplate.ftl!2);
  link artifact monticoreruntime -> @(B.ftl!2);
  link artifact monticoreruntime -> @(C.ftl!2);
  link artifact monticoreruntime -> @(GlobalListVars.ftl!4);
  link artifact monticoreruntime -> @(GlobalVars.ftl!2);
  link artifact monticoreruntime -> @(HelloWorld.ftl!2);
  link artifact monticoreruntime -> @(HookCall.ftl!2);
  link artifact monticoreruntime -> @(HowAreYou.ftl!2);
  link artifact monticoreruntime -> @(Log.ftl!2);
  link artifact monticoreruntime -> @(NestedSignatureCalls.ftl!2);
  link artifact monticoreruntime -> @(ParameterizedInclusionUsage.ftl!2);
  link artifact monticoreruntime -> @(PrintNameIfExists.ftl!2);
  link artifact monticoreruntime -> @(SignatureWithManyParameters.ftl!2);
  link artifact monticoreruntime -> @(SignatureWithOneParameter.ftl!2);
  link artifact monticoreruntime -> @(SignatureWithThreeParameters.ftl!2);
  link artifact monticoreruntime -> @(TestVariables4.ftl!2);
  link artifact monticoreruntime -> @(TopA.ftl!2);
  link artifact monticoreruntime -> @(TopStringHook.ftl!2);
  link artifact monticoreruntime -> @(TopTemplateHook.ftl!2);
  link artifact monticoreruntime -> @(TestConstants.class);
  link artifact monticoreruntime -> @(templates!5);
  link artifact monticoreruntime -> @(ClassProd.ftl!2);
  link artifact monticoreruntime -> @(First.ftl!2);
  link artifact monticoreruntime -> @(Grammar.ftl!4);
  link artifact monticoreruntime -> @(InterfaceProd.ftl!2);
  link artifact monticoreruntime -> @(Main.ftl!4);
  link artifact monticoreruntime -> @(MainClassProd.ftl!2);
  link artifact monticoreruntime -> @(MainGrammar.ftl!2);
  link artifact monticoreruntime -> @(MainInterfaceProd.ftl!2);
  link artifact monticoreruntime -> @(io!4);
  link artifact monticoreruntime -> @(FileReaderWriterMock.class);
  link artifact monticoreruntime -> @(FileReaderWriterTest.class);
  link artifact monticoreruntime -> @(paths!5);
  link artifact monticoreruntime -> @(IterablePathTest.class);
  link artifact monticoreruntime -> @(ModelCoordinateTest.class);
  link artifact monticoreruntime -> @(ModelPathTest.class);
  link artifact monticoreruntime -> @(modelloader!5);
  link artifact monticoreruntime -> @(ModelLoaderTest.class);
  link artifact monticoreruntime -> @(parsing!4);
  link artifact monticoreruntime -> @(symboltable!23);
  link artifact monticoreruntime -> @(AdaptedResolvingTest.class);
  link artifact monticoreruntime -> @(ArtifactScopeTest.class);
  link artifact monticoreruntime -> @(GlobalScopeTest.class);
  link artifact monticoreruntime -> @(languagecomposition!2);
  link artifact monticoreruntime -> @(embedding!11);
  link artifact monticoreruntime -> @(family!2);
  link artifact monticoreruntime -> @(LanguageCompositionTest.class);
  link artifact monticoreruntime -> @(mocks!2);
  link artifact monticoreruntime -> @(asts!5);
  link artifact monticoreruntime -> @(ASTCompilationUnit.class!2);
  link artifact monticoreruntime -> @(ASTId.class);
  link artifact monticoreruntime -> @(ASTNodeMock.class!2);
  link artifact monticoreruntime -> @(ASTSymbol.class);
  link artifact monticoreruntime -> @(ASTSymbolReference.class);
  link artifact monticoreruntime -> @(grammar!17);
  link artifact monticoreruntime -> @(ASTProd.class!4);
  link artifact monticoreruntime -> @(ASTSymbolProd.class);
  link artifact monticoreruntime -> @(ASTSymbolProdReference.class);
  link artifact monticoreruntime -> @(CommonScopeMock.class);
  link artifact monticoreruntime -> @(languages!2);
  link artifact monticoreruntime -> @(edl!4);
  link artifact monticoreruntime -> @(asts!6);
  link artifact monticoreruntime -> @(ASTEntity.class);
  link artifact monticoreruntime -> @(ASTEntityEnd.class);
  link artifact monticoreruntime -> @(ASTProperty.class);
  link artifact monticoreruntime -> @(entity!2);
  link artifact monticoreruntime -> @(ActionScope.class);
  link artifact monticoreruntime -> @(ActionSymbol.class);
  link artifact monticoreruntime -> @(ActionSymbolKind.class);
  link artifact monticoreruntime -> @(asts!7);
  link artifact monticoreruntime -> @(ASTAction.class!3);
  link artifact monticoreruntime -> @(ASTActionEnd.class);
  link artifact monticoreruntime -> @(ASTEntity.class!2);
  link artifact monticoreruntime -> @(ASTEntityBase.class);
  link artifact monticoreruntime -> @(ASTEntityCompilationUnit.class);
  link artifact monticoreruntime -> @(ASTEntityEnd.class!2);
  link artifact monticoreruntime -> @(ASTProperty.class!2);
  link artifact monticoreruntime -> @(EntityLanguageVisitor.class);
  link artifact monticoreruntime -> @(cocos!17);
  link artifact monticoreruntime -> @(ContextCondition.class);
  link artifact monticoreruntime -> @(EntityASTActionCoCo.class);
  link artifact monticoreruntime -> @(EntityASTEntityCoCo.class);
  link artifact monticoreruntime -> @(EntityASTEntityCompilationUnitCoCo.class);
  link artifact monticoreruntime -> @(EntityASTPropertyCoCo.class);
  link artifact monticoreruntime -> @(EntityCoCoChecker.class);
  link artifact monticoreruntime -> @(PropertyNameMustStartWithLowerCase.class);
  link artifact monticoreruntime -> @(UniquePropertyNamesInEntity.class);
  link artifact monticoreruntime -> @(CommonEntityLanguageSymbolTableCreator.class);
  link artifact monticoreruntime -> @(EntityLanguage.class);
  link artifact monticoreruntime -> @(EntityLanguageCoCos.class);
  link artifact monticoreruntime -> @(EntityLanguageModelLoader.class);
  link artifact monticoreruntime -> @(EntityLanguageSymbolTableCreator.class);
  link artifact monticoreruntime -> @(EntityParserMock.class);
  link artifact monticoreruntime -> @(EntitySymbol.class);
  link artifact monticoreruntime -> @(EntitySymbolKind.class);
  link artifact monticoreruntime -> @(EntitySymbolReference.class);
  link artifact monticoreruntime -> @(PropertyPredicate.class);
  link artifact monticoreruntime -> @(PropertySymbol.class);
  link artifact monticoreruntime -> @(PropertySymbolKind.class);
  link artifact monticoreruntime -> @(extendedstatechart!2);
  link artifact monticoreruntime -> @(XStateChartKind.class);
  link artifact monticoreruntime -> @(XStateChartScope.class);
  link artifact monticoreruntime -> @(XStateChartSymbol.class);
  link artifact monticoreruntime -> @(XStateKind.class);
  link artifact monticoreruntime -> @(XStateSymbol.class);
  link artifact monticoreruntime -> @(JTypeSymbolMock.class);
  link artifact monticoreruntime -> @(ParserMock.class);
  link artifact monticoreruntime -> @(references!6);
  link artifact monticoreruntime -> @(PropertySymbolReference.class);
  link artifact monticoreruntime -> @(scandentity!2);
  link artifact monticoreruntime -> @(Action2StateAdapter.class);
  link artifact monticoreruntime -> @(Action2StateTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(CompositeScAndEntitySymbolTableCreator.class);
  link artifact monticoreruntime -> @(Entity2ScAdapter.class);
  link artifact monticoreruntime -> @(Entity2ScTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(Entity2StateAdapter.class);
  link artifact monticoreruntime -> @(Entity2StateTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(EntityEmbeddingScLanguage.class);
  link artifact monticoreruntime -> @(EntityEmbeddingScModelLoader.class);
  link artifact monticoreruntime -> @(Sc2ActionAdapter.class);
  link artifact monticoreruntime -> @(Sc2ActionTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(Sc2EntityAdapter.class);
  link artifact monticoreruntime -> @(Sc2EntityTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(ScAndEntityLanguageFamily.class);
  link artifact monticoreruntime -> @(State2EntityAdapter.class);
  link artifact monticoreruntime -> @(State2EntityTransitiveResolvingFilter.class);
  link artifact monticoreruntime -> @(statechart!10);
  link artifact monticoreruntime -> @(asts!8);
  link artifact monticoreruntime -> @(ASTState.class!7);
  link artifact monticoreruntime -> @(ASTStateChart.class);
  link artifact monticoreruntime -> @(ASTStateChartBase.class);
  link artifact monticoreruntime -> @(ASTStateChartCompilationUnit.class);
  link artifact monticoreruntime -> @(ASTStateChartEnd.class);
  link artifact monticoreruntime -> @(StateChartLanguageBaseVisitor.class);
  link artifact monticoreruntime -> @(CommonStateChartSymbolTableCreator.class);
  link artifact monticoreruntime -> @(StateChartKind.class);
  link artifact monticoreruntime -> @(StateChartLanguage.class);
  link artifact monticoreruntime -> @(StateChartLanguageModelLoader.class);
  link artifact monticoreruntime -> @(StateChartLanguageSymbolTableCreator.class);
  link artifact monticoreruntime -> @(StateChartParserMock.class);
  link artifact monticoreruntime -> @(StateChartScope.class);
  link artifact monticoreruntime -> @(StateChartSymbol.class);
  link artifact monticoreruntime -> @(StateKind.class!2);
  link artifact monticoreruntime -> @(StateSymbol.class!2);
  link artifact monticoreruntime -> @(ModifierTest.class);
  link artifact monticoreruntime -> @(NamesTest.class);
  link artifact monticoreruntime -> @(ReferencesTest.class);
  link artifact monticoreruntime -> @(ResolvingImportedScopesTest.class);
  link artifact monticoreruntime -> @(ResolvingTest.class);
  link artifact monticoreruntime -> @(ResolvingViaPredicateTest$CorrectActionParametersPredicate.class);
  link artifact monticoreruntime -> @(ResolvingViaPredicateTest$PropertyTypePredicate.class);
  link artifact monticoreruntime -> @(ResolvingViaPredicateTest.class);
  link artifact monticoreruntime -> @(ScopeTest.class);
  link artifact monticoreruntime -> @(serializing!4);
  link artifact monticoreruntime -> @(cycle!2);
  link artifact monticoreruntime -> @(CycleA.class);
  link artifact monticoreruntime -> @(CycleB.class);
  link artifact monticoreruntime -> @(CycleC.class);
  link artifact monticoreruntime -> @(inheritance!4);
  link artifact monticoreruntime -> @(A.class);
  link artifact monticoreruntime -> @(B.class);
  link artifact monticoreruntime -> @(C.class);
  link artifact monticoreruntime -> @(samereferences!2);
  link artifact monticoreruntime -> @(RefA.class);
  link artifact monticoreruntime -> @(RefB.class);
  link artifact monticoreruntime -> @(RefC.class);
  link artifact monticoreruntime -> @(SerializationTest.class);
  link artifact monticoreruntime -> @(ShadowingTest.class);
  link artifact monticoreruntime -> @(SymbolKindTest.class);
  link artifact monticoreruntime -> @(SymbolTableCreatorTest.class);
  link artifact monticoreruntime -> @(SymbolTableTest.class);
  link artifact monticoreruntime -> @(hwc!5);
  link artifact monticoreruntime -> @(test!11);
  link artifact monticoreruntime -> @(A.java!3);
  link artifact monticoreruntime -> @(modelloader!6);
  link artifact monticoreruntime -> @(modeljar.jar!2);
  link artifact monticoreruntime -> @(modelpath!3);
  link artifact monticoreruntime -> @(models!4);
  link artifact monticoreruntime -> @(modelpath2!2);
  link artifact monticoreruntime -> @(models!5);
  link artifact monticoreruntime -> @(modelpathtest!2);
  link artifact monticoreruntime -> @(path1!2);
  link artifact monticoreruntime -> @(path2!2);
  link artifact monticoreruntime -> @(paths!6);
  link artifact monticoreruntime -> @(1!2);
  link artifact monticoreruntime -> @(a!4);
  link artifact monticoreruntime -> @(AFile.ftl!4);
  link artifact monticoreruntime -> @(AFile.ftl!5);
  link artifact monticoreruntime -> @(2!3);
  link artifact monticoreruntime -> @(a!5);
  link artifact monticoreruntime -> @(AFile.ftl!6);
  link artifact monticoreruntime -> @(target1);
  link artifact monticoreruntime -> @(a!6);
  link artifact monticorecli -> @(monticore-cli);
  link artifact monticorecli -> @(src);
  link artifact monticorecli -> @(main);
  link artifact monticorecli -> @(assemblies);
  link artifact monticorecli -> @(java);
  link artifact monticorecli -> @(de);
  link artifact monticorecli -> @(monticore);
  link artifact monticorecli -> @(cli);
  link artifact monticorecli -> @(MontiCoreCLI.java);
  link artifact monticorecli -> @(MontiCoreCLIConfiguration.java);
  link artifact monticorecli -> @(resources);
  link artifact monticorecli -> @(test);
  link artifact monticorecli -> @(java!2);
  link artifact monticorecli -> @(de!2);
  link artifact monticorecli -> @(monticore!2);
  link artifact monticorecli -> @(cli!2);
  link artifact monticorecli -> @(MontiCoreCLITest.java);
  link artifact monticorecli -> @(resources!2);
  link artifact monticorecli -> @(de!3);
  link artifact monticorecli -> @(monticore!3);
  link artifact monticorecli -> @(automaton);
  link artifact monticorecli -> @(monticore!4);
  link artifact monticorecli -> @(Grammar.ftl);
  link artifact monticorecli -> @(Main.ftl);
  link artifact monticorecli -> @(target);
  link artifact monticorecli -> @(archive-tmp);
  link artifact monticorecli -> @(classes);
  link artifact monticorecli -> @(de!4);
  link artifact monticorecli -> @(monticore!5);
  link artifact monticorecli -> @(cli!3);
  link artifact monticorecli -> @(MontiCoreCLI.class);
  link artifact monticorecli -> @(MontiCoreCLIConfiguration$Options.class);
  link artifact monticorecli -> @(MontiCoreCLIConfiguration.class);
  link artifact monticorecli -> @(generated-sources);
  link artifact monticorecli -> @(annotations);
  link artifact monticorecli -> @(generated-test-sources);
  link artifact monticorecli -> @(test-annotations);
  link artifact monticorecli -> @(maven-archiver);
  link artifact monticorecli -> @(maven-status);
  link artifact monticorecli -> @(maven-compiler-plugin);
  link artifact monticorecli -> @(compile);
  link artifact monticorecli -> @(default-compile);
  link artifact monticorecli -> @(testCompile);
  link artifact monticorecli -> @(default-testCompile);
  link artifact monticorecli -> @(monticore-cli-4.5.5.1-jar-with-dependencies.jar);
  link artifact monticorecli -> @(monticore-cli-4.5.5.1.jar);
  link artifact monticorecli -> @(monticore-cli-4.5.5.1.zip);
  link artifact monticorecli -> @(surefire-reports);
  link artifact monticorecli -> @(test-classes);
  link artifact monticorecli -> @(de!5);
  link artifact monticorecli -> @(monticore!6);
  link artifact monticorecli -> @(automaton!2);
  link artifact monticorecli -> @(cli!4);
  link artifact monticorecli -> @(MontiCoreCLITest.class);
  link artifact monticorecli -> @(monticore!7);
  link artifact monticorecli -> @(Grammar.ftl!2);
  link artifact monticorecli -> @(Main.ftl!2);
  link artifact monticorecli -> @(test-run);
  link artifact monticorecli -> @(de!6);
  link artifact monticorecli -> @(monticore!8);
  link artifact monticorecli -> @(automaton!3);
  link artifact monticorecli -> @(_ast);
  link artifact monticorecli -> @(ASTAutomaton.java);
  link artifact monticorecli -> @(ASTAutomatonBuilder.java);
  link artifact monticorecli -> @(ASTAutomatonNode.java);
  link artifact monticorecli -> @(ASTConstantsAutomaton.java);
  link artifact monticorecli -> @(ASTState.java);
  link artifact monticorecli -> @(ASTStateBuilder.java);
  link artifact monticorecli -> @(ASTTransition.java);
  link artifact monticorecli -> @(ASTTransitionBuilder.java);
  link artifact monticorecli -> @(AutomatonLiterals.java);
  link artifact monticorecli -> @(AutomatonMill.java);
  link artifact monticorecli -> @(AutomatonNodeFactory.java);
  link artifact monticorecli -> @(_cocos);
  link artifact monticorecli -> @(AutomatonASTAutomatonCoCo.java);
  link artifact monticorecli -> @(AutomatonASTAutomatonNodeCoCo.java);
  link artifact monticorecli -> @(AutomatonASTStateCoCo.java);
  link artifact monticorecli -> @(AutomatonASTTransitionCoCo.java);
  link artifact monticorecli -> @(AutomatonCoCoChecker.java);
  link artifact monticorecli -> @(_od);
  link artifact monticorecli -> @(Automaton2OD.java);
  link artifact monticorecli -> @(_parser);
  link artifact monticorecli -> @(AutomatonAntlrBaseListener.java);
  link artifact monticorecli -> @(AutomatonAntlrLexer.java);
  link artifact monticorecli -> @(AutomatonAntlrListener.java);
  link artifact monticorecli -> @(AutomatonAntlrParser.java);
  link artifact monticorecli -> @(AutomatonParser.java);
  link artifact monticorecli -> @(_symboltable);
  link artifact monticorecli -> @(AutomatonLanguage.java);
  link artifact monticorecli -> @(AutomatonModelLoader.java);
  link artifact monticorecli -> @(_visitor);
  link artifact monticorecli -> @(AutomatonDelegatorVisitor.java);
  link artifact monticorecli -> @(AutomatonInheritanceVisitor.java);
  link artifact monticorecli -> @(AutomatonParentAwareVisitor.java);
  link artifact monticorecli -> @(AutomatonVisitor.java);
  link artifact monticorecli -> @(automatonemf);
  link artifact monticorecli -> @(_ast!2);
  link artifact monticorecli -> @(ASTAutomaton.java!2);
  link artifact monticorecli -> @(ASTAutomatonBuilder.java!2);
  link artifact monticorecli -> @(ASTAutomatonEmfNode.java);
  link artifact monticorecli -> @(ASTConstantsAutomatonEmf.java);
  link artifact monticorecli -> @(ASTState.java!2);
  link artifact monticorecli -> @(ASTStateBuilder.java!2);
  link artifact monticorecli -> @(ASTTransition.java!2);
  link artifact monticorecli -> @(ASTTransitionBuilder.java!2);
  link artifact monticorecli -> @(AutomatonEmfLiterals.java);
  link artifact monticorecli -> @(AutomatonEmfMill.java);
  link artifact monticorecli -> @(AutomatonEmfNodeFactory.java);
  link artifact monticorecli -> @(AutomatonEmfPackage.java);
  link artifact monticorecli -> @(AutomatonEmfPackageImpl.java);
  link artifact monticorecli -> @(_cocos!2);
  link artifact monticorecli -> @(AutomatonEmfASTAutomatonCoCo.java);
  link artifact monticorecli -> @(AutomatonEmfASTAutomatonEmfNodeCoCo.java);
  link artifact monticorecli -> @(AutomatonEmfASTStateCoCo.java);
  link artifact monticorecli -> @(AutomatonEmfASTTransitionCoCo.java);
  link artifact monticorecli -> @(AutomatonEmfAutomatonEmfPackageCoCo.java);
  link artifact monticorecli -> @(AutomatonEmfCoCoChecker.java);
  link artifact monticorecli -> @(_od!2);
  link artifact monticorecli -> @(AutomatonEmf2OD.java);
  link artifact monticorecli -> @(_parser!2);
  link artifact monticorecli -> @(AutomatonEmfAntlrBaseListener.java);
  link artifact monticorecli -> @(AutomatonEmfAntlrLexer.java);
  link artifact monticorecli -> @(AutomatonEmfAntlrListener.java);
  link artifact monticorecli -> @(AutomatonEmfAntlrParser.java);
  link artifact monticorecli -> @(AutomatonEmfParser.java);
  link artifact monticorecli -> @(_symboltable!2);
  link artifact monticorecli -> @(AutomatonEmfLanguage.java);
  link artifact monticorecli -> @(AutomatonEmfModelLoader.java);
  link artifact monticorecli -> @(_visitor!2);
  link artifact monticorecli -> @(AutomatonEmfDelegatorVisitor.java);
  link artifact monticorecli -> @(AutomatonEmfInheritanceVisitor.java);
  link artifact monticorecli -> @(AutomatonEmfParentAwareVisitor.java);
  link artifact monticorecli -> @(AutomatonEmfVisitor.java);
  link artifact monticorecli -> @(reports);
  link artifact monticorecli -> @(de.monticore);
  link artifact monticorecli -> @(de.monticore!2);
  link artifact monticoremaven -> @(monticore-maven);
  link artifact monticoremaven -> @(monticore-m2e);
  link artifact monticoremaven -> @(de.monticore!40);
  link artifact monticoremaven -> @(META-INF!4);
  link artifact monticoremaven -> @(src!9);
  link artifact monticoremaven -> @(main!9);
  link artifact monticoremaven -> @(java!15);
  link artifact monticoremaven -> @(de!32);
  link artifact monticoremaven -> @(monticore!35);
  link artifact monticoremaven -> @(mojo);
  link artifact monticoremaven -> @(m2e);
  link artifact monticoremaven -> @(Activator.java);
  link artifact monticoremaven -> @(MontiCoreBuildParticipant.java);
  link artifact monticoremaven -> @(MontiCoreProjectConfigurator.java);
  link artifact monticoremaven -> @(de.monticore.m2e);
  link artifact monticoremaven -> @(de.monticore.m2e!2);
  link artifact monticoremaven -> @(monticore-maven-archetypes);
  link artifact monticoremaven -> @(blank);
  link artifact monticoremaven -> @(src!10);
  link artifact monticoremaven -> @(main!10);
  link artifact monticoremaven -> @(resources!12);
  link artifact monticoremaven -> @(archetype-resources);
  link artifact monticoremaven -> @(META-INF!5);
  link artifact monticoremaven -> @(maven);
  link artifact monticoremaven -> @(test!5);
  link artifact monticoremaven -> @(resources!13);
  link artifact monticoremaven -> @(projects);
  link artifact monticoremaven -> @(it!2);
  link artifact monticoremaven -> @(simple);
  link artifact monticoremaven -> @(src!11);
  link artifact monticoremaven -> @(main!11);
  link artifact monticoremaven -> @(resources!14);
  link artifact monticoremaven -> @(archetype-resources!2);
  link artifact monticoremaven -> @(src!12);
  link artifact monticoremaven -> @(main!12);
  link artifact monticoremaven -> @(grammars!10);
  link artifact monticoremaven -> @(java!16);
  link artifact monticoremaven -> @(cocos!13);
  link artifact monticoremaven -> @(AtLeastOneMyField.java);
  link artifact monticoremaven -> @(ExistingMyFieldType.java);
  link artifact monticoremaven -> @(MyDSLCoCos.java);
  link artifact monticoremaven -> @(MyElementNameStartsWithCapitalLetter.java);
  link artifact monticoremaven -> @(lang!2);
  link artifact monticoremaven -> @(MyDSLLanguage.java);
  link artifact monticoremaven -> @(MyDSLTool.java);
  link artifact monticoremaven -> @(prettyprint!19);
  link artifact monticoremaven -> @(PrettyPrinter.java);
  link artifact monticoremaven -> @(symboltable!18);
  link artifact monticoremaven -> @(MyDSLModelLoader.java);
  link artifact monticoremaven -> @(MyDSLSymbolTableCreator.java);
  link artifact monticoremaven -> @(MyElementSymbol.java);
  link artifact monticoremaven -> @(MyElementSymbolReference.java);
  link artifact monticoremaven -> @(MyFieldSymbol.java);
  link artifact monticoremaven -> @(MyModelSymbol.java);
  link artifact monticoremaven -> @(visitors!4);
  link artifact monticoremaven -> @(CountMyElements.java);
  link artifact monticoremaven -> @(test!6);
  link artifact monticoremaven -> @(java!17);
  link artifact monticoremaven -> @(MyDSLToolTest.java);
  link artifact monticoremaven -> @(resources!15);
  link artifact monticoremaven -> @(example!2);
  link artifact monticoremaven -> @(META-INF!6);
  link artifact monticoremaven -> @(maven!2);
  link artifact monticoremaven -> @(test!7);
  link artifact monticoremaven -> @(resources!16);
  link artifact monticoremaven -> @(projects!2);
  link artifact monticoremaven -> @(it!3);
  link artifact monticoremaven -> @(monticore-maven-plugin);
  link artifact monticoremaven -> @(src!13);
  link artifact monticoremaven -> @(main!13);
  link artifact monticoremaven -> @(java!18);
  link artifact monticoremaven -> @(de!33);
  link artifact monticoremaven -> @(monticore!36);
  link artifact monticoremaven -> @(mojo!2);
  link artifact monticoremaven -> @(extra);
  link artifact monticoremaven -> @(Executable.java);
  link artifact monticoremaven -> @(Execution.java);
  link artifact monticoremaven -> @(ScriptReportRenderer.java);
  link artifact monticoremaven -> @(ScriptResultReport.java);
  link artifact monticoremaven -> @(GenerateMojo.java);
  link artifact monticoremaven -> @(ReportingReport.java);
  link artifact monticoremaven -> @(ReportRenderer.java);
  link artifact monticoremaven -> @(ReportsRenderer.java);
  link artifact monticoremaven -> @(resources!17);
  link artifact monticoremaven -> @(scripts);
  link artifact monticoremaven -> @(util!7);
  link artifact monticoremaven -> @(site);
  link artifact monticoremaven -> @(apt);
  link artifact monticoremaven -> @(target!5);
  link artifact monticoremaven -> @(classes!5);
  link artifact monticoremaven -> @(de!34);
  link artifact monticoremaven -> @(monticore!37);
  link artifact monticoremaven -> @(mojo!3);
  link artifact monticoremaven -> @(extra!2);
  link artifact monticoremaven -> @(Executable.class);
  link artifact monticoremaven -> @(Execution.class);
  link artifact monticoremaven -> @(ScriptReportRenderer.class);
  link artifact monticoremaven -> @(ScriptResultReport.class);
  link artifact monticoremaven -> @(GenerateMojo.class);
  link artifact monticoremaven -> @(HelpMojo.class);
  link artifact monticoremaven -> @(ReportingReport.class);
  link artifact monticoremaven -> @(ReportRenderer.class);
  link artifact monticoremaven -> @(ReportsRenderer.class);
  link artifact monticoremaven -> @(META-INF!7);
  link artifact monticoremaven -> @(maven!3);
  link artifact monticoremaven -> @(de.monticore!41);
  link artifact monticoremaven -> @(monticore-maven-plugin!2);
  link artifact monticoremaven -> @(scripts!2);
  link artifact monticoremaven -> @(util!8);
  link artifact monticoremaven -> @(generated-sources!5);
  link artifact monticoremaven -> @(annotations!5);
  link artifact monticoremaven -> @(plugin);
  link artifact monticoremaven -> @(de!35);
  link artifact monticoremaven -> @(monticore!38);
  link artifact monticoremaven -> @(mojo!4);
  link artifact monticoremaven -> @(HelpMojo.java);
  link artifact monticoremaven -> @(maven-archiver!5);
  link artifact monticoremaven -> @(maven-plugin-plugin-sources);
  link artifact monticoremaven -> @(org.apache.maven);
  link artifact monticoremaven -> @(maven-reporting-impl);
  link artifact monticoremaven -> @(2);
  link artifact monticoremaven -> @(sources!2);
  link artifact monticoremaven -> @(META-INF!8);
  link artifact monticoremaven -> @(org!2);
  link artifact monticoremaven -> @(apache);
  link artifact monticoremaven -> @(maven!4);
  link artifact monticoremaven -> @(reporting);
  link artifact monticoremaven -> @(AbstractMavenReport.java);
  link artifact monticoremaven -> @(AbstractMavenReportRenderer.java);
  link artifact monticoremaven -> @(MavenMultiPageReport.java);
  link artifact monticoremaven -> @(maven-status!5);
  link artifact monticoremaven -> @(maven-compiler-plugin!5);
  link artifact monticoremaven -> @(compile!5);
  link artifact monticoremaven -> @(default-compile!5);
  link artifact monticoremaven -> @(monticore-maven-plugin-4.5.5.1.jar);
  link artifact monticoreemfruntime -> @(monticore-emf-runtime);
  link artifact monticoreemfruntime -> @(src!5);
  link artifact monticoreemfruntime -> @(main!5);
  link artifact monticoreemfruntime -> @(java!6);
  link artifact monticoreemfruntime -> @(de!10);
  link artifact monticoreemfruntime -> @(monticore!10);
  link artifact monticoreemfruntime -> @(emf);
  link artifact monticoreemfruntime -> @(util!5);
  link artifact monticoreemfruntime -> @(AST2ModelFiles.java);
  link artifact monticoreemfruntime -> @(compare);
  link artifact monticoreemfruntime -> @(AstEmfDiffUtility.java);
  link artifact monticoreemfruntime -> @(_ast!3);
  link artifact monticoreemfruntime -> @(ASTECNode.java);
  link artifact monticoreemfruntime -> @(ASTENode.java);
  link artifact monticoreemfruntime -> @(ASTENodeFactory.java);
  link artifact monticoreemfruntime -> @(ASTENodeFactoryImpl.java);
  link artifact monticoreemfruntime -> @(ASTENodeLiterals.java);
  link artifact monticoreemfruntime -> @(ASTENodePackage.java);
  link artifact monticoreemfruntime -> @(ASTENodePackageImpl.java);
  link artifact monticoreemfruntime -> @(ASTEPackage.java);
  link artifact monticoreemfruntime -> @(target!2);
  link artifact monticoreemfruntime -> @(classes!2);
  link artifact monticoreemfruntime -> @(de!11);
  link artifact monticoreemfruntime -> @(monticore!11);
  link artifact monticoreemfruntime -> @(emf!2);
  link artifact monticoreemfruntime -> @(util!6);
  link artifact monticoreemfruntime -> @(AST2ModelFiles.class);
  link artifact monticoreemfruntime -> @(compare!2);
  link artifact monticoreemfruntime -> @(AstEmfDiffUtility.class);
  link artifact monticoreemfruntime -> @(_ast!4);
  link artifact monticoreemfruntime -> @(ASTECNode.class);
  link artifact monticoreemfruntime -> @(ASTENode.class);
  link artifact monticoreemfruntime -> @(ASTENodeFactory.class);
  link artifact monticoreemfruntime -> @(ASTENodeFactoryImpl.class);
  link artifact monticoreemfruntime -> @(ASTENodeLiterals.class);
  link artifact monticoreemfruntime -> @(ASTENodePackage$Literals.class);
  link artifact monticoreemfruntime -> @(ASTENodePackage.class);
  link artifact monticoreemfruntime -> @(ASTENodePackageImpl.class);
  link artifact monticoreemfruntime -> @(ASTEPackage.class);
  link artifact monticoreemfruntime -> @(generated-sources!2);
  link artifact monticoreemfruntime -> @(annotations!2);
  link artifact monticoreemfruntime -> @(maven-archiver!2);
  link artifact monticoreemfruntime -> @(maven-status!2);
  link artifact monticoreemfruntime -> @(maven-compiler-plugin!2);
  link artifact monticoreemfruntime -> @(compile!2);
  link artifact monticoreemfruntime -> @(default-compile!2);
  link artifact monticoreemfruntime -> @(monticore-emf-runtime-4.5.5.1-sources.jar);
  link artifact monticoreemfruntime -> @(monticore-emf-runtime-4.5.5.1-tests.jar);
  link artifact monticoreemfruntime -> @(monticore-emf-runtime-4.5.5.1.jar);
  link artifact monticoretemplateclassgenerator -> @(monticore-templateclassgenerator);
  link artifact monticoretemplateclassgenerator -> @(gen);
  link artifact monticoretemplateclassgenerator -> @(_templates);
  link artifact monticoretemplateclassgenerator -> @(typesafety);
  link artifact monticoretemplateclassgenerator -> @(MainTemplateFactory.java);
  link artifact monticoretemplateclassgenerator -> @(setup);
  link artifact monticoretemplateclassgenerator -> @(GeneratorConfig.java);
  link artifact monticoretemplateclassgenerator -> @(Setup.java);
  link artifact monticoretemplateclassgenerator -> @(SetupAssignments.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateAccessor.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateClass.java);
  link artifact monticoretemplateclassgenerator -> @(_setup);
  link artifact monticoretemplateclassgenerator -> @(GeneratorConfig.java!2);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl);
  link artifact monticoretemplateclassgenerator -> @(TemplateAccessor.java!2);
  link artifact monticoretemplateclassgenerator -> @(it!4);
  link artifact monticoretemplateclassgenerator -> @(monticore-templateclassgenerator-it);
  link artifact monticoretemplateclassgenerator -> @(src!15);
  link artifact monticoretemplateclassgenerator -> @(main!15);
  link artifact monticoretemplateclassgenerator -> @(java!21);
  link artifact monticoretemplateclassgenerator -> @(types!25);
  link artifact monticoretemplateclassgenerator -> @(Attribute.java);
  link artifact monticoretemplateclassgenerator -> @(Helper.java);
  link artifact monticoretemplateclassgenerator -> @(_templates!2);
  link artifact monticoretemplateclassgenerator -> @(templates!6);
  link artifact monticoretemplateclassgenerator -> @(maintemplates);
  link artifact monticoretemplateclassgenerator -> @(HelloMainImpl.java);
  link artifact monticoretemplateclassgenerator -> @(test!12);
  link artifact monticoretemplateclassgenerator -> @(java!22);
  link artifact monticoretemplateclassgenerator -> @(de!42);
  link artifact monticoretemplateclassgenerator -> @(monticore!45);
  link artifact monticoretemplateclassgenerator -> @(templateclassgenerator);
  link artifact monticoretemplateclassgenerator -> @(it!5);
  link artifact monticoretemplateclassgenerator -> @(AbstractSymtabTest.java);
  link artifact monticoretemplateclassgenerator -> @(CorrectnessTest.java);
  link artifact monticoretemplateclassgenerator -> @(UsageTest.java);
  link artifact monticoretemplateclassgenerator -> @(resources!20);
  link artifact monticoretemplateclassgenerator -> @(anotherFolder);
  link artifact monticoretemplateclassgenerator -> @(EmptyTemplate.ftl);
  link artifact monticoretemplateclassgenerator -> @(templates!7);
  link artifact monticoretemplateclassgenerator -> @(a!7);
  link artifact monticoretemplateclassgenerator -> @(EmptyTemplate.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutResult.ftl);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutSignature.ftl);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithResult.ftl);
  link artifact monticoretemplateclassgenerator -> @(b!2);
  link artifact monticoretemplateclassgenerator -> @(Constructor.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(JavaClass.ftl);
  link artifact monticoretemplateclassgenerator -> @(Template.ftl);
  link artifact monticoretemplateclassgenerator -> @(maintemplates!2);
  link artifact monticoretemplateclassgenerator -> @(HelloMain.ftl);
  link artifact monticoretemplateclassgenerator -> @(src!16);
  link artifact monticoretemplateclassgenerator -> @(main!16);
  link artifact monticoretemplateclassgenerator -> @(java!23);
  link artifact monticoretemplateclassgenerator -> @(de!43);
  link artifact monticoretemplateclassgenerator -> @(monticore!46);
  link artifact monticoretemplateclassgenerator -> @(generating!6);
  link artifact monticoretemplateclassgenerator -> @(ExtendedGeneratorSetup.java);
  link artifact monticoretemplateclassgenerator -> @(templateengine!6);
  link artifact monticoretemplateclassgenerator -> @(ExtendedTemplateController.java);
  link artifact monticoretemplateclassgenerator -> @(templateclassgenerator!2);
  link artifact monticoretemplateclassgenerator -> @(codegen!5);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGenerator.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorConstants.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassHelper.java);
  link artifact monticoretemplateclassgenerator -> @(EmptyNode.java);
  link artifact monticoretemplateclassgenerator -> @(Modelfinder.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGenerator.java!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorConfiguration.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorScript.java);
  link artifact monticoretemplateclassgenerator -> @(util!9);
  link artifact monticoretemplateclassgenerator -> @(GeneratorInterface.java);
  link artifact monticoretemplateclassgenerator -> @(freemarker!4);
  link artifact monticoretemplateclassgenerator -> @(core);
  link artifact monticoretemplateclassgenerator -> @(FMHelper.java);
  link artifact monticoretemplateclassgenerator -> @(Parameter.java!2);
  link artifact monticoretemplateclassgenerator -> @(resources!21);
  link artifact monticoretemplateclassgenerator -> @(de!44);
  link artifact monticoretemplateclassgenerator -> @(monticore!47);
  link artifact monticoretemplateclassgenerator -> @(templateclassgenerator!3);
  link artifact monticoretemplateclassgenerator -> @(typesafety!2);
  link artifact monticoretemplateclassgenerator -> @(MainTemplateFactory.ftl);
  link artifact monticoretemplateclassgenerator -> @(setup!2);
  link artifact monticoretemplateclassgenerator -> @(GeneratorConfig.ftl);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(SetupAssignments.ftl);
  link artifact monticoretemplateclassgenerator -> @(TemplateAccessor.ftl);
  link artifact monticoretemplateclassgenerator -> @(TemplateClass.ftl);
  link artifact monticoretemplateclassgenerator -> @(test!13);
  link artifact monticoretemplateclassgenerator -> @(java!24);
  link artifact monticoretemplateclassgenerator -> @(de!45);
  link artifact monticoretemplateclassgenerator -> @(monticore!48);
  link artifact monticoretemplateclassgenerator -> @(generator);
  link artifact monticoretemplateclassgenerator -> @(typesafety!3);
  link artifact monticoretemplateclassgenerator -> @(codegen!6);
  link artifact monticoretemplateclassgenerator -> @(GroovyScriptTest.java);
  link artifact monticoretemplateclassgenerator -> @(resources!22);
  link artifact monticoretemplateclassgenerator -> @(component);
  link artifact monticoretemplateclassgenerator -> @(EmptyTemplate.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(mainTemplates);
  link artifact monticoretemplateclassgenerator -> @(TemplateMain.ftl);
  link artifact monticoretemplateclassgenerator -> @(manyComponents);
  link artifact monticoretemplateclassgenerator -> @(OneOfMany.ftl);
  link artifact monticoretemplateclassgenerator -> @(moreComponents);
  link artifact monticoretemplateclassgenerator -> @(manyComponents!2);
  link artifact monticoretemplateclassgenerator -> @(moreComponents!2);
  link artifact monticoretemplateclassgenerator -> @(BubuTemplate.ftl);
  link artifact monticoretemplateclassgenerator -> @(OneMoreTemplate.ftl);
  link artifact monticoretemplateclassgenerator -> @(setup!3);
  link artifact monticoretemplateclassgenerator -> @(setup!4);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!4);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!5);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutResult.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutSignature.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithResult.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(templates!8);
  link artifact monticoretemplateclassgenerator -> @(someTemplates);
  link artifact monticoretemplateclassgenerator -> @(A.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(target!7);
  link artifact monticoretemplateclassgenerator -> @(archive-tmp!3);
  link artifact monticoretemplateclassgenerator -> @(classes!7);
  link artifact monticoretemplateclassgenerator -> @(de!46);
  link artifact monticoretemplateclassgenerator -> @(monticore!49);
  link artifact monticoretemplateclassgenerator -> @(generating!7);
  link artifact monticoretemplateclassgenerator -> @(ExtendedGeneratorSetup.class);
  link artifact monticoretemplateclassgenerator -> @(templateengine!7);
  link artifact monticoretemplateclassgenerator -> @(ExtendedTemplateController.class);
  link artifact monticoretemplateclassgenerator -> @(templateclassgenerator!4);
  link artifact monticoretemplateclassgenerator -> @(codegen!7);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGenerator.class);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorConstants.class);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassHelper.class);
  link artifact monticoretemplateclassgenerator -> @(EmptyNode.class);
  link artifact monticoretemplateclassgenerator -> @(Modelfinder.class);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGenerator.class!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorConfiguration$Options.class);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorConfiguration.class);
  link artifact monticoretemplateclassgenerator -> @(TemplateClassGeneratorScript.class);
  link artifact monticoretemplateclassgenerator -> @(util!10);
  link artifact monticoretemplateclassgenerator -> @(GeneratorInterface.class);
  link artifact monticoretemplateclassgenerator -> @(freemarker!5);
  link artifact monticoretemplateclassgenerator -> @(core!2);
  link artifact monticoretemplateclassgenerator -> @(FMHelper.class);
  link artifact monticoretemplateclassgenerator -> @(Parameter.class!2);
  link artifact monticoretemplateclassgenerator -> @(typesafety!4);
  link artifact monticoretemplateclassgenerator -> @(MainTemplateFactory.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(setup!5);
  link artifact monticoretemplateclassgenerator -> @(GeneratorConfig.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!6);
  link artifact monticoretemplateclassgenerator -> @(SetupAssignments.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateAccessor.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateClass.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(generated-sources!7);
  link artifact monticoretemplateclassgenerator -> @(annotations!9);
  link artifact monticoretemplateclassgenerator -> @(monticore!50);
  link artifact monticoretemplateclassgenerator -> @(codetocompile!2);
  link artifact monticoretemplateclassgenerator -> @(_templates!3);
  link artifact monticoretemplateclassgenerator -> @(component!2);
  link artifact monticoretemplateclassgenerator -> @(EmptyTemplate.java);
  link artifact monticoretemplateclassgenerator -> @(mainTemplates!2);
  link artifact monticoretemplateclassgenerator -> @(TemplateMain.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateMainFactory.java);
  link artifact monticoretemplateclassgenerator -> @(manyComponents!3);
  link artifact monticoretemplateclassgenerator -> @(OneOfMany.java);
  link artifact monticoretemplateclassgenerator -> @(moreComponents!3);
  link artifact monticoretemplateclassgenerator -> @(manyComponents!4);
  link artifact monticoretemplateclassgenerator -> @(moreComponents!4);
  link artifact monticoretemplateclassgenerator -> @(BubuTemplate.java);
  link artifact monticoretemplateclassgenerator -> @(OneMoreTemplate.java);
  link artifact monticoretemplateclassgenerator -> @(setup!6);
  link artifact monticoretemplateclassgenerator -> @(setup!7);
  link artifact monticoretemplateclassgenerator -> @(Setup.java!2);
  link artifact monticoretemplateclassgenerator -> @(Setup.java!3);
  link artifact monticoretemplateclassgenerator -> @(Setup.java!4);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutResult.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutSignature.java);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithResult.java);
  link artifact monticoretemplateclassgenerator -> @(templates!9);
  link artifact monticoretemplateclassgenerator -> @(someTemplates!2);
  link artifact monticoretemplateclassgenerator -> @(A.java!4);
  link artifact monticoretemplateclassgenerator -> @(_setup!2);
  link artifact monticoretemplateclassgenerator -> @(GeneratorConfig.java!3);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!7);
  link artifact monticoretemplateclassgenerator -> @(TemplateAccessor.java!3);
  link artifact monticoretemplateclassgenerator -> @(generated-test-sources!5);
  link artifact monticoretemplateclassgenerator -> @(test-annotations!5);
  link artifact monticoretemplateclassgenerator -> @(maven-archiver!7);
  link artifact monticoretemplateclassgenerator -> @(maven-status!7);
  link artifact monticoretemplateclassgenerator -> @(maven-compiler-plugin!7);
  link artifact monticoretemplateclassgenerator -> @(compile!7);
  link artifact monticoretemplateclassgenerator -> @(default-compile!7);
  link artifact monticoretemplateclassgenerator -> @(testCompile!5);
  link artifact monticoretemplateclassgenerator -> @(default-testCompile!5);
  link artifact monticoretemplateclassgenerator -> @(monticore-templateclassgenerator-4.5.5.1-cli.jar);
  link artifact monticoretemplateclassgenerator -> @(monticore-templateclassgenerator-4.5.5.1.jar);
  link artifact monticoretemplateclassgenerator -> @(surefire-reports!5);
  link artifact monticoretemplateclassgenerator -> @(test-classes!5);
  link artifact monticoretemplateclassgenerator -> @(component!3);
  link artifact monticoretemplateclassgenerator -> @(EmptyTemplate.ftl!4);
  link artifact monticoretemplateclassgenerator -> @(mainTemplates!3);
  link artifact monticoretemplateclassgenerator -> @(TemplateMain.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(manyComponents!5);
  link artifact monticoretemplateclassgenerator -> @(OneOfMany.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(moreComponents!5);
  link artifact monticoretemplateclassgenerator -> @(manyComponents!6);
  link artifact monticoretemplateclassgenerator -> @(moreComponents!6);
  link artifact monticoretemplateclassgenerator -> @(BubuTemplate.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(OneMoreTemplate.ftl!2);
  link artifact monticoretemplateclassgenerator -> @(setup!8);
  link artifact monticoretemplateclassgenerator -> @(setup!9);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!8);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!9);
  link artifact monticoretemplateclassgenerator -> @(Setup.ftl!10);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutResult.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithoutSignature.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(TemplateWithResult.ftl!3);
  link artifact monticoretemplateclassgenerator -> @(de!47);
  link artifact monticoretemplateclassgenerator -> @(monticore!51);
  link artifact monticoretemplateclassgenerator -> @(generator!2);
  link artifact monticoretemplateclassgenerator -> @(typesafety!5);
  link artifact monticoretemplateclassgenerator -> @(codegen!8);
  link artifact monticoretemplateclassgenerator -> @(GroovyScriptTest.class);
  link artifact monticoretemplateclassgenerator -> @(templates!10);
  link artifact monticoretemplateclassgenerator -> @(someTemplates!3);
  link artifact monticoretemplateclassgenerator -> @(A.ftl!4);
}
